/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(console) {var CookieUtils = {\n  getCookieValue: function (a, b) {\n    b = document.cookie.match('(^|;)\\\\s*' + a + '\\\\s*=\\\\s*([^;]+)');\n    return b ? b.pop() : '';\n  }\n};\n\n// if running in a node environment export this as a module.\nif (true) {\n  module.exports = CookieUtils;\n}\n\n\n\n\n// The florence object is used for storing application state.\nvar Florence = Florence || {\n        babbageBaseUrl: window.location.origin,\n        refreshAdminMenu: function () {\n            // Display a message to show users are on dev or sandpit\n            Florence.environment = isDevOrSandpit();\n\n            var mainNavHtml = templates.mainNav(Florence);\n            $('.js-nav').html(mainNavHtml);\n        },\n        setActiveCollection: function (collection) {\n            document.cookie = \"collection=\" + collection.id + \";path=/\";\n            if (!collection.publishDate) {\n                var formattedDate = null;\n            } else {\n                var formattedDate = StringUtils.formatIsoDateString(collection.publishDate);\n            }\n            Florence.collection = {\n                id: collection.id,\n                name: collection.name,\n                date: formattedDate,\n                publishDate: collection.publishDate,\n                type: collection.type\n            };\n        }\n    };\n\n\nFlorence.Editor = {\n    isDirty: false,\n    data: {}\n};\n\nFlorence.CreateCollection = {\n    selectedRelease: \"\"\n};\n\nFlorence.collection = {};\n\nFlorence.collectionToPublish = {};\n\nFlorence.globalVars = {pagePath: '', activeTab: false, pagePos: '', welsh: false};\n\nFlorence.Authentication = {\n    accessToken: function () {\n        return CookieUtils.getCookieValue(\"access_token\");\n    },\n    isAuthenticated: function () {\n        return Florence.Authentication.accessToken() !== '';\n    },\n    loggedInEmail: function () {\n        return localStorage.getItem(\"loggedInAs\");\n    },\n    userType: function() {\n        return localStorage.getItem(\"userType\");\n    }\n};\n\nFlorence.Handler = function (e) {\n    if (Florence.Editor.isDirty) {\n        var result = confirm(\"You have unsaved changes. Are you sure you want to continue?\");\n        if (result === true) {\n            Florence.Editor.isDirty = false;\n            processPreviewLoad();\n            return true;\n        } else {\n            e.preventDefault();\n            return false;\n        }\n    }\n};\n\n// Add base url to Redux for use in refactored JS\nvar baseUrlState = __webpack_require__(8);\nbaseUrlState.set(window.location.origin);\n\n// if running in a node environment export this as a module.\nif (true) {\n    module.exports = Florence;\n}\n\n\nvar PathUtils = {\n  isJsonFile: function (uri) {\n    return uri.indexOf('data.json', uri.length - 'data.json'.length) !== -1;\n  }\n};\n\n// if running in a node environment export this as a module.\nif (true) {\n  module.exports = PathUtils;\n}\n\n\n\n\nvar StringUtils = {\n  textareaLines: function (line, maxLineLength, start, numberOfLinesCovered) {\n\n    if (start + maxLineLength >= line.length) {\n      //console.log('Line Length = ' + numberOfLinesCovered);\n      return numberOfLinesCovered;\n    }\n\n    var substring = line.substr(start, maxLineLength + 1);\n    var actualLineLength = substring.lastIndexOf(' ') + 1;\n\n    if (actualLineLength === maxLineLength) // edge case - the break is at the end of the line exactly with a space after it\n    {\n      actualLineLength--;\n    }\n\n    if (start + actualLineLength === line.length) {\n      return numberOfLinesCovered;\n    }\n\n    if (actualLineLength === 0) {\n      actualLineLength = maxLineLength;\n    }\n\n    //if(numberOfLinesCovered < 30) {\n    //  console.log('Line: ' + numberOfLinesCovered + ' length = ' + actualLineLength);\n    //}\n    return StringUtils.textareaLines(line, maxLineLength, start + actualLineLength, numberOfLinesCovered + 1);\n  },\n\n  formatIsoDateString: function (input) {\n    var date = new Date(input);\n    var minutes = (date.getMinutes() < 10 ? '0' : '') + date.getMinutes();\n    var formattedDate = $.datepicker.formatDate('dd/mm/yy', date) + ' ' + date.getHours() + ':' + minutes;\n    return formattedDate;\n  },\n\n  formatIsoFullDateString: function (input) {\n    var date = new Date(input);\n//    var minutes = (date.getMinutes() < 10 ? '0' : '') + date.getMinutes();\n    var formattedDate = $.datepicker.formatDate('DD dd MM yy', date);        //+ ' ' + date.getHours() + ':' + minutes;\n    return formattedDate;\n  },\n\n  formatIsoFull: function (input) {\n    var date = new Date(input);\n    var minutes = (date.getMinutes() < 10 ? '0' : '') + date.getMinutes();\n    var formattedDate = $.datepicker.formatDate('DD dd MM yy', date) + ' ' + date.getHours() + ':' + minutes;\n    return formattedDate;\n  },\n\n  formatIsoFullSec: function (input) {\n    var date = new Date(input);\n    var minutes = (date.getMinutes() < 10 ? '0' : '') + date.getMinutes();\n    var seconds = (date.getSeconds() < 10 ? '0' : '') + date.getSeconds();\n    var formattedDate = $.datepicker.formatDate('DD dd MM yy', date) + ' ' + date.getHours() + ':' + minutes + ':' + seconds;\n    return formattedDate;\n  },\n\n  randomId: function () {\n    var S4 = function () {\n      return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\n    };\n    return (S4() + S4());\n  }\n\n};\n\n// if running in a node environment export this as a module.\nif (true) {\n  module.exports = StringUtils;\n}\n\nfunction deleteCollection(collectionId, success, error) {\n  $.ajax({\n    url: \"/zebedee/collection/\" + collectionId,\n    type: 'DELETE',\n    success: function (response) {\n        success(response);\n    },\n    error: function (response) {\n      if (error) {\n        error(response);\n      } else {\n        handleApiError(response);\n      }\n    }\n  });\n}\n\nfunction deleteContent(collectionId, path, success, error) {\n  var safePath = checkPathSlashes(path);\n  // send ajax call\n  $.ajax({\n    url: \"/zebedee/content/\" + collectionId + \"?uri=\" + safePath,\n    type: 'DELETE',\n    success: function (response) {\n      if (success)\n        success(response);\n    },\n    error: function (response) {\n      if (error) {\n        error(response);\n      } else {\n        handleApiError(response);\n      }\n    }\n  });\n}\n\nfunction deleteEquation(collectionId, path, success, error) {\n  var safePath = checkPathSlashes(path);\n  $.ajax({\n    url: \"/zebedee/equation/\" + collectionId + \"?uri=\" + safePath,\n    type: 'DELETE',\n    success: function (response) {\n      if (success)\n        success(response);\n    },\n    error: function (response) {\n      if (error) {\n        error(response);\n      } else {\n        handleApiError(response);\n      }\n    }\n  });\n}\n\nfunction getCollection(collectionId, success, error) {\n  return $.ajax({\n    url: \"/zebedee/collection/\" + collectionId,\n    dataType: 'json',\n    type: 'GET',\n    success: function (response) {\n      success(response);\n    },\n    error: function (response) {\n      error(response);\n    }\n  });\n}\n\nfunction getCollectionDetails(collectionId, success, error) {\n  return $.ajax({\n    url: \"/zebedee/collectionDetails/\" + collectionId,\n    dataType: 'json',\n    type: 'GET',\n    success: function (response) {\n      success(response);\n    },\n    error: function (response) {\n      error(response);\n    }\n  });\n}\n/**\n * Gets the JSON file for the page\n * @param collectionId\n * @param path\n * @param success\n * @param error\n * @returns {*}\n */\n\nfunction getPageData(collectionId, path, success, error) {\n  var safePath = checkPathSlashes(path);\n  return $.ajax({\n    url: \"/zebedee/data/\" + collectionId + \"?uri=\" + safePath,\n    dataType: 'json',\n    type: 'GET',\n    success: function (response) {\n      if (success)\n        success(response);\n    },\n    error: function (response) {\n      if (error) {\n        error(response);\n      } else {\n        handleApiError(response);\n      }\n    }\n  });\n}\n\n/**\n * Get page data with only the page description.\n * @param collectionId\n * @param path\n * @param success\n * @param error\n * @returns {*}\n */\nfunction getPageDataDescription(collectionId, path, success, error) {\n  return $.ajax({\n    url: \"/zebedee/data/\" + collectionId + \"?uri=\" + path + '&description',\n    dataType: 'json',\n    type: 'GET',\n    success: function (response) {\n      if (success)\n        success(response);\n    },\n    error: function (response) {\n      if (error) {\n        error(response);\n      } else {\n        handleApiError(response);\n      }\n    }\n  });\n}\n\n/**\n * Get page data with only the page title.\n * @param collectionId\n * @param path\n * @param success\n * @param error\n * @returns {*}\n */\nfunction getPageDataTitle(collectionId, path, success, error) {\n  return $.ajax({\n    url: \"/zebedee/data/\" + collectionId + \"?uri=\" + path + '&title',\n    dataType: 'json',\n    type: 'GET',\n    success: function (response) {\n      if (success)\n        success(response);\n    },\n    error: function (response) {\n      if (error) {\n        error(response);\n      } else {\n        handleApiError(response);\n      }\n    }\n  });\n}\n\nfunction getBabbagePageData(collectionId, path, success, error) {\n  return $.ajax({\n    url: path + '/data',\n    dataType: 'json',\n    type: 'GET',\n    success: function (response) {\n      if (success)\n        success(response);\n    },\n    error: function (response) {\n      if (error) {\n        error(response);\n      } else {\n        handleApiError(response);\n      }\n    }\n  });\n}\nfunction getPageResource(collectionId, path, success, error) {\n  var safePath = checkPathSlashes(path);\n  return $.ajax({\n    url: \"/zebedee/resource/\" + collectionId + \"?uri=\" + safePath,\n    dataType: 'json',\n    type: 'GET',\n    success: function (response) {\n      if (success)\n        success(response);\n    },\n    error: function (response) {\n      if (error) {\n        error(response);\n      } else {\n        handleApiError(response);\n      }\n    }\n  });\n}\n\n/**\n * Http post to the zebedee API to get a list of teams.\n * @param success\n * @param error\n * @param name (to get specific details)\n * @returns {*}\n */\nfunction getTeams(success, error, name) {\n\n  var url = \"/zebedee/teams\";\n\n  if(name) {\n    url += '/' + name;\n  }\n\n  return $.ajax({\n    url: url,\n    dataType: 'json',\n    type: 'GET',\n    success: function (response) {\n      success(response);\n    },\n    error: function (response) {\n      error(response);\n    }\n  });\n}\n\n/**\n * Http post to the zebedee API to get a list of user permissions.\n * @param success\n * @param error\n * @param userId\n * @returns {*}\n */\nfunction getUserPermission(success, error, userId) {\n\n  var url = \"/zebedee/permission?email=\" + userId;\n\n\n  return $.ajax({\n    url: url,\n    dataType: 'json',\n    type: 'GET',\n    success: function (response) {\n      success(response);\n    },\n    error: function (response) {\n      error(response);\n    }\n  });\n}\n\n/**\n * Http post to the zebedee API to get a list of users.\n * @param success\n * @param error\n * @param userId\n * @returns {*}\n */\nfunction getUsers(success, error, userId) {\n\n  var url = \"/zebedee/users\";\n\n  if(userId) {\n    url += '?email=' + userId;\n  }\n\n  return $.ajax({\n    url: url,\n    dataType: 'json',\n    type: 'GET',\n    success: function (response) {\n      success(response);\n    },\n    error: function (response) {\n      error(response);\n    }\n  });\n}\nfunction moveContent(collectionId, path, newPath, success, error) {\n  $.ajax({\n    url: \"/zebedee/contentmove/\" + collectionId + \"?uri=\" + checkPathSlashes(path) + \"&toUri=\" + checkPathSlashes(newPath),\n    type: 'POST',\n    success: function (response) {\n      if (success)\n        success(response);\n    },\n    error: function (response) {\n      if (error) {\n        error(response);\n      } else {\n        handleApiError(response);\n      }\n    }\n  });\n}\n\n/**\n * HTTP post to the zebedee API to set a new password\n * @param success - function to run on success\n * @param error - function to run on error\n * @param email - the email address of the user to change the password for\n * @param password - the password to set\n * @param oldPassword - the current password of the user if they are not already authenticated\n */\nfunction postPassword(success, error, email, password, oldPassword) {\n  $.ajax({\n    url: \"/zebedee/password\",\n    dataType: 'json',\n    contentType: 'application/json',\n    type: 'POST',\n    data: JSON.stringify({\n      password: password,\n      email: email,\n      oldPassword: oldPassword\n    }),\n    success: function () {\n      if(success) {\n        success();\n      }\n    },\n    error: function (response) {\n      if(error) {\n        error(response);\n      } else {\n        handleApiError(response);\n      }\n    }\n  });\n}/**\n * Post to the zebedee API permission endpoint.\n * Set permissions for the given email address.\n * @param success\n * @param error\n * @param email - The email of the user to set permissions for\n * @param admin - boolean true if the user should be given admin permissions\n * @param editor - boolean true if the user should be given editor permissions\n */\nfunction postPermission(success, error, email, admin, editor, dataVisPublisher) {\n  $.ajax({\n    url: \"/zebedee/permission\",\n    dataType: 'json',\n    contentType: 'application/json',\n    type: 'POST',\n    data: JSON.stringify({\n      email: email,\n      admin: admin,\n      dataVisPublisher: dataVisPublisher,\n      editor: editor\n    }),\n    success: function () {\n      if(success) {\n        success();\n      }\n    },\n    error: function (response) {\n      if(error) {\n        error(response);\n      } else {\n        if (response.status === 403 || response.status === 401) {\n          sweetAlert(\"You are not permitted to update permissions.\")\n        } else {\n          handleApiError(response);\n        }\n      }\n    }\n  });\n}function putContent(collectionId, path, content, success, error, recursive) {\n  postContent(collectionId, path, content, true, recursive,\n    onSuccess = function () {\n      if(success) {\n        success();\n      }\n    },\n    onError = function (response) {\n      if (error) {\n        error(response);\n      }\n      else {\n        handleApiError(response);\n      }\n    }\n  );\n}\nfunction addDeleteMarker(uri, title, success) {\n\n    var deleteTarget = {\n        uri: uri,\n        user: localStorage.getItem('loggedInAs'),\n        title: title,\n        collectionId: Florence.collection.id\n     };\n\n    $.ajax({\n        url: \"/zebedee/DeleteContent/\",\n        type: 'POST',\n        data: JSON.stringify(deleteTarget),\n        dataType: 'json',\n        contentType: 'application/json',\n        cache: false,\n        success: function (response) {\n            if (success)\n                success(response);\n        },\n        error: function (response) {\n            handleApiError(response);\n        }\n    });\n}\n\nfunction removeDeleteMarker(uri, success) {\n    $.ajax({\n        url: \"/zebedee/DeleteContent/\" + Florence.collection.id + \"?uri=\" + uri,\n        type: 'DELETE',\n        dataType: 'json',\n        contentType: 'application/json',\n        cache: false,\n        success: function (response) {\n            if (success)\n                success(response);\n        },\n        error: function (response) {\n            handleApiError(response);\n        }\n    });\n}\nsetupFlorence();/**\n * Keeps the accordion open in the tab specified\n * @param active - the active tab\n */\n\nfunction accordion(active) {\n  var activeTab = parseInt(active);\n  if(!activeTab){\n    activeTab = 'none';\n  }\n  $(function () {\n    $(\".edit-accordion\").accordion(\n      {\n        header: \"div.edit-section__head\",\n        heightStyle: \"content\",\n        active: activeTab,\n        collapsible: true\n      }\n    );\n  });\n}\n$('.section').bind('DOMSubtreeModified', function (){\n\t$('.auto-size').textareaAutoSize();\n});\n\n/**\n * Checks for changes in the iframe path\n * @param onChanged - function\n */\nfunction checkForPageChanged(onChanged) {\n    var iframeUrl = Florence.globalVars.pagePath;\n    var nowUrl = $('#iframe')[0].contentWindow.document.location.pathname;\n\n    // Only update URL if it's different and it's got a valid value (ie not 'blank')\n    if (iframeUrl !== nowUrl && !(nowUrl === \"/blank\" || nowUrl === \"blank\")) {\n        Florence.globalVars.activeTab = false;\n        Florence.globalVars.pagePos = '';\n        if (!onChanged) {\n            Florence.globalVars.pagePath = nowUrl;\n        } else {\n            onChanged(nowUrl);\n        }\n    }\n}\n\n/**\n * Checks a valid link\n * @param uri\n * @returns {*} - if valid returns a formatted valid link\n */\n\nfunction checkPathParsed (uri) {\n  if (uri.match(/^(https?|ftp):\\/\\/(([a-z0-9$_\\.\\+!\\*\\'\\(\\),;\\?&=-]|%[0-9a-f]{2})+(:([a-z0-9$_\\.\\+!\\*\\'\\(\\),;\\?&=-]|%[0-9a-f]{2})+)?@)?((([a-z0-9]\\.|[a-z0-9][a-z0-9-]*[a-z0-9]\\.)*[a-z][a-z0-9-]*[a-z0-9]|((\\d|[1-9]\\d|1\\d{2}|2[0-4][0-9]|25[0-5])\\.){3}(\\d|[1-9]\\d|1\\d{2}|2[0-4][0-9]|25[0-5]))(:\\d+)?)(((\\/+([a-z0-9$_\\.\\+!\\*\\'\\(\\),;:@&=-]|%[0-9a-f]{2})*)*(\\?([a-z0-9$_\\.\\+!\\*\\'\\(\\),;:@&=-]|%[0-9a-f]{2})*)?)?)?(#([a-z0-9$_\\.\\+!\\*\\'\\(\\),;:@&=-]|%[0-9a-f]{2})*)?/i)) {\n    var myUrl = parseURL(uri);\n    var safeUrl = myUrl.pathname;\n    if (safeUrl.charAt(safeUrl.length-1) === '/') {\n      safeUrl = safeUrl.slice(0, -1);\n    }\n  return safeUrl;\n  } else {\n    sweetAlert('This is not a valid link');\n    return false;\n  }\n}\n/**\n * Checks for initial slash and no trailing slash\n * @param uri\n * @returns {*} - valid format\n */\nfunction checkPathSlashes (uri) {\n  var checkedUri = uri[uri.length - 1] === '/' ? uri.substring(0, uri.length - 1) : uri;\n  checkedUri = checkedUri[0] !== '/' ? '/' + checkedUri : checkedUri;\n  return checkedUri;\n}\n\n/**\n * When content is saved check if the changes made require us to rename the content, i.e. change the uri.\n * @param collectionId\n * @param data\n * @param renameUri\n * @param onSave\n */\nfunction checkRenameUri(collectionId, data, renameUri, onSave) {\n\n    if (renameUri && !data.description.language && !data.description.edition) {   // It will not change welsh url + do not rename content with edition.\n        doRename();\n    } else {\n        onSave(collectionId, data.uri, JSON.stringify(data));\n    }\n\n    function doRename() {\n        // Does it have edition?\n        if (data.description.edition) {\n            // CH 29/04/2016 disabling the URI change of content with an edition as it breaks the link of previous editions\n            //moveContentWithEditionInUri();\n            onSave(collectionId, data.uri, JSON.stringify(data));\n        } else if (data.type === 'static_adhoc') {\n            moveAdHoc();\n        } else {\n            moveContentWithoutEdition();\n        }\n    }\n\n    function moveAdHoc() {\n        var titleNoSpace = data.description.title.replace(/[^A-Z0-9]+/ig, \"\").toLowerCase();\n        var referenceNoSpace = data.description.reference.replace(/[^A-Z0-9]+/ig, \"\").toLowerCase();\n        var tmpNewUri = data.uri.split(\"/\");\n        tmpNewUri.splice([tmpNewUri.length - 1], 1, referenceNoSpace + titleNoSpace);\n        var newUri = tmpNewUri.join(\"/\");\n\n        putContent(collectionId, data.uri, JSON.stringify(data), function () {\n            moveContent(collectionId, data.uri, newUri, function () {\n                getPageData(collectionId, newUri, function (pageData) { // get the updated data after doing the move.\n                        data = pageData;\n                        Florence.globalVars.pagePath = newUri;\n                        ;\n                        onSave(collectionId, newUri, JSON.stringify(data));\n                    },\n                    onError = function () {\n                        onSave(collectionId, data.uri, JSON.stringify(data));\n                    });\n            });\n        });\n\n        return titleNoSpace;\n    }\n\n    function moveContentWithEditionInUri() {\n        //Special case dataset editions. They have edition but not title\n        if (data.description.title) {\n            var titleNoSpace = data.description.title.replace(/[^A-Z0-9]+/ig, \"\").toLowerCase();\n        }\n        var editionNoSpace = data.description.edition.replace(/[^A-Z0-9]+/ig, \"\").toLowerCase();\n        var tmpNewUri = data.uri.split(\"/\");\n        if (data.type === 'dataset') {\n            tmpNewUri.splice([tmpNewUri.length - 1], 1, editionNoSpace);\n        } else {\n            tmpNewUri.splice([tmpNewUri.length - 2], 2, titleNoSpace, editionNoSpace);\n        }\n\n        var newUri = tmpNewUri.join(\"/\");\n\n        // save any changes before actually doing the move\n        putContent(collectionId, data.uri, JSON.stringify(data), function () {\n            moveContent(collectionId, data.uri, newUri, function () {\n                    getPageData(collectionId, newUri, function (pageData) { // get the updated data after doing the move.\n                        data = pageData;\n\n                        Florence.globalVars.pagePath = newUri;\n                        //is it a compendium? Rename children array\n                        //take this out if moveContent in Zebedee works\n                        if (data.type === 'compendium_landing_page') {\n                            if (data.chapters) {\n                                data.chapters = renameCompendiumChildren(data.chapters, titleNoSpace, editionNoSpace);\n                            }\n                            if (data.datasets) {\n                                data.datasets = renameCompendiumChildren(data.datasets, titleNoSpace, editionNoSpace);\n                            }\n                        }\n                        onSave(collectionId, newUri, JSON.stringify(data));\n                    });\n                },\n                onError = function () {\n                    onSave(collectionId, data.uri, JSON.stringify(data));\n                });\n        });\n    }\n\n    function moveContentWithoutEdition() {\n        var titleNoSpace = data.description.title.replace(/[^A-Z0-9]+/ig, \"\").toLowerCase();\n        var tmpNewUri = data.uri.split(\"/\");\n        //Articles with no edition. Add date as edition\n        if (data.type === 'article' || data.type === 'article_download') {\n            console.log(data.description.releaseDate);\n            var editionDate = $.datepicker.formatDate('yy-mm-dd', new Date(data.description.releaseDate));\n            tmpNewUri.splice([tmpNewUri.length - 2], 2, titleNoSpace, editionDate);\n        } else {\n            tmpNewUri.splice([tmpNewUri.length - 1], 1, titleNoSpace);\n        }\n        var newUri = tmpNewUri.join(\"/\");\n\n        putContent(collectionId, data.uri, JSON.stringify(data), function () {\n            moveContent(collectionId, data.uri, newUri, function () {\n                    getPageData(collectionId, newUri, function (pageData) { // get the updated data after doing the move.\n                        data = pageData;\n\n                        Florence.globalVars.pagePath = newUri;\n                        //if it is a dataset rename children array\n                        //take this out if moveContent in Zebedee works\n                        if (data.type === 'dataset_landing_page') {\n                            if (data.datasets) {\n                                data.datasets = renameDatasetChildren(data.datasets, titleNoSpace);\n                            }\n                        }\n                        onSave(collectionId, newUri, JSON.stringify(data));\n                    });\n                },\n                onError = function () {\n                    onSave(collectionId, data.uri, JSON.stringify(data));\n                });\n        });\n    }\n}\n/**\n * Return the last edited event for the given page, from the given collection.\n * @param collection\n * @param page\n * @returns {*}\n */\nfunction getLastEditedEvent(collection, page) {\n\n  var uri = page;\n  var safeUri = checkPathSlashes(uri);\n\n  var pageEvents = collection.eventsByUri[safeUri];\n\n  var lastEditedEvent = _.chain(pageEvents)\n    .filter(function (event) {\n      return event.type === 'EDITED';\n    })\n    .sortBy(function (event) {\n      return event.date;\n    })\n    .last()\n    .value();\n\n  return lastEditedEvent;\n}\n\n/**\n * Return the collection created event from the given collection of events.\n * @param events\n * @returns {*}\n */\nfunction getCollectionCreatedEvent(events) {\n\n  var event = _.chain(events)\n    .filter(function (event) {\n      return event.type === 'CREATED';\n    })\n    .last()\n    .value();\n\n  return event;\n}\n\n/**\n * Return the last completed event for the given page, from the given collection.\n * @param collection\n * @param page\n * @returns {*}\n */\nfunction getLastCompletedEvent(collection, page) {\n\n  var uri = page;\n  var safeUri = checkPathSlashes(uri);\n\n   var lastCompletedEvent;\n\n  if (collection.eventsByUri) {\n    var pageEvents = collection.eventsByUri[safeUri];\n    if (pageEvents) {\n      lastCompletedEvent = _.chain(pageEvents)\n        .filter(function (event) {\n          return event.type === 'COMPLETED';\n        })\n        .sortBy(function (event) {\n          return event.date;\n        })\n        .last()\n        .value();\n    }\n  }\n  return lastCompletedEvent;\n}\n\n// Copy chart markdown to clipboard (clipboard.js plugin)\nvar clipboard = null;\nfunction initialiseClipboard() {\n    var i;\n\n    // Add index to any trigger/target that will use clipboard.js so we can identify each element individually\n    $('.copy-markdown').each(function(index) {\n        var $this = $(this);\n        if (!$this.hasClass('copy-markdown_' + index)) {\n            $this.addClass('copy-markdown_' + index).attr('data-clipboard-index', index);\n            $this.closest('.edit-section__sortable-item').find('.copy-markdown-target').attr('id', 'copy-markdown-target_' + index);\n            $this.find('.tick-animation-trigger').addClass('tick-animation-trigger_' + index);\n        }\n    });\n\n    // Fire clipboard initialisation\n    clipboard = new Clipboard('.copy-markdown', {\n        target: function(trigger) {\n            i = $(trigger).attr('data-clipboard-index');\n            return document.getElementById('copy-markdown-target_' + i);\n        }\n    });\n    clipboard.on('success', function(e) {\n        toggleTick(i, \"show\");\n        setTimeout(function() {\n            toggleTick(i, \"hide\")\n        }, 2000);\n        e.clearSelection();\n    });\n    clipboard.on('error', function(e) {\n        console.log(\"Error copying markdown\");\n        console.error('Action:', e.action);\n        console.error('Trigger:', e.trigger);\n    });\n\n    // Switch 'done' tick on and off\n    function toggleTick(i, state) {\n        if (state == \"show\") {\n            $(\".copy-markdown_\" + i).attr(\"style\", \"color:transparent;\");\n        }\n        $(\".tick-animation-trigger_\" + i).toggleClass(\"drawn\");\n        if (state == \"hide\") {\n            function showBtnText () { $(\".copy-markdown_\" + i).removeAttr(\"style\");}\n            setTimeout(showBtnText, 1600);\n        }\n    }\n}\nfunction createCollection(teams) {\n\n    var publishTime, collectionId, collectionDate, releaseUri;\n    collectionId = $('#collectionname').val();\n    var publishType = $('input[name=\"publishType\"]:checked').val();\n    var scheduleType = $('input[name=\"scheduleType\"]:checked').val();\n\n    if (publishType === 'scheduled') {\n        publishTime = parseInt($('#hour').val()) + parseInt($('#min').val());\n        var toIsoDate = $('#date').datepicker(\"getDate\");\n        collectionDate = new Date(parseInt(new Date(toIsoDate).getTime()) + publishTime).toISOString();\n    } else {\n        collectionDate = null;\n    }\n\n    if (scheduleType === 'release' && publishType === 'scheduled') {\n        if (!Florence.CreateCollection.selectedRelease) {\n            sweetAlert('Please select a release');\n            return true;\n        }\n        releaseUri = Florence.CreateCollection.selectedRelease.uri;\n    } else {\n        releaseUri = null;\n    }\n\n    // inline tests\n    if (collectionId === '') {\n        sweetAlert('This is not a valid collection name', \"A collection name can't be empty\");\n        return true;\n    }\n    if (collectionId.match(/\\./)) {\n        sweetAlert('This is not a valid collection name', \"You can't use fullstops\");\n        return true;\n    }\n    if ((publishType === 'scheduled') && (scheduleType === 'custom') && (isValidDate(new Date(collectionDate)))) {\n        sweetAlert('This is not a valid date');\n        return true;\n    }\n    if ((publishType === 'scheduled') && (scheduleType === 'custom') && (Date.parse(collectionDate) < new Date())) {\n        sweetAlert('This is not a valid date');\n        return true;\n    } else {\n\n        // Add loading icon to button\n        loadingBtn($('.btn-collection-create'));\n\n        // Create the collection\n        $.ajax({\n            url: \"/zebedee/collection\",\n            dataType: 'json',\n            contentType: 'application/json',\n            type: 'POST',\n            data: JSON.stringify({\n                name: collectionId,\n                type: publishType,\n                publishDate: collectionDate,\n                pendingDeletes: [],\n                teams: teams,\n                collectionOwner: Florence.Authentication.userType(),\n                releaseUri: releaseUri\n            }),\n            success: function (collection) {\n                Florence.setActiveCollection(collection);\n                createWorkspace('', collection.id, 'browse', collection);\n            },\n            error: function (response) {\n                if (response.status === 409) {\n                    sweetAlert(\"Error\", response.responseJSON.message, \"error\");\n                }\n                else {\n                    handleApiError(response);\n                }\n            }\n        });\n    }\n}\n\nfunction isValidDate(d) {\n    if (!isNaN(d.getTime())) {\n        return false;\n    }\n    return true;\n}\n\n/**\n * Handles the initial creation of the workspace screen.\n * @param path - path to iframe\n * @param collectionId\n * @param menu - opens a specific menu\n * @param collectionData - JSON of the currently active collection\n * @param stopEventListener - separates the link between editor and iframe\n * @returns {boolean}\n **/\n\nfunction createWorkspace(path, collectionId, menu, collectionData, stopEventListener) {\n    var safePath = '';\n\n    $(\"#working-on\").on('click', function () {\n    }); // add event listener to mainNav\n\n    if (stopEventListener) {\n        document.getElementById('iframe').onload = function () {\n            var browserLocation = document.getElementById('iframe').contentWindow.location.href;\n            $('.browser-location').val(browserLocation);\n            var iframeEvent = document.getElementById('iframe').contentWindow;\n            iframeEvent.removeEventListener('click', Florence.Handler, true);\n        };\n        return false;\n    } else {\n        var currentPath = '';\n        if (path) {\n            currentPath = path;\n            safePath = checkPathSlashes(currentPath);\n        }\n        \n        Florence.globalVars.pagePath = safePath;\n        if (Florence.globalVars.welsh !== true) {\n            document.cookie = \"lang=\" + \"en;path=/\";\n        } else {\n            document.cookie = \"lang=\" + \"cy;path=/\";\n        }\n        Florence.refreshAdminMenu();\n\n        var workSpace = templates.workSpace(Florence.babbageBaseUrl + safePath);\n        $('.section').html(workSpace);\n\n        // Store nav objects\n        var $nav = $('.js-workspace-nav'),\n            $navItem = $nav.find('.js-workspace-nav__item');\n\n        // Set browse panel to full height to show loading icon\n        $('.loader').css('margin-top', '84px');\n        $('.workspace-menu').height($('.workspace-nav').height());\n\n\n        /* Setup preview */\n        if (collectionData && collectionData.collectionOwner == \"DATA_VISUALISATION\") {\n            // Disable preview for data vis\n            $('#browser-location').show();\n            $('.browser').addClass('disabled');\n            updateBrowserURL(\"/\");\n            $('#iframe').attr('src', Florence.babbageBaseUrl);\n        } else {\n            // Detect click on preview, stopping browsing around preview from getting rid of unsaved data accidentally\n            detectPreviewClick();\n\n            // Detect changes to preview and handle accordingly\n            processPreviewLoad(collectionId, collectionData);\n\n            // Update preview URL on initial load of workspace\n            updateBrowserURL(path);\n        }\n\n        if (Florence.globalVars.welsh !== true) {\n            $('#nav--workspace__welsh').empty().append('<a href=\"#\">Language: English</a>');\n        } else {\n            $('#nav--workspace__welsh').empty().append('<a href=\"#\">Language: Welsh</a>');\n        }\n\n        /* Bind clicking */\n        $navItem.click(function () {\n            menu = '';\n            if (Florence.Editor.isDirty) {\n                swal({\n                    title: \"Warning\",\n                    text: \"You have unsaved changes. Are you sure you want to continue?\",\n                    type: \"warning\",\n                    showCancelButton: true,\n                    confirmButtonText: \"Continue\",\n                    cancelButtonText: \"Cancel\"\n                }, function (result) {\n                    if (result === true) {\n                        Florence.Editor.isDirty = false;\n                        processMenuClick(this);\n                    } else {\n                        return false;\n                    }\n                });\n            } else {\n                processMenuClick(this);\n            }\n        });\n\n\n        function processMenuClick(clicked) {\n            var menuItem = $(clicked);\n\n            $navItem.removeClass('selected');\n            menuItem.addClass('selected');\n\n            if (menuItem.is('#browse')) {\n                loadBrowseScreen(collectionId, 'click', collectionData);\n            } else if (menuItem.is('#create')) {\n                Florence.globalVars.pagePath = getPreviewUrl();\n                var type = false;\n                loadCreateScreen(Florence.globalVars.pagePath, collectionId, type, collectionData);\n            } else if (menuItem.is('#edit')) {\n                Florence.globalVars.pagePath = getPreviewUrl();\n                loadPageDataIntoEditor(Florence.globalVars.pagePath, Florence.collection.id);\n            } else if (menuItem.is('#import')) {\n                loadImportScreen(Florence.collection.id);\n            } else {\n                loadBrowseScreen(collectionId, false, collectionData);\n            }\n        }\n\n        $('#nav--workspace__welsh').on('click', function () {\n            Florence.globalVars.welsh = Florence.globalVars.welsh === false ? true : false;\n            createWorkspace(Florence.globalVars.pagePath, collectionId, 'browse');\n        });\n\n        $('.workspace-menu').on('click', '.btn-browse-create', function () {\n            var dest = $('.tree-nav-holder ul').find('.js-browse__item.selected').attr('data-url');\n            // var spanType = $(this).parent().prev('span');\n            var spanType = $(this).closest('.js-browse__item').find('.js-browse__item-title:first');\n            var typeClass = spanType[0].attributes[0].nodeValue;\n            var typeGroup = typeClass.match(/--(\\w*)$/);\n            var type = typeGroup[1];\n            Florence.globalVars.pagePath = dest;\n            $navItem.removeClass('selected');\n            $(\"#create\").addClass('selected');\n            loadCreateScreen(Florence.globalVars.pagePath, collectionId, type, collectionData);\n        });\n\n        $('.workspace-menu').on('click', '.btn-browse-delete', function () {\n            var $parentItem = $('.tree-nav-holder ul').find('.js-browse__item.selected');\n            var $parentContainer = $parentItem.find('.page__container.selected');\n            var $button = $parentContainer.find('.btn-browse-delete');\n            var dest = $parentItem.attr('data-url');\n            var spanType = $(this).parent().prev('span');\n            var title = spanType.html();\n            addDeleteMarker(dest, title, function() {\n                $parentContainer.addClass('animating').addClass('deleted');\n                toggleDeleteRevertButton($parentContainer);\n                toggleDeleteRevertChildren($parentItem);\n\n                // Stops animation happening anytime other than when going between delete/undo delete\n                $parentContainer.one(\"webkitTransitionEnd transitionEnd\", function() {\n                    $parentContainer.removeClass('animating');\n                });\n            });\n        });\n\n        $('.workspace-menu').on('click', '.btn-browse-delete-revert', function () {\n            var $parentItem = $('.tree-nav-holder ul').find('.js-browse__item.selected');\n            var $parentContainer = $parentItem.find('.page__container.selected');\n            var $button = $parentContainer.find('.btn-browse-delete-revert');\n            var dest = $parentItem.attr('data-url');\n            removeDeleteMarker(dest, function() {\n                $parentContainer.addClass('animating').removeClass('deleted');\n                toggleDeleteRevertButton($parentContainer);\n                toggleDeleteRevertChildren($parentItem);\n\n                // Stops animation happening anytime other than when going between delete/undo delete\n                $parentContainer.one(\"webkitTransitionEnd transitionEnd\", function() {\n                    $parentContainer.removeClass('animating');\n                });\n            });\n        });\n\n        $('.workspace-menu').on('click', '.btn-browse-move', function() {\n            var $parentItem = $('.tree-nav-holder ul').find('.js-browse__item.selected'),\n                fromUrl = $parentItem.attr('data-url');\n\n            moveBrowseNode(fromUrl);\n        });\n\n        $('.workspace-menu').on('click', '.btn-browse-create-datavis', function () {\n            var dest = '/visualisations';\n            var type = 'visualisation';\n            Florence.globalVars.pagePath = dest;\n            loadCreateScreen(Florence.globalVars.pagePath, collectionId, type, collectionData);\n        });\n\n        $('.workspace-menu').on('click', '.btn-browse-edit', function () {\n            var dest = $('.tree-nav-holder ul').find('.js-browse__item.selected').attr('data-url');\n            Florence.globalVars.pagePath = dest;\n            $navItem.removeClass('selected');\n            $(\"#edit\").addClass('selected');\n            loadPageDataIntoEditor(Florence.globalVars.pagePath, collectionId);\n        });\n\n        $('.workspace-menu').on('click', '.js-browse__menu', function() {\n            var $thisItem = $('.js-browse__item.selected .page__container.selected'),\n                $thisBtn = $thisItem.find('.js-browse__menu'),\n                $thisMenu = $thisBtn.next('.page__menu'),\n                menuHidden;\n\n            function toggleMenu() {\n                $thisBtn.toggleClass('active').children('.hamburger-icon__span').toggleClass('active');\n                $thisItem.find('.js-browse__buttons--primary').toggleClass('active');\n                $thisMenu.toggleClass('active');\n            }\n\n            // Toggle menu on click\n            toggleMenu();\n\n            // Shut menu if another item or button is clicked\n            $('.js-browse__item-title, .btn-browse-move, .btn-browse-delete').on('click', function() {\n                if (!menuHidden) {\n                    toggleMenu();\n                    menuHidden = true;\n                }\n            });\n        });\n\n        if (menu === 'edit') {\n            $navItem.removeClass('selected');\n            $(\"#edit\").addClass('selected');\n            loadPageDataIntoEditor(Florence.globalVars.pagePath, collectionId);\n        } else if (menu === 'browse') {\n            $navItem.removeClass('selected');\n            $(\"#browse\").addClass('selected');\n            loadBrowseScreen(collectionId, 'click', collectionData);\n        }\n        //};\n    }\n}\n\n// SHOULD BE REPLACED BY 'onIframeLoad' -  Bind click event to iframe element and run global Florence.Handler\nfunction detectPreviewClick() {\n    var iframeEvent = document.getElementById('iframe').contentWindow;\n    iframeEvent.addEventListener('click', Florence.Handler, true);\n}\n\nfunction processPreviewLoad(collectionId, collectionData) {\n    if (collectionData && collectionData.collectionOwner == \"DATA_VISUALISATION\") {\n        // iframe is blacked out on browse for data vis content\n        $('#iframe').empty();\n\n    } else {\n        // Collection of functions to run on iframe load\n        onIframeLoad(function (event) {\n            var $iframe = $('#iframe'), // iframe element in DOM, check length later to ensure it's on the page before continuing\n                $browse = $('#browse'); // 'Browse' menu tab, check later if it's selected\n\n            // Check it is a load event and that iframe is in the DOM still before processing the load\n            if (event.data == \"load\" && $iframe.length) {\n                // Check whether page URL is different and then load editor or update browse tree\n                checkForPageChanged(function (newUrl) {\n                    var safeUrl = checkPathSlashes(newUrl),\n                        selectedItem = $('.workspace-browse li.selected').attr('data-url'); // Get active node in the browse tree\n\n                    Florence.globalVars.pagePath = safeUrl;\n\n                    if ($('.workspace-edit').length || $('.workspace-create').length) {\n\n                        // Switch to browse screen if navigating around preview whilst on create or edit tab\n                        loadBrowseScreen(collectionId, 'click', collectionData);\n                    }\n                    else if ($('.workspace-browse').length && selectedItem != Florence.globalVars.pagePath) {\n                        // Only update browse tree of on 'browse' tab and preview and active node don't already match\n                        treeNodeSelect(safeUrl);\n                    }\n                });\n                updateBrowserURL(); // Update browser preview URL\n\n                if ($browse.hasClass('selected')) {\n                    browseScrollPos(); // Update browse tree scroll position\n                }\n            }\n        });\n    }\n}\n\n// Reusable iframe startload event - uses message sent up form babbage on window.load\nfunction onIframeLoad(runFunction) {\n    window.addEventListener(\"message\", function (event) {\n        runFunction(event);\n    });\n}\n\n// Update the scroll position of the browse tree if selected item off screen\nfunction browseScrollPos() {\n    var $selectedItem = $('.workspace-browse li.selected .page__container.selected'),\n        $browseTree = $('.workspace-browse');\n\n    if ($selectedItem.length) {\n        var selectedTop = $selectedItem.offset().top,\n            selectedBottom = selectedTop + $selectedItem.height(),\n            browseTop = $browseTree.offset().top,\n            browseBottom = browseTop + $browseTree.height(),\n            navHeight = $('.nav').height();\n\n        if (selectedTop < browseTop) {\n            console.log('Item was above of viewable browse tree');\n            $browseTree.scrollTop($browseTree.scrollTop() + (selectedTop) - (navHeight / 2));\n        } else if (selectedBottom > browseBottom) {\n            console.log('Item was below viewable browse tree');\n            $browseTree.scrollTop(selectedBottom - (navHeight / 2) - $selectedItem.height())\n        }\n    }\n}\n\nfunction updateBrowserURL(url) {\n    if(!url) {\n        url = Florence.globalVars.pagePath;\n    }\n    $('.browser-location').val(Florence.babbageBaseUrl + url);\n}\n\n// toggle delete button from 'delete' to 'revert' for content marked as to be deleted and remove/show other buttons in item\nfunction toggleDeleteRevertButton($container) {\n    $container.find('.btn-browse-delete-revert, .js-browse__buttons--primary, .js-browse__buttons--secondary').toggle();\n}\n\n// Toggle displaying children as deleted or not deleted\nfunction toggleDeleteRevertChildren($item) {\n    var $childContainer = $item.find('.js-browse__item .page__container'),\n        isDeleting = $item.children('.page__container').hasClass('deleted');\n\n    if (isDeleting) {\n        $childContainer.addClass('deleted');\n    } else {\n        $childContainer.removeClass('deleted');\n\n        // If a child item has previously been deleted but is being shown by a parent then undo the toggle buttons\n        if ($childContainer.find('.btn-browse-delete-revert').length) {\n            // toggleDeleteRevertButton($childContainer.find('.btn-browse-delete-revert'));\n            toggleDeleteRevertButton($childContainer);\n        }\n    }\n\n    $childContainer.find('.page__buttons').toggleClass('deleted');\n}\n\nfunction deleteTeam(name) {\n  $.ajax({\n    url: \"/zebedee/teams/\" + name,\n    dataType: 'json',\n    contentType: 'application/json',\n    type: 'DELETE',\n    success: function () {\n      sweetAlert('Deleted', \"The team has been successfully deleted\", 'success');\n      viewController('teams');\n    },\n    error: function (response) {\n      if (response.status === 403 || response.status === 401) {\n        sweetAlert(\"Error\", \"You are not permitted to delete teams\", \"error\");\n      } else {\n        handleApiError(response);\n      }\n    }\n  });\n}\n\nfunction deleteTeamMember(name, email) {\n  var encodedName = encodeURIComponent(name);\n  $.ajax({\n    url: \"/zebedee/teams/\" + encodedName + \"?email=\" + email,\n    dataType: 'json',\n    contentType: 'application/json',\n    type: 'DELETE',\n    success: function () {\n      console.log('Team member deleted: ' + email);\n    },\n    error: function (response) {\n      handleUserPostError(response);\n    }\n  });\n\n  /**\n   * Handle error response from creating the team.\n   * @param response\n   */\n  function handleUserPostError(response) {\n    if (response.status === 403 || response.status === 401) {\n      sweetAlert(\"You are not permitted to delete users.\");\n    }\n    else if (response.status === 409) {\n      sweetAlert(\"Error\", response.responseJSON.message, \"error\");\n    } else {\n      handleApiError(response);\n    }\n  }\n}\nfunction deleteUnpublishedVersion (collectionId, path, success, error) {\n  var url = \"/zebedee/version/\" + collectionId + \"?uri=\" + path;\n\n  // Update content\n  $.ajax({\n    url: url,\n    dataType: 'json',\n    contentType: 'application/json',\n    type: 'DELETE',\n    success: function (response) {\n      success(response);\n    },\n    error: function (response) {\n      if (error) {\n        error(response);\n      } else {\n        handleApiError(response);\n      }\n    }\n  });\n}\n\nfunction deleteUser(email) {\n  $.ajax({\n    url: \"/zebedee/users?email=\" + email,\n    dataType: 'json',\n    contentType: 'application/json',\n    type: 'DELETE',\n    success: function () {\n      console.log('User deleted');\n      sweetAlert('Deleted', \"User '\"  + email + \"' has been deleted\", 'success');\n      viewController('users');\n    },\n    error: function (response) {\n      if (response.status === 403 || response.status === 401) {\n        sweetAlert(\"Error\", \"You are not permitted to delete users\", \"error\")\n      } else {\n        handleApiError(response);\n      }\n    }\n  });\n}\n\n/**\n * Manage files associated with datasets. When uploading a file creates a new dataset\n * @param collectionId\n * @param data\n * @param field - JSON data key\n * @param idField - HTML id for the template (has to be 'edition')\n */\n\nfunction addDataset(collectionId, data, field, idField) {\n    var downloadExtensions, pageType;\n    var uriUpload;\n    var lastIndex;\n    if (data[field]) {\n        lastIndex = data[field].length;\n    } else {\n        lastIndex = 0;\n    }\n    var uploadedNotSaved = {uploaded: false, saved: false, editionUri: \"\"};\n    $(\".workspace-edit\").scrollTop(Florence.globalVars.pagePos);\n\n    //Add\n    if (data.timeseries) {\n        downloadExtensions = /\\.csdb$|\\.csv$/;\n        pageType = 'timeseries_dataset';\n    } else {\n        downloadExtensions = /\\.csv$|.xls$|.zip$/;\n        pageType = 'dataset';\n    }\n\n    $('#add-' + idField).one('click', function () {\n        // check that a timeseries dataset has max one file\n        if (data.timeseries && (data[field] && data[field].length < 1) || !data.timeseries) {\n            var position = $(\".workspace-edit\").scrollTop();\n            Florence.globalVars.pagePos = position + 200;\n\n            $('#sortable-' + idField).append(\n                '<div id=\"' + lastIndex + '\" class=\"edit-section__item\">' +\n                '  <form id=\"UploadForm\">' +\n                '    <textarea class=\"auto-size\" placeholder=\"Period (E.g. 2015, August to December 2010, etc.\" type=\"text\" id=\"edition\"></textarea>' +\n                '    <textarea class=\"auto-size\" placeholder=\"Label (E.g. Final, Revised, etc.)\" type=\"text\" id=\"version\"></textarea>' +\n                '    <input type=\"file\" title=\"Select a file and click Submit\" name=\"files\">' +\n                '    <div class=\"dataset-buttons\">' +\n                '    <button type=\"submit\" form=\"UploadForm\" value=\"submit\">Submit</button>' +\n                '    <button class=\"btn-page-cancel\" id=\"file-cancel\">Cancel</button>' +\n                //'    <button class=\"btn-dataset-autocsdb\" id=\"no-file\">Auto CSDB</button>' +\n                '    </div>' +\n                '  </form>' +\n                '  <div id=\"response\"></div>' +\n                '  <ul id=\"list\"></ul>' +\n                '</div>');\n            if (!data.timeseries) {\n                $('#no-file').remove();\n            }\n\n            $('#file-cancel').one('click', function (e) {\n                e.preventDefault();\n                $('#' + lastIndex).remove();\n                //Check files uploaded and delete them\n                if (uploadedNotSaved.uploaded === true) {\n                    data[field].splice(-1, 1);\n                    deleteContent(Florence.collection.id, uploadedNotSaved.editionUri,\n                        onSuccess = function () {\n                        },\n                        onError = function (error) {\n                            handleApiError(error);\n                        }\n                    );\n                }\n                addDataset(collectionId, data, 'datasets', 'edition');\n            });\n\n            $('#UploadForm').submit(function (e) {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n\n                var formdata = new FormData();\n\n                function showUploadedItem(source) {\n                    $('#list').append(source);\n                }\n\n                var pageTitle = this[0].value;\n                var pageTitleTrimmed = pageTitle.replace(/[^A-Z0-9]+/ig, \"\").toLowerCase();\n\n                var versionLabel = this[1].value;\n\n                var file = this[2].files[0];\n                if (!file) {\n                    sweetAlert(\"Please select a file to upload\");\n                    return;\n                }\n\n                document.getElementById(\"response\").innerHTML = \"Uploading . . .\";\n\n                var fileNameNoSpace = file.name.replace(/[^a-zA-Z0-9\\.]/g, \"\").toLowerCase();\n                if (file.name.match(/\\.csv$/)) {\n                    fileNameNoSpace = 'upload-' + fileNameNoSpace;\n                }\n                uriUpload = data.uri + '/' + pageTitleTrimmed + '/' + fileNameNoSpace;\n                var safeUriUpload = checkPathSlashes(uriUpload);\n\n                if (data[field] && data[field].length > 0) {\n                    $(data[field]).each(function (i, filesUploaded) {\n                        if (filesUploaded.file === safeUriUpload || filesUploaded.file === fileNameNoSpace) {\n                            sweetAlert('This file already exists');\n                            $('#' + lastIndex).remove();\n                            addDataset(collectionId, data, 'datasets', 'edition');\n                            formdata = false;   // if not present the existing file was being overwritten\n                            return;\n                        }\n                    });\n                }\n\n                if (!!file.name.match(downloadExtensions)) {\n                    showUploadedItem(fileNameNoSpace);\n                    if (formdata) {\n                        formdata.append(\"name\", file);\n                    }\n                } else {\n                    sweetAlert('This file type is not supported');\n                    $('#' + lastIndex).remove();\n                    addDataset(collectionId, data, 'datasets', 'edition');\n                    return;\n                }\n\n                if (pageTitle.length < 4 || pageTitle.toLowerCase() === 'data') {\n                    sweetAlert(\"This is not a valid file title\");\n                    return;\n                }\n\n                if (formdata) {\n                    $.ajax({\n                        url: \"/zebedee/content/\" + collectionId + \"?uri=\" + safeUriUpload,\n                        type: 'POST',\n                        data: formdata,\n                        cache: false,\n                        processData: false,\n                        contentType: false,\n                        success: function () {\n                            document.getElementById(\"response\").innerHTML = \"File uploaded successfully\";\n                            if (!data[field]) {\n                                data[field] = [];\n                            }\n                            data[field].push({uri: data.uri + '/' + pageTitleTrimmed});\n                            uploadedNotSaved.uploaded = true;\n                            // create the dataset\n                            loadT8EditionCreator(collectionId, data, pageType, pageTitle, fileNameNoSpace, versionLabel);\n                            // on success save parent and child data\n                        }\n                    });\n                }\n            });\n\n            $('#no-file').one('click', function (e) {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n\n                if (data.timeseries) {    // not necessary but for extra security\n                    if (data.description.datasetId) {   // check for an id to link the csdb to\n                        // on success save parent and child data\n                        var pageTitle = $('#edition').val();\n                        var pageTitleTrimmed = pageTitle.replace(/[^A-Z0-9]+/ig, \"\").toLowerCase();\n                        var fileNameNoSpace = data.description.datasetId + '.csdb';\n\n                        var versionLabel = $('#version').val();\n                        if (pageTitleTrimmed.length < 4 || pageTitleTrimmed === 'data') {\n                            sweetAlert(\"This is not a valid file title\");\n                            e.preventDefault();\n                            e.stopImmediatePropagation();\n                            $('#' + lastIndex).remove();\n                            addDataset(collectionId, data, field, idField);\n                        } else {\n                            data[field].push({uri: data.uri + '/' + pageTitleTrimmed});\n                            // create the dataset if there is not any\n                            loadT8EditionCreator(collectionId, data, pageType, pageTitle, fileNameNoSpace, versionLabel);\n                        }\n                    } else {\n                        sweetAlert(\"Warning!\", \"You need to add a dataset Id to match the CSDB.\", \"error\");\n                        e.preventDefault();\n                        e.stopImmediatePropagation();\n                        $('#' + lastIndex).remove();\n                        addDataset(collectionId, data, field, idField);\n                    }\n                } else {\n                    sweetAlert(\"Oops!\", \"It looks like this is not a timeseries dataset.\", \"error\");\n                }\n            });\n        } else {\n            sweetAlert(\"Warning!\", \"You can add only one file in a timeseries dataset.\", \"error\");\n        }\n    });\n\n\n    function sortable() {\n        $('#sortable-' + idField).sortable({\n            stop: function () {\n                $('#' + idField + ' .edit-section__sortable-item--counter').each(function (index) {\n                    $(this).empty().append(index + 1);\n                });\n            }\n        });\n    }\n\n    sortable();\n}\n\n/**\n * Manage files associated with content\n * @param collectionId\n * @param data\n * @param field - JSON data key\n * @param idField - HTML id for the template\n */\n\nfunction addFile(collectionId, data, field, idField) {\n    var list = data[field];\n    var downloadExtensions, header, button;\n    if (field === 'supplementaryFiles') {\n        header = 'Supplementary files';\n        button = 'supplementary file';\n    } else if (field === 'pdfDownloads') {\n        header = 'Upload methodology PDF file';\n        button = 'pdf';\n    } else if (field === 'pdfTable') {\n        header = 'PDF Table';\n        button = 'pdf';\n    } else {\n        header = 'Upload files';\n        button = 'file';\n    }\n    var dataTemplate = {list: list, idField: idField, header: header, button: button};\n    var html = templates.editorDownloads(dataTemplate);\n    $('#' + idField).replaceWith(html);\n    var uriUpload;\n\n    $(\".workspace-edit\").scrollTop(Florence.globalVars.pagePos);\n\n    //Edit\n    if (!data[field] || data[field].length === 0) {\n        var lastIndex = 0;\n    } else {\n        $(data[field]).each(function (index) {\n            // Delete\n            $('#' + idField + '-delete_' + index).click(function () {\n                fileDelete(collectionId, data, field, index);\n            });\n        });\n    }\n\n    //Add\n    if (data.type === 'static_adhoc') {\n        downloadExtensions = /\\.csv$|.xls$|.doc$|.pdf$|.zip$/;\n    } else if (data.type === 'static_qmi') {\n        downloadExtensions = /\\.pdf$/;\n    } else if (data.type === 'article_download' || (data.type === 'static_methodology_download' && field === 'pdfDownloads')) {\n        downloadExtensions = /\\.pdf$/;\n    } else if (data.type === 'static_methodology_download' && field === 'downloads') {\n        downloadExtensions = /\\.csv$|.xls$|.doc$|.ppt$|.zip$/;\n    } else if (data.type === 'static_methodology') {\n        downloadExtensions = /\\.csv$|.xls$|.doc$|.ppt$|.pdf$|.zip$/;\n    } else if (data.type === 'static_foi') {\n        downloadExtensions = /\\.csv$|.xls$|.doc$|.pdf$|.zip$/;\n    } else if (data.type === 'static_page') {\n        downloadExtensions = /\\.csv$|.xls$|.doc$|.pdf$|.zip$/;\n    } else if (data.type === 'static_article') {\n        downloadExtensions = /\\.xls$|.pdf$|.zip$/;\n    } else if (data.type === 'dataset' || data.type === 'timeseries_dataset') {\n        downloadExtensions = /\\.csv$|.xls$|.doc$|.pdf$|.zip$/;\n    } else if (data.type === 'article' || data.type === 'bulletin'|| data.type === 'compendium_chapter') {\n        downloadExtensions = /\\.pdf$/;\n    } else {\n        sweetAlert(\"This file type is not valid\", \"Contact an administrator if you need to add this type of file in this document\", \"info\");\n    }\n\n    $('#add-' + idField).one('click', function () {\n        if ((data.type === 'article' || data.type === 'bulletin') && (data[field] && data[field].length > 0)) {\n            sweetAlert(\"You can upload only one file here\");\n            return false;\n        } else {\n            if (!data[field]) {\n                data[field] = [];\n            }\n            uploadFile(collectionId, data, field, idField, lastIndex, downloadExtensions, addFile);\n        }\n    });\n\n    $(function () {\n        $('.add-tooltip').tooltip({\n            items: '.add-tooltip',\n            content: 'Type title here and click Save to add it to the page',\n            show: \"slideDown\", // show immediately\n            open: function (event, ui) {\n                ui.tooltip.hover(\n                    function () {\n                        $(this).fadeTo(\"slow\", 0.5);\n                    });\n            }\n        });\n    });\n\n    function sortable() {\n        $('#sortable-' + idField).sortable({\n            stop: function () {\n                $('#' + idField + ' .edit-section__sortable-item--counter').each(function (index) {\n                    $(this).empty().append(index + 1);\n                });\n            }\n        });\n    }\n\n    sortable();\n}\n\n/**\n * Manages file with description\n * @param collectionId\n * @param data\n * @param field - JSON data key\n * @param idField - HTML id for the template\n */\n\nfunction addFileWithDetails(collectionId, data, field, idField) {\n  var list = data[field];\n  var dataTemplate = {list: list, idField: idField};\n  var html = templates.editorDownloadsWithSummary(dataTemplate);\n  $('#' + idField).replaceWith(html);\n  var uriUpload;\n  var downloadExtensions;\n\n  $(\".workspace-edit\").scrollTop(Florence.globalVars.pagePos);\n\n  // Edit\n  if (!data[field] || data[field].length === 0) {\n    var lastIndex = 0;\n  } else {\n    $(data[field]).each(function (index) {\n      // Delete\n      $('#' + idField + '-delete_' + index).click(function () {\n        fileDelete(collectionId, data, field, index);\n      });\n\n      // Edit\n      $('#' + idField + '-edit_' + index).click(function () {\n        var editedSectionValue = {\n          \"title\": $('#' + idField + '-title_' + index).val(),\n          \"markdown\": $('#' + idField + '-summary_' + index).val()\n        };\n\n        var saveContent = function (updatedContent) {\n          data[field][index].fileDescription = updatedContent;\n          data[field][index].title = $('#' + idField + '-title_' + index).val();\n          updateContent(collectionId, data.uri, JSON.stringify(data));\n        };\n        loadMarkdownEditor(editedSectionValue, saveContent, data);\n      });\n    });\n  }\n\n  //Add\n  if (data.type === 'compendium_data') {\n    downloadExtensions = /\\.csv$|.xls$|.zip$/;\n  } else {\n    sweetAlert(\"This file type is not valid\", \"Contact an administrator if you need to add this type of file in this document\", \"info\");\n  }\n\n  $('#add-' + idField).one('click', function () {\n    uploadFile(collectionId, data, field, idField, lastIndex, downloadExtensions, addFileWithDetails);\n  });\n\n  $(function () {\n    $('.add-tooltip').tooltip({\n      items: '.add-tooltip',\n      content: 'Type title here and click Edit to add a description',\n      show: \"slideDown\", // show immediately\n      open: function (event, ui) {\n        ui.tooltip.hover(\n          function () {\n            $(this).fadeTo(\"slow\", 0.5);\n          });\n      }\n    });\n  });\n\n  function sortable() {\n    $('#sortable-' + idField).sortable({\n      stop: function () {\n        $('#' + idField + ' .edit-section__sortable-item--counter').each(function (index) {\n          $(this).empty().append(index + 1);\n        });\n      }\n    });\n  }\n\n  sortable();\n}\n\n/**\n * Manages alerts\n * @param collectionId\n * @param data\n * @param templateData\n * @param field - JSON data key\n * @param idField - HTML id for the template\n */\n\nfunction editAlert(collectionId, data, templateData, field, idField) {\n  var list = templateData[field];\n  var dataTemplate = {list: list, idField: idField};\n  var html = templates.editorAlert(dataTemplate);\n  $('#' + idField).replaceWith(html);\n  initialiseAlert(collectionId, data, templateData, field, idField);\n  // New alert\n  $(\"#add-\" + idField).click(function () {\n    if (!data[field]) {\n      data[field] = [];\n      templateData[field] = [];\n    }\n    var tmpDate = (new Date()).toISOString();\n    data[field].push({markdown: \"\", date: tmpDate, type: \"alert\"});\n    templateData[field].push({markdown: \"\", date: tmpDate, type: \"alert\"});\n    saveAlert(collectionId, data.uri, data, templateData, field, idField);\n  });\n  $(\".workspace-edit\").scrollTop(Florence.globalVars.pagePos);\n}\n\nfunction refreshAlert(collectionId, data, templateData, field, idField) {\n  var list = templateData[field];\n  var dataTemplate = {list: list, idField: idField};\n  var html = templates.editorAlert(dataTemplate);\n  $('#sortable-' + idField).replaceWith($(html).find('#sortable-' + idField));\n  initialiseAlert(collectionId, data, templateData, field, idField);\n}\n\nfunction initialiseAlert(collectionId, data, templateData, field, idField) {\n  // Load\n  $(data[field]).each(function (index) {\n    dateTmp = data[field][index].date;\n    var dateTmpFormatted = $.datepicker.formatDate('dd MM yy', new Date(dateTmp));\n    $('#date_' + index).val(dateTmpFormatted).datepicker({dateFormat: 'dd MM yy'}).on('change', function () {\n      data[field][index].date = new Date($('#date_' + index).datepicker('getDate')).toISOString();\n      templateData[field][index].date = new Date($('#date_' + index).datepicker('getDate')).toISOString();\n    });\n    $('#' + idField + '-edit_' + index).click(function () {\n      var editedSectionValue = {title: 'Alert notice', markdown: data[field][index].markdown};\n      //var editedSectionValue = data[field][index].markdown;\n      var saveContent = function (updatedContent) {\n        data[field][index].markdown = updatedContent;\n        templateData[field][index].markdown = updatedContent;\n        saveAlert(collectionId, data.uri, data, templateData, field, idField);\n      };\n      loadMarkdownEditor(editedSectionValue, saveContent, data, 'notEmpty');\n    });\n\n    var correctionCheck;\n    if (data[field][index].type === 'correction') {\n      correctionCheck = 'checked';\n    } else if (data[field][index].type === 'alert') {\n      correctionCheck = 'unchecked';\n    }\n\n    if (data.type === 'dataset_landing_page' || data.type === 'compendium_landing_page') {\n      $('#correction-container_' + index).append('<label for=\"correction-alert_' + index + '\">Show as correction' +\n        '<input id=\"correction-alert_' + index + '\" type=\"checkbox\" value=\"value\" ' + correctionCheck + '/></label>');\n    }\n\n    $('#correction-alert_' + index).change(function () {\n      if ($(this).prop('checked') === true) {\n        data[field][index].type = 'correction';\n      }\n      else {\n        data[field][index].type = 'alert';\n      }\n      saveAlert(collectionId, data.uri, data, templateData, field, idField);\n    });\n\n    // Delete\n    $('#' + idField + '-delete_' + index).click(function () {\n      swal ({\n        title: \"Warning\",\n        text: \"Are you sure you want to delete this alert?\",\n        type: \"warning\",\n        showCancelButton: true,\n        confirmButtonText: \"Delete\",\n        cancelButtonText: \"Cancel\",\n        closeOnConfirm: false\n      }, function(result) {\n        if (result === true) {\n          swal({\n            title: \"Deleted\",\n            text: \"This alert has been deleted\",\n            type: \"success\",\n            timer: 2000\n          });\n          var position = $(\".workspace-edit\").scrollTop();\n          Florence.globalVars.pagePos = position;\n          $(this).parent().remove();\n          data[field].splice(index, 1);\n          templateData[field].splice(index, 1);\n          saveAlert(collectionId, data.uri, data, templateData, field, idField);\n        }\n      });\n    });\n  });\n  function sortable() {\n    $('#sortable-' + idField).sortable({\n      stop: function(){\n        $('#' + idField + ' .edit-section__sortable-item--counter').each(function(index) {\n          $(this).empty().append(index + 1);\n        });\n      }\n    });\n  }\n\n  sortable();\n\n}\n\nfunction saveAlert(collectionId, path, data, templateData, field, idField) {\n  putContent(collectionId, path, JSON.stringify(data),\n    success = function () {\n      Florence.Editor.isDirty = false;\n      refreshAlert(collectionId, data, templateData, field, idField);\n      refreshPreview(data.uri);\n    },\n    error = function (response) {\n      if (response.status === 409) {\n        sweetAlert(\"Cannot edit this page\", \"It is already part of another collection.\");\n      } else {\n        handleApiError(response);\n      }\n    }\n  );\n}\n\n/**\n * Manages related data\n * @param collectionId\n * @param data\n * @param templateData\n * @param field - JSON data key\n * @param idField - HTML id for the template\n */\n\nfunction editBlocks(collectionId, data, templateData, field, idField) {\n  var list = templateData[field];\n  var dataTemplate = {list: list, idField: idField};\n  var html = templates.editorT1Blocks(dataTemplate);\n  $('#' + idField).replaceWith(html);\n  resolveStatsTitle(collectionId, data, templateData, field, idField);\n  $(\".workspace-edit\").scrollTop(Florence.globalVars.pagePos);\n}\n\nfunction refreshBlocks(collectionId, data, templateData, field, idField) {\n  var list = templateData[field];\n  var dataTemplate = {list: list, idField: idField};\n  var html = templates.editorT1Blocks(dataTemplate);\n  $('#sortable-' + idField).replaceWith($(html).find('#sortable-' + idField));\n  initialiseBlocks(collectionId, data, templateData, field, idField);\n}\n\nfunction initialiseBlocks(collectionId, data, templateData, field, idField) {\n  // Load\n  $(data[field]).each(function (index) {\n    // Edit\n    $('#' + idField + '-edit_' + index).click(function () {\n      var $this = data[field][index];\n      if (!$this.title) {\n        // This is data\n        var modal = templates.blockNewsModal($this);\n        var pastedUrl;\n        $('.modal').remove();\n        $('.workspace-menu').append(modal);\n        $('.modal-news').remove();\n\n        //Modal click events\n        $('.btn-uri-cancel').off().one('click', function () {\n          $('.modal').remove();\n        });\n\n        $('.btn-uri-get').off().click(function () {\n          pastedUrl = $('#uri-input').val();\n          if (pastedUrl === \"\") {\n            sweetAlert(\"This field cannot be empty. Please paste a valid url address\");\n          } else {\n            var dataUrl = checkPathParsed(pastedUrl);\n            if (dataUrl === \"\") {    //special case for home page\n              dataUrl = \"/\";\n            }\n            checkValidStats(collectionId, data, templateData, field, idField, dataUrl, index);\n            $('.modal').remove();\n          }\n        });\n      } else {\n        // This is item\n        var images = data.images;\n        var dataTemplate = {block: $this, images: images};\n        var modal = templates.blockNewsModal(dataTemplate);\n        var uri, title, text, image;\n        $('.modal').remove();\n        $('.workspace-menu').append(modal);\n        //menuselect(\"uri-size\");\n\n        $('#uri-input').change(function () {\n          $this.uri = $('#uri-input').val();\n        });\n        $('#uri-title').change(function () {\n          $this.title = $('#uri-title').val();\n        });\n        $(\"#uri-text\").change(function () {\n          $(this).textareaAutoSize();\n          $this.text = $('#uri-text').val();\n        });\n\n        var imageIdx = _.findIndex(images, function(item) {return item.uri === $this.image;});\n        $('#uri-image').val(imageIdx.toString()).prop('selected', 'true');\n\n        $\n        $('#uri-image').change(function () {\n          var index = parseInt($('#uri-image').val());\n          if (index === -1) {\n            $this.image = '';\n          } else {\n            $this.image = images[index].uri;\n          }\n        });\n\n        //Modal click events\n        $('.btn-uri-cancel').off().click(function () {\n          $('.modal').remove();\n        });\n\n        $('.btn-uri-get').off().click(function () {\n          if (!($this.title || title)) {\n            sweetAlert('You need to enter a title to continue');\n            return false;\n          } else {\n            data[field][index] = {uri: $this.uri, title: $this.title, text: $this.text, image: $this.image};\n            saveBlocks(collectionId, data.uri, data, templateData, field, idField);\n            $('.modal').remove();\n          }\n        });\n      }\n    });\n\n    // Delete\n    $('#' + idField + '-delete_' + index).click(function () {\n      swal({\n        title: \"Warning\",\n        text: \"Are you sure you want to delete this block?\",\n        type: \"warning\",\n        showCancelButton: true,\n        confirmButtonText: \"Delete\",\n        cancelButtonText: \"Cancel\",\n        closeOnConfirm: false\n      }, function (result) {\n        if (result === true) {\n          swal({\n            title: \"Deleted\",\n            text: \"This \" + idField + \" has been deleted\",\n            type: \"success\",\n            timer: 2000\n          });\n          var position = $(\".workspace-edit\").scrollTop();\n          Florence.globalVars.pagePos = position;\n          $(this).parent().remove();\n          data[field].splice(index, 1);\n          templateData[field].splice(index, 1);\n          putContent(collectionId, data.uri, JSON.stringify(data),\n            function () {\n              Florence.Editor.isDirty = false;\n              refreshPreview(data.uri);\n              refreshBlocks(collectionId, data, templateData, field, idField);\n            },\n            function (response) {\n              if (response.status === 400) {\n                sweetAlert(\"Cannot edit this page\", \"It is already part of another collection.\");\n              }\n              else {\n                handleApiError(response);\n              }\n            }\n          );\n        }\n      });\n    });\n  });\n\n  //Add\n  $('#add-' + idField).off().click(function () {\n    //add a modal to select an option for stats or news\n    var position = $(\".workspace-edit\").scrollTop();\n    Florence.globalVars.pagePos = position;\n    var modalStatsOrNews = templates.blockModal;\n    $('.workspace-menu').append(modalStatsOrNews);\n    //They choose timeseries\n    $('#data-link').click(function () {\n      if (!data[field]) {\n        data[field] = [];\n      }\n\n      var modal = templates.blockNewsModal;\n      var pastedUrl;\n      $('.modal').remove();\n      $('.workspace-menu').append(modal);\n      $('.modal-news').remove();\n\n      //Modal click events\n      $('.btn-uri-cancel').off().one('click', function () {\n        createWorkspace(data.uri, collectionId, 'edit');\n      });\n\n      $('.btn-uri-get').off().click(function () {\n        pastedUrl = $('#uri-input').val();\n        if (pastedUrl === \"\") {\n          sweetAlert(\"This field cannot be empty. Please paste a valid url address\");\n        } else {\n          var dataUrl = checkPathParsed(pastedUrl);\n          if (dataUrl === \"\") {    //special case for home page\n            dataUrl = \"/\";\n          }\n          checkValidStats(collectionId, data, templateData, field, idField, dataUrl);\n          $('.modal').remove();\n        }\n      });\n    });\n\n    //They choose news\n    $('#item-link').click(function () {\n      if (!data[field]) {\n        data[field] = [];\n      }\n      var images = data.images;\n      var dataTemplate = {block: {}, images: images};\n      var modal = templates.blockNewsModal(dataTemplate);\n      var uri, title, text, image;\n      $('.modal').remove();\n      $('.workspace-menu').append(modal);\n\n      $('#uri-input').change(function () {\n        uri = $('#uri-input').val();\n      });\n      $('#uri-title').change(function () {\n        title = $('#uri-title').val();\n      });\n      $(\"#uri-text\").change(function () {\n        $(this).textareaAutoSize();\n        text = $('#uri-text').val();\n      });\n      $('#uri-image').change(function () {\n        var index = parseInt($('#uri-image').val());\n        if (index === -1) {\n          $this.image = '';\n        } else {\n          $this.image = images[index].uri;\n        }\n      });\n\n      $('.btn-uri-get').off().click(function () {\n        if (!title) {\n          sweetAlert('You need to enter a title to continue');\n        }\n        else {\n          data[field].push({uri: uri, title: title, text: text, image: image});\n          templateData[field].push({uri: uri, title: title, text: text, image: image});\n          saveBlocks(collectionId, data.uri, data, templateData, field, idField);\n          $('.modal').remove();\n        }\n      });\n      $('.btn-uri-cancel').off().click(function () {\n        $('.modal').remove();\n      });\n    });\n\n    //They cancel\n    $('.btn-uri-cancel').off().click(function () {\n      $('.modal').remove();\n    });\n  });\n\n  // Make sections sortable\n  function sortable() {\n    $('#sortable-' + idField).sortable({\n      stop: function () {\n        $('#' + idField + ' .edit-section__sortable-item--counter').each(function (index) {\n          $(this).empty().append(index + 1);\n        });\n      }\n    });\n  }\n\n  sortable();\n}\n\nfunction resolveStatsTitle(collectionId, data, templateData, field, idField) {\n  var ajaxRequest = [];\n  $(templateData[field]).each(function (index, path) {\n    var dfd = $.Deferred();\n    if (!this.title) {\n      getPageDataTitle(collectionId, path.uri,\n        function (response) {\n          templateData[field][index] = response;\n          dfd.resolve();\n        },\n        function () {\n          sweetAlert(\"Error\", field + ' address: ' + path.uri + ' is not found.', \"error\");\n          dfd.resolve();\n        }\n      );\n      ajaxRequest.push(dfd);\n    }\n  });\n\n  $.when.apply($, ajaxRequest).then(function () {\n    refreshBlocks(collectionId, data, templateData, field, idField);\n  });\n}\n\n\nfunction saveBlocks(collectionId, path, data, templateData, field, idField) {\n  putContent(collectionId, path, JSON.stringify(data),\n    success = function (response) {\n      Florence.Editor.isDirty = false;\n      resolveStatsTitle(collectionId, data, templateData, field, idField);\n      refreshPreview(data.uri);\n    },\n    error = function (response) {\n      if (response.status === 400) {\n        sweetAlert(\"Cannot edit this page\", \"It is already part of another collection.\");\n      }\n      else {\n        handleApiError(response);\n      }\n    }\n  );\n}\n\nfunction checkValidStats(collectionId, data, templateData, field, idField, dataUrl, index) {\n  var dataUrlData = dataUrl + \"/data\";\n  $.ajax({\n    url: dataUrlData,\n    dataType: 'json',\n    crossDomain: true,\n    success: function (result) {\n      if (result.type === 'timeseries') {\n        if (!data[field]) {\n          data[field] = [];\n          templateData[field] = [];\n        }\n      }\n      else {\n        sweetAlert(\"This is not a valid document\");\n        createWorkspace(data.uri, collectionId, 'edit');\n        return;\n      }\n\n      if (index) {\n        data[field][index] = {uri: dataUrl};\n        templateData[field][index] = {uri: dataUrl};\n      } else {\n        data[field].push({uri: dataUrl});\n        templateData[field].push({uri: dataUrl});\n      }\n      saveBlocks(collectionId, data.uri, data, templateData, field, idField);\n\n    },\n    error: function () {\n      console.log('No page data returned');\n    }\n  });\n}\nfunction editCollection(collection) {\n\n    collection.collectionOwner = Florence.Authentication.userType();\n\n    getTeams(\n        success = function (teams) {\n            var editPublishTime, toIsoDate;\n            var collDetails = $('.js-collection__content').detach();\n            var html = templates.collectionEdit({collection: collection, teams: teams.teams});\n            $('.js-collection__head').after(html);\n            $('.btn-collection-edit').off();\n\n            $('#collection-editor-name').on('input', function () {\n                collection.name = $('#collection-editor-name').val();\n            });\n\n            $(\"#editor-team-tag\").tagit({\n                singleField: true,\n                singleFieldNode: $('#editor-team-input'),\n                singleFieldDelimiter: (\"$$\")\n            });\n\n            $(collection.teams).each(function (i, team) {\n                $('#editor-team-tag').tagit('createTag', team);\n            });\n\n            $('.ui-autocomplete-input').hide();\n\n            $('select#editor-team').change(function () {\n                $('#editor-team-tag').tagit('createTag', $(\"#editor-team option:selected\").text());\n            });\n\n            $('#editor-team-input').change(function () {\n                collection.teams = $('#editor-team-input').val().split('$$');\n                //After creating the array tagit leaves an empty string if all elements are removed\n                if (teams.length === 1 && teams[0] === \"\") {\n                    teams = [];\n                }\n            });\n\n            if (!collection.publishDate) {\n                $('#collection-editor-date').datepicker({dateFormat: 'dd MM yy'}).on('change', function () {\n                    toIsoDate = $('#collection-editor-date').datepicker(\"getDate\");\n                });\n            } else {\n                dateTmp = collection.publishDate;\n                toIsoDate = $.datepicker.formatDate('dd MM yy', new Date(dateTmp));\n                $('#collection-editor-date').val(toIsoDate).datepicker({dateFormat: 'dd MM yy'}).on('change', function () {\n                    toIsoDate = $('#collection-editor-date').datepicker(\"getDate\");\n                });\n            }\n\n            //initial value\n            if (collection.type === \"manual\") {\n                $('#collection-editor-date-block').hide();\n            } else {\n                $('#collection-editor-date-block').show();\n            }\n\n            $('input[type=radio]').click(function () {\n                if ($(this).val() === 'manualCollection') {\n                    collection.type = \"manual\";\n                    $('#collection-editor-date-block').hide();\n                } else if ($(this).val() === 'scheduledCollection') {\n                    collection.type = \"scheduled\";\n                    $('#collection-editor-date-block').show();\n                }\n            });\n\n            //More functionality to be added here\n            // When scheduled, do we change all the dates in the files in the collection?\n\n\n            //Save\n            $('.btn-collection-editor-save').click(function () {\n                //save date and time to collection\n                if (collection.type === 'scheduled') {\n                    editPublishTime = parseInt($('#collection-editor-hour').val()) + parseInt($('#collection-editor-min').val());\n                    collection.publishDate = new Date(parseInt(new Date(toIsoDate).getTime()) + editPublishTime).toISOString();\n                } else {\n                }\n                //check validity\n                if (collection.name === '') {\n                    sweetAlert('This is not a valid collection name', \"A collection name can't be empty\");\n                    return true;\n                }\n                if (collection.name.match(/\\./)) {\n                    sweetAlert('This is not a valid collection name', \"You can't use fullstops\");\n                    return true;\n                }\n                if ((collection.type === 'scheduled') && (Date.parse(collection.publishDate) < new Date())) {\n                    sweetAlert('This is not a valid date. Date cannot be in the past');\n                    return true;\n                } else {\n                    // Update the collection\n                    $.ajax({\n                        url: \"/zebedee/collection/\" + collection.id,\n                        dataType: 'json',\n                        contentType: 'application/json',\n                        type: 'PUT',\n                        data: JSON.stringify(collection),\n                        success: function (updatedCollection) {\n                            Florence.setActiveCollection(updatedCollection);\n                            //createWorkspace('', updatedCollection.id, 'browse');\n                            sweetAlert(\"Collection amended\", \"\", \"success\");\n                            viewCollections(collection.id);\n                        },\n                        error: function (response) {\n                            if (response.status === 409) {\n                                sweetAlert(\"Error\", response.responseJSON.message, \"error\");\n                            }\n                            else {\n                                handleApiError(response);\n                            }\n                        }\n                    });\n                }\n            });\n\n            //Cancel\n            $('.btn-collection-editor-cancel').click(function () {\n                $('.btn-collection-edit').click(function () {\n                    editCollection(collection);\n                });\n                $('.js-collection__edit-modal').remove();\n                $('.js-collection__head').after(collDetails);\n            });\n\n            setCollectionEditorHeight();\n        },\n        error = function (jqxhr) {\n            handleApiError(jqxhr);\n        }\n    );\n}\n\nfunction setCollectionEditorHeight() {\n    var $contentModal = $('.js-collection__edit-modal'),\n        panelHeight = parseInt($('.panel--off-canvas').height()),\n        headHeight = parseInt($('.slider__head').outerHeight()),\n        contentMargin = (parseInt($contentModal.css('margin-top'))) + (parseInt($contentModal.css('margin-bottom')));\n\n    var contentHeight = panelHeight - headHeight - contentMargin;\n    $contentModal.css('height', contentHeight);\n}\n\n/**\n * Manage files associated with datasets. When uploading a file creates a new dataset\n * @param collectionId\n * @param data\n * @param field - JSON data key ('versions')\n * @param idField - HTML id for the template ('version' or 'correction')\n */\n\nfunction editDatasetVersion(collectionId, data, field, idField) {\n    var downloadExtensions, uriUpload, file;\n    var lastIndex;\n    if (data[field]) {\n        lastIndex = data[field].length;\n    } else {\n        lastIndex = 0;\n        data[field] = [];\n    }\n    var uploadedNotSaved = {uploaded: false, saved: false, fileUrl: \"\", oldLabel: data.description.versionLabel};\n    $(\".workspace-edit\").scrollTop(Florence.globalVars.pagePos);\n    //Add\n    if (data.type === 'timeseries_dataset') {\n        downloadExtensions = /\\.csdb$|\\.csv$/;\n    } else if (data.type === 'dataset') {\n        downloadExtensions = /\\.csv$|.xls$|.zip$/;\n    }\n\n    var ajaxRequest = [];\n    var templateData = $.extend(true, {}, data);\n    $(templateData[field]).each(function (index, version) {\n        var dfd = $.Deferred();\n        if (version.correctionNotice) {\n            templateData[field][index].type = true;\n        } else {\n            templateData[field][index].type = false;\n        }\n        templateData[field][index].label = version.label;\n        dfd.resolve();\n        ajaxRequest.push(dfd);\n    });\n\n    $.when.apply($, ajaxRequest).then(function () {\n        var html = templates.editorCorrection({idField: idField});\n        $('#' + idField).replaceWith(html);\n        initialiseDatasetVersion(collectionId, data, templateData, field, idField);\n    });\n\n    $(\"#add-\" + idField).one('click', function () {\n        addTheVersion();\n    });\n\n    function addTheVersion() {\n        var position = $(\".workspace-edit\").scrollTop();\n        Florence.globalVars.pagePos = position + 200;\n\n        // todo: Move this HTML into a handlebars template.\n        $('#' + idField + '-section').append(\n            '<div id=\"' + lastIndex + '\" class=\"edit-section__item\">' +\n            '  <form id=\"UploadForm\">' +\n            '    <textarea class=\"auto-size\" type=\"text\" placeholder=\"Add a label here (E.g. Revised, Final, etc\" id=\"label\"></textarea>' +\n            '    <input type=\"file\" title=\"Select a file and click Submit\" name=\"files\">' +\n            '    <div class=\"dataset-buttons\">' +\n            '    <button class=\"btn btn--primary\" type=\"submit\" form=\"UploadForm\" value=\"submit\">Submit</button>' +\n            '    <button class=\"btn btn-page-cancel\" id=\"file-cancel\">Cancel</button>' +\n            //'    <button class=\"btn-dataset-autocsdb\" id=\"no-file\">Auto CSDB</button>' +\n            '    </div>' +\n            '  </form>' +\n            '  <div id=\"response\"></div>' +\n            '  <ul id=\"list\"></ul>' +\n            '</div>');\n\n        if (data.type === 'dataset') {\n            $('#no-file').remove();\n        }\n\n        // The label field is not used for corrections, just use existing version label.\n        if (idField === \"correction\") {\n            var $versionLabel = $('#UploadForm #label');\n            $versionLabel.text(uploadedNotSaved.oldLabel);\n            $versionLabel.hide();\n        }\n\n        $('#file-cancel').one('click', function (e) {\n            e.preventDefault();\n            $('#' + lastIndex).remove();\n            if (uploadedNotSaved.uploaded === true && uploadedNotSaved.saved === false) {\n                data.description.versionLabel = uploadedNotSaved.oldLabel;\n                deleteContent(collectionId, uploadedNotSaved.fileUrl,\n                    onSuccess = function () {\n                    },\n                    onError = function (error) {\n                        handleApiError(error);\n                    }\n                );\n            }\n            initialiseDatasetVersion(collectionId, data, templateData, field, idField);\n        });\n\n        $('#UploadForm').submit(function (e) {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n\n            var formdata = new FormData();\n\n            function showUploadedItem(source) {\n                $('#list').append(source);\n            }\n\n            var versionLabel = this[0].value;\n            file = this[1].files[0];\n\n            // Check that a file has been uploaded\n            if (!file) {\n                sweetAlert('Please select a file to upload');\n                return;\n            }\n\n            if (data.type == \"timeseries_dataset\") {\n                // Validate that the file name matches the datasetId (which is stored in the parent dataset_landing page\n                var parentUrl = getParentPage(data.uri);\n\n                fetch(parentUrl + '/data', {credentials: 'include'}).then(function(response) {\n                    return response.json();\n                }).then(function(parentData) {\n                    var datasetId = (parentData.description.datasetId).toUpperCase(),\n                        downloadTitle = ((file.name).split('.').shift()).toUpperCase();\n                    if (!datasetId) {\n                        // Throw error if the parent page has no dataset ID\n                        sweetAlert({\n                            title: \"Dataset missing an ID\",\n                            text: \"Please go to the parent page and give the dataset an ID\",\n                            type: \"warning\"\n                        });\n                    } else if (datasetId !== downloadTitle) {\n                        // Throw error to user if file name and dataset ID don't match\n                        sweetAlert({\n                            title: \"Warning\",\n                            text: \"CSDB filename must match the dataset's ID\",\n                            type: \"warning\"\n                        });\n                    } else {\n                        saveSubmittedFile();\n                    }\n                }).catch(function(error) {\n                    console.log(\"Error getting timeseries dataset parent data... \", error);\n                });\n            } else {\n                // Not a timeseries_dataset, so continue with saving file as normal\n                saveSubmittedFile();\n            }\n\n            function saveSubmittedFile() {\n                var responseElem = document.getElementById(\"response\");\n                responseElem.innerHTML = \"Uploading . . .\";\n\n                var fileNameNoSpace = file.name.replace(/[^a-zA-Z0-9\\.]/g, \"\").toLowerCase();\n                if (file.name.match(/\\.csv$/)) {\n                    fileNameNoSpace = 'upload-' + fileNameNoSpace;\n                }\n                uriUpload = data.uri + '/' + fileNameNoSpace;\n                var safeUriUpload = checkPathSlashes(uriUpload);\n\n                if (!!file.name.match(downloadExtensions)) {\n                    showUploadedItem(fileNameNoSpace);\n                    if (formdata) {\n                        formdata.append(\"name\", file);\n                    }\n                    $('#list').empty();\n                } else {\n                    sweetAlert({\n                        text: 'This file type is not supported',\n                        type: \"warning\"\n                    });\n                    responseElem.innerHTML = \"\";\n                    $('#' + lastIndex).remove();\n                    editDatasetVersion(collectionId, data, field, idField);\n                    return;\n                }\n\n                if (formdata) {\n                    $.ajax({\n                        url: \"/zebedee/content/\" + collectionId + \"?uri=\" + safeUriUpload,\n                        type: 'POST',\n                        data: formdata,\n                        cache: false,\n                        processData: false,\n                        contentType: false,\n                        success: function () {\n                            uploadedNotSaved.uploaded = true;\n                            uploadedNotSaved.fileUrl = safeUriUpload;\n                            // create the new version/correction\n                            saveNewCorrection(collectionId, data.uri,\n                                function (response) {\n                                    responseElem.innerHTML = \"File uploaded successfully\";\n                                    var tmpDate = Florence.collection.publishDate ? Florence.collection.publishDate : (new Date()).toISOString();\n                                    if (idField === \"correction\") {\n                                        data[field].push({\n                                            correctionNotice: \" \",\n                                            updateDate: tmpDate,\n                                            uri: response,\n                                            label: versionLabel\n                                        });\n                                        // Enter a notice\n                                        var editedSectionValue = {title: 'Correction notice', markdown: ''};\n                                        var saveContent = function (updatedContent) {\n                                            data[field][data[field].length - 1].correctionNotice = updatedContent;\n                                            data.downloads = [{file: fileNameNoSpace}];\n                                            uploadedNotSaved.saved = true;\n                                            $(\"#\" + idField).find('.edit-section__content').prepend('<div id=\"sortable-' + idField + '\" class=\"edit-section__sortable\">');\n                                            $(\"#\" + idField + '-section').remove();\n                                            saveDatasetVersion(collectionId, data.uri, data, field, idField);\n                                        };\n                                        loadMarkdownEditor(editedSectionValue, saveContent, data, 'notEmpty');\n                                    } else {\n                                        data[field].push({\n                                            correctionNotice: \"\",\n                                            updateDate: tmpDate,\n                                            uri: response,\n                                            label: versionLabel\n                                        });\n                                        data.description.versionLabel = versionLabel; // only update the version label for versions not corrections.\n                                        data.downloads = [{file: fileNameNoSpace}];\n                                        uploadedNotSaved.saved = true;\n                                        $(\"#\" + idField).find('.edit-section__content').prepend('<div id=\"sortable-' + idField + '\" class=\"edit-section__sortable\">');\n                                        $(\"#\" + idField + '-section').remove();\n                                        saveDatasetVersion(collectionId, data.uri, data, field, idField);\n                                    }\n                                }, function (response) {\n                                    if (response.status === 409) {\n                                        sweetAlert(\"You can add only one \" + idField + \" before publishing.\");\n                                        responseElem.innerHTML = \"\";\n                                        deleteContent(collectionId, uploadedNotSaved.fileUrl);\n                                    }\n                                    else if (response.status === 404) {\n                                        sweetAlert(\"You can only add \" + idField + \"s to content that has been published.\");\n                                        responseElem.innerHTML = \"\";\n                                        deleteContent(collectionId, uploadedNotSaved.fileUrl);\n                                    }\n                                    else {\n                                        responseElem.innerHTML = \"\";\n                                        handleApiError(response);\n                                    }\n                                }\n                            );\n                        },\n                        error: function (response) {\n                            console.log(\"Error in uploading this file\");\n                            handleApiError(response);\n                        }\n                    });\n                }\n            }\n        });\n\n        $('#no-file').one('click', function (e) {\n            e.preventDefault();\n            // extra security check\n            if (data.type === 'timeseries_dataset') {\n                var versionLabel = $('#UploadForm #label').val();\n                uploadedNotSaved.uploaded = false;\n\n                // create the new version/correction\n                saveNewCorrection(collectionId, data.uri,\n                    function (response) {\n                        var tmpDate = Florence.collection.publishDate ? Florence.collection.publishDate : (new Date()).toISOString();\n                        if (idField === \"correction\") {\n                            data[field].push({\n                                correctionNotice: \" \",\n                                updateDate: tmpDate,\n                                uri: response,\n                                label: versionLabel\n                            });\n                            // Enter a notice\n                            var editedSectionValue = {title: 'Correction notice', markdown: ''};\n                            var saveContent = function (updatedContent) {\n                                data[field][data[field].length - 1].correctionNotice = updatedContent;\n                                //data.downloads = [{file: fileNameNoSpace}];    // not necessary as zebedee will have a CSDB file\n                                uploadedNotSaved.saved = true;\n                                $(\"#\" + idField).find('.edit-section__content').prepend('<div id=\"sortable-' + idField + '\" class=\"edit-section__sortable\">');\n                                $(\"#\" + idField + '-section').remove();\n                                saveDatasetVersion(collectionId, data.uri, data, field, idField);\n                            };\n                            loadMarkdownEditor(editedSectionValue, saveContent, data, 'notEmpty');\n                        } else {\n                            data[field].push({\n                                correctionNotice: \"\",\n                                updateDate: tmpDate,\n                                uri: response,\n                                label: versionLabel\n                            });\n                            data.description.versionLabel = versionLabel; // only update the version label for versions not corrections.\n                            //data.downloads = [{file: fileNameNoSpace}];    // not necessary as zebedee will have a CSDB file\n                            uploadedNotSaved.saved = true;\n                            $(\"#\" + idField).find('.edit-section__content').prepend('<div id=\"sortable-' + idField + '\" class=\"edit-section__sortable\">');\n                            $(\"#\" + idField + '-section').remove();\n                            saveDatasetVersion(collectionId, data.uri, data, field, idField);\n                        }\n                    }, function (response) {\n                        if (response.status === 409) {\n                            sweetAlert(\"You can add only one \" + idField + \" before publishing.\");\n                            deleteContent(collectionId, uploadedNotSaved.fileUrl);\n                        }\n                        else if (response.status === 404) {\n                            sweetAlert(\"You can only add \" + idField + \"s to content that has been published.\");\n                            deleteContent(collectionId, uploadedNotSaved.fileUrl);\n                        }\n                        else {\n                            handleApiError(response);\n                        }\n                    }\n                );\n            } else {\n                sweetAlert(\"Oops!\", \"It looks like this is not a timeseries dataset.\", \"error\");\n            }\n        });\n    }\n}\n\nfunction refreshDatasetVersion(collectionId, data, field, idField) {\n    var ajaxRequest = [];\n    var templateData = $.extend(true, {}, data);\n    $(templateData[field]).each(function (index, version) {\n        var dfd = $.Deferred();\n        if (version.correctionNotice) {\n            templateData[field][index].type = true;\n        } else {\n            templateData[field][index].type = false;\n        }\n        templateData[field][index].label = version.label;\n        dfd.resolve();\n        ajaxRequest.push(dfd);\n    });\n\n    $.when.apply($, ajaxRequest).then(function () {\n        initialiseDatasetVersion(collectionId, data, templateData, field, idField);\n    });\n\n}\n\nfunction initialiseDatasetVersion(collectionId, data, templateData, field, idField) {\n    // Load\n    var list = templateData[field];\n    var correction;\n    if (idField === 'correction') {\n        correction = true;\n    } else {\n        correction = false;\n    }\n    var dataTemplate = {list: list, idField: idField, correction: correction};\n    var html = templates.workEditT8VersionList(dataTemplate);\n    $('#sortable-' + idField).replaceWith(html);\n\n    $(data[field]).each(function (index) {\n        //dateTmp = data[field][index].updateDate;\n        //var dateTmpFormatted = $.datepicker.formatDate('dd MM yy', new Date(dateTmp));\n        //$('#' + idField + '-date_' + index).val(dateTmpFormatted).datepicker({dateFormat: 'dd MM yy'}).on('change', function () {\n        //  data[field][index].updateDate = new Date($('#' + idField + '-date_' + index).datepicker('getDate')).toISOString();\n        //  saveDatasetVersion(collectionId, data.uri, data, field, idField);\n        //});\n\n        dateTmp = data[field][index].updateDate;\n\n        var monthName = new Array();\n        monthName[0] = \"January\";\n        monthName[1] = \"February\";\n        monthName[2] = \"March\";\n        monthName[3] = \"April\";\n        monthName[4] = \"May\";\n        monthName[5] = \"June\";\n        monthName[6] = \"July\";\n        monthName[7] = \"August\";\n        monthName[8] = \"September\";\n        monthName[9] = \"October\";\n        monthName[10] = \"November\";\n        monthName[11] = \"December\";\n        //var n = monthName[theDateTime.getMonth()];\n\n        theDateTime = new Date(dateTmp);\n        theYear = theDateTime.getFullYear();\n        theMonth = monthName[theDateTime.getMonth()];\n        theDay = addLeadingZero(theDateTime.getDate());\n        theHours = addLeadingZero(theDateTime.getHours());\n        theMinutes = addLeadingZero(theDateTime.getMinutes());\n        //console.log(theHours +':'+ theMinutes);\n\n        var dateTimeInputString = theDay + ' ' + theMonth + ' ' + theYear + ' ' + theHours + ':' + theMinutes;\n\n        function addLeadingZero(number) {\n            var number = '0' + number;\n            number = number.slice(-2);\n            return number;\n        }\n\n        $('#' + idField + '-date_' + index).val(dateTimeInputString).datetimepicker({\n            dateFormat: 'dd MM yy',\n            controlType: 'select',\n            oneLine: true,\n            timeFormat: 'HH:mm',\n            onClose: function () {\n                function isDonePressed() {\n                    return ($('#ui-datepicker-div').html().indexOf('ui-datepicker-close ui-state-default ui-priority-primary ui-corner-all ui-state-hover') > -1);\n                }\n\n                if (isDonePressed()) {\n                    data[field][index].updateDate = new Date($('#' + idField + '-date_' + index).datetimepicker('getDate')).toISOString();\n                    console.log(\"Run save \" + index);\n                    saveDatasetVersion(collectionId, data.uri, data, field, idField);\n                }\n            }\n        });\n\n        if (idField === 'correction') {\n            $('#' + idField + '-edit_' + index).click(function () {\n                var markdown = data[field][index].correctionNotice;\n                var editedSectionValue = {title: 'Correction notice', markdown: markdown};\n                var saveContent = function (updatedContent) {\n                    data[field][index].correctionNotice = updatedContent;\n                    saveDatasetVersion(collectionId, data.uri, data, field, idField);\n                };\n                loadMarkdownEditor(editedSectionValue, saveContent, data, 'notEmpty');\n            });\n        }\n        $('#' + idField + '-edit-label_' + index).click(function () {\n            var markdown = data[field][index].label ? data[field][index].label : \"\";\n            var editedSectionValue = {title: 'Label content', markdown: markdown};\n            var saveContent = function (updatedContent) {\n                data[field][index].label = updatedContent;\n                if (index === data[field].length - 1) {\n                    data.description.versionLabel = updatedContent;\n                }\n                saveDatasetVersion(collectionId, data.uri, data, field, idField);\n            };\n            loadMarkdownEditor(editedSectionValue, saveContent, data);\n        });\n        // Delete\n        $('#' + idField + '-delete_' + index).click(function () {\n            swal({\n                title: \"Warning\",\n                text: \"This will revert all changes you have made in this file. Are you sure you want to delete this \" + idField + \"?\",\n                type: \"warning\",\n                showCancelButton: true,\n                confirmButtonText: \"Delete\",\n                cancelButtonText: \"Cancel\",\n                closeOnConfirm: false\n            }, function (result) {\n                if (result === true) {\n                    swal({\n                        title: \"Deleted\",\n                        text: \"This \" + idField + \" version has been deleted\",\n                        type: \"success\",\n                        timer: 2000\n                    });\n                    var pathToDelete = data.uri;\n                    var fileToDelete = pathToDelete + '/' + data.downloads[0].file;  //Saves always the latest\n                    var uriToDelete = $('#' + idField + '-edition_' + index).attr(idField + '-url');\n                    deleteUnpublishedVersion(collectionId, uriToDelete, function () {\n                        var position = $(\".workspace-edit\").scrollTop();\n                        Florence.globalVars.pagePos = position;\n                        $('#' + idField + '-delete_' + index).parent().remove();\n                        // delete uploaded file\n                        deleteContent(collectionId, fileToDelete, function () {\n                            console.log(\"File deleted\");\n                        }, function (error) {\n                            if (error.status === 404) {\n                                sweetAlert(\"There was no CSDB file to delete or this \" + idField + \" has been already published.\");\n                            }\n                            else {\n                                handleApiError(error);\n                            }\n                        });\n                        // delete modified data.json and revert to published\n                        deleteContent(collectionId, pathToDelete, function () {\n                            loadPageDataIntoEditor(pathToDelete, collectionId);\n                            refreshPreview(pathToDelete);\n                        }, function (error) {\n                            handleApiError(error);\n                        });\n                    }, function (response) {\n                        if (response.status === 404) {\n                            sweetAlert(\"You cannot delete a \" + idField + \" that has been published.\");\n                        }\n                        else {\n                            handleApiError(response);\n                        }\n                    });\n                }\n            });\n        });\n    });\n\n}\n\nfunction saveDatasetVersion(collectionId, path, data, field, idField) {\n\n    putContent(collectionId, path, JSON.stringify(data),\n        function () {\n            Florence.Editor.isDirty = false;\n            refreshDatasetVersion(collectionId, data, field, idField);\n            refreshPreview(path);\n        },\n        function (response) {\n            if (response.status === 400) {\n                sweetAlert(\"Cannot edit this page\", \"It is already part of another collection.\");\n            }\n            else {\n                handleApiError(response);\n            }\n        }\n    );\n}\n\n/**\n * Manages dates for release calendar\n * @param collectionId\n * @param data\n * @param templateData\n * @param field - JSON data key\n * @param idField - HTML id for the template\n */\n\nfunction editDate(collectionId, data, templateData, field, idField) {\n  var list = templateData[field];\n  var dataTemplate = {list: list, idField: idField};\n  runDatePicker(dataTemplate);\n  var html = templates.editorDate(dataTemplate);\n  $('#' + idField).replaceWith(html);\n  initialiseNoteMarkdown(collectionId, data, templateData, field, idField);\n}\n\nfunction runDatePicker(dataTemplate) {\n  if(dataTemplate && dataTemplate.list) {\n    var countSections = dataTemplate.list.length;\n    var i = 0;\n    while (i < countSections) {\n      var tmpDate = dataTemplate.list[i].previousDate;\n      dataTemplate.list[i].previousDate = $.datepicker.formatDate('dd MM yy', new Date(tmpDate));\n      i++;\n    }\n  }\n}\n\nfunction refreshNoteMarkdown(collectionId, data, templateData, field, idField) {\n  var list = templateData[field];\n  var dataTemplate = {list: list, idField: idField};\n  runDatePicker(dataTemplate);\n  var html = templates.editorDate(dataTemplate);\n  $('#sortable-' + idField).replaceWith($(html).find('#sortable-' + idField));\n  initialiseNoteMarkdown(collectionId, data, templateData, field, idField)\n}\n\nfunction initialiseNoteMarkdown(collectionId, data, templateData, field, idField) {\n  // Load\n  $(data[field]).each(function (index) {\n    $('#' + idField + '-note_' + index).click(function () {\n      var markdown = $('#' + idField + '-markdown_' + index).val();\n      var editedSectionValue = {title: 'Note', markdown: markdown};\n      var saveContent = function (updatedContent) {\n        data[field][index].changeNotice = updatedContent;\n        templateData[field][index].changeNotice = updatedContent;\n        saveNoteMarkdown(collectionId, data.uri, data, templateData, field, idField);\n      };\n      loadMarkdownEditor(editedSectionValue, saveContent, data, 'notEmpty');\n    });\n  });\n}\n\nfunction saveNoteMarkdown(collectionId, path, data, templateData, field, idField) {\n  putContent(collectionId, path, JSON.stringify(data),\n    success = function () {\n      Florence.Editor.isDirty = false;\n      refreshNoteMarkdown(collectionId, data, templateData, field, idField);\n      refreshPreview(data.uri);\n    },\n    error = function (response) {\n      if (response.status === 400) {\n        sweetAlert(\"Cannot edit this page\", \"It is already part of another collection.\");\n      }\n      else {\n        handleApiError(response);\n      }\n    }\n  );\n}\n\n/**\n * Manage correction of documents with files attached (compendium_data, article_download)\n * @param collectionId\n * @param data\n * @param field - JSON data key ('versions')\n * @param idField - HTML id for the template ('correction')\n */\n\nfunction editDocWithFilesCorrection(collectionId, data, field, idField) {\n  var downloadExtensions, file;\n  if (!data[field]) {\n    data[field] = [];\n  }\n  var oldFile = $.extend(true, {}, data);\n  var uploadedNotSaved = {uploaded: false, saved: false, files: oldFile.downloads};\n  $(\".workspace-edit\").scrollTop(Florence.globalVars.pagePos);\n  //Add file types\n  if (data.type === 'compendium_data'){\n    downloadExtensions = /\\.csv$|.xls$|.zip$/;\n  }\n  else if (data.type === 'article_download'){\n    downloadExtensions = /\\.pdf$/;\n  }\n\n  refreshDocWithFilesCorrection(collectionId, data, field, idField);\n\n\n  $(\"#add-\" + idField).one('click', function () {\n\n    $(\"#add-\" + idField).parent().append('<button class=\"btn-page-delete\"' +\n      ' id=\"cancel-correction\">Cancel</button>');\n    //Display the list of uploaded files in the ref table\n    var list = data.downloads;\n    var html = templates.editorDocWithFiles(list);\n    $('#sortable-correction').append(html);\n\n    //Update the files to be corrected\n    $(data.downloads).each(function (index) {\n      $('#correction-upload_' + index).click(function () {\n        fileCorrection(index);\n      }).children().click(function (e) {\n        e.stopPropagation();\n      });\n    });\n\n    //Cancel the correction\n    $('#cancel-correction').click(function () {\n      //Check the files uploaded\n      var filesToDelete = checkFilesUploaded (uploadedNotSaved.files, data.downloads);\n      if (filesToDelete) {\n        _.each(filesToDelete, function (file) {\n          var fileToDelete = data.uri + file;\n          deleteContent(collectionId, fileToDelete);\n        });\n      }\n      loadPageDataIntoEditor(data.uri, collectionId);\n      refreshPreview(data.uri);\n    });\n\n    //Save the correction\n    $(\"#add-\" + idField).html(\"Save correction\").on().click(function () {\n      saveNewCorrection(collectionId, data.uri,\n        function (response) {\n          var tmpDate = (new Date()).toISOString();           // it could use releaseDate\n          data[field].push({\n            correctionNotice: \"\",\n            updateDate: tmpDate,\n            uri: response\n          });\n          uploadedNotSaved.saved = true;\n          $(\"#add-\" + idField).parents('.edit-section__content').remove('#sortable-' + idField)\n            .find('.text-center').prepend('<div id=\"sortable-' + idField + '\" class=\"edit-section__sortable\">');  //check .after()\n          // Enter a notice\n          var editedSectionValue = {title: 'Enter correction notice', markdown: ''};\n          var saveContent = function (updatedContent) {\n            data[field][data[field].length - 1].correctionNotice = updatedContent;\n            saveDocWithFilesCorrection(collectionId, data.uri, data, field, idField);\n          };\n          loadMarkdownEditor(editedSectionValue, saveContent, data, 'notEmpty');\n          //saveDocWithFilesCorrection(collectionId, data.uri, data, field, idField);\n        }, function (response) {\n          if (response.status === 409) {\n            //Revert to condition before error\n            var filesToDelete = checkFilesUploaded(uploadedNotSaved.files, data.downloads);\n            if (filesToDelete) {\n              _.each(filesToDelete, function (download) {\n                var fileToDelete = data.uri + '/' + download;\n                deleteContent(collectionId, fileToDelete);\n              });\n            }\n            sweetAlert(\"You can add only one \" + idField + \" before publishing.\");\n            refreshDocWithFilesCorrection(collectionId, data, field, idField);\n          }\n          else if (response.status === 404) {\n            //Revert to condition before error\n            var filesToDelete = checkFilesUploaded(uploadedNotSaved.files, data.downloads);\n            if (filesToDelete) {\n              _.each(filesToDelete, function (download) {\n                var fileToDelete = data.uri + '/' + download;\n                deleteContent(collectionId, fileToDelete);\n              });\n            }\n            data.downloads = uploadedNotSaved.files;\n            sweetAlert(\"You can only add \" + idField + \"s to content that has been published.\");\n            refreshDocWithFilesCorrection(collectionId, data, field, idField);\n          }\n          else {\n            //Revert to condition before error\n            var filesToDelete = checkFilesUploaded(uploadedNotSaved.files, data.downloads);\n            if (filesToDelete) {\n              _.each(filesToDelete, function (download) {\n                var fileToDelete = data.uri + '/' + download;\n                deleteContent(collectionId, fileToDelete);\n              });\n            }\n            handleApiError(response);\n            refreshDocWithFilesCorrection(collectionId, data, field, idField);\n          }\n        }\n      );\n    });\n  });\n\n  function fileCorrection(index) {\n    var position = $(\".workspace-edit\").scrollTop();\n    Florence.globalVars.pagePos = position + 200;\n    var html = templates.uploadFileForm(index);\n    $('#correction-filename_show_' + index).append(html);\n\n    $('#file-cancel').one('click', function (e) {\n      e.preventDefault();\n      $('#' + index).remove();\n      if (uploadedNotSaved.uploaded === true && uploadedNotSaved.saved === false) {\n        data.downloads[index].file = uploadedNotSaved.files[index].file;\n        var fileToDelete = data.uri + '/' + uploadedNotSaved.files[index].file;\n        deleteContent(collectionId, fileToDelete);\n      }\n      refreshDocWithFilesCorrection(collectionId, data, field, idField);\n    });\n\n    $('#UploadForm').submit(function (e) {\n      e.preventDefault();\n      e.stopImmediatePropagation();\n\n      var formdata = new FormData();\n\n      function showUploadedItem(source) {\n        $('#list').append(source);\n      }\n\n      file = this[0].files[0];\n      if (!file) {\n        alert('Please select a file to upload.');\n        return;\n      }\n\n      document.getElementById(\"response\").innerHTML = \"Uploading . . .\";\n\n      var fileNameNoSpace = file.name.replace(/[^a-zA-Z0-9\\.]/g, \"\").toLowerCase();\n\n      if (!!file.name.match(downloadExtensions)) {\n        showUploadedItem(fileNameNoSpace);\n        if (formdata) {\n          formdata.append(\"name\", file);\n        }\n      } else {\n        alert('This file type is not supported');\n        $('#' + index).remove();\n        editDocWithFilesCorrection(collectionId, data, field, idField);\n        return;\n      }\n\n      if (formdata) {\n        $.ajax({\n          url: \"/zebedee/content/\" + collectionId + \"?uri=\" + data.uri + '/' + fileNameNoSpace,\n          type: 'POST',\n          data: formdata,\n          cache: false,\n          processData: false,\n          contentType: false,\n          success: function () {\n            document.getElementById(\"response\").innerHTML = \"File uploaded successfully\";\n            uploadedNotSaved.uploaded = true;\n            $('#' + index).remove();\n            $('#correction-filename_show_' + index).replaceWith('<p id=\"correction-filename_show_' + index + '\">' + fileNameNoSpace + '</p>');\n            data.downloads[index].file = fileNameNoSpace;\n          },\n          error: function (response) {\n            handleApiError(response);\n          }\n        });\n      }\n    });\n  }\n}\n\nfunction refreshDocWithFilesCorrection(collectionId, data, field, idField) {\n  var list = data[field];\n  var dataTemplate = {list: list, idField: idField};\n  var html = templates.editorCorrection(dataTemplate);\n  $('#' + idField).replaceWith(html);\n  initialiseDocWithFilesCorrection(collectionId, data, field, idField)\n}\n\nfunction initialiseDocWithFilesCorrection(collectionId, data, field, idField) {\n  // Load\n  $(data[field]).each(function (index) {\n    dateTmp = data[field][index].updateDate;\n    var dateTmpFormatted = $.datepicker.formatDate('dd MM yy', new Date(dateTmp));\n    $('#' + idField + '-date_' + index).val(dateTmpFormatted).datepicker({dateFormat: 'dd MM yy'}).on('change', function () {\n      data[field][index].updateDate = new Date($('#' + idField + '-date_' + index).datepicker('getDate')).toISOString();\n      saveDocWithFilesCorrection(collectionId, data.uri, data, field, idField);\n    });\n    if (idField === 'correction') {\n      $('#' + idField + '-edit_' + index).click(function () {\n        var markdown = $('#' + idField + '-markdown_' + index).val();\n        var editedSectionValue = {title: 'Correction notice', markdown: markdown};\n        var saveContent = function (updatedContent) {\n          data[field][index].correctionNotice = updatedContent;\n          saveDocWithFilesCorrection(collectionId, data.uri, data, field, idField);\n        };\n        loadMarkdownEditor(editedSectionValue, saveContent, data, 'notEmpty');\n      });\n    }\n\n    // Delete\n    $('#' + idField + '-delete_' + index).click(function () {\n      var result = confirm(\"This will revert all changes you have made in this file. Are you sure you want to delete\" +\n        \" this \" + idField + \"?\");\n      if (result === true) {\n        var pathToDelete = data.uri;\n        var filesToDelete = data.downloads;  //Delete all files in directory\n        var uriToDelete = $(this).parent().parent().children('#' + idField + '-edition_' + index).attr(idField + '-url');\n        deleteUnpublishedVersion(collectionId, uriToDelete, function () {\n          var position = $(\".workspace-edit\").scrollTop();\n          Florence.globalVars.pagePos = position;\n          $(this).parent().remove();\n          //delete uploaded files in this directory\n          _.each(filesToDelete, function (download) {\n            fileToDelete = data.uri + '/' + download.file;\n            deleteContent(collectionId, fileToDelete);\n          });\n          // delete modified data.json and revert to pubished\n          deleteContent(collectionId, pathToDelete, function () {\n            loadPageDataIntoEditor(pathToDelete, collectionId);\n            refreshPreview(pathToDelete);\n          }, function (error) {\n            handleApiError(error);\n          });\n        }, function (response) {\n          if (response.status === 404) {\n            sweetAlert(\"You cannot delete a \" + idField + \" that has been published.\");\n\n          }\n          else {\n            handleApiError(response);\n          }\n        });\n      }\n    });\n  });\n}\n\nfunction saveDocWithFilesCorrection(collectionId, path, data, field, idField) {\n  putContent(collectionId, path, JSON.stringify(data),\n    function () {\n      Florence.Editor.isDirty = false;\n      refreshDocWithFilesCorrection(collectionId, data, field, idField);\n      refreshPreview(path);\n    },\n    function (response) {\n      if (response.status === 400) {\n        alert(\"Cannot edit this page. It is already part of another collection.\");\n      }\n      else {\n        handleApiError(response);\n      }\n    }\n  );\n}\n\nfunction checkFilesUploaded (oldFiles, newFiles) {\n  var diff = [];\n  _.each(oldFiles, function (oldFile, i) {\n    if (oldFile.file !== newFiles[i].file) {\n      diff.push(newFiles[i].file);\n    }\n  });\n  return diff;\n}\n\n/**\n * Manages corrections (versions)\n * @param collectionId\n * @param data\n * @param templateData\n * @param field - JSON data key\n * @param idField - HTML id for the template\n */\n\nfunction editDocumentCorrection(collectionId, data, templateData, field, idField) {\n  var list = templateData[field];\n  var dataTemplate = {list: list, idField: idField};\n  var html = templates.editorCorrection(dataTemplate);\n  $('#' + idField).replaceWith(html);\n  initialiseCorrection(collectionId, data, templateData, field, idField);\n  // New correction\n  $(\"#add-\" + idField).one('click', function () {\n    if (!data[field]) {\n      data[field] = [];\n      templateData[field] = [];\n    }\n    saveNewCorrection(collectionId, data.uri, function (response) {\n      var tmpDate = Florence.collection.publishDate ? Florence.collection.publishDate : (new Date()).toISOString();\n      data[field].push({correctionNotice: \"\", updateDate: tmpDate, uri: response});\n      templateData[field].push({correctionNotice: \"\", updateDate: tmpDate, uri: response});\n      // Enter a notice\n      var editedSectionValue = {title: 'Correction notice', markdown: data[field].correctionNotice};\n      var saveContent = function (updatedContent) {\n        data[field][data[field].length - 1].correctionNotice = updatedContent;\n        saveCorrection(collectionId, data.uri, data, templateData, field, idField);\n      };\n      loadMarkdownEditor(editedSectionValue, saveContent, data, 'notEmpty');\n      $(\"#add-\" + idField).remove();\n    }, function (response) {\n      if (response.status === 409) {\n        sweetAlert(\"You can add only one correction before publishing.\");\n      }\n      else {\n        handleApiError(response);\n      }\n    });\n  });\n  $(\".workspace-edit\").scrollTop(Florence.globalVars.pagePos);\n}\n\nfunction refreshCorrection(collectionId, data, templateData, field, idField) {\n  var list = templateData[field];\n  var dataTemplate = {list: list, idField: idField};\n  var html = templates.editorCorrection(dataTemplate);\n  $('#sortable-' + idField).replaceWith($(html).find('#sortable-' + idField));\n  initialiseCorrection(collectionId, data, templateData, field, idField);\n}\n\nfunction initialiseCorrection(collectionId, data, templateData, field, idField) {\n  // Load\n  $(data[field]).each(function (index) {\n    dateTmp = data[field][index].updateDate;\n    // ORIGINAL TIME PICKER CODE\n    // var dateTmpCorr = $.datepicker.formatDate('dd MM yy', new Date(dateTmp));\n    // $('#correction-date_' + index).val(dateTmpCorr).datepicker({dateFormat: 'dd MM yy'}).on('change', function () {\n    //  data[field][index].updateDate = new Date($('#correction-date_' + index).datepicker('getDate')).toISOString();\n    //  templateData[field][index].updateDate = new Date($('#correction-date_' + index).datepicker('getDate')).toISOString();\n    //  saveCorrection(collectionId, data.uri, data, templateData, field, idField);\n    // });\n\n\n    var monthName = new Array();\n    monthName[0] = \"January\";\n    monthName[1] = \"February\";\n    monthName[2] = \"March\";\n    monthName[3] = \"April\";\n    monthName[4] = \"May\";\n    monthName[5] = \"June\";\n    monthName[6] = \"July\";\n    monthName[7] = \"August\";\n    monthName[8] = \"September\";\n    monthName[9] = \"October\";\n    monthName[10] = \"November\";\n    monthName[11] = \"December\";\n    //var n = monthName[theDateTime.getMonth()];\n\n    theDateTime = new Date(dateTmp);\n    theYear = theDateTime.getFullYear();\n    theMonth = monthName[theDateTime.getMonth()];\n    theDay = addLeadingZero(theDateTime.getDate());\n    theHours = addLeadingZero(theDateTime.getHours());\n    theMinutes = addLeadingZero(theDateTime.getMinutes());\n    //console.log(theHours +':'+ theMinutes);\n\n    var dateTimeInputString = theDay + ' ' + theMonth + ' ' + theYear + ' ' + theHours +':' + theMinutes;\n\n    function addLeadingZero(number){\n      var number = '0' + number;\n      number = number.slice(-2);\n      return number;\n    }\n\n    $('#correction-date_' + index).val(dateTimeInputString).datetimepicker({\n        dateFormat: 'dd MM yy',\n        controlType: 'select',\n        oneLine: true,\n        timeFormat: 'HH:mm',\n        onClose: function () {\n          function isDonePressed() {\n            return ($('#ui-datepicker-div').html().indexOf('ui-datepicker-close ui-state-default ui-priority-primary ui-corner-all ui-state-hover') > -1);\n          }\n          if (isDonePressed()){\n            data[field][index].updateDate = new Date($('#correction-date_' + index).datetimepicker('getDate')).toISOString();\n            templateData[field][index].updateDate = new Date($('#correction-date_' + index).datetimepicker('getDate')).toISOString();\n            console.log(\"Run save \" + index);\n            saveCorrection(collectionId, data.uri, data, templateData, field, idField);\n          }\n        }\n      });\n    //$('#correction-date_' + index).datetimepicker('setDate', new Date(dateTmp));\n\n\n\n    ///////////look at me\n\n    //$('body').on('click', '#done-button', function () {\n    //  data[field][index].updateDate = new Date($('#correction-date_' + index).datetimepicker('getDate')).toISOString();\n    //  templateData[field][index].updateDate = new Date($('#correction-date_' + index).datetimepicker('getDate')).toISOString();\n    //  saveCorrection(collectionId, data.uri, data, templateData, field, idField);\n    //});\n\n\n\n    $('#' + idField + '-edit_' + index).click(function () {\n      var markdown = data[field][index].correctionNotice;\n      var editedSectionValue = {title: 'Correction notice', markdown: markdown};\n      var saveContent = function (updatedContent) {\n        data[field][index].correctionNotice = updatedContent;\n        templateData[field][index].correctionNotice = updatedContent;\n        saveCorrection(collectionId, data.uri, data, templateData, field, idField);\n      };\n      loadMarkdownEditor(editedSectionValue, saveContent, data, 'notEmpty');\n    });\n    // Delete\n    $('#' + idField + '-delete_' + index).click(function () {\n      swal ({\n        title: \"Warning\",\n        text: \"Are you sure you want to delete this correction?\",\n        type: \"warning\",\n        showCancelButton: true,\n        confirmButtonText: \"Delete\",\n        cancelButtonText: \"Cancel\",\n        closeOnConfirm: false\n      }, function(result){\n        if (result === true) {\n          deleteUnpublishedVersion(collectionId, data[field][index].uri, function () {\n            var position = $(\".workspace-edit\").scrollTop();\n            Florence.globalVars.pagePos = position;\n            $(this).parent().remove();\n            data[field].splice(index, 1);\n            templateData[field].splice(index, 1);\n            saveCorrection(collectionId, data.uri, data, templateData, field, idField);\n            swal({\n              title: \"Deleted\",\n              text: \"This correction has been deleted\",\n              type: \"success\",\n              timer: 2000\n            });\n          }, function (response) {\n            if (response.status === 400) {\n              sweetAlert(\"You cannot delete a correction that has been published.\");\n            }\n            else {\n              handleApiError(response);\n            }\n          });\n        }\n      });\n    });\n  });\n}\n\nfunction saveCorrection(collectionId, path, data, templateData, field, idField) {\n  putContent(collectionId, path, JSON.stringify(data),\n    function () {\n      Florence.Editor.isDirty = false;\n      refreshCorrection(collectionId, data, templateData, field, idField);\n      refreshPreview(data.uri);\n    },\n    function (response) {\n      if (response.status === 400) {\n        sweetAlert(\"Cannot edit this page\", \"It is already part of another collection.\");\n      }\n      else {\n        handleApiError(response);\n      }\n    }\n  );\n}\n\n/**\n * Manages related data\n * @param collectionId\n * @param data\n * @param templateData\n * @param field - JSON data key\n * @param idField - HTML id for the template\n */\n\nfunction editIntAndExtLinks(collectionId, data, templateData, field, idField) {\n    $(data[field]).each(function (index, path) {\n        if (!this.title) {\n            templateData[field][index] = (function () {\n                resolveInternalLinksTitle(collectionId, data, templateData, field, idField, index)\n            })();\n        } else {\n            templateData[field][index].description = {};\n            templateData[field][index].description.title = templateData[field][index].title;\n        }\n    });\n    var list = templateData[field];\n    var dataTemplate = createRelatedItemAccordionSectionViewModel(idField, list, data);\n    var html = templates.editorRelated(dataTemplate);\n    $('#' + idField).replaceWith(html);\n    initialiseLinks(collectionId, data, templateData, field, idField);\n    $(\".workspace-edit\").scrollTop(Florence.globalVars.pagePos);\n}\n\nfunction refreshLinks(collectionId, data, templateData, field, idField) {\n    var list = templateData[field];\n    var dataTemplate = createRelatedItemAccordionSectionViewModel(idField, list, data);\n    var html = templates.editorRelated(dataTemplate);\n    $('#sortable-' + idField).replaceWith($(html).find('#sortable-' + idField));\n    initialiseLinks(collectionId, data, templateData, field, idField);\n}\n\nfunction initialiseLinks(collectionId, data, templateData, field, idField) {\n    // Load\n    $(data[field]).each(function (index) {\n        // Delete\n        $('#' + idField + '-delete_' + index).click(function () {\n            swal({\n                title: \"Warning\",\n                text: \"Are you sure you want to delete this link?\",\n                type: \"warning\",\n                showCancelButton: true,\n                confirmButtonText: \"Delete\",\n                cancelButtonText: \"Cancel\",\n                closeOnConfirm: false\n            }, function (result) {\n                if (result === true) {\n                    swal({\n                        title: \"Deleted\",\n                        text: \"This \" + idField + \" has been deleted\",\n                        type: \"success\",\n                        timer: 2000\n                    });\n                    var position = $(\".workspace-edit\").scrollTop();\n                    Florence.globalVars.pagePos = position;\n                    $(this).parent().remove();\n                    data[field].splice(index, 1);\n                    templateData[field].splice(index, 1);\n                    putContent(collectionId, data.uri, JSON.stringify(data),\n                        success = function () {\n                            Florence.Editor.isDirty = false;\n                            refreshPreview(data.uri);\n                            refreshLinks(collectionId, data, templateData, field, idField);\n                        },\n                        error = function (response) {\n                            if (response.status === 400) {\n                                sweetAlert(\"Cannot edit this page\", \"It is already part of another collection.\");\n                            }\n                            else {\n                                handleApiError(response);\n                            }\n                        }\n                    );\n                }\n            });\n        });\n    });\n\n    //Add\n    //$('#add-' + idField).off().one('click', function () {\n    $('#add-link').off().click(function () {\n        //add a modal to select an option for internal or external\n        var position = $(\".workspace-edit\").scrollTop();\n        Florence.globalVars.pagePos = position;\n        var modalIntOrExt = templates.linkModal;\n        $('.workspace-menu').append(modalIntOrExt);\n        //They choose internal\n        $('#internal-link').click(function () {\n            if (!data[field]) {\n                data[field] = [];\n            }\n\n            //Florence.globalVars.pagePos = position;\n            var modal = templates.relatedModal;\n            $('.modal').remove();\n            $('.workspace-menu').append(modal);\n            $('.modal-box input[type=text]').focus();\n\n            //Modal click events\n            $('.btn-uri-cancel').off().one('click', function () {\n                $('.modal').remove();\n            });\n\n            $('.btn-uri-get').off().click(function () {\n                var pastedUrl = $('#uri-input').val();\n                if (pastedUrl === \"\") {\n                    sweetAlert(\"This field cannot be empty. Please paste a valid url address\");\n                } else {\n                    var dataUrl = checkPathParsed(pastedUrl);\n                    if (dataUrl === \"\") {    //special case for home page\n                        dataUrl = \"/\";\n                    }\n                    data[field].push({uri: dataUrl});\n                    templateData[field].push({uri: dataUrl});\n                    saveExternalLink(collectionId, data.uri, data, templateData, field, idField);\n                    $('.modal').remove();\n                }\n            });\n\n            $('.btn-uri-browse').off().one('click', function () {\n                var iframeEvent = document.getElementById('iframe').contentWindow;\n                iframeEvent.removeEventListener('click', Florence.Handler, true);\n                createWorkspace(data.uri, collectionId, '', null , true);\n                $('.modal').remove();\n\n                //Disable the editor\n                $('body').append(\n                    \"<div class='col col--5 panel modal-background'></div>\"\n                );\n\n                //Add buttons to iframe window\n                var iframeNav = templates.iframeNav();\n                $(iframeNav).hide().appendTo('.browser').fadeIn(600);\n\n                //Take iframe window to homepage/root\n                $('#iframe').attr('src', '/');\n\n                $('.btn-browse-cancel').off().one('click', function () {\n                    createWorkspace(data.uri, collectionId, 'edit');\n                    $('.iframe-nav').remove();\n                    $('.modal-background').remove();\n                });\n\n                //Remove added markup if user navigates away from editor screen\n                $('a:not(.btn-browse-get)').click(function () {\n                    $('.iframe-nav').remove();\n                    $('.modal-background').remove();\n                });\n\n                $('.btn-browse-get').off().one('click', function () {\n                    var dataUrl = getPathNameTrimLast();\n                    if (dataUrl === \"\") {   //special case for home page\n                        dataUrl = \"/\";\n                    }\n                    var latestUrl;\n                    //if you wanted to add latest automatically uncomment these lines\n                    if (dataUrl.match(/\\/articles\\//) || dataUrl.match(/\\/bulletins\\//)) {\n                        swal({\n                            title: \"Warning\",\n                            text: \"Would you like to always show the latest release of this document?\",\n                            type: \"warning\",\n                            showCancelButton: true,\n                            confirmButtonText: \"Yes\",\n                            cancelButtonText: \"No\",\n                            closeOnConfirm: true\n                        }, function (result) {\n                            if (result === true) {\n                                var tempUrl = dataUrl.split('/');\n                                tempUrl.pop();\n                                tempUrl.push('latest');\n                                latestUrl = tempUrl.join('/');\n                            } else {\n                                latestUrl = dataUrl;\n                            }\n                            $('.iframe-nav').remove();\n                            $('.modal-background').remove();\n                            data[field].push({uri: latestUrl});\n                            templateData[field].push({uri: latestUrl});\n                            saveExternalLink(collectionId, data.uri, data, templateData, field, idField);\n                        });\n                    } else {\n                        latestUrl = dataUrl;\n                        $('.iframe-nav').remove();\n                        $('.modal-background').remove();\n                        data[field].push({uri: latestUrl});\n                        templateData[field].push({uri: latestUrl});\n                        saveExternalLink(collectionId, data.uri, data, templateData, field, idField);\n                    }\n                });\n            });\n        });\n\n        //They choose external\n        $('#external-link').click(function () {\n            if (!data[field]) {\n                data[field] = [];\n            }\n            var modal = templates.linkExternalModal;\n            var uri, title;\n            $('.modal').remove();\n            $('.workspace-menu').append(modal);\n            $('#uri-input').change(function () {\n                uri = $('#uri-input').val();\n            });\n            $('#uri-title').change(function () {\n                title = $('#uri-title').val();\n            });\n            $('.btn-uri-get').off().click(function () {\n                if (!title) {\n                    sweetAlert('You need to enter a title to continue');\n                }\n                else {\n                    data[field].push({uri: uri, title: title});\n                    saveExternalLink(collectionId, data.uri, data, templateData, field, idField);\n                    $('.modal').remove();\n                }\n            });\n            $('.btn-uri-cancel').off().click(function () {\n                $('.modal').remove();\n            });\n        });\n        //They cancel\n        $('.btn-uri-cancel').off().click(function () {\n            $('.modal').remove();\n        });\n    });\n\n    // Make sections sortable\n    function sortable() {\n        $('#sortable-' + idField).sortable({\n            stop: function () {\n                $('#' + idField + ' .edit-section__sortable-item--counter').each(function (index) {\n                    $(this).empty().append(index + 1);\n                });\n            }\n        });\n    }\n\n    sortable();\n}\n\nfunction resolveInternalLinksTitle(collectionId, data, templateData, field, idField, index) {\n    getPageDataTitle(collectionId, templateData[field][index].uri,\n        success = function (response) {\n            templateData[field][index] = response;\n            templateData[field][index].description = {};\n            templateData[field][index].description.title = response.title;\n            if (response.edition) {\n                templateData[field][index].description.edition = response.edition;\n            }\n            refreshLinks(collectionId, data, templateData, field, idField);\n        },\n        error = function () {\n            sweetAlert(\"Error\", field + ' address: ' + templateData[field][index].uri + ' is not found.', \"error\");\n        }\n    );\n}\n\n\nfunction saveExternalLink(collectionId, path, data, templateData, field, idField) {\n    putContent(collectionId, path, JSON.stringify(data),\n        success = function (response) {\n            Florence.Editor.isDirty = false;\n            refreshLinks(collectionId, data, templateData, field, idField);\n            createWorkspace(data.uri, collectionId, 'edit');\n        },\n        error = function (response) {\n            if (response.status === 400) {\n                sweetAlert(\"Cannot edit this page\", \"It is already part of another collection.\");\n            }\n            else {\n                handleApiError(response);\n            }\n        }\n    );\n}\n\n/**\n * Manages markdown content (saves an object)\n * @param collectionId\n * @param data\n * @param field - JSON data key\n * @param title - header to appear in the editor\n */\n\nfunction editMarkdownOneObject (collectionId, data, field, title) {\n  var list = data[field];\n\n  if(!data[field]) {\n    data[field] = {}\n  }\n\n  var dataTemplate;\n  if (title) {\n    dataTemplate = {list: list, header: title};\n  } else {\n    dataTemplate = {list: list, header: 'Content'};\n  }\n\n  var html = templates.editorContentOne(dataTemplate);\n  $('#one').replaceWith(html);\n  // Load\n  $('#one-edit').click(function() {\n    var markdown = $('#one-markdown').val();\n    var editedSectionValue = {title: 'Content', markdown: markdown};\n    var saveContent = function(updatedContent) {\n      data[field].markdown = updatedContent;\n      saveMarkdownOne (collectionId, data.uri, data, field);\n    };\n\n    loadMarkdownEditor(editedSectionValue, saveContent, data);\n  });\n\n  // Delete\n  $('#one-delete').click(function() {\n    swal ({\n      title: \"Warning\",\n      text: \"Are you sure you want to delete?\",\n      type: \"warning\",\n      showCancelButton: true,\n      confirmButtonText: \"Delete\",\n      cancelButtonText: \"Cancel\",\n      closeOnConfirm: false\n    }, function(result) {\n      if (result === true) {\n        $(this).parent().remove();\n        data[field] = {};\n        saveMarkdownOne(collectionId, data.uri, data, field);\n        swal({\n          title: \"Deleted\",\n          text: \"This \" + idField + \" has been deleted\",\n          type: \"success\",\n          timer: 2000\n        });\n      }\n    });\n  });\n}\n\nfunction saveMarkdownOne (collectionId, path, data, field) {\n  putContent(collectionId, path, JSON.stringify(data),\n    success = function () {\n      Florence.Editor.isDirty = false;\n      editMarkdownOneObject (collectionId, data, field);\n    },\n    error = function (response) {\n      if (response.status === 400) {\n          sweetAlert(\"Cannot edit this page\", \"It is already part of another collection.\");\n      }\n      else {\n        handleApiError(response);\n      }\n    }\n  );\n}\n\n/**\n * Manages markdown content (saves an array)\n * @param collectionId\n * @param data\n * @param field - JSON data key\n */\n\nfunction editMarkdownWithNoTitle(collectionId, data, field, idField) {\n  var list = data[field];\n\n  var dataTemplate;\n  if (idField === 'note') {\n    dataTemplate = {list: list, idField: idField, header: 'Notes'};\n  } else if (idField === 'prerelease') {\n    dataTemplate = {list: list, idField: idField, header: 'Pre-release access'};\n  } else {\n    dataTemplate = {list: list, idField: idField, header: 'Content'};\n  }\n\n  var html = templates.editorContentNoTitle(dataTemplate);\n  $('#' + idField).replaceWith(html);\n  // Load\n  $('#content-edit').click(function () {\n    var markdown = $('#content-markdown').val();\n    var editedSectionValue = {title: 'Content', markdown: markdown};\n    var saveContent = function (updatedContent) {\n      data[field] = [updatedContent];\n      saveMarkdownNoTitle(collectionId, data.uri, data, field, idField);\n\n      // when finished in the markdown editor be sure to refresh the charts / tables / images list to show any newly added\n      refreshChartList(collectionId, data);\n      refreshTablesList(collectionId, data);\n      refreshImagesList(collectionId, data);\n    };\n    loadMarkdownEditor(editedSectionValue, saveContent, data);\n  });\n\n  // Delete\n  $('#content-delete').click(function () {\n    swal({\n      title: \"Warning\",\n      text: \"Are you sure you want to delete?\",\n      type: \"warning\",\n      showCancelButton: true,\n      confirmButtonText: \"Delete\",\n      cancelButtonText: \"Cancel\",\n      closeOnConfirm: false\n    }, function (result) {\n      if (result === true) {\n        $(this).parent().remove();\n        data[field] = [];\n        saveMarkdownNoTitle(collectionId, data.uri, data, field, idField);\n        swal({\n          title: \"Deleted\",\n          text: \"This \" + idField + \" has been deleted\",\n          type: \"success\",\n          timer: 2000\n        });\n      }\n    });\n  });\n\n}\n\nfunction saveMarkdownNoTitle(collectionId, path, data, field, idField) {\n  putContent(collectionId, path, JSON.stringify(data),\n    success = function () {\n      Florence.Editor.isDirty = false;\n      editMarkdownWithNoTitle(collectionId, data, field, idField);\n    },\n    error = function (response) {\n      if (response.status === 400) {\n        sweetAlert(\"Cannot edit this page\", \"It is already part of another collection.\");\n      }\n      else {\n        handleApiError(response);\n      }\n    }\n  );\n}\n\nfunction editServiceMessage(collectionId, data) {\n  if (!data.serviceMessage) {\n    data.serviceMessage = '';\n  }\n  //add template to editor\n  var text = data.serviceMessage;\n  var html = templates.editorServiceMessage(text);\n  $('#srv-msg').replaceWith(html);\n  //change text\n  $(\"#srv-msg-txt\").on('input', function () {\n    $(this).textareaAutoSize();\n    data.serviceMessage = $(this).val();\n  });\n\n  //delete\n  $('#srv-msg-delete').click(function () {\n    swal({\n      title: \"Warning\",\n      text: \"Are you sure you want to delete?\",\n      type: \"warning\",\n      showCancelButton: true,\n      confirmButtonText: \"Delete\",\n      cancelButtonText: \"Cancel\",\n      closeOnConfirm: true\n    }, function (result) {\n      if (result === true) {\n        data.serviceMessage = \"\";\n        putContent(collectionId, '', JSON.stringify(data),\n          success = function () {\n            Florence.Editor.isDirty = false;\n            createWorkspace('/', collectionId, 'edit');\n          },\n          error = function (response) {\n            if (response.status === 400) {\n              sweetAlert(\"Cannot edit this page\", \"It is already part of another collection.\");\n            }\n            else {\n              handleApiError(response);\n            }\n          }\n        );\n      }\n    });\n  });\n}/**\n * Manages topics to appear in list pages\n * @param collectionId\n * @param data\n * @param templateData\n * @param field - JSON data key\n * @param idField - HTML id for the template\n */\n\nfunction editTopics(collectionId, data, templateData, field, idField) {\n    var list = templateData[field];\n    var dataTemplate = {list: list, idField: idField};\n    var html = templates.editorTopics(dataTemplate);\n    $('#' + idField).replaceWith(html);\n    initialiseTopics(collectionId, data, templateData, field, idField);\n    resolveTopicTitle(collectionId, data, templateData, field, idField);\n    $(\".workspace-edit\").scrollTop(Florence.globalVars.pagePos);\n}\n\nfunction refreshTopics(collectionId, data, templateData, field, idField) {\n    var list = templateData[field];\n    var dataTemplate = {list: list, idField: idField};\n    var html = templates.editorTopics(dataTemplate);\n    $('#sortable-' + idField).replaceWith($(html).find('#sortable-' + idField));\n    initialiseTopics(collectionId, data, templateData, field, idField);\n}\n\nfunction initialiseTopics(collectionId, data, templateData, field, idField) {\n    // Load\n    if (!data[field] || data[field].length === 0) {\n        editTopics['lastIndex' + field] = 0;\n    } else {\n        $(data[field]).each(function (index) {\n            editTopics['lastIndex' + field] = index + 1;\n\n            // Delete\n            $('#' + idField + '-delete_' + index).click(function () {\n                swal({\n                    title: \"Warning\",\n                    text: \"Are you sure you want to delete this link?\",\n                    type: \"warning\",\n                    showCancelButton: true,\n                    confirmButtonText: \"Delete\",\n                    cancelButtonText: \"Cancel\",\n                    closeOnConfirm: false\n                }, function (result) {\n                    if (result === true) {\n                        swal({\n                            title: \"Deleted\",\n                            text: \"This \" + idField + \" has been deleted\",\n                            type: \"success\",\n                            timer: 2000\n                        });\n                        var position = $(\".workspace-edit\").scrollTop();\n                        Florence.globalVars.pagePos = position;\n                        $(this).parent().remove();\n                        data[field].splice(index, 1);\n                        templateData[field].splice(index, 1);\n                        putContent(collectionId, data.uri, JSON.stringify(data),\n                            success = function () {\n                                Florence.Editor.isDirty = false;\n                                refreshPreview(data.uri);\n                                refreshTopics(collectionId, data, templateData, field, idField)\n                            },\n                            error = function (response) {\n                                if (response.status === 400) {\n                                    sweetAlert(\"Cannot edit this page\", \"It is already part of another collection.\");\n                                }\n                                else {\n                                    handleApiError(response);\n                                }\n                            }\n                        );\n                    }\n                });\n            });\n        });\n    }\n\n    //Add\n    $('#add-' + idField).off().one('click', function () {\n        var hasLatest; //Latest markup doesn't need to show in handlebars template\n        var position = $(\".workspace-edit\").scrollTop();\n\n        Florence.globalVars.pagePos = position;\n        var modal = templates.relatedModal(hasLatest);\n        $('.workspace-menu').append(modal);\n        $('.modal-box input[type=text]').focus();\n\n        //Modal click events\n        $('.btn-uri-cancel').off().one('click', function () {\n            createWorkspace(data.uri, collectionId, 'edit');\n        });\n\n        $('.btn-uri-get').off().one('click', function () {\n            var pastedUrl = $('#uri-input').val();\n            var dataUrl = checkPathParsed(pastedUrl);\n            getTopic(collectionId, data, templateData, field, idField, dataUrl);\n            $('.modal').remove();\n        });\n\n        $('.btn-uri-browse').off().one('click', function () {\n            var iframeEvent = document.getElementById('iframe').contentWindow;\n            iframeEvent.removeEventListener('click', Florence.Handler, true);\n            createWorkspace(data.uri, collectionId, '', null, true);\n            $('.modal').remove();\n\n            //Disable the editor\n            $('body').append(\n                \"<div class='col col--5 panel modal-background'></div>\"\n            );\n\n            //Add buttons to iframe window\n            var iframeNav = templates.iframeNav(hasLatest);\n            $(iframeNav).hide().appendTo('.browser').fadeIn(500);\n\n            $('.btn-browse-cancel').off().one('click', function () {\n                createWorkspace(data.uri, collectionId, 'edit');\n                $('.iframe-nav').remove();\n                $('.modal-background').remove();\n            });\n\n            //Remove added markup if user navigates away from editor screen\n            $('a:not(.btn-browse-get)').click(function () {\n                $('.iframe-nav').remove();\n                $('.modal-background').remove();\n            });\n\n            $('.btn-browse-get').off().one('click', function () {\n                var dataUrl = getPathNameTrimLast();\n                $('.iframe-nav').remove();\n                $('.modal-background').remove();\n                getTopic(collectionId, data, templateData, field, idField, dataUrl);\n            });\n        });\n    });\n\n    function sortable() {\n        $('#sortable-' + idField).sortable({\n            stop: function () {\n                $('#' + idField + ' .edit-section__sortable-item--counter').each(function (index) {\n                    $(this).empty().append(index + 1);\n                });\n            }\n        });\n    }\n\n    sortable();\n\n}\n\nfunction getTopic(collectionId, data, templateData, field, idField, dataUrl) {\n    var dataUrlData = dataUrl + \"/data\";\n\n    $.ajax({\n        url: dataUrlData,\n        dataType: 'json',\n        crossDomain: true,\n        success: function (result) {\n            if (result.type === 'product_page') {\n                if (!data[field]) {\n                    data[field] = [];\n                    templateData[field] = [];\n                }\n            }\n\n            else {\n                sweetAlert(\"This is not a valid document\");\n                createWorkspace(data.uri, collectionId, 'edit');\n                return;\n            }\n\n            data[field].push({uri: result.uri});\n            templateData[field].push({uri: result.uri});\n            saveTopics(collectionId, data.uri, data, templateData, field, idField);\n\n        },\n        error: function () {\n            console.log('No page data returned');\n        }\n    });\n}\n\nfunction resolveTopicTitle(collectionId, data, templateData, field, idField) {\n    var ajaxRequest = [];\n    $(templateData[field]).each(function (index, path) {\n        templateData[field][index].description = {};\n        var eachUri = path.uri;\n        var dfd = $.Deferred();\n        getPageDataTitle(collectionId, eachUri,\n            success = function (response) {\n                templateData[field][index].description.title = response.title;\n                dfd.resolve();\n            },\n            error = function () {\n                sweetAlert(\"Error\", field + ' address: ' + eachUri + ' is not found.', \"error\");\n                dfd.resolve();\n            }\n        );\n        ajaxRequest.push(dfd);\n    });\n\n    $.when.apply($, ajaxRequest).then(function () {\n        refreshTopics(collectionId, data, templateData, field, idField);\n    });\n}\n\nfunction saveTopics(collectionId, path, data, templateData, field, idField) {\n    putContent(collectionId, path, JSON.stringify(data),\n        success = function (response) {\n            console.log(\"Updating completed \" + response);\n            Florence.Editor.isDirty = false;\n            resolveTopicTitle(collectionId, data, templateData, field, idField);\n            refreshPreview(path);\n            var iframeEvent = document.getElementById('iframe').contentWindow;\n            iframeEvent.addEventListener('click', Florence.Handler, true);\n        },\n        error = function (response) {\n            if (response.status === 400) {\n                sweetAlert(\"Cannot edit this page\", \"It is already part of another collection.\");\n            }\n            else {\n                handleApiError(response);\n            }\n        }\n    );\n}\n\nfunction isDevOrSandpit () {\n    var hostname = window.location.hostname;\n    var env = {};\n\n    if(hostname.indexOf('develop') > -1) {\n        env.name = 'develop'\n    }\n\n    if(hostname.indexOf('sandpit') > -1) {\n        env.name = 'sandpit'\n    }\n\n    // if((hostname.indexOf('127') > -1) || (hostname.indexOf('localhost')) > -1) {\n    //     env.name = 'localhost'\n    // }\n\n    return env;\n}\n/**\n * Manages links\n * @param collectionId\n * @param data\n * @param field - JSON data key\n * @param idField - HTML id for the template\n */\n\nfunction renderExternalLinkAccordionSection(collectionId, data, field, idField) {\n    var list = data[field];\n    var dataTemplate = {list: list, idField: idField};\n    var html = templates.editorLinks(dataTemplate);\n    $('#' + idField).replaceWith(html);\n\n    // Load\n    $(data[field]).each(function (index) {\n\n        $('#' + idField + '-edit_' + index).click(function () {\n            var uri = data[field][index].uri;\n            var title = data[field][index].title;\n            addEditLinksModal('edit', uri, title, index);\n        });\n\n        // Delete\n        $('#' + idField + '-delete_' + index).click(function () {\n            swal({\n                title: \"Warning\",\n                text: \"Are you sure you want to delete?\",\n                type: \"warning\",\n                showCancelButton: true,\n                confirmButtonText: \"Delete\",\n                cancelButtonText: \"Cancel\",\n                closeOnConfirm: false\n            }, function (result) {\n                if (result === true) {\n                    var position = $(\".workspace-edit\").scrollTop();\n                    Florence.globalVars.pagePos = position + 300;\n                    $(this).parent().remove();\n                    data[field].splice(index, 1);\n                    saveLink(collectionId, data.uri, data, field, idField);\n                    refreshPreview(data.uri);\n                    swal({\n                        title: \"Deleted\",\n                        text: \"This link has been deleted\",\n                        type: \"success\",\n                        timer: 2000\n                    });\n                }\n            });\n        });\n    });\n\n    //Add\n    $('#add-' + idField).click(function () {\n        var position = $(\".workspace-edit\").scrollTop();\n        Florence.globalVars.pagePos = position + 300;\n        addEditLinksModal();\n    });\n\n    function sortable() {\n        $('#sortable-' + idField).sortable({\n            stop: function () {\n                $('#' + idField + ' .edit-section__sortable-item--counter').each(function (index) {\n                    $(this).empty().append(index + 1);\n                });\n            }\n        });\n    }\n\n    sortable();\n\n    function saveLink(collectionId, path, data, field, idField) {\n        putContent(collectionId, path, JSON.stringify(data),\n            success = function () {\n                Florence.Editor.isDirty = false;\n                renderExternalLinkAccordionSection(collectionId, data, field, idField);\n                refreshPreview(data.uri);\n            },\n            error = function (response) {\n                if (response.status === 400) {\n                    sweetAlert(\"Cannot edit this page\", \"It is already part of another collection.\");\n                }\n                else {\n                    handleApiError(response);\n                }\n            }\n        );\n    }\n\n    function addEditLinksModal(mode, uri, title, index) {\n\n        var uri = uri;\n        var title = title;\n\n        if (!data[field]) {\n            data[field] = [];\n        }\n\n        var linkData = {title: title, uri: uri};\n\n        var modal = templates.linkExternalModal(linkData);\n        $('.workspace-menu').append(modal);\n\n        $('#uri-input').change(function () {\n            uri = $('#uri-input').val();\n        });\n        $('#uri-title').change(function () {\n            title = $('#uri-title').val();\n        });\n\n        $('.btn-uri-get').off().click(function () {\n            if (!title) {\n                sweetAlert('You need to enter a title to continue');\n            } else if (uri.match(/\\s/g)) {\n                sweetAlert('Your link cannot contain spaces');\n            } else {\n                if (mode == 'edit') {\n                    data[field][index].uri = uri;\n                    data[field][index].title = title;\n                } else {\n                    data[field].push({uri: uri, title: title});\n                }\n                saveLink(collectionId, data.uri, data, field, idField);\n                $('.modal').remove();\n            }\n        });\n\n        $('.btn-uri-cancel').off().click(function () {\n            $('.modal').remove();\n        });\n\n    }\n}\n\nfunction fileDelete (collectionId, data, field, index) {\n  swal ({\n    title: \"Warning\",\n    text: \"Are you sure you want to delete this file?\",\n    type: \"warning\",\n    showCancelButton: true,\n    confirmButtonText: \"Delete\",\n    cancelButtonText: \"Cancel\",\n    closeOnConfirm: false\n  }, function(result) {\n    if (result === true) {\n      swal({\n        title: \"Deleted\",\n        text: \"This alert has been deleted\",\n        type: \"success\",\n        timer: 2000\n      });\n      var position = $(\".workspace-edit\").scrollTop();\n      Florence.globalVars.pagePos = position;\n      $(this).parent().remove();\n      $.ajax({\n        url: \"/zebedee/content/\" + collectionId + \"?uri=\" + data.uri + '/' + data[field][index].file,\n        type: \"DELETE\",\n        success: function (res) {\n          console.log(res);\n        },\n        error: function (res) {\n          console.log(res);\n        }\n      });\n      data[field].splice(index, 1);\n      updateContent(collectionId, data.uri, JSON.stringify(data));\n    }\n  });\n}\n\nfunction uploadFile(collectionId, data, field, idField, lastIndex, downloadExtensions, onSave) {\n    var position = $(\".workspace-edit\").scrollTop();\n    Florence.globalVars.pagePos = position + 200;\n    var html = templates.uploadFileForm(lastIndex);\n    $('#sortable-' + idField).append(html);\n\n    $('#file-cancel').one('click', function (e) {\n        e.preventDefault();\n        $('#' + lastIndex).remove();\n        onSave(collectionId, data, field, idField);\n    });\n\n    $('#UploadForm').submit(function (e) {\n        e.preventDefault();\n        e.stopImmediatePropagation();\n\n        var formdata = new FormData();\n\n        function showUploadedItem(source) {\n            $('#list').append(source);\n        }\n\n        var file = this[0].files[0];\n        if (!file) {\n            sweetAlert(\"Please select a file to upload\");\n            return;\n        }\n\n        document.getElementById(\"response\").innerHTML = \"Uploading . . .\";\n\n        var fileNameNoSpace = file.name.replace(/[^a-zA-Z0-9\\.]/g, \"\").toLowerCase();\n        uriUpload = data.uri + \"/\" + fileNameNoSpace;\n        var safeUriUpload = checkPathSlashes(uriUpload);\n\n        if (data[field] && data[field].length > 0) {\n            $(data[field]).each(function (i, filesUploaded) {\n                if (filesUploaded.file === fileNameNoSpace || filesUploaded.file === safeUriUpload) {\n                    sweetAlert('This file already exists');\n                    $('#' + lastIndex).remove();\n                    onSave(collectionId, data, field, idField);\n                    formdata = false;  // if not present the existing file was being overwritten\n                    return;\n                }\n            });\n        }\n        if (!!file.name.match(downloadExtensions)) {\n            showUploadedItem(fileNameNoSpace);\n            if (formdata) {\n                formdata.append(\"name\", file);\n            }\n        } else {\n            sweetAlert(\"This file type is not supported\");\n            $('#' + lastIndex).remove();\n            onSave(collectionId, data, field, idField);\n            return;\n        }\n\n        if (formdata) {\n            $.ajax({\n                url: \"/zebedee/content/\" + collectionId + \"?uri=\" + safeUriUpload,\n                type: 'POST',\n                data: formdata,\n                cache: false,\n                processData: false,\n                contentType: false,\n                success: function () {\n                    document.getElementById(\"response\").innerHTML = \"File uploaded successfully\";\n                    if (!data[field]) {\n                        data[field] = [];\n                    }\n                    data[field].push({title: '', file: fileNameNoSpace});\n                    updateContent(collectionId, data.uri, JSON.stringify(data));\n                }\n            });\n        }\n    });\n}\n\n/**\n * Gives the last position when on a page\n */\n\nfunction getLastPosition () {\n  var position = Florence.globalVars.pagePos;\n  if (position > 0) {\n    setTimeout(function() {\n      $(\".workspace-edit\").scrollTop(position + 100);\n    }, 200);\n  }\n}\n\n/**\n *  Get the network speed from zebedee/ping endpoint and output the network health\n **/\n\nfunction networkStatus(ping) {\n    var $good = $('.icon-status--good'),\n        $ok = $('.icon-status--ok'),\n        $poor = $('.icon-status--poor'),\n        $veryPoor = $('.icon-status--very-poor');\n\n    if (ping > 0 && ping < 100) {\n        $('.icon-status div').css({\"opacity\": \"1.0\"});\n    } else if (ping >= 100 && ping < 200) {\n        $good.css({\"opacity\": \"0.2\"});\n        $ok.css({\"opacity\": \"1.0\"});\n        $poor.css({\"opacity\": \"1.0\"});\n        $veryPoor.css({\"opacity\": \"1.0\"});\n    } else if (ping >= 200 && ping < 300) {\n        $good.css({\"opacity\": \"0.2\"});\n        $ok.css({\"opacity\": \"0.2\"});\n        $poor.css({\"opacity\": \"1.0\"});\n        $veryPoor.css({\"opacity\": \"1.0\"});\n    } else if (ping >= 300) {\n        $good.css({\"opacity\": \"0.2\"});\n        $ok.css({\"opacity\": \"0.2\"});\n        $poor.css({\"opacity\": \"0.2\"});\n        $veryPoor.css({\"opacity\": \"1.0\"});\n    }\n}function getParentPage (url) {\n  var checkedUrl = checkPathSlashes(url);\n  var contentUrlTmp = checkedUrl.split('/');\n  contentUrlTmp.splice(-1, 1);\n  var contentUrl = contentUrlTmp.join('/');\n  return contentUrl;\n}\nfunction getPathNameTrimLast() {\n  var parsedUrl = document.getElementById('iframe').contentWindow.location.pathname;\n\n  if (parsedUrl.charAt(parsedUrl.length-1) === '/') {\n    parsedUrl = parsedUrl.slice(0, -1);\n  }\n  return parsedUrl;\n}\n\nfunction getPreviewUrl() {\n  var parsedUrl = document.getElementById('iframe').contentWindow.location.pathname;\n  var safeUrl = checkPathSlashes(parsedUrl);\n  return safeUrl;\n}\n\n/**\n * Generic error handler method for ajax responses.\n * Apply your specific requirements for an error response and then call this method to take care of the rest.\n * @param response\n */\nfunction handleApiError(response) {\n\n    if (!response || response.status === 200)\n        return;\n\n    if (response.status === 403 || response.status === 401) {\n        //sweetAlert('You are not logged in', 'Please refresh Florence and log back in.');\n        logout();\n    } else if (response.status === 504) {\n        sweetAlert('This task is taking longer than expected', \"It will continue to run in the background.\", \"info\");\n    } else {\n        var message = 'An error has occurred, please contact an administrator.';\n\n        if (response.responseJSON) {\n            message = response.responseJSON.message;\n        }\n\n        console.log(message);\n        sweetAlert(\"Error\", message, \"error\");\n    }\n}\n\n/* Unique error handling for the login screen */\nfunction handleLoginApiError(response) {\n\n    if (!response || response.status === 200)\n        return;\n\n    if (response.status === 400) {\n        sweetAlert(\"Please enter a valid username and password\");\n        logout();\n    } else if (response.status === 403 || response.status === 401) {\n        sweetAlert('Incorrect login details', 'These login credentials were not recognised. Please try again.', 'error');\n        logout();\n    } else {\n        var message = 'An error has occurred, please contact an administrator.';\n\n        if (response.responseJSON) {\n            message = response.responseJSON.message;\n        }\n\n        console.log(message);\n        sweetAlert(\"Error\", message, \"error\");\n    }\n}\nfunction initialiseLastNoteMarkdown(collectionId, data, field, field2) {\n  // Load\n  var lastIndex = data[field].length - 1;\n  var editedSectionValue = '';\n  var saveContent = function (updatedContent) {\n    data[field][lastIndex][field2] = updatedContent;\n    putContent(collectionId, data.uri, JSON.stringify(data),\n      success = function () {\n        Florence.Editor.isDirty = false;\n        loadPageDataIntoEditor(data.uri, collectionId);\n        refreshPreview(data.uri);\n      },\n      error = function (response) {\n        if (response.status === 400) {\n          sweetAlert(\"Cannot edit this page\", \"It is already part of another collection.\");\n        }\n        else {\n          handleApiError(response);\n        }\n      }\n    );\n  };\n  loadMarkdownEditor(editedSectionValue, saveContent, data, 'notEmpty');\n}\n/**\n * Validate an inputs value before it's submitted to the server\n */\n\nfunction validatePageName(customSelector) {\n    var $inputSelector = $('#pagename');\n    var isCustomSelector;\n    var bool = true;\n\n    // Allow other inputs to use same validation (eg edition)\n    if (customSelector) {\n        $inputSelector = $(customSelector);\n        isCustomSelector = true;\n    }\n\n    // Do validation\n    if ($inputSelector.val().toLowerCase() === 'current' || $inputSelector.val().toLowerCase() === 'latest' || $inputSelector.val().toLowerCase() === 'data') { // Check for reserved words (ie endpoints in zebedee/babbage)\n        sweetAlert({\n            title: \"Invalid page name\",\n            text: \"The words 'current', 'latest' and 'data' are reserved paths so can't be used as a page name\",\n            type: \"warning\"\n        });\n        $inputSelector.val('');\n        bool = false;\n    } else if (!$inputSelector.val()) { // Check inputs contains something\n        sweetAlert({\n            title: \"Page name can't be left empty\",\n            type: \"warning\"\n        });\n        bool = false;\n    } else if ($inputSelector.val().length < 5 && !isCustomSelector) { // Check page name length is longer than 4 characters\n        sweetAlert({\n            title: \"Invalid page name\",\n            text: \"A page name must have more than 4 characters\",\n            type: \"warning\"\n        });\n        bool = false;\n    }\n    \n    return bool\n}\nfunction loadBrowseScreen(collectionId, click, collectionData) {\n\n    // Get collection data if it's undefined and re-run the function once request has returned\n    if (!collectionData) {\n        getCollection(collectionId, success = function(getCollectionResponse) {\n                loadBrowseScreen(collectionId, click, getCollectionResponse);\n            }, error = function() {\n                console.log('Error getting collection data for: ', collectionId);\n            });\n\n        return false;\n    }\n\n    return $.ajax({\n        url: \"/zebedee/collectionBrowseTree/\" + collectionId, // url: \"/navigation\",\n        dataType: 'json',\n        type: 'GET',\n        success: function (response) {\n\n            checkAndAddDeleteFlag(response, collectionData);\n\n            // var collectionOwner = localStorage.getItem('userType');\n            response['collectionOwner'] = localStorage.getItem('userType');\n\n            // var browserContent = $('#iframe')[0].contentWindow;\n            var html = templates.workBrowse(response);\n            var browseTree = document.getElementById('browse-tree');\n            browseTree.innerHTML = html;\n\n            $('.workspace-browse').css(\"overflow\", \"scroll\");\n\n            // Send visualisations back to visualisations folder by default on browse tree load\n            // if (collectionOwner == \"DATA_VISUALISATION\") {\n            //     var visDirectory = \"/visualisations\";\n            //     treeNodeSelect(visDirectory);\n            // }\n\n            // Bind click event for browse tree item\n            bindBrowseTreeClick();\n\n            if (click) {\n                var url = getPreviewUrl();\n                if (url === \"/blank\" || response['collectionOwner'] == 'DATA_VISUALISATION') {\n                    treeNodeSelect('/');\n                } else {\n                    treeNodeSelect(url);\n                }\n            } else {\n                treeNodeSelect('/');\n\n            }\n\n            // Switch to browse tab (if not already)\n            var $browseTab = $('#browse');\n            if (!$browseTab.hasClass('selected')) {\n                $('.js-workspace-nav .js-workspace-nav__item').removeClass('selected');\n                $browseTab.addClass('selected');\n            }\n\n            openVisDirectoryOnLoad();\n\n        },\n        error: function (response) {\n            handleApiError(response);\n        }\n    });\n\n}\n\n// Bind the actions for a click on a browse tree item\nfunction bindBrowseTreeClick() {\n    $('.js-browse__item-title').click(function () {\n        var $this = $(this),\n            $thisItem = $this.closest('.js-browse__item'),\n            uri = $thisItem.attr('data-url'),\n            baseURL = Florence.babbageBaseUrl,\n            isDataVis = localStorage.getItem('userType') == 'DATA_VISUALISATION';\n\n        if (uri) {\n            var newURL = baseURL + uri;\n\n            treeNodeSelect(newURL);\n\n            // Data vis browsing doesn't update iframe\n            if (isDataVis) {\n                return false\n            }\n\n            // Update iframe location which will send change event for iframe to update too\n            document.getElementById('iframe').contentWindow.location.href = newURL;\n            $('.browser-location').val(newURL);\n\n        } else {\n\n            // Set all directories above it in the tree to be active when a directory clicked\n            selectParentDirectories($this);\n        }\n\n        // Open active branches in browse tree\n        openBrowseBranch($this);\n    });\n}\n\nfunction openBrowseBranch($this) {\n    $('.tree-nav-holder ul').removeClass('active');\n    $this.parents('ul').addClass('active');\n    $this.closest('li').children('ul').addClass('active');\n}\n\nfunction openVisDirectoryOnLoad() {\n    var userType = Florence.Authentication.userType();\n\n    if (userType == 'DATA_VISUALISATION') {\n        $('.js-browse__item .page__container').removeClass('selected');\n        $('.page__buttons--list.selected').removeClass('selected');\n        var $this = $('.datavis-directory');\n        $this.next('.page__buttons--list').addClass('selected')\n            .closest('.page__container').addClass('selected')\n            .next('.js-browse__children').addClass('active');\n    }\n}\n\n// recursively add isDeletable and deleteIsInCollection flags to all browse tree nodes\nfunction checkAndAddDeleteFlag(browseTree, collectionData) {\n    browseTree['isDeletable'] = isDeletable(browseTree.type);\n    browseTree['deleteIsInCollection'] = deleteIsInCollection(browseTree.contentPath, collectionData);\n\n    $.each(browseTree.children, function( key, browseTreeNode ) {\n        if (browseTreeNode.children) {\n            checkAndAddDeleteFlag(browseTreeNode, collectionData);\n        }\n    });\n}\n\n// set deletable flag to false for certain page types\nfunction isDeletable(type) {\n    if (type == 'home_page' || type == 'taxonomy_landing_page' || type == 'product_page') {\n        return false;\n    } else {\n        return true;\n    }\n}\n\n// check if given uri is marked for deletion in current collection\nfunction deleteIsInCollection(uri, collectionData) {\n    var bool;\n    if (collectionData.pendingDeletes) {\n        $.each(collectionData.pendingDeletes, function (key, deleteMarker) {\n            if (uri == deleteMarker.root.uri) {\n                bool = true;\n                return false;\n            } else {\n                bool = false;\n            }\n        });\n    }\n    return bool;\n}\n\n// display open directory icon for parents directories\nfunction selectParentDirectories($this) {\n    $('.page__item--directory').removeClass('selected'); // remove previous selections\n    $this.parents('.js-browse__item--directory').find('.page__item--directory:first').addClass('selected'); // select directories along parent path\n}\n\nfunction loadChartBuilder(pageData, onSave, chart) {\n    var chart = chart;\n    var pageUrl = pageData.uri;\n    var html = templates.chartBuilder(chart);\n    $('body').append(html);\n    $('.js-chart-builder').css(\"display\", \"block\");\n\n    if (chart) {\n        $('#chart-data').val(toTsv(chart));\n        refreshExtraOptions();\n    }\n\n    renderText();\n    renderChart();\n\n    function refreshExtraOptions() {\n        var template = getExtraOptionsTemplate(chart.chartType);\n        if (template) {\n            var html = template(chart);\n            $('#extras').html(html);\n        } else {\n            $('#extras').empty();\n        }\n    }\n\n    function getExtraOptionsTemplate(chartType) {\n        switch (chartType) {\n            case 'barline':\n            case 'rotated-barline':\n                return templates.chartEditBarlineExtras;\n            case 'dual-axis':\n                return templates.chartEditDualAxisExtras;\n            case 'line':\n                return templates.chartEditLineChartExtras;\n            case 'bar':\n            case 'rotated':\n                return templates.chartEditBarChartExtras;\n            default:\n                return;\n        }\n    }\n\n    $('.refresh-chart').on('input', function () {\n        chart = buildChartObject();\n        refreshExtraOptions();\n        renderChart();\n    });\n\n    $('.refresh-chart').on('change', ':checkbox', function () {\n        chart = buildChartObject();\n        refreshExtraOptions();\n        renderChart();\n    });\n\n\n    $('.refresh-text').on('input', function () {\n        renderText();\n    });\n\n    $('.btn-chart-builder-cancel').on('click', function () {\n        $('.js-chart-builder').stop().fadeOut(200).remove();\n    });\n\n    $('.btn-chart-builder-create').on('click', function () {\n\n        chart = buildChartObject();\n\n        var jsonPath = chart.uri + \".json\";\n        $.ajax({\n            url: \"/zebedee/content/\" + Florence.collection.id + \"?uri=\" + jsonPath,\n            type: 'POST',\n            data: JSON.stringify(chart),\n            processData: false,\n            contentType: 'application/json',\n            success: function (res) {\n\n                if (!pageData.charts) {\n                    pageData.charts = [];\n                }\n\n                existingChart = _.find(pageData.charts, function (existingChart) {\n                    return existingChart.filename === chart.filename;\n                });\n\n                if (existingChart) {\n                    existingChart.title = chart.title;\n                } else {\n                    pageData.charts.push({\n                        title: chart.title,\n                        filename: chart.filename,\n                        uri: chart.uri\n                    });\n                }\n\n                if (onSave) {\n                    onSave(chart.filename, '<ons-chart path=\"' + chart.filename + '\" />');\n                }\n                $('.js-chart-builder').stop().fadeOut(200).remove();\n            }\n        });\n    });\n\n    setShortcuts('#chart-title', renderText);\n    setShortcuts('#chart-subtitle', renderText);\n    setShortcuts('#chart-data', renderChart);\n    setShortcuts('#chart-x-axis-label', renderChart);\n    setShortcuts('#chart-notes', renderText);\n\n    //Renders html outside actual chart area (title, subtitle, source, notes etc.)\n    function renderText() {\n        var title = doSuperscriptAndSubscript($('#chart-title').val());\n        var subtitle = doSuperscriptAndSubscript($('#chart-subtitle').val());\n        $('#chart-source-preview').html($('#chart-source').val());\n        $('#chart-title-preview').html(title);\n        $('#chart-subtitle-preview').html(subtitle);\n        $('#chart-notes-preview').html(toMarkdown($('#chart-notes').val()));\n    }\n\n    function toMarkdown(text) {\n        if (text && isMarkdownAvailable) {\n            var converter = new Markdown.getSanitizingConverter();\n            Markdown.Extra.init(converter, {\n                extensions: \"all\"\n            });\n            return converter.makeHtml(text)\n        }\n        return '';\n    }\n\n    function isMarkdownAvailable() {\n        return typeof Markdown !== 'undefined'\n    }\n\n    function doSuperscriptAndSubscript(text) {\n        if (text && isMarkdownAvailable) {\n            var converter = new Markdown.Converter();\n            return converter._DoSubscript(converter._DoSuperscript(text));\n        }\n        return text;\n\n    }\n\n    // Builds, parses, and renders our chart in the chart editor\n    function renderChart() {\n        chart = buildChartObject();\n        var preview = $('#chart');\n        var chartHeight = preview.width() * chart.aspectRatio;\n        var chartWidth = preview.width();\n        renderChartObject('chart', chart, chartHeight, chartWidth);\n    }\n\n    function buildChartObject() {\n        var json = $('#chart-data').val();\n        if (!chart) {\n            chart = {};\n        }\n\n        chart.type = \"chart\";\n        chart.title = $('#chart-title').val();\n        chart.filename = chart.filename ? chart.filename : StringUtils.randomId(); //  chart.title.replace(/[^A-Z0-9]+/ig, \"\").toLowerCase();\n        chart.uri = pageUrl + \"/\" + chart.filename;\n        chart.subtitle = $('#chart-subtitle').val();\n        chart.unit = $('#chart-unit').val();\n        chart.source = $('#chart-source').val();\n\n        chart.decimalPlaces = $('#chart-decimal-places').val();\n        chart.labelInterval = $('#chart-label-interval').val();\n\n        chart.notes = $('#chart-notes').val();\n        chart.altText = $('#chart-alt-text').val();\n        chart.xAxisLabel = $('#chart-x-axis-label').val();\n        chart.startFromZero = $('#start-from-zero').prop('checked');\n        chart.finishAtHundred = $('#finish-at-hundred').prop('checked');\n\n        if (chart.title === '') {\n            chart.title = '[Title]'\n        }\n\n        chart.data = tsvJSON(json);\n        chart.headers = tsvJSONHeaders(json);\n        chart.series = tsvJSONColNames(json);\n        chart.categories = tsvJSONRowNames(json);\n\n        chart.aspectRatio = $('#aspect-ratio').val();\n\n        if (isShowBarLineSelection(chart.chartType)) {\n            var types = {};\n            var groups = [];\n            var group = [];\n            var seriesData = chart.series;\n            $.each(seriesData, function (index) {\n                types[seriesData[index]] = $('#types_' + index).val() || 'bar';\n            });\n            (function () {\n                $('#extras input:checkbox:checked').each(function () {\n                    group.push($(this).val());\n                });\n                groups.push(group);\n                return groups;\n            })();\n            chart.chartTypes = types;\n            chart.groups = groups;\n        }\n\n        chart.chartType = $('#chart-type').val();\n\n        //console.log(chart);\n        parseChartObject(chart);\n\n        chart.files = [];\n        //chart.files.push({ type:'download-png', filename:chart.filename + '-download.png' });\n        //chart.files.push({ type:'png', filename:chart.filename + '.png' });\n\n        return chart;\n    }\n\n    //Determines if selected chart type is barline or rotated bar line\n    function isShowBarLineSelection(chartType) {\n        return (chartType === 'barline' || chartType === \"rotated-barline\" || chartType === \"dual-axis\");\n    }\n\n    function parseChartObject(chart) {\n\n        // Determine if we have a time series\n        var timeSeries = axisAsTimeSeries(chart.categories);\n        if (timeSeries && timeSeries.length > 0) {\n            chart.isTimeSeries = true;\n\n            // We create data specific to time\n            timeData = [];\n            _.each(timeSeries, function (time) {\n                var item = chart.data[time['row']];\n                item.date = time['date'];\n                item.label = time['label'];\n                timeData.push(item);\n            });\n\n            chart.timeSeries = timeData;\n        }\n    }\n\n    //// Converts chart to highcharts configuration by posting Babbage /chartconfig endpoint and to the rendering with fetched configuration\n    function renderChartObject(bindTag, chart, chartHeight, chartWidth) {\n\n        var jqxhr = $.post(\"/chartconfig\", {\n                data: JSON.stringify(chart),\n                width: chartWidth\n            },\n            function () {\n                var chartConfig = window[\"chart-\" + chart.filename];\n                console.debug(\"Refreshing the chart, config:\", chartConfig);\n                if (chartConfig) {\n                    chartConfig.chart.renderTo = \"chart\";\n                    new Highcharts.Chart(chartConfig);\n                    delete window[\"chart-\" + chart.filename]; //clear data from window object after rendering\n                }\n            }, \"script\")\n            .fail(function (data, err) {\n                console.error(err);\n                console.log(\"Failed reading chart configuration from server\", chart);\n                $(\"#chart\").empty();\n            });\n    }\n\n    // Data load from text box functions\n    function tsvJSON(input) {\n        var lines = input.split(\"\\n\");\n        var result = [];\n        var headers = lines[0].split(\"\\t\");\n\n        for (var i = 1; i < lines.length; i++) {\n            var obj = {};\n            var currentline = lines[i].split(\",\").join(\"\").split(\"\\t\");\n\n            for (var j = 0; j < headers.length; j++) {\n                obj[headers[j]] = currentline[j];\n            }\n            result.push(obj);\n        }\n        return result; //JSON\n    }\n\n    function toTsv(data) {\n        var output = \"\";\n\n        for (var i = 0; i < data.headers.length; i++) {\n            if (i === data.headers.length - 1) {\n                output += data.headers[i];\n            } else {\n                output += data.headers[i] + \"\\t\";\n            }\n        }\n\n        for (var i = 0; i < data.categories.length; i++) {\n            output += \"\\n\" + toTsvLine(data.data[i], data.headers);\n        }\n\n        return output;\n    }\n\n    function toTsvLine(data, headers) {\n\n        var output = \"\";\n\n        for (var i = 0; i < headers.length; i++) {\n            if (i === headers.length - 1) {\n                output += data[headers[i]];\n            } else {\n                output += data[headers[i]] + \"\\t\";\n            }\n        }\n        return output;\n    }\n\n    function tsvJSONRowNames(input) {\n        var lines = input.split(\"\\n\");\n        var result = [];\n\n        for (var i = 1; i < lines.length; i++) {\n            var currentline = lines[i].split(\"\\t\");\n            result.push(currentline[0]);\n        }\n        return result\n    }\n\n    function tsvJSONColNames(input) {\n        var lines = input.split(\"\\n\");\n        var headers = lines[0].split(\"\\t\");\n        headers.shift();\n        return headers;\n    }\n\n    function tsvJSONHeaders(input) {\n        var lines = input.split(\"\\n\");\n        var headers = lines[0].split(\"\\t\");\n        return headers;\n    }\n\n    function exportToSVG(sourceSelector) {\n        var svgContainer = $(sourceSelector);\n        var svg = svgContainer.find('svg');\n\n        var styleContent = \"\\n\";\n        for (var i = 0; i < document.styleSheets.length; i++) {\n            str = document.styleSheets[i].href.split(\"/\");\n            if (str[str.length - 1] == \"c3.css\") {\n                var rules = document.styleSheets[i].rules;\n                for (var j = 0; j < rules.length; j++) {\n                    styleContent += (rules[j].cssText + \"\\n\");\n                }\n                break;\n            }\n        }\n\n        //var style = document.createElementNS(\"http://www.w3.org/2000/svg\", \"style\");\n        //$(style).textContent += \"\\n<![CDATA[\\n\" + styleContent + \"\\n]]>\\n\";\n        //\n        //svg.prepend(style);\n        //svg[0].getElementsByTagName(\"defs\")[0].appendChild(style);\n\n\n        svg.prepend(\"\\n<style type='text/css'></style>\");\n        svg.find(\"style\").textContent += \"\\n<![CDATA[\" + styleContent + \"]]>\\n\";\n\n\n        //if ($('#chart-type').val() === 'line') {\n        //  $('.c3 line').css(\"fill\", \"none\");\n        //  console.log($('.c3 line'))\n        //}\n\n        var source = (new XMLSerializer).serializeToString(svg[0]);\n        //console.log(source);\n\n        //add name spaces.\n        if (!source.match(/^<svg[^>]+xmlns=\"http\\:\\/\\/www\\.w3\\.org\\/2000\\/svg\"/)) {\n            source = source.replace(/^<svg/, '<svg xmlns=\"http://www.w3.org/2000/svg\"');\n        }\n        if (!source.match(/^<svg[^>]+\"http\\:\\/\\/www\\.w3\\.org\\/1999\\/xlink\"/)) {\n            source = source.replace(/^<svg/, '<svg xmlns:xlink=\"http://www.w3.org/1999/xlink\"');\n        }\n        //add padding\n        source = source.replace(/style=\"overflow: hidden;\"/, 'style=\"overflow: hidden; padding: 50px;\"');\n\n        //add xml declaration\n        source = '<?xml version=\"1.0\" standalone=\"no\"?>\\r\\n' + source;\n\n        return source;\n    }\n\n\n    // Steps through time series points\n    function axisAsTimeSeries(axis) {\n        var result = [];\n        var rowNumber = 0;\n\n        _.each(axis, function (tryTimeString) {\n            var time = convertTimeString(tryTimeString);\n            if (time) {\n                time.row = rowNumber;\n                rowNumber = rowNumber + 1;\n\n                result.push(time);\n            } else {\n                return null;\n            }\n        });\n        return result;\n    }\n\n    function convertTimeString(timeString) {\n        // First time around parse the time string according to rules from regular timeseries\n        var result = {};\n        result.label = timeString;\n\n        // Format time string\n        // Check for strings that will turn themselves into a strange format\n        twoDigitYearEnd = timeString.match(/\\W\\d\\d$/);\n        if (twoDigitYearEnd !== null) {\n            year = parseInt(timeString.substr(timeString.length - 2, timeString.length));\n            prefix = timeString.substr(0, timeString.length - 2).trim();\n\n            if (year >= 40) {\n                timeString = prefix + \" 19\" + year;\n            } else {\n                timeString = prefix + \" 20\" + year;\n            }\n        }\n\n        // Check for quarters\n        quarter = timeString.match(/Q\\d/);\n        year = timeString.match(/\\d\\d\\d\\d/);\n        if ((quarter !== null) && (year !== null)) {\n            months = [\"February \", \"May \", \"August \", \"November \"];\n            quarterMid = parseInt(quarter[0][1]);\n            timeString = months[quarterMid - 1] + year[0];\n        }\n\n        // We are going with all times in a common format\n        var date = new Date(timeString);\n        if (!isNaN(date.getTime())) {\n            result.date = date;\n            result.period = 'other';\n            return result;\n        }\n\n        return (null);\n    }\n\n    function generatePng(sourceSelector, canvasSelector, fileSuffix) {\n\n        var preview = $(sourceSelector);\n        var chartHeight = preview.height();\n        var chartWidth = preview.width();\n\n        var content = exportToSVG(sourceSelector).trim();\n\n        var $canvas = $(canvasSelector);\n        $canvas.width(chartWidth);\n        $canvas.height(chartHeight);\n\n        var canvas = $canvas.get(0);\n\n        // Draw svg on canvas\n        canvg(canvas, content);\n\n        // get data url from canvas.\n        var dataUrl = canvas.toDataURL('image/png');\n        var pngData = dataUrl.replace(/^data:image\\/(png|jpg);base64,/, \"\");\n        //console.log(dataUrl);\n\n        var raw = window.atob(pngData);\n        var rawLength = raw.length;\n        var array = new Uint8Array(new ArrayBuffer(rawLength));\n\n        for (var i = 0; i < rawLength; i++) {\n            array[i] = raw.charCodeAt(i);\n        }\n\n        var suffix = \"\";\n\n        if (fileSuffix) {\n            suffix = fileSuffix\n        }\n\n        var pngUri = pageUrl + \"/\" + chart.filename + suffix + \".png\";\n        $.ajax({\n            url: \"/zebedee/content/\" + Florence.collection.id + \"?uri=\" + pngUri,\n            type: 'POST',\n            data: new Blob([array], {\n                type: 'image/png'\n            }),\n            contentType: \"image/png\",\n            processData: false,\n            success: function (res) {\n                //console.log('png uploaded!');\n            }\n        });\n    }\n}// fully load the charts list from scratch\nfunction loadChartsList(collectionId, data) {\n    var html = templates.workEditCharts(data);\n    $('#charts').replaceWith(html);\n    initialiseChartList(collectionId, data);\n    initialiseClipboard();\n}\n\n// refresh only the list of charts - leaving the container div that accordion works from.\nfunction refreshChartList(collectionId, data) {\n    var html = templates.workEditCharts(data);\n    $('#chart-list').replaceWith($(html).find('#chart-list'));\n    initialiseChartList(collectionId, data);\n    initialiseClipboard();\n}\n\n// do all the wiring up of buttons etc once the template has been rendered.\nfunction initialiseChartList(collectionId, data) {\n\n    $('#add-chart').click(function () {\n        loadChartBuilder(data, function () {\n            refreshPreview();\n\n            putContent(collectionId, data.uri, JSON.stringify(data),\n                success = function () {\n                    Florence.Editor.isDirty = false;\n                    refreshPreview();\n                    refreshChartList(collectionId, data);\n                },\n                error = function (response) {\n                    handleApiError(response);\n                }\n            );\n        });\n    });\n\n    $(data.charts).each(function (index, chart) {\n\n        var basePath = data.uri;\n        var chartPath = basePath + '/' + chart.filename;\n        var chartJson = chartPath;\n\n        $(\"#chart-edit_\" + index).click(function () {\n            getPageData(collectionId, chartJson,\n                onSuccess = function (chartData) {\n\n                    loadChartBuilder(data, function () {\n                        refreshPreview();\n\n                        putContent(collectionId, basePath, JSON.stringify(data),\n                            success = function () {\n                                Florence.Editor.isDirty = false;\n                                refreshPreview();\n                                refreshChartList(collectionId, data);\n                            },\n                            error = function (response) {\n                                handleApiError(response);\n                            }\n                        );\n                    }, chartData);\n                })\n        });\n\n        $(\"#chart-delete_\" + index).click(function () {\n            swal({\n                title: \"Warning\",\n                text: \"Are you sure you want to delete this chart?\",\n                type: \"warning\",\n                showCancelButton: true,\n                confirmButtonText: \"Delete\",\n                cancelButtonText: \"Cancel\",\n                closeOnConfirm: false\n            }, function (result) {\n                if (result === true) {\n                    $(this).parent().remove();\n                    data.charts = _(data.charts).filter(function (item) {\n                        return item.filename !== chart.filename\n                    });\n                    putContent(collectionId, basePath, JSON.stringify(data),\n                        success = function () {\n                            deleteContent(collectionId, chartJson + '.json', onSuccess = function () {\n                            }, onError = function () {\n                            });\n                            Florence.Editor.isDirty = false;\n                            swal({\n                                title: \"Deleted\",\n                                text: \"This chart has been deleted\",\n                                type: \"success\",\n                                timer: 2000\n                            });\n                            refreshChartList(collectionId, data);\n                        },\n                        error = function (response) {\n                            handleApiError(response);\n                        }\n                    );\n                }\n            });\n        });\n    });\n    // Make sections sortable\n    function sortable() {\n        $('#sortable-chart').sortable();\n    }\n\n    sortable();\n}\n\n\nfunction loadCreateScreen(parentUrl, collectionId, type, collectionData) {\n    var isDataVis = false; // Flag for template to show correct options in select\n\n    // Load data vis creator or ordinary publisher creator\n    if (collectionData && collectionData.collectionOwner == \"DATA_VISUALISATION\") {\n        isDataVis = true;\n        type = 'visualisation';\n    }\n\n    var html = templates.workCreate({\"dataVis\": isDataVis});\n\n    $('.workspace-menu').html(html);\n    loadCreator(parentUrl, collectionId, type, collectionData);\n    $('#pagetype').focus();\n}\nfunction loadCreator(parentUrl, collectionId, type, collectionData) {\n    var $typeSelect = $('#pagetype'),\n        pageType,\n        releaseDate;\n\n    getCollection(collectionId,\n        success = function (response) {\n            if (!response.publishDate) {\n                releaseDate = null;\n            } else {\n                releaseDate = response.publishDate;\n            }\n        },\n        error = function (response) {\n            handleApiError(response);\n        }\n    );\n\n    //releaseDate = Florence.collection.date;             //to be added back to scheduled collections\n\n    if (type === 'bulletin' || type === 'article') {\n        $typeSelect.val(type).change();\n        loadT4Creator(collectionId, releaseDate, type, parentUrl);\n    } else if (type === 'compendium_landing_page') {\n        $typeSelect.val(type).change();\n        loadT6Creator(collectionId, releaseDate, type, parentUrl);\n    } else if (type === 'visualisation') {\n        $typeSelect.val(type).change();\n        loadVisualisationCreator(collectionId, type, collectionData);\n    } else {\n        $typeSelect.off().change(function () {\n            pageType = $(this).val();\n            $('.edition').empty();\n            $('.create-publishing-error').remove();\n\n            if (pageType === 'bulletin' || pageType === 'article' || pageType === 'article_download') {\n                loadT4Creator(collectionId, releaseDate, pageType, parentUrl);\n            }\n            else if (pageType.match(/compendium_.+/)) {\n                loadT6Creator(collectionId, releaseDate, pageType, parentUrl);\n            }\n            else if (pageType.match(/static_.+/)) {\n                loadT7Creator(collectionId, releaseDate, pageType, parentUrl);\n            }\n            else if (pageType === 'dataset_landing_page' || pageType === 'timeseries_landing_page') {\n                loadT8Creator(collectionId, releaseDate, pageType, parentUrl);\n            } else if (pageType === 'visualisation') {\n                console.log('Visualisation');\n\n            } else if (pageType === 'release') {\n                loadT16Creator(collectionId, releaseDate, pageType, parentUrl);\n            }\n            else {\n                sweetAlert(\"Error\", 'Page type not recognised. Contact an administrator', \"error\");\n            }\n        });\n    }\n}\n\n\n\n/*\n*   Loads datepicker with correct format and moves focus to next form element on selection\n */\n\nfunction creatorDatePicker() {\n    $('#releaseDate').datepicker({\n        dateFormat: 'dd MM yy',\n        onSelect: function() {\n            nextFormElement();\n        }\n    });\n}\n\nfunction nextFormElement() {\n    var $dateInput = $('#releaseDate');\n\n    if ($dateInput.nextUntil('input, select, textarea, button').length) {\n        $dateInput.nextUntil('input, select, textarea, button').focus();\n        console.log('sibling', $dateInput.nextUntil('input, select, textarea, button'));\n    } else if ($dateInput.closest('.edition').nextUntil('input, select, textarea, button').length) {\n        $dateInput.closest('.edition').nextUntil('input, select, textarea, button').focus();\n        console.log('parents sibling', $dateInput.closest('.edition').nextUntil('input, select, textarea, button'));\n    } else {\n        console.log('No following inputs');\n    }\n}\n/**\n * Created by crispin on 10/12/2015.\n */\nfunction loadEmbedIframe(onSave) {\n    // add modal window\n    $('.workspace-menu').append(templates.embedIframe());\n\n    // variables\n    var modal = $(\".modal\");\n\n    // modal functions\n    function closeModal() {\n        modal.remove();\n    }\n    function saveUrl() {\n        var embedUrl = $('input#embed-url').val();\n        if (!embedUrl) {\n            console.log(\"No url added\");\n            sweetAlert('URL field is empty', 'Please add a url and save again');\n        } else {\n            onSave('<ons-interactive url=\"' + embedUrl + '\" />');\n            modal.remove();\n        }\n    }\n\n    // bind events\n    $('.btn-embed-cancel').click(function() {\n        closeModal();\n    });\n    $('.btn-embed-save').click(function() {\n        saveUrl();\n    });\n    modal.keyup(function(e) {\n        if (e.keyCode == 27) { //close on esc key\n            closeModal()\n        }\n        if (e.keyCode == 13) { //save on enter key\n            saveUrl();\n        }\n    });\n}function loadEquationBuilder(pageData, onSave, equation) {\n  var equation = equation;\n  var pageUrl = pageData.uri;\n  var html = templates.equationBuilder(equation);\n\n  var renderingPreview = false;\n\n  $('body').append(html);\n  $('.js-equation-builder').css(\"display\", \"block\");\n\n  $('.btn-equation-builder-cancel').on('click', function () {\n    $('.js-equation-builder').stop().fadeOut(200).remove();\n  });\n\n  // if editing existing equation render preview straight away\n  if (equation) {\n    var contentStr = equation.content;\n    renderPreview(contentStr);\n  }\n\n  // on change of content filed re-render preview\n  var timeout;\n  $('#equation-content').keyup(function () {\n\n    if (!renderingPreview) {\n      clearTimeout(timeout);\n      var contentStr = $(this).val();\n      timeout = setTimeout(function () {\n        renderPreview(contentStr);\n      }, 100);\n    }\n\n  });\n\n\n  // save equation\n  $('.btn-equation-builder-create').on('click', function () {\n\n    equation = buildEquationObject();\n\n    var jsonPath = equation.uri + \".json\";\n    $.ajax({\n      url: \"/zebedee/equation/\" + Florence.collection.id + \"?uri=\" + jsonPath,\n      type: 'POST',\n      data: JSON.stringify(equation),\n      processData: false,\n      contentType: 'application/json',\n      success: function () {\n\n        if (!pageData.equations) {\n          pageData.equations = [];\n        }\n\n        existingEquation = _.find(pageData.equations, function (existingEquation) {\n          return existingEquation.filename === equation.filename;\n        });\n\n        if (existingEquation) {\n          existingEquation.title = equation.title;\n        } else {\n          pageData.equations.push({\n            title: equation.title,\n            filename: equation.filename,\n            uri: equation.uri\n          });\n        }\n\n        if (onSave) {\n          onSave(equation.filename, '<ons-equation path=\"' + equation.filename + '\" />');\n        }\n        $('.js-equation-builder').stop().fadeOut(200).remove();\n        refreshEquationsList(Florence.collection.id, pageData);\n      }\n    });\n  });\n\n  function buildEquationObject() {\n    if (!equation) {\n      equation = {};\n    }\n\n    equation.type = \"equation\";\n    equation.filename = equation.filename ? equation.filename : StringUtils.randomId();\n    equation.uri = pageUrl + \"/\" + equation.filename;\n    equation.title = $('#equation-title').val();\n    equation.content = $('#equation-content').val();\n\n    return equation;\n  }\n\n\n  function renderPreview(content) {\n    renderingPreview = true;\n    var svg;\n    $.ajax({\n      url: \"/zebedee/equationpreview/\",\n      type: 'POST',\n      contentType: 'text/plain',\n      crossDomain: true,\n      data: JSON.stringify(content),\n      success: function (data) {\n        svg = data;\n        $(\".js-equation-preview\").html(svg);\n        renderingPreview = false;\n      },\n      error: function () {\n        renderingPreview = false;\n      }\n    });\n  }\n\n}// fully load the equations list from scratch\nfunction loadEquationsList(collectionId, data) {\n    var html = templates.workEditEquations(data);\n    $('#equations').replaceWith(html);\n    initialiseEquationList(collectionId, data);\n    initialiseClipboard();\n}\n\n// refresh only the list of equations - leaving the container div that accordion works from.\nfunction refreshEquationsList(collectionId, data) {\n    var html = templates.workEditEquations(data);\n    $('#equation-list').replaceWith($(html).find('#equation-list'));\n    initialiseEquationList(collectionId, data);\n    initialiseClipboard();\n}\n\n// do all the wiring up of buttons etc once the template has been rendered.\nfunction initialiseEquationList(collectionId, data) {\n\n    $('#add-equation').click(function () {\n        loadEquationBuilder(data, function () {\n            refreshPreview();\n\n            putContent(collectionId, data.uri, JSON.stringify(data),\n                success = function () {\n                    Florence.Editor.isDirty = false;\n                    refreshPreview();\n                    refreshEquationsList(collectionId, data);\n                },\n                error = function (response) {\n                    handleApiError(response);\n                }\n            );\n        });\n    });\n\n    $(data.equations).each(function (index, equation) {\n\n        var basePath = data.uri;\n        var equationPath = basePath + '/' + equation.filename;\n        var equationJson = equationPath;\n\n        $(\"#equation-edit_\" + index).click(function () {\n            getPageData(collectionId, equationJson,\n                onSuccess = function (equationData) {\n\n                    loadEquationBuilder(data, function () {\n                        refreshPreview();\n\n                        putContent(collectionId, basePath, JSON.stringify(data),\n                            success = function () {\n                                Florence.Editor.isDirty = false;\n                                refreshPreview();\n                                refreshEquationList(collectionId, data);\n                            },\n                            error = function (response) {\n                                handleApiError(response);\n                            }\n                        );\n                    }, equationData);\n                })\n        });\n\n        $(\"#equation-delete_\" + index).click(function () {\n            swal({\n                title: \"Warning\",\n                text: \"Are you sure you want to delete this equation?\",\n                type: \"warning\",\n                showCancelButton: true,\n                confirmButtonText: \"Delete\",\n                cancelButtonText: \"Cancel\",\n                closeOnConfirm: false\n            }, function (result) {\n                if (result === true) {\n                    $(this).parent().remove();\n                    data.equations = _(data.equations).filter(function (item) {\n                        return item.filename !== equation.filename\n                    });\n                    putContent(collectionId, basePath, JSON.stringify(data),\n                        success = function () {\n                            deleteEquation(collectionId, equationJson, onSuccess = function () {\n                            }, onError = function () {\n                            });\n                            Florence.Editor.isDirty = false;\n                            swal({\n                                title: \"Deleted\",\n                                text: \"This equation has been deleted\",\n                                type: \"success\",\n                                timer: 2000\n                            });\n                            refreshEquationsList(collectionId, data);\n                        },\n                        error = function (response) {\n                            handleApiError(response);\n                        }\n                    );\n                }\n            });\n        });\n    });\n    // Make sections sortable\n    function sortable() {\n        $('#sortable-equation').sortable();\n    }\n\n    sortable();\n}\n\n\n/**\n * Load the image builder screen. This screen is for adding images that cannot be built using the chart\n * builder, hence the additional parameters in the builder that imitate a chart.\n * @param pageData - The data for the page the image is being added to.\n * @param onSave - The function to call when the image is saved and the image builder is closed.\n * @param image - The existing image object if an existing image is being edited.\n */\nfunction loadImageBuilder(pageData, onSave, image) {\n  var pageUrl = pageData.uri;\n  var previewImage;\n\n  // render the template for the image builder screen\n  var html = templates.imageBuilder(image);\n  $('body').append(html);\n\n  // The files uploaded as part of the image creation are stored in an array on the image object.\n  // These keys identify the different types of files that can be added.\n  var imageFileKey = \"uploaded-image\"; // The actual image shown on screen\n  var dataFileKey = \"uploaded-data\"; // The associated data file for the image.\n\n  // if we are passing an existing image to the builder, go ahead and show it.\n  if (image) {\n    renderImage(getImageUri(image));\n    renderText();\n  }\n\n  // If any text fields on the form are changed, update them.\n  $('.refresh-text').on('input', function () {\n    renderText();\n  });\n\n  $('#upload-image-form').submit(function (event) {\n    event.preventDefault();\n    event.stopImmediatePropagation();\n\n    var formData = new FormData($(this)[0]);\n    var file = this[0].files[0];\n    if (!file) {\n      sweetAlert('Please select a file to upload.');\n      return;\n    }\n\n    if (!/\\.png|.jpeg$|.jpg$|/.test(file)) {\n      sweetAlert('The data file upload is limited to PNG and JPEG.', \"\", \"info\");\n      return;\n    }\n\n    var fileExtension = file.name.split('.').pop();\n    previewImage = buildJsonObjectFromForm(previewImage);\n    var imagePath = previewImage.uri + '.' + fileExtension;\n    var imageFileName = previewImage.filename + '.' + fileExtension;\n    var fileExists = getExistingFileName(previewImage, imageFileKey);\n\n    uploadFile(\n      imagePath,\n      formData,\n      success = function () {\n        if (!fileExists) {\n          previewImage.files.push({type: imageFileKey, filename: imageFileName, fileType: fileExtension});\n        }\n        renderImage(getImageUri(previewImage));\n      });\n\n    return false;\n  });\n\n  $('#upload-data-form').submit(function (event) {\n    $(this).find(':submit').attr('disabled', 'disabled');\n    event.preventDefault();\n    event.stopImmediatePropagation();\n\n    var formData = new FormData($(this)[0]);\n    var file = this[0].files[0];\n    if (!file) {\n      sweetAlert('Please select a file to upload.');\n      return;\n    }\n\n    if (!/\\.csv$|.xls$|.xlsx$|/.test(file)) {\n      sweetAlert('The data file upload is limited to CSV, XLS, or XLSX.');\n      return;\n    }\n\n    var fileExtension = file.name.split('.').pop();\n    previewImage = buildJsonObjectFromForm(previewImage);\n    var filePath = previewImage.uri + '.' + fileExtension;\n    var fileName = previewImage.filename + '.' + fileExtension;\n    var fileExists = getExistingFileName(previewImage, dataFileKey);\n\n    uploadFile(\n      filePath,\n      formData,\n      success = function () {\n        if (!fileExists) {\n          swal({\n            title: \"Upload complete\",\n            text: \"Upload complete\",\n            type: \"success\",\n            timer: 2000\n          });\n          previewImage.files.push({type: dataFileKey, filename: fileName, fileType: fileExtension});\n        }\n      });\n\n    return false;\n  });\n\n\n  function mapImageJsonValues(from, to) {\n    to = buildJsonObjectFromForm(to);\n\n    $(from.files).each(function (fromIndex, fromFile) {\n      var fileExistsInImage = false;\n\n      $(to.files).each(function (toIndex, toFile) {\n        if (fromFile.type == toFile.type) {\n          fileExistsInImage = true;\n          toFile.fileName = fromFile.fileName;\n          toFile.fileType = fromFile.fileType;\n        }\n      });\n\n      if (!fileExistsInImage) {\n        to.files.push(fromFile);\n      }\n    });\n\n    return to;\n  }\n\n  $('.btn-image-builder-create').on('click', function () {\n\n    previewImage = buildJsonObjectFromForm(previewImage);\n\n    if (!previewImage.title) {\n      sweetAlert(\"Please enter a title for the image.\");\n      return;\n    }\n\n    var imageFileName = getExistingFileName(previewImage, imageFileKey);\n    if (!imageFileName && image)\n      imageFileName = getExistingFileName(image, imageFileKey);\n    if (!imageFileName) {\n      sweetAlert(\"Please upload an image\");\n      return;\n    }\n\n    var imageExists = false;\n    if (image) {\n      imageExists = true;\n      // map preview image values onto image\n      image = mapImageJsonValues(previewImage, image);\n    } else { // just use the preview files\n      image = previewImage;\n      addImageToPageJson(image);\n    }\n\n    saveImageJson(image, success = function () {\n\n      // if there is an image that exists already, overwrite it.\n      if (imageExists) {\n        $(previewImage.files).each(function (index, file) {\n          var fromFile = pageUrl + '/' + file.filename;\n          var toFile = pageUrl + '/' + file.filename.replace(previewImage.filename, image.filename);\n          if (fromFile != toFile) {\n            console.log(\"moving... table file: \" + fromFile + \" to: \" + toFile);\n            renameContent(Florence.collection.id, fromFile, toFile,\n              onSuccess = function () {\n                console.log(\"Moved table file: \" + fromFile + \" to: \" + toFile);\n              });\n          }\n        });\n      }\n\n      if (onSave) {\n        onSave(image.filename, '<ons-image path=\"' + image.filename + '\" />', pageData);\n      }\n      closeImageBuilderScreen();\n    });\n  });\n\n  $('.btn-image-builder-cancel').on('click', function () {\n\n    closeImageBuilderScreen();\n\n    if (previewImage) {\n      $(previewImage.files).each(function (index, file) {\n\n        var fileToDelete = pageUrl + '/' + file.filename;\n        deleteContent(Florence.collection.id, fileToDelete,\n          onSuccess = function () {\n            console.log(\"deleted image file: \" + fileToDelete);\n          });\n      });\n    }\n  });\n\n  function closeImageBuilderScreen() {\n    $('.image-builder').stop().fadeOut(200).remove();\n  }\n\n  setShortcuts('#image-title');\n  setShortcuts('#image-subtitle');\n\n  function renderText() {\n    var title = doSuperscriptAndSubscript($('#image-title').val());\n    var subtitle = doSuperscriptAndSubscript($('#image-subtitle').val());\n    $('#image-title-preview').html(title);\n    $('#image-subtitle-preview').html(subtitle);\n    $('#image-source-preview').html($('#image-source').val());\n    $('#image-notes-preview').html(toMarkdown($('#image-notes').val()));\n  }\n\n  function renderImage(imageUri) {\n    var iframeMarkup = '<iframe id=\"preview-frame\" frameBorder =\"0\" scrolling = \"yes\" src=\"' + '/zebedee/resource/' + Florence.collection.id + '?uri=' + imageUri + '\"></iframe>';\n    $('#image').html(iframeMarkup);\n    var iframe = document.getElementById('preview-frame');\n    iframe.height = \"500px\";\n    iframe.width = \"100%\";\n    setTimeout(\n      function () {\n        body = $('#preview-frame').contents().find('body');\n        $(body).children().css('height', '100%');\n      }, 100);\n  }\n\n  function toMarkdown(text) {\n    if (text && isMarkdownAvailable) {\n      var converter = new Markdown.getSanitizingConverter();\n      Markdown.Extra.init(converter, {\n        extensions: \"all\"\n      });\n      return converter.makeHtml(text)\n    }\n    return '';\n  }\n\n  function isMarkdownAvailable() {\n    return typeof Markdown !== 'undefined'\n  }\n\n  function doSuperscriptAndSubscript(text) {\n    if (text && isMarkdownAvailable) {\n      var converter = new Markdown.Converter();\n      return converter._DoSubscript(converter._DoSuperscript(text));\n    }\n    return text;\n\n  }\n\n\n  function uploadFile(path, formData, success) {\n    $.ajax({\n      url: \"/zebedee/content/\" + Florence.collection.id + \"?uri=\" + path,\n      type: 'POST',\n      data: formData,\n      async: false,\n      cache: false,\n      contentType: false,\n      processData: false,\n      success: function () {\n        if (success) {\n          success();\n        }\n      }\n    });\n  }\n\n  function getImageUri(image) {\n    if (pageUrl === '/') {\n      return '/' + getImageFilename(image);\n    } else {\n      return pageData.uri + '/' + getImageFilename(image);\n    }\n  }\n\n  function getImageFilename(image) {\n    return getExistingFileName(image, imageFileKey)\n  }\n\n  // for any figure object, iterate the files and return the file path for the given key.\n  function getExistingFileName(object, key) {\n    var result;\n    _.each(object.files, function (file) {\n      if (key === file.type) {\n        result = file.filename;\n      }\n    });\n    return result;\n  }\n\n  function saveImageJson(image, success, error) {\n    var noExtension = image.uri.match(/^(.+?)(\\.[^.]*$|$)/);\n    var imageJson = noExtension[1] + \".json\";\n\n    $.ajax({\n      url: \"/zebedee/content/\" + Florence.collection.id + \"?uri=\" + imageJson,\n      type: 'POST',\n      data: JSON.stringify(image),\n      processData: false,\n      contentType: 'application/json',\n      success: function (response) {\n        if (success)\n          success(response);\n      },\n      error: function (response) {\n        if (error) {\n          error(response);\n        } else {\n          handleApiError(response);\n        }\n      }\n    });\n  }\n\n  function addImageToPageJson(image) {\n    if (!pageData.images) {\n      pageData.images = [];\n    } else {\n\n      var existingImage = _.find(pageData.images, function (existingImage) {\n        return existingImage.filename === image.filename;\n      });\n\n      if (existingImage) {\n        existingImage.title = image.title;\n        return;\n      }\n    }\n\n    pageData.images.push({title: image.title, filename: image.filename, uri: image.uri});\n  }\n\n  function buildJsonObjectFromForm(image) {\n    if (!image) {\n      image = {};\n    }\n\n    image.type = \"image\";\n    // give the image a unique ID if it does not already have one.\n    image.filename = image.filename ? image.filename : StringUtils.randomId();\n    image.title = $('#image-title').val();\n    if (pageUrl === '/') {\n      image.uri = \"/\" + image.filename;\n    } else {\n      image.uri = pageUrl + \"/\" + image.filename;\n    }\n    image.subtitle = $('#image-subtitle').val();\n    image.source = $('#image-source').val();\n    image.notes = $('#image-notes').val();\n    image.altText = $('#image-alt-text').val();\n\n    if (!image.files) {\n      image.files = [];\n    }\n\n    return image;\n  }\n}\n\n\nfunction loadImagesList(collectionId, data) {\n    var html = templates.workEditImages(data);\n    $('#images').replaceWith(html);\n    initialiseImagesList(collectionId, data);\n    initialiseClipboard();\n}\n\nfunction refreshImagesList(collectionId, data) {\n    var html = templates.workEditImages(data);\n    $('#image-list').replaceWith($(html).find('#image-list'));\n    initialiseImagesList(collectionId, data);\n    initialiseClipboard();\n}\n\nfunction initialiseImagesList(collectionId, data) {\n\n    $('#add-image').click(function () {\n        loadImageBuilder(data, function () {\n            Florence.Editor.isDirty = false;\n            refreshImagesList(collectionId, data);\n        });\n    });\n\n    $(data.images).each(function (index, image) {\n        var basePath = data.uri;\n        var noExtension = image.uri.match(/^(.+?)(\\.[^.]*$|$)/);\n        var imageJson = noExtension[1] + '.json';\n\n        $(\"#image-edit_\" + index).click(function () {\n            getPageResource(collectionId, imageJson,\n                onSuccess = function (imageData) {\n                    loadImageBuilder(data, function () {\n                        Florence.Editor.isDirty = false;\n                        //refreshPreview();\n                        refreshImagesList(collectionId, data);\n                    }, imageData);\n                }\n            );\n        });\n\n        $(\"#image-delete_\" + index).click(function () {\n            swal({\n                title: \"Warning\",\n                text: \"Are you sure you want to delete this image?\",\n                type: \"warning\",\n                showCancelButton: true,\n                confirmButtonText: \"Delete\",\n                cancelButtonText: \"Cancel\",\n                closeOnConfirm: false\n            }, function (result) {\n                if (result === true) {\n                    $(this).parent().remove();\n                    // delete any files associated with the image.\n                    getPageResource(collectionId, imageJson,\n                        onSuccess = function (imageData) {\n                            if (imageData.files) {\n                                _.each(imageData.files, function (file) {\n                                    var fileUri = basePath + '/' + file.filename;\n                                    //console.log('deleting ' + fileUri);\n                                    deleteContent(collectionId, fileUri, function () {\n                                    }, function () {\n                                    });\n                                });\n                            } else {\n                                //console.log('deleting ' + image.uri);\n                                deleteContent(collectionId, image.uri);\n                            }\n                        });\n\n                    // remove the image from the page json when its deleted\n                    data.images = _(data.images).filter(function (item) {\n                        return item.filename !== image.filename;\n                    });\n\n                    // save the updated page json\n                    putContent(collectionId, basePath, JSON.stringify(data),\n                        success = function () {\n                            Florence.Editor.isDirty = false;\n\n                            swal({\n                                title: \"Deleted\",\n                                text: \"This image has been deleted\",\n                                type: \"success\",\n                                timer: 2000\n                            });\n\n                            refreshImagesList(collectionId, data);\n\n                            // delete the image json file\n                            deleteContent(collectionId, imageJson,\n                                onSuccess = function () {\n                                },\n                                error = function (response) {\n                                    if (response.status !== 404)\n                                        handleApiError(response);\n                                });\n                        },\n                        error = function (response) {\n                            handleApiError(response);\n                        }\n                    );\n                }\n            });\n        });\n    });\n    // Make sections sortable\n    function sortable() {\n        $('#sortable-image').sortable();\n    }\n\n    sortable();\n}\nfunction loadImportScreen (collectionId) {\n\n  getCollection(collectionId,\n    success = function (collection) {\n      var html = templates.workImport;\n      $('.workspace-menu').html(html);\n\n      $('#UploadForm').submit(function (e) {\n        e.preventDefault();\n        e.stopImmediatePropagation();\n\n        var formdata = new FormData();\n\n        function showUploadedItem(source) {\n          $('#list').append(source);\n        }\n\n        var file = this[0].files[0];\n        if (!file) {\n          sweetAlert(\"Please select a file to upload\");\n          return;\n        }\n\n        document.getElementById(\"response\").innerHTML = \"Uploading . . .\";\n\n        var fileNameNoSpace = file.name.replace(/[^a-zA-Z0-9\\.]/g, \"\").toLowerCase();\n        var uriUpload = \"/\" + fileNameNoSpace;\n\n        // check if the file already exists.\n        //if (data[field] && data[field].length > 0) {\n        //  $(data[field]).each(function (i, filesUploaded) {\n        //    if (filesUploaded.file === fileNameNoSpace || filesUploaded.file === fileNameNoSpace ) {\n        //      sweetAlert('This file already exists');\n        //      $('#' + lastIndex).remove();\n        //      formdata = false;  // if not present the existing file was being overwritten\n        //      return;\n        //    }\n        //  });\n        //}\n\n        if (file.name.match(\".csv\")) {\n          showUploadedItem(fileNameNoSpace);\n          if (formdata) {\n            formdata.append(\"name\", file);\n          }\n        } else {\n          sweetAlert(\"This file type is not supported\");\n          return;\n        }\n\n        if (formdata) {\n          $.ajax({\n            url: \"/zebedee/timeseriesimport/\" + collectionId + \"?uri=\" + uriUpload,\n            type: 'POST',\n            data: formdata,\n            cache: false,\n            processData: false,\n            contentType: false,\n            success: function () {\n              document.getElementById(\"response\").innerHTML = \"File uploaded successfully\";\n              //if (!data[field]) {\n              //  data[field] = [];\n              //}\n              //data[field].push({title: '', file: fileNameNoSpace});\n            }\n          });\n        }\n      });\n    },\n    error = function (response) {\n      handleApiError(response);\n    }\n  );\n\n\n\n\n}\n\n/**\n * Manages markdown editor\n * @param content\n * @param onSave\n * @param pageData\n * @param notEmpty - if present, markdown cannot be left empty\n */\n\nfunction loadMarkdownEditor(content, onSave, pageData, notEmpty) {\n\n    if (content.title == undefined) {\n        var html = templates.markdownEditorNoTitle(content);\n        $('body').append(html);\n        $('.markdown-editor').stop().fadeIn(200);\n        $('#wmd-input').focus();\n    } else {\n        var html = templates.markdownEditor(content);\n        $('body').append(html);\n        $('.markdown-editor').stop().fadeIn(200);\n        $('#wmd-input').focus();\n    }\n\n    markdownEditor();\n\n    var markdown = $('#wmd-input').val();\n\n    // Detect if markdown updated and update variable\n    $('#wmd-input').on('input', function() {\n        markdown = $('#wmd-input').val();\n    });\n\n    if (notEmpty === true || markdown === '') {\n        $('.btn-markdown-editor-cancel').hide();\n    } else {\n        $('.btn-markdown-editor-cancel').on('click', function () {\n            $('.markdown-editor').stop().fadeOut(200).remove();\n        });\n    }\n\n    $(\".btn-markdown-editor-save\").click(function () {\n        onSave(markdown);\n    });\n\n    if (notEmpty) {\n        $(\".btn-markdown-editor-exit\").click(function () {\n            if (markdown === '') {\n                sweetAlert('Please add some text', \"This can't be left empty\");\n            } else {\n                onSave(markdown);\n                $('.markdown-editor').stop().fadeOut(200).remove();\n            }\n        });\n    } else {\n        $(\".btn-markdown-editor-exit\").click(function () {\n            // Just a little test to see if the markdown is ever getting set to null - can delete it later if this is never fired\n            if (!markdown || markdown == \"null\") {\n                console.log(\"Error, undefined or null markdown value\");\n            }\n            onSave(markdown);\n            $('.markdown-editor').stop().fadeOut(200).remove();\n        });\n    }\n\n    var onInsertSave = function (name, markdown) {\n        insertAtCursor($('#wmd-input')[0], markdown);\n        $('#wmd-input').trigger('input');\n        Florence.Editor.markdownEditor.refreshPreview();\n    };\n\n    $(\"#js-editor--chart\").click(function () {\n        loadChartBuilder(pageData, onInsertSave);\n    });\n\n    $(\"#js-editor--table\").click(function () {\n        loadTableBuilder(pageData, onInsertSave);\n    });\n\n    $(\"#js-editor--equation\").click(function () {\n        loadEquationBuilder(pageData, onInsertSave);\n    });\n\n    $(\"#js-editor--image\").click(function () {\n        loadImageBuilder(pageData, function (name, markdown, pageData) {\n            onInsertSave(name, markdown);\n            refreshImagesList(Florence.collection.id, pageData)\n        });\n    });\n\n    $(\"#js-editor--embed\").click(function () {\n        loadEmbedIframe(function (markdown) {\n            onInsertSave('', markdown);\n        });\n    });\n\n    $(\"#wmd-input\").on('click', function () {\n        markDownEditorSetLines();\n    });\n\n    $(\"#wmd-input\").on('keyup', function () {\n        markDownEditorSetLines();\n    });\n\n    // http://stackoverflow.com/questions/6140632/how-to-handle-tab-in-textarea\n    $(\"#wmd-input\").keydown(function (e) {\n        if (e.keyCode === 9) { // tab was pressed\n            // get caret position/selection\n            var start = this.selectionStart;\n            var end = this.selectionEnd;\n\n            var $this = $(this);\n            var value = $this.val();\n\n            // set textarea value to: text before caret + tab + text after caret\n            $this.val(value.substring(0, start)\n                + \"\\t\"\n                + value.substring(end));\n\n            // put caret at right position again (add one for the tab)\n            this.selectionStart = this.selectionEnd = start + 1;\n\n            // prevent the focus lose\n            e.preventDefault();\n        }\n    });\n\n    // http://stackoverflow.com/questions/11076975/insert-text-into-textarea-at-cursor-position-javascript\n    function insertAtCursor(field, value) {\n        //IE support\n        if (document.selection) {\n            field.focus();\n            sel = document.selection.createRange();\n            sel.text = value;\n        }\n        //MOZILLA and others\n        else if (field.selectionStart || field.selectionStart == '0') {\n            var startPos = field.selectionStart;\n            var endPos = field.selectionEnd;\n            field.value = field.value.substring(0, startPos)\n                + value\n                + field.value.substring(endPos, field.value.length);\n            field.selectionStart = startPos + value.length;\n            field.selectionEnd = startPos + value.length;\n        } else {\n            field.value += value;\n        }\n    }\n}\n\n\nfunction markdownEditor() {\n\n    var converter = new Markdown.getSanitizingConverter();\n\n    // output chart tag as text instead of the actual tag.\n    converter.hooks.chain(\"preBlockGamut\", function (text) {\n        var newText = text.replace(/(<ons-chart\\spath=\"[-A-Za-z0-9+&@#\\/%?=~_|!:,.;\\(\\)*[\\]$]+\"?\\s?\\/>)/ig, function (match) {\n            var path = $(match).attr('path');\n            return '[chart path=\"' + path + '\" ]';\n        });\n        return newText;\n    });\n\n    // output table tag as text instead of the actual tag.\n    converter.hooks.chain(\"preBlockGamut\", function (text) {\n        var newText = text.replace(/(<ons-table\\spath=\"[-A-Za-z0-9+&@#\\/%?=~_|!:,.;\\(\\)*[\\]$]+\"?\\s?\\/>)/ig, function (match) {\n            var path = $(match).attr('path');\n            return '[table path=\"' + path + '\" ]';\n        });\n        return newText;\n    });\n\n    // output equation tag as text instead of the actual tag.\n    converter.hooks.chain(\"preBlockGamut\", function (text) {\n        var newText = text.replace(/(<ons-equation\\spath=\"[-A-Za-z0-9+&@#\\/%?=~_|!:,.;\\(\\)*[\\]$]+\"?\\s?\\/>)/ig, function (match) {\n            var path = $(match).attr('path');\n            return '[equation path=\"' + path + '\" ]';\n        });\n        return newText;\n    });\n\n    // output interactive tag as text instead of the actual tag.\n    converter.hooks.chain(\"preBlockGamut\", function (text) {\n        var newText = text.replace(/(<ons-interactive\\surl=\"[-A-Za-z0-9+&@#\\/%?=~_|!:,.;\\(\\)*[\\]$]+\"?\\s?\\/>)/ig, function (match) {\n            var path = $(match).attr('url');\n            return '[interactive url=\"' + path + '\" ]';\n        });\n        return newText;\n    });\n\n    converter.hooks.chain(\"plainLinkText\", function (link) {\n        console.log(\"link done, innit\");\n        console.log(link);\n    });\n\n    Markdown.Extra.init(converter, {\n        extensions: \"all\"\n    });\n\n    var editor = new Markdown.Editor(converter);\n    Florence.Editor.markdownEditor = editor;\n\n    editor.hooks.chain(\"onPreviewRefresh\", function () {\n        MathJax.Hub.Queue([\"Typeset\", MathJax.Hub]);\n    });\n\n    editor.run();\n    markDownEditorSetLines();\n}\n\n/**\n * Editor data loader\n * @param path\n * @param collectionId\n * @param click - if present checks the page url to keep in sync with iframe\n */\n\nfunction loadPageDataIntoEditor(path, collectionId, click) {\n\n    if (Florence.globalVars.welsh) {\n        if (path === '/') {       //add whatever needed to read content in Welsh\n            var pageUrlData = path + '&lang=cy';\n            var toApproveUrlData = '/data_cy.json';\n        } else {\n            var pageUrlData = path + '&lang=cy';\n            var toApproveUrlData = path + '/data_cy.json';\n        }\n    } else {\n        if (path === '/') {       //add whatever needed to read content in English\n            var pageUrlData = path;\n            var toApproveUrlData = '/data.json';\n        } else {\n            var pageUrlData = path;\n            var toApproveUrlData = path + '/data.json';\n        }\n    }\n\n    var pageData, isPageComplete;\n    var ajaxRequests = [];\n\n    ajaxRequests.push(\n        getPageData(collectionId, pageUrlData,\n            success = function (response) {\n                pageData = response;\n            },\n            error = function (response) {\n                handleApiError(response);\n            }\n        )\n    );\n\n    ajaxRequests.push(\n        getCollection(collectionId,\n            success = function (response) {\n                var lastCompletedEvent = getLastCompletedEvent(response, toApproveUrlData);\n                isPageComplete = !(!lastCompletedEvent || lastCompletedEvent.email === Florence.Authentication.loggedInEmail());\n            },\n            error = function (response) {\n                handleApiError(response);\n            })\n    );\n\n    $.when.apply($, ajaxRequests).then(function () {\n        if (click) {\n            var iframe = getPreviewUrl();\n            if (iframe !== pageData.uri) {\n                setTimeout(loadPageDataIntoEditor(path, collectionId), 200);\n            } else {\n                renderAccordionSections(collectionId, pageData, isPageComplete);\n            }\n        } else {\n            renderAccordionSections(collectionId, pageData, isPageComplete);\n        }\n    });\n}\nfunction loadParentLink(collectionId, data, parentUrl) {\n\n  getPageDataTitle(collectionId, parentUrl,\n      function (response) {\n        var parentTitle = response.title;\n        $('.child-page__title').append(parentTitle);\n      },\n      function () {\n        sweetAlert(\"Error\", \"Could not find parent that this is a sub page of\", \"error\");\n      }\n  );\n\n  //Add link back to parent page\n  $('.child-page').append(\"<a class='child-page__link'>Back to parent page</a>\");\n\n  //Take user to parent edit screen on link click\n  $('.child-page__link').click(function () {\n    //If there are edits check whether user wants to continue\n    if (Florence.Editor.isDirty) {\n      swal ({\n        title: \"Warning\",\n        text: \"You have unsaved changes. Are you sure you want to continue?\",\n        type: \"warning\",\n        showCancelButton: true,\n        confirmButtonText: \"Continue\",\n        cancelButtonText: \"Cancel\"\n      }, function (result) {\n        if (result === true) {\n          Florence.Editor.isDirty = false;\n          //Return to parent if user confirms it\n          updateContent(collectionId, data.uri, JSON.stringify(data), parentUrl);\n          return true;\n        }\n      });\n    } else {\n      //Return to parent without saving\n      createWorkspace(parentUrl, collectionId, 'edit');\n    }\n  });\n\n}/**\n * Creates releases' JSON\n * @param collectionId\n * @param releaseDate\n * @param pageType\n * @param parentUrl\n */\n\nfunction loadT16Creator(collectionId, releaseDate, pageType, parentUrl) {\n    var releaseDate = null;             //overwrite scheduled collection date\n    var pageType, pageTitle, uriSection, pageTitleTrimmed, newUri, pageData, safeNewUri;\n    var parentUrlData = \"/data\"; //home page\n    $.ajax({\n        url: parentUrlData,\n        dataType: 'json',\n        crossDomain: true,\n        success: function (checkData) {\n            //Checks page is built in correct location\n            if (checkData.type === 'home_page') {\n                submitFormHandler();\n                return true;\n            } else {\n                sweetAlert(\"This is not a valid place to create this page.\");\n                loadCreateScreen(parentUrl, collectionId);\n            }\n        },\n        error: function () {\n            console.log('No page data returned');\n        }\n    });\n\n    function submitFormHandler() {\n        $('.edition').append(\n            '<label for=\"releaseDate\">Release date</label>' +\n            '<input id=\"releaseDate\" type=\"text\" placeholder=\"day month year\" />' +\n            '<div class=\"select-wrap select-wrap--half\">' +\n            '<select id=\"hour\">' +\n            '  <option value=\"0\">00</option>' +\n            '  <option value=\"3600000\">01</option>' +\n            '  <option value=\"7200000\">02</option>' +\n            '  <option value=\"10800000\">03</option>' +\n            '  <option value=\"14400000\">04</option>' +\n            '  <option value=\"18000000\">05</option>' +\n            '  <option value=\"21600000\">06</option>' +\n            '  <option value=\"25200000\">07</option>' +\n            '  <option value=\"28800000\">08</option>' +\n            '  <option value=\"32400000\" selected=\"selected\">09</option>' +\n            '  <option value=\"36000000\">10</option>' +\n            '  <option value=\"39600000\">11</option>' +\n            '  <option value=\"43200000\">12</option>' +\n            '  <option value=\"46800000\">13</option>' +\n            '  <option value=\"50400000\">14</option>' +\n            '  <option value=\"54000000\">15</option>' +\n            '  <option value=\"57600000\">16</option>' +\n            '  <option value=\"61200000\">17</option>' +\n            '  <option value=\"64800000\">18</option>' +\n            '  <option value=\"68400000\">19</option>' +\n            '  <option value=\"72000000\">20</option>' +\n            '  <option value=\"75600000\">21</option>' +\n            '  <option value=\"79200000\">22</option>' +\n            '  <option value=\"82800000\">23</option>' +\n            '</select>' +\n            '</div>' +\n            '<div class=\"select-wrap select-wrap--half\">' +\n            '<select id=\"min\">' +\n            '  <option value=\"0\">00</option>' +\n            '  <option value=\"1800000\" selected=\"selected\">30</option>' +\n            '</select>' +\n            '</div>'\n        );\n        // $('#releaseDate').datepicker({\n        //     dateFormat: 'dd MM yy',\n        //     onSelect: function() {\n        //         $('select#hour').focus();\n        //     }\n        // });\n        creatorDatePicker();\n\n        //Submits inherited and added information to JSON\n        $('form').off().submit(function (e) {\n            var nameValid = validatePageName();\n            if (!nameValid) {\n                return false;\n            }\n            pageData = pageTypeDataT16(pageType);\n            var publishTime = parseInt($('#hour').val()) + parseInt($('#min').val());\n            var toIsoDate = $('#releaseDate').datepicker(\"getDate\");\n            pageData.description.releaseDate = new Date(parseInt(new Date(toIsoDate).getTime()) + publishTime).toISOString();\n            pageData.description.edition = $('#edition').val();\n            pageTitle = $('#pagename').val();\n            pageData.description.title = pageTitle;\n            uriSection = \"releases\";\n            pageTitleTrimmed = pageTitle.replace(/[^A-Z0-9]+/ig, \"\").toLowerCase();\n            newUri = makeUrl(uriSection, pageTitleTrimmed);\n            safeNewUri = checkPathSlashes(newUri);\n\n            if (!pageData.description.releaseDate) {\n                sweetAlert('Release date can not be empty');\n                return true;\n            }\n            if (pageTitle.length < 5) {\n                sweetAlert(\"This is not a valid file title\");\n                return true;\n            } else {\n                Florence.globalVars.pagePath = safeNewUri;\n                saveContent(collectionId, safeNewUri, pageData);\n            }\n            e.preventDefault();\n        });\n    }\n}\n\nfunction pageTypeDataT16(pageType) {\n    return {\n        \"description\": {\n            \"releaseDate\": \"\",\n            \"provisionalDate\": \"\",\n            \"finalised\": false,\n            \"nextRelease\": \"\", //does not make sense\n            \"contact\": {\n                \"name\": \"\",\n                \"email\": \"\",\n                \"telephone\": \"\"\n            },\n            \"summary\": \"\",\n            \"title\": \"\",\n            \"nationalStatistic\": false,\n            \"cancelled\": false,\n            \"cancellationNotice\": [],\n            \"published\": false\n        },\n        \"markdown\": [],\n        \"relatedDatasets\": [],\n        \"relatedDocuments\": [],\n        \"relatedMethodology\": [],\n        \"relatedMethodologyArticle\": [],\n        \"links\": [],\n        type: pageType,\n        \"dateChanges\": []\n    };\n}\n\n/**\n * Creates article and bulletin JSON\n * @param collectionId\n * @param releaseDate\n * @param pageType\n * @param parentUrl\n */\n\nfunction loadT4Creator(collectionId, releaseDate, pageType, parentUrl) {\n    var releaseDate = null;             //overwrite scheduled collection date\n    var conditions = true;\n    var pageType, pageTitle, uriSection, pageTitleTrimmed, pageEditionTrimmed, releaseDateManual,\n        isInheriting, newUri, pageData, natStat, contactName, contactEmail,\n        contactTel, keyWords, metaDescr, relatedData, summary, relatedMethodology;\n    var parentUrlData = parentUrl + \"/data\";\n    $.ajax({\n        url: parentUrlData,\n        dataType: 'json',\n        crossDomain: true,\n        success: function (checkData) {\n            if (checkData.type === 'product_page' && !Florence.globalVars.welsh) {\n                var checkedUrl = checkPathSlashes(checkData.uri);\n                submitFormHandler(checkedUrl);\n                return true;\n            }\n            if ((checkData.type === 'bulletin' && pageType === 'bulletin') || (checkData.type === 'article' && pageType === 'article') || (checkData.type === 'article_download' && pageType === 'article_download')) {\n                var checkedUrl = checkPathSlashes(checkData.uri);\n                var safeParentUrl = getParentPage(checkedUrl);\n                natStat = checkData.description.nationalStatistic;\n                contactName = checkData.description.contact.name;\n                contactEmail = checkData.description.contact.email;\n                contactTel = checkData.description.contact.telephone;\n                pageTitle = checkData.description.title;\n                keyWords = checkData.description.keywords;\n                summary = checkData.description.summary;\n                metaDescr = checkData.description.metaDescription;\n                relatedMethodology = checkData.relatedMethodology;\n                if (checkData.type === 'bulletin' && pageType === 'bulletin') {\n                    relatedData = checkData.relatedData;\n                }\n                isInheriting = true;\n                submitFormHandler(safeParentUrl, pageTitle, isInheriting);\n                return true;\n            } else {\n                sweetAlert(\"This is not a valid place to create this page.\");\n                loadCreateScreen(parentUrl, collectionId);\n            }\n        },\n        error: function () {\n            console.log('No page data returned');\n        }\n    });\n\n    function submitFormHandler(parentUrl, title, isInheriting) {\n\n        $('.edition').append(\n            '<div id=\"edition-div\">' +\n            '  <label for=\"edition\">Edition</label>' +\n            '  <input id=\"edition\" type=\"text\" placeholder=\"August 2010, Q3 2015, 1978, etc.\" />' +\n            '</div>'\n        );\n        if (!releaseDate) {\n            $('.edition').append(\n                '<div id=\"release-div\">' +\n                '  <label for=\"releaseDate\">Release date</label>' +\n                '  <input id=\"releaseDate\" type=\"text\" placeholder=\"day month year\" />' +\n                '</div>'\n            );\n            creatorDatePicker();\n        }\n        if(!isInheriting) {\n            $('.btn-page-create').before(\n                '<p class=\"create-publishing-error\">Creating a publication here will create a new series.</p>'\n            )\n        }\n        if (title) {\n            pageTitle = title;\n            $('#pagename').val(title);\n        }\n\n        $('form').off().submit(function (e) {\n            e.preventDefault();\n            releaseDateManual = $('#releaseDate').val();\n            var pageEdition = $('#edition').val();\n\n            // Do input validation\n            var nameValid = validatePageName();\n            if (!nameValid) {\n                return false;\n            }\n\n            // Bulletin page title validation\n            if (pageType === 'bulletin' && !validatePageName('#edition')) {\n                return false;\n            }\n\n            // Article page validation - remove empty space\n            if ((pageType === 'article' || pageType === 'article_download') && pageEdition === \" \") {\n                pageEdition = \"\";\n            }\n\n            pageData = pageTypeDataT4(pageType);\n            pageData.description.edition = pageEdition;\n            if (title) {\n                //do nothing;\n            } else {\n                pageTitle = $('#pagename').val();\n            }\n            pageData.description.title = pageTitle;\n            if (pageType === 'article_download') {\n                uriSection = 'articles';\n            } else {\n                uriSection = pageType + \"s\";\n            }\n            pageTitleTrimmed = pageTitle.replace(/[^A-Z0-9]+/ig, \"\").toLowerCase();\n            if (pageData.description.edition) {\n                pageEditionTrimmed = pageData.description.edition.replace(/[^A-Z0-9]+/ig, \"\").toLowerCase();\n                var releaseUri = pageEditionTrimmed;\n            }\n\n            if (!pageData.description.edition && releaseDateManual) {                          //Manual collections\n                date = $.datepicker.parseDate(\"dd MM yy\", releaseDateManual);\n                releaseUri = $.datepicker.formatDate('yy-mm-dd', date);\n            } else if (!pageData.description.edition && !releaseDateManual) {\n                releaseUri = $.datepicker.formatDate('yy-mm-dd', new Date(releaseDate));\n            }\n\n            if (!releaseDate) {\n                pageData.description.releaseDate = new Date($('#releaseDate').val()).toISOString();\n            } else {\n                pageData.description.releaseDate = releaseDate;\n            }\n            if (isInheriting) {\n                pageData.description.nationalStatistic = natStat;\n                pageData.description.contact.name = contactName;\n                pageData.description.contact.email = contactEmail;\n                pageData.description.contact.telephone = contactTel;\n                pageData.description.keywords = keyWords;\n                pageData.description.metaDescription = metaDescr;\n                pageData.relatedMethodology = relatedMethodology;\n                if (pageType === 'bulletin') {\n                    pageData.description.summary = summary;\n                    pageData.relatedData = relatedData;\n                }\n                newUri = makeUrl(parentUrl, releaseUri);\n            } else {\n                newUri = makeUrl(parentUrl, uriSection, pageTitleTrimmed, releaseUri);\n            }\n            var safeNewUri = checkPathSlashes(newUri);\n\n            if (pageType === 'bulletin' && !pageData.description.edition) {\n                sweetAlert('Edition can not be empty');\n                $('.select-wrap').remove();\n                $('#edition-div').remove();\n                $('#release-div').remove();\n                loadT4Creator(collectionId, releaseDate, pageType, parentUrl);\n                e.preventDefault();\n                conditions = false;\n            }\n            if (!pageData.description.releaseDate) {\n                sweetAlert('Release date can not be empty');\n                $('.select-wrap').remove();\n                $('#edition-div').remove();\n                $('#release-div').remove();\n                loadT4Creator(collectionId, releaseDate, pageType, parentUrl);\n                e.preventDefault();\n                conditions = false;\n            }\n            if (pageTitle.length < 5) {\n                sweetAlert(\"This is not a valid file title\");\n                $('.select-wrap').remove();\n                $('#edition-div').remove();\n                $('#release-div').remove();\n                loadT4Creator(collectionId, releaseDate, pageType, parentUrl);\n                e.preventDefault();\n                conditions = false;\n            }\n            else if (conditions) {\n                saveContent(collectionId, safeNewUri, pageData);\n            }\n        });\n    }\n\n    function pageTypeDataT4(pageType) {\n\n        if (pageType === \"bulletin\") {\n            return {\n                \"description\": {\n                    \"title\": \"\",\n                    \"edition\": \"\",\n                    \"summary\": \"\",\n                    \"releaseDate\": \"\",\n                    \"nextRelease\": \"\",\n                    \"contact\": {\n                        \"name\": \"\",\n                        \"email\": \"\",\n                        \"telephone\": \"\"\n                    },\n                    \"nationalStatistic\": false,\n                    \"headline1\": \"\",\n                    \"headline2\": \"\",\n                    \"headline3\": \"\",\n                    \"keywords\": [],\n                    \"metaDescription\": \"\",\n                },\n                \"sections\": [],\n                \"accordion\": [],\n                \"relatedDocuments\": [],\n                \"relatedData\": [],\n                \"relatedMethodology\": [],\n                \"relatedMethodologyArticle\": [],\n                \"topics\": [],\n                \"links\": [],\n                \"charts\": [],\n                \"tables\": [],\n                \"equations\": [],\n                \"pdfTable\": [],\n                \"images\": [],\n                \"alerts\": [],\n                \"versions\": [],\n                type: pageType\n            };\n        }\n\n        else if (pageType === \"article\") {\n            return {\n                \"description\": {\n                    \"title\": \"\",\n                    \"edition\": \"\",\n                    \"_abstract\": \"\",\n                    \"releaseDate\": \"\",\n                    \"nextRelease\": \"\",\n                    \"contact\": {\n                        \"name\": \"\",\n                        \"email\": \"\",\n                        \"telephone\": \"\"\n                    },\n                    \"nationalStatistic\": false,\n                    \"keywords\": [],\n                    \"metaDescription\": \"\",\n                },\n                \"sections\": [],\n                \"accordion\": [],\n                \"relatedDocuments\": [],\n                \"relatedData\": [],\n                \"relatedMethodology\": [],\n                \"relatedMethodologyArticle\": [],\n                \"topics\": [],\n                \"links\": [],\n                \"charts\": [],\n                \"tables\": [],\n                \"equations\": [],\n                \"pdfTable\": [],\n                \"images\": [],\n                \"alerts\": [],\n                \"versions\": [],\n                type: pageType\n            };\n        }\n\n        else if (pageType === \"article_download\") {\n            return {\n                \"description\": {\n                    \"title\": \"\",\n                    \"_abstract\": \"\",\n                    \"edition\": \"\",\n                    \"releaseDate\": \"\",\n                    \"nextRelease\": \"\",\n                    \"contact\": {\n                        \"name\": \"\",\n                        \"email\": \"\",\n                        \"telephone\": \"\"\n                    },\n                    \"nationalStatistic\": false,\n                    \"keywords\": [],\n                    \"metaDescription\": \"\"\n                },\n                \"markdown\": [],\n                \"downloads\": [],\n                \"relatedDocuments\": [],\n                \"relatedData\": [],\n                \"relatedMethodology\": [],\n                \"relatedMethodologyArticle\": [],\n                \"topics\": [],\n                \"links\": [],\n                \"charts\": [],\n                \"tables\": [],\n                \"equations\": [],\n                \"images\": [],\n                \"alerts\": [],\n                \"versions\": [],\n                type: pageType\n            };\n        }\n\n        else {\n            sweetAlert('Unsupported page type. This is not an article or a bulletin');\n        }\n    }\n}\n\n/**\n * Creates compendium documents\n * @param collectionId\n * @param releaseDate\n * @param pageType\n * @param parentUrl\n * @param pageTitle\n */\n\nfunction loadT6Creator(collectionId, releaseDate, pageType, parentUrl, pageTitle) {\n    var releaseDate = null;             //overwrite scheduled collection date\n    var pageType, pageTitle, pageEdition, uriSection, pageTitleTrimmed, pageEditionTrimmed, releaseDateManual, isInheriting, newUri, pageData, parentData;\n    var parentUrlData = parentUrl + \"/data\";\n    $.ajax({\n        url: parentUrlData,\n        dataType: 'json',\n        crossDomain: true,\n        success: function (checkData) {\n            parentData = $.extend(true, {}, checkData);\n            if ((checkData.type === 'product_page' && pageType === 'compendium_landing_page' && !Florence.globalVars.welsh) ||\n                (checkData.type === 'compendium_landing_page' && pageType === 'compendium_chapter') ||\n                (checkData.type === 'compendium_landing_page' && pageType === 'compendium_data')) {\n                parentUrl = checkData.uri;\n                pageData = pageTypeDataT6(pageType, checkData);\n                if (pageTitle) {\n                    submitNoForm(parentUrl, pageTitle);\n                } else {\n                    submitFormHandler(parentUrl);\n                }\n                return true;\n            }\n            if (checkData.type === 'compendium_landing_page' && pageType === 'compendium_landing_page') {\n                parentUrl = getParentPage(checkData.uri);\n                pageTitle = checkData.description.title;\n                isInheriting = true;\n                pageData = pageTypeDataT6(pageType, checkData);\n                submitFormHandler(parentUrl, pageTitle, isInheriting);\n                return true;\n            } else {\n                sweetAlert(\"This is not a valid place to create this page.\");\n                loadCreateScreen(parentUrl, collectionId);\n            }\n        },\n        error: function () {\n            console.log('No page data returned');\n        }\n    });\n\n    function submitFormHandler(parentUrl, title, isInheriting) {\n        $('.edition').empty();\n        if (pageType === 'compendium_landing_page') {\n            $('.edition').append(\n                '<label for=\"edition\">Edition</label>' +\n                '<input id=\"edition\" type=\"text\" placeholder=\"August 2010, Q3 2015, 1978, etc.\" />' +\n                '<br>' +\n                '<label for=\"releaseDate\">Release date</label>' +\n                '<input id=\"releaseDate\" type=\"text\" placeholder=\"day month year\" />'\n            );\n            creatorDatePicker();\n        }\n        if (title) {\n            pageTitle = title;\n            $('#pagename').val(title);\n        }\n\n        $('form').off().submit(function (e) {\n            releaseDateManual = $('#releaseDate').val();\n\n            // Input validation\n            var nameValid = validatePageName();\n            var editionValid = validatePageName('#edition');\n            if (!nameValid || !editionValid) {\n                return false;\n            }\n\n            if (pageType === 'compendium_landing_page') {\n                pageData.description.edition = $('#edition').val();\n            }\n            if (!title) {\n                pageTitle = $('#pagename').val();\n            }\n\n            pageData.description.title = pageTitle;\n            pageTitleTrimmed = pageTitle.replace(/[^A-Z0-9]+/ig, \"\").toLowerCase();\n\n            pageEdition = pageData.description.edition;\n            pageEditionTrimmed = pageEdition.replace(/[^A-Z0-9]+/ig, \"\").toLowerCase();\n\n            if (pageType === 'compendium_landing_page' && releaseDate == null) {\n                pageData.description.releaseDate = new Date($('#releaseDate').val()).toISOString();\n            }\n            else if (pageType === 'compendium_landing_page' && releaseDate) {\n                pageData.description.releaseDate = releaseDate;\n            }\n\n            if (isInheriting && pageType === 'compendium_landing_page') {\n                newUri = makeUrl(parentUrl, pageEditionTrimmed);\n            }\n            else if (pageType === 'compendium_landing_page') {\n                uriSection = \"compendium\";\n                newUri = makeUrl(parentUrl, uriSection, pageTitleTrimmed, pageEditionTrimmed);\n            }\n            else if ((pageType === 'compendium_chapter') || (pageType === 'compendium_data')) {\n                newUri = makeUrl(parentUrl, pageTitleTrimmed);\n            }\n            else {\n                sweetAlert('Oops! Something went the wrong.', \"\", \"error\");\n                loadCreateScreen(parentUrl, collectionId);\n            }\n            var safeNewUri = checkPathSlashes(newUri);\n\n            if ((pageType === 'compendium_landing_page') && (!pageData.description.edition)) {\n                sweetAlert('Edition can not be empty');\n                e.preventDefault();\n                return true;\n            }\n            if ((pageType === 'compendium_landing_page') && (!pageData.description.releaseDate)) {\n                sweetAlert('Release date can not be empty');\n                e.preventDefault();\n                return true;\n            }\n            if (pageTitle.length < 5) {\n                sweetAlert(\"This is not a valid file title\");\n                e.preventDefault();\n                return true;\n            }\n            if (pageTitle.toLowerCase() === 'current' || pageTitle.toLowerCase() === 'latest') {\n                alert(\"This is not a valid file title\");\n                e.preventDefault();\n                return true;\n            }\n            else {\n                putContent(collectionId, safeNewUri, JSON.stringify(pageData),\n                    success = function (message) {\n                        console.log(\"Updating completed \" + message);\n                        if (pageData.type === 'compendium_landing_page') {\n                            viewWorkspace(safeNewUri, collectionId, 'edit');\n                            refreshPreview(safeNewUri);\n                            return true;\n                        }\n                        else if ((pageType === 'compendium_chapter') || (pageType === 'compendium_data')) {\n                            updateParentLink(safeNewUri);\n                            return true;\n                        }\n                    },\n                    error = function (response) {\n                        if (response.status === 409) {\n                            sweetAlert(\"Cannot create this page\", \"It already exists.\");\n                        }\n                        else {\n                            handleApiError(response);\n                        }\n                    }\n                );\n            }\n            e.preventDefault();\n        });\n    }\n\n    function submitNoForm(parentUrl, title) {\n\n        pageData.description.title = title;\n        pageTitleTrimmed = title.replace(/[^A-Z0-9]+/ig, \"\").toLowerCase();\n\n        if ((pageType === 'compendium_chapter') || (pageType === 'compendium_data')) {\n            newUri = makeUrl(parentUrl, pageTitleTrimmed);\n        } else {\n            sweetAlert('Oops! Something went the wrong way.');\n            loadCreateScreen(parentUrl, collectionId);\n        }\n\n        var safeNewUri = checkPathSlashes(newUri);\n\n        // check if the page exists\n        getPageData(collectionId, safeNewUri,\n            success = function () {\n                sweetAlert('This page already exists');\n            },\n            // if the page does not exist, create it\n            error = function () {\n                putContent(collectionId, safeNewUri, JSON.stringify(pageData),\n                    success = function (message) {\n                        console.log(\"Updating completed \" + message);\n                        updateParentLink(safeNewUri);\n                    },\n                    error = function (response) {\n                        if (response.status === 400) {\n                            sweetAlert(\"Cannot edit this page. It is already part of another collection.\");\n                        }\n                        else {\n                            handleApiError(response);\n                        }\n                    }\n                );\n            }\n        );\n    }\n\n    function pageTypeDataT6(pageType, checkData) {\n\n        if (pageType === \"compendium_landing_page\") {\n            return {\n                \"description\": {\n                    \"releaseDate\": \"\",\n                    \"nextRelease\": \"\",\n                    \"contact\": {\n                        \"name\": \"\",\n                        \"email\": \"\",\n                        \"telephone\": \"\"\n                    },\n                    \"summary\": \"\",\n                    \"keywords\": [],\n                    \"metaDescription\": \"\",\n                    \"nationalStatistic\": false,\n                    \"title\": \"\",\n                    \"edition\": \"\"\n                },\n                \"datasets\": [],\n                \"chapters\": [],\n                \"relatedDocuments\": [],\n                \"relatedData\": [],\n                \"relatedMethodology\": [],\n                \"relatedMethodologyArticle\": [],\n                \"topics\": [],\n                \"alerts\": [],\n                type: pageType\n            };\n        }\n\n        else if (pageType === 'compendium_chapter') {\n            return {\n                \"description\": {\n                    \"releaseDate\": checkData.description.releaseDate || \"\",\n                    \"nextRelease\": checkData.description.nextRelease || \"\",\n                    \"contact\": {\n                        \"name\": checkData.description.contact.name || \"\",\n                        \"email\": checkData.description.contact.email || \"\",\n                        \"telephone\": checkData.description.contact.telephone || \"\"\n                    },\n                    \"_abstract\": \"\",\n                    \"authors\": [],\n                    \"keywords\": checkData.description.keywords || [],\n                    \"metaDescription\": checkData.description.metaDescription || \"\",\n                    \"nationalStatistic\": checkData.description.nationalStatistic,\n                    \"title\": \"\",\n                    \"headline\": \"\",\n                },\n                \"sections\": [],\n                \"accordion\": [],\n                \"relatedDocuments\": [],\n                \"relatedData\": [],\n                \"relatedMethodology\": [],\n                \"relatedMethodologyArticle\": [],\n                \"externalLinks\": [],\n                \"charts\": [],\n                \"tables\": [],\n                \"images\": [],\n                \"versions\": [],\n                \"alerts\": [],\n                \"pdfTable\": [],\n                type: pageType\n            };\n        }\n\n        else if (pageType === 'compendium_data') {\n            return {\n                \"description\": {\n                    \"releaseDate\": checkData.description.releaseDate || \"\",\n                    \"nextRelease\": checkData.description.nextRelease || \"\",\n                    \"contact\": {\n                        \"name\": checkData.description.contact.name || \"\",\n                        \"email\": checkData.description.contact.email || \"\",\n                        \"telephone\": checkData.description.contact.telephone || \"\"\n                    },\n                    \"summary\": \"\",\n                    \"datasetId\": \"\",\n                    \"keywords\": checkData.description.keywords || [],\n                    \"metaDescription\": checkData.description.metaDescription || \"\",\n                    \"nationalStatistic\": checkData.description.nationalStatistic,\n                    \"title\": \"\"\n                },\n                \"downloads\": [],\n                \"versions\": [], //{date, uri, correctionNotice}\n                \"relatedDocuments\": [],\n                \"relatedMethodology\": [],\n                \"relatedMethodologyArticle\": [],\n                type: pageType\n            };\n        }\n\n        else {\n            sweetAlert('Unsupported page type. This is not a compendium file type');\n        }\n    }\n\n    function updateParentLink(childUri) {\n        if (pageType === \"compendium_chapter\") {\n            parentData.chapters.push({uri: childUri})\n        }\n        else if (pageType === 'compendium_data') {\n            parentData.datasets.push({uri: childUri})\n        }\n        else {\n            sweetAlert('Oops! Something went the wrong way.');\n            loadCreateScreen(parentUrl, collectionId);\n        }\n        putContent(collectionId, parentUrl, JSON.stringify(parentData),\n            success = function (message) {\n                viewWorkspace(childUri, collectionId, 'edit');\n                refreshPreview(childUri);\n                console.log(\"Parent link updating completed \" + message);\n            },\n            error = function (response) {\n                if (response.status === 400) {\n                    sweetAlert(\"Cannot edit this page. It is already part of another collection.\");\n                }\n                else {\n                    handleApiError(response);\n                }\n            }\n        );\n    }\n}\n\n/**\n * Creates static pages' JSON\n * @param collectionId\n * @param releaseDate\n * @param pageType\n * @param parentUrl\n */\n\nfunction loadT7Creator(collectionId, releaseDate, pageType, parentUrl) {\n    var releaseDate = null;             //overwrite scheduled collection date\n    var pageName, pageNameTrimmed, newUri, pageData, isNumber;\n    if (parentUrl === '/') {        //to check home page\n        parentUrl = '';\n    }\n    var parentUrlData = parentUrl + \"/data\";\n    $.ajax({\n        url: parentUrlData,\n        dataType: 'json',\n        crossDomain: true,\n        success: function (checkData) {\n            if (pageType === 'static_landing_page' && checkData.type === 'home_page' ||\n                (pageType === 'static_qmi' || pageType === 'static_adhoc' || pageType === 'static_methodology' || pageType === 'static_methodology_download') && checkData.type === 'product_page' ||\n                (pageType === 'static_landing_page' || pageType === 'static_page' || pageType === 'static_article') && checkData.type === 'home_page_census') {\n                submitFormHandler();\n                return true;\n            } else if ((pageType === 'static_foi' || pageType === 'static_page' || pageType === 'static_article' || pageType === 'static_landing_page') && checkData.type.match(/static_.+/)) {\n                submitFormHandler();\n                return true;\n            } else {\n                sweetAlert(\"This is not a valid place to create this page.\");\n                loadCreateScreen(parentUrl, collectionId);\n            }\n        },\n        error: function () {\n            console.log('No page data returned');\n        }\n    });\n\n    function submitFormHandler() {\n        if (pageType === 'static_qmi') {\n            $('.edition').append(\n                '<label for=\"releaseDate\">Last revised</label>' +\n                '<input id=\"releaseDate\" type=\"text\" placeholder=\"day month year\" />'\n            );\n\n            creatorDatePicker();\n        } else if (pageType === 'static_adhoc') {\n            $('.edition').append(\n                '<label for=\"releaseDate\">Release date</label>' +\n                '<input id=\"releaseDate\" type=\"text\" placeholder=\"day month year\" />' +\n                '<br>' +\n                '<label for=\"adhoc-reference\">Reference</label>' +\n                '<input id=\"adhoc-reference\" type=\"text\" placeholder=\"Reference number\" />'\n            );\n            creatorDatePicker();\n            $('#adhoc-reference').on('input', function () {\n                isNumber = $(this).val();\n                if (!isNumber.match(/^\\d+$/)) {\n                    sweetAlert('This needs to be a number');\n                    $(this).val('');\n                }\n            });\n        }\n        else if (!releaseDate && !(pageType === 'static_page' || pageType === 'static_landing_page')) {\n            $('.edition').append(\n                '<label for=\"releaseDate\">Release date</label>' +\n                '<input id=\"releaseDate\" type=\"text\" placeholder=\"day month year\" />'\n            );\n            creatorDatePicker();\n        }\n\n        $('form').off().submit(function (e) {\n            e.preventDefault();\n            var nameValid = validatePageName();\n            if (!nameValid) {\n                return false;\n            }\n            pageData = pageTypeDataT7(pageType);\n            pageName = $('#pagename').val().trim();\n            pageData.description.title = pageName;\n            pageNameTrimmed = pageName.replace(/[^A-Z0-9]+/ig, \"\").toLowerCase();\n            pageData.fileName = pageNameTrimmed;\n            pageData.description.reference = isNumber;\n            var adHocUrl = isNumber + pageNameTrimmed;\n            if (pageType === 'static_qmi' && !Florence.globalVars.welsh) {\n                newUri = makeUrl(parentUrl, 'qmis', pageNameTrimmed);\n            } else if (pageType === 'static_adhoc' && !Florence.globalVars.welsh) {\n                newUri = makeUrl(parentUrl, 'adhocs', adHocUrl);\n            } else if ((pageType === 'static_methodology' || pageType === 'static_methodology_download') && !Florence.globalVars.welsh) {\n                newUri = makeUrl(parentUrl, 'methodologies', pageNameTrimmed);\n            } else if (!Florence.globalVars.welsh) {\n                newUri = makeUrl(parentUrl, pageNameTrimmed);\n            } else {\n                sweetAlert('You can not perform that operation in Welsh.');\n            }\n            var safeNewUri = checkPathSlashes(newUri);\n            if (releaseDate && (pageType === 'static_qmi')) {\n                date = new Date(releaseDate);\n                pageData.description.lastRevised = $.datepicker.formatDate('dd/mm/yy', date);\n            } else if (releaseDate) {\n                date = new Date(releaseDate);\n                pageData.description.releaseDate = $.datepicker.formatDate('dd/mm/yy', date);\n            } else if (!releaseDate && (pageType === 'static_qmi')) {\n                pageData.description.lastRevised = new Date($('#releaseDate').val()).toISOString();\n                //} else if (!releaseDate && (pageType === 'static_page' || pageType === 'static_article')) {\n                //  pageData.description.releaseDate = \"1970-01-01T00:00:00.000Z\";  // zebedee throws a JsonSyntaxException\n                // if no date is present\n            } else if (!releaseDate) {\n                if ($('#releaseDate').val()) {\n                    pageData.description.releaseDate = new Date($('#releaseDate').val()).toISOString();\n                } else {\n                    pageData.description.releaseDate = new Date().toISOString();\n                }\n            }\n\n            if (pageName.length < 4) {\n                sweetAlert({\n                    title: \"This is not a valid page name\",\n                    text: \"Page names must be 4 characters or longer\",\n                    type: \"warning\"\n                });\n                loadCreateScreen(parentUrl, collectionId);\n            } else {\n                saveContent(collectionId, safeNewUri, pageData);\n            }\n        });\n    }\n}\n\nfunction pageTypeDataT7(pageType) {\n\n    if (pageType === \"static_page\") {\n        return {\n            \"description\": {\n                \"title\": \"\",\n                \"summary\": \"\",\n                \"releaseDate\": \"\",\n                \"keywords\": [],\n                \"metaDescription\": \"\"\n            },\n            \"markdown\": [],\n            \"charts\": [],\n            \"tables\": [],\n            \"equations\": [],\n            \"images\": [],\n            \"downloads\": [],\n            type: pageType,\n            \"anchors\": [],\n            \"links\": []\n        };\n    } else if (pageType === \"static_landing_page\") {\n        return {\n            \"description\": {\n                \"title\": \"\",\n                \"summary\": \"\",\n                \"releaseDate\": \"\",\n                \"keywords\": [],\n                \"metaDescription\": \"\",\n            },\n            \"sections\": [],\n            \"markdown\": [],\n            type: pageType,\n            \"links\": []\n        };\n    }\n    else if (pageType === \"static_article\") {\n        return {\n            \"description\": {\n                \"title\": \"\",\n                \"summary\": \"\",\n                \"releaseDate\": \"\",\n                \"keywords\": [],\n                \"metaDescription\": \"\"\n            },\n            \"sections\": [],\n            \"charts\": [],\n            \"tables\": [],\n            \"equations\": [],\n            \"images\": [],\n            \"anchors\": [],\n            \"links\": [],\n            \"alerts\": [],\n            type: pageType\n        };\n    } else if (pageType === \"static_methodology\") {\n        return {\n            \"description\": {\n                \"title\": \"\",\n                \"summary\": \"\",\n                \"releaseDate\": \"\",\n                \"contact\": {\n                    \"name\": \"\",\n                    \"email\": \"\",\n                    \"telephone\": \"\"\n                },\n                \"keywords\": [],\n                \"metaDescription\": \"\"\n            },\n            \"sections\": [],\n            \"accordion\": [],\n            \"relatedDocuments\": [],\n            \"relatedDatasets\": [],\n            \"relatedMethodology\": [],\n            \"relatedMethodologyArticle\": [],\n            \"charts\": [],\n            \"tables\": [],\n            \"equations\": [],\n            \"images\": [],\n            \"downloads\": [],\n            \"links\": [],\n            \"pdfTable\": [],\n            \"alerts\": [],\n            type: pageType\n        };\n    } else if (pageType === \"static_methodology_download\") {\n        return {\n            \"description\": {\n                \"title\": \"\",\n                \"contact\": {\n                    \"name\": \"\",\n                    \"email\": \"\",\n                    \"phone\": \"\"\n                },\n                \"releaseDate\": \"\",\n                \"keywords\": [],\n                \"metaDescription\": \"\"\n            },\n            \"markdown\": [],\n            \"downloads\": [],\n            \"relatedDocuments\": [],\n            \"relatedDatasets\": [],\n            \"relatedMethodology\": [],\n            \"relatedMethodologyArticle\": [],\n            \"links\": [],\n            \"alerts\": [],\n            type: pageType\n        };\n    } else if (pageType === \"static_qmi\") {\n        return {\n            \"description\": {\n                \"title\": \"\",\n                \"contact\": {\n                    \"name\": \"\",\n                    \"email\": \"\",\n                    \"phone\": \"\"\n                },\n                \"surveyName\": \"\",\n                \"frequency\": \"\",\n                \"compilation\": \"\",\n                \"geographicCoverage\": \"\",\n                \"sampleSize\": null,\n                \"lastRevised\": \"\",\n                \"nationalStatistic\": false,\n                \"keywords\": [],\n                \"metaDescription\": \"\"\n            },\n            \"markdown\": [],\n            \"downloads\": [],\n            \"relatedDocuments\": [],\n            \"relatedDatasets\": [],\n            \"relatedMethodology\": [],\n            \"relatedMethodologyArticle\": [],\n            \"links\": [],\n            type: pageType\n        };\n    } else if (pageType === \"static_foi\") {\n        return {\n            \"description\": {\n                \"title\": \"\",\n                \"releaseDate\": \"\",\n                \"keywords\": [],\n                \"metaDescription\": \"\"\n            },\n            \"downloads\": [],\n            \"markdown\": [],\n            \"links\": [],\n            type: pageType\n        };\n    } else if (pageType === \"static_adhoc\") {\n        return {\n            \"description\": {\n                \"title\": \"\",\n                \"releaseDate\": \"\",\n                \"reference\": null,\n                \"keywords\": [],\n                \"metaDescription\": \"\"\n            },\n            \"downloads\": [],\n            \"markdown\": [],\n            \"links\": [],\n            type: pageType\n        };\n    } else {\n        sweetAlert('Unsupported page type', 'This is not a static page', \"info\");\n    }\n}/**\n * Creates data JSON\n * @param collectionId\n * @param data\n * @param pageType\n * @param pageEdition\n * @param downloadUrl\n */\n\nfunction loadT8EditionCreator(collectionId, data, pageType, pageEdition, downloadUrl, versionLabel) {\n    var releaseDate = null;             //overwrite scheduled collection date\n    var pageEditionTrimmed, newUri, pageData;\n\n    pageData = pageTypeDataT8(pageType, data);\n    submitNoForm(data.uri, pageEdition, downloadUrl, versionLabel);\n\n    function submitNoForm(parentUrl, edition, downloadUrl) {\n        pageData.description.edition = edition;\n        pageData.description.versionLabel = versionLabel;\n        pageData.downloads.push({file: downloadUrl});\n        pageEditionTrimmed = edition.replace(/[^A-Z0-9]+/ig, \"\").toLowerCase();\n\n        if ((pageType === 'dataset') || (pageType === 'timeseries_dataset')) {\n            newUri = makeUrl(parentUrl, pageEditionTrimmed);\n        } else {\n            sweetAlert('Oops! Something went the wrong.');\n            loadCreateScreen(parentUrl, collectionId);\n        }\n\n        var safeNewUri = checkPathSlashes(newUri);\n\n        putContent(collectionId, safeNewUri, JSON.stringify(pageData),\n            success = function () {\n                updateContent(collectionId, data.uri, JSON.stringify(data));\n            },\n            error = function (response) {\n                if (response.status === 409) {\n                    sweetAlert(\"Cannot create this page\", \"It already exists.\");\n                }\n                else {\n                    handleApiError(response);\n                }\n            }\n        );\n    }\n\n    function pageTypeDataT8(pageType, parentData) {\n\n        if (pageType === \"dataset\") {\n            return {\n                \"description\": {\n                    \"releaseDate\": parentData.description.releaseDate || \"\",\n                    \"edition\": \"\",\n                    \"versionLabel\": \"\"\n                },\n                \"versions\": [], //{updateDate, uri, correctionNotice, label}\n                \"downloads\": [],\n                \"supplementaryFiles\": [],\n                type: pageType\n            };\n        }\n\n        else if (pageType === \"timeseries_dataset\") {\n            return {\n                \"description\": {\n                    \"releaseDate\": parentData.description.releaseDate || \"\",\n                    \"edition\": \"\",\n                    \"versionLabel\": \"\"\n                },\n                \"versions\": [], //{updateDate, uri, correctionNotice, label}\n                \"downloads\": [],\n                \"supplementaryFiles\": [],\n                type: pageType\n            };\n        }\n\n        else {\n            sweetAlert('Unsupported page type', 'This is not a dataset type');\n        }\n    }\n}\n\n/**\n * Creates data JSON\n * @param collectionId\n * @param releaseDate\n * @param pageType\n * @param parentUrl\n */\n\nfunction loadT8Creator(collectionId, releaseDate, pageType, parentUrl, pageTitle) {\n    var releaseDate = null;             //overwrite scheduled collection date\n    var uriSection, pageTitleTrimmed, releaseDateManual, newUri, pageData;\n    var parentUrlData = parentUrl + \"/data\";\n    // will add this var in dataset_landing_page\n    var timeseries = false;\n    if (pageType === 'timeseries_landing_page') {\n        timeseries = true;\n        pageType = 'dataset_landing_page';\n    }\n\n    $.ajax({\n        url: parentUrlData,\n        dataType: 'json',\n        crossDomain: true,\n        success: function (checkData) {\n            if (checkData.type === 'product_page' && !Florence.globalVars.welsh) {\n                submitFormHandler();\n                return true;\n            } else {\n                sweetAlert(\"This is not a valid place to create this page.\");\n                loadCreateScreen(parentUrl, collectionId);\n            }\n        },\n        error: function () {\n            console.log('No page data returned');\n        }\n    });\n\n    function submitFormHandler() {\n\n        if (!releaseDate) {\n            $('.edition').append(\n                '<label for=\"releaseDate\">Release date</label>' +\n                '<input id=\"releaseDate\" type=\"text\" placeholder=\"day month year\" />'\n            );\n            creatorDatePicker();\n        }\n\n        $('form').off().submit(function (e) {\n            var nameValid = validatePageName();\n            if (!nameValid) {\n                return false;\n            }\n\n            releaseDateManual = $('#releaseDate').val()\n            pageData = pageTypeDataT8(pageType);\n            pageTitle = $('#pagename').val();\n            pageData.description.title = pageTitle;\n            pageData.timeseries = timeseries;\n            uriSection = \"datasets\";\n            pageTitleTrimmed = pageTitle.replace(/[^A-Z0-9]+/ig, \"\").toLowerCase();\n\n            if (!releaseDate) {\n                pageData.description.releaseDate = new Date($('#releaseDate').val()).toISOString();\n            } else {\n                pageData.description.releaseDate = releaseDate;\n            }\n            newUri = makeUrl(parentUrl, uriSection, pageTitleTrimmed);\n            var safeNewUri = checkPathSlashes(newUri);\n\n            if (!pageData.description.releaseDate) {\n                sweetAlert('Release date can not be empty');\n                return true;\n            }\n            if (pageTitle.length < 5) {\n                sweetAlert(\"This is not a valid file title\");\n                return true;\n            }\n            else {\n                saveContent(collectionId, safeNewUri, pageData);\n            }\n            e.preventDefault();\n        });\n    }\n\n    function pageTypeDataT8(pageType) {\n\n        if (pageType === \"dataset_landing_page\") {\n            return {\n                \"description\": {\n                    \"releaseDate\": \"\",\n                    \"nextRelease\": \"\",\n                    \"contact\": {\n                        \"name\": \"\",\n                        \"email\": \"\",\n                        \"telephone\": \"\"\n                    },\n                    \"summary\": \"\",\n                    \"datasetId\": \"\",\n                    \"keywords\": [],\n                    \"metaDescription\": \"\",\n                    \"nationalStatistic\": false,\n                    \"title\": \"\"\n                },\n                \"timeseries\": false,\n                \"datasets\": [],\n                \"section\": {},      //notes\n                \"corrections\": [],\n                \"relatedDatasets\": [],\n                \"relatedDocuments\": [],\n                \"relatedMethodology\": [],\n                \"relatedMethodologyArticle\": [],\n                \"topics\": [],\n                \"alerts\": [],\n                \"links\": [],\n                type: pageType\n            };\n        }\n        else {\n            sweetAlert('Unsupported page type. This is not a dataset type');\n        }\n    }\n}\n\nfunction loadTableBuilder(pageData, onSave, table) {\n  var pageUrl = pageData.uri;\n  var html = templates.tableBuilder(table);\n  var previewTable;\n  var path;\n  var xlsPath;\n  var htmlPath;\n  var currentTable = table;\n\n  $('body').append(html);\n\n  if (table) {\n    renderTable(table.uri);\n    $('#table-modify-form').show();\n  }\n\n  /** Upload a XLS file **/\n  $('#upload-table-form').submit(function (event) {\n    var formData = new FormData($(this)[0]);\n    previewTable = buildJsonObjectFromForm(previewTable);\n\n    if ( $(\"#files\").val() ) {\n      var errors = validateTableModifications(previewTable);\n      if (!errors.exist()) {\n        uploadFile(previewTable, formData);\n      } else {\n        errors.show();\n      }\n    } else {\n        sweetAlert(\"Validation error\", \"Please select a .xls file to upload.\");\n    }\n  });\n\n    /** Upload the file. **/\n  function uploadFile(previewTable, formData) {\n    path = previewTable.uri;\n    xlsPath = path + \".xls\";\n    htmlPath = path + \".html\";\n\n    // send xls file to zebedee\n    $.ajax({\n      url: \"/zebedee/content/\" + Florence.collection.id + \"?uri=\" + xlsPath,\n      type: 'POST',\n      data: formData,\n      async: false,\n      cache: false,\n      contentType: false,\n      processData: false,\n      success: function () {\n        createTableHtml(previewTable);\n      }\n    });\n    currentTable = previewTable;\n    $('#table-modify-form').show();\n    return false;\n  }\n\n    /** Create HTML **/\n  function createTableHtml(previewTable) {\n    $.ajax({\n      url: \"/zebedee/table/\" + Florence.collection.id + \"?uri=\" + xlsPath,\n      type: 'POST',\n      data: JSON.stringify(previewTable),\n      contentType: 'application/json',\n      dataType: 'text',\n      success: function (html) {\n        saveTableJson(previewTable, success = function () {\n          saveTableHtml(html);\n        });\n      }\n    });\n  }\n\n  function saveTableJson(table, success) {\n    var tableJson = table.uri + \".json\";\n\n    $.ajax({\n      url: \"/zebedee/content/\" + Florence.collection.id + \"?uri=\" + tableJson,\n      type: 'POST',\n      data: JSON.stringify(table),\n      processData: false,\n      contentType: 'application/json',\n      success: function () {\n        if (success) {\n          success();\n        }\n      }\n    });\n  }\n\n  /** Save HTML **/\n  function saveTableHtml(data) {\n    $.ajax({\n      url: \"/zebedee/content/\" + Florence.collection.id + \"?uri=\" + htmlPath + \"&validateJson=false\",\n      type: 'POST',\n      data: data,\n      processData: false,\n      success: function () {\n        addFilesToPreview();\n        renderTable(path);\n        $('#table-metadata-form').slideDown(\"slow\");\n      }\n    });\n  }\n\n  function addFilesToPreview() {\n    previewTable.files = [];\n    previewTable.files.push({type: 'download-xls', filename: previewTable.filename + '.xls'});\n    previewTable.files.push({type: 'html', filename: previewTable.filename + '.html'});\n  }\n\n  function renderTable(path) {\n    var iframeMarkup = '<iframe id=\"preview-frame\" style=\"opacity:0\" frameBorder =\"0\" scrolling = \"yes\" src=\"' + path + '\"></iframe>';\n    $('#preview-table').html(iframeMarkup);\n    var iframe = $('#preview-frame');\n    iframe.load(function () {\n      var contents = iframe.contents();\n      contents.find('body').css(\"background\", \"transparent\");\n      contents.find('body').css(\"width\", \"480px\");\n      contents.find('.markdown-table-wrap').css('width', '700px');\n      iframe.height(contents.find('html').height());\n      iframe.css(\"opacity\", \"1\");\n    });\n  }\n\n  /** Submit modifications details. **/\n  $('#table-modify-form').submit(function (event) {\n    event.preventDefault();\n    previewModifications();\n  });\n\n  function previewModifications() {\n    previewTable = buildJsonObjectFromForm(previewTable);\n    var errors = validateTableModifications(previewTable);\n\n    if (!errors.exist()) {\n        postModifyTableForm(previewTable);\n    } else {\n        errors.show();\n    }\n  }\n\n  /** Validate the form contains correct data. **/\n  function validateTableModifications(tableData) {\n    var errors = {\n        messages: [],\n        exist: function () {\n            return this.messages.length > 0;\n        },\n\n        show: function () {\n          var msg = \"\";\n          this.messages.forEach( function (item) {\n            msg = msg + item + \"\\n\";\n          });\n          sweetAlert(\"Validation error\", msg);\n        }\n    }\n\n    var mods = tableData.modifications;\n    validateList(mods.rowsExcluded, \"Rows Excluded\", errors);\n    validateList(mods.headerRows, \"Table Header Rows\", errors);\n    validateList(mods.headerColumns, \"Table Header Columns\", errors);\n\n    if (mods.rowsExcluded.length > 0 && mods.headerRows.length > 0) {\n        mods.headerRows.forEach( function (header) {\n            if ($.inArray(header, mods.rowsExcluded) >= 0) {\n                errors.messages.push(\"Row \" + header + \" is excluded and cannot be set as a Header Row.\");\n            }\n        });\n    }\n    return errors;\n  }\n\n  /** Post the modify table form. **/\n  function postModifyTableForm(tableData) {\n    var currentUri = currentTable ? currentTable.uri : tableData.uri;\n    var tableMetadataUrl = \"/zebedee/modifytable/\" + Florence.collection.id + \"?currentUri=\" + currentUri + \"&newUri=\" + tableData.uri + \"&validateJson=false\";\n\n    $.ajax({\n      url: tableMetadataUrl,\n      type: 'POST',\n      dataType: 'text',\n      contentType: 'application/json',\n      data: JSON.stringify(tableData),\n      success: function ( response ) {\n        getSavedTableModifications(tableData.uri);\n        addFilesToPreview();\n      },\n      error: function (response) {\n        getSavedTableModifications(tableData.uri);\n        addFilesToPreview();\n        handleApiError(response);\n      }\n    });\n  }\n\n  /** Get the current saved values of the table modifications. **/\n  function getSavedTableModifications(uri) {\n    var updatedContentUri = \"/zebedee/modifytable/\" + Florence.collection.id + \"?uri=\" + uri + \".json\";\n    $.ajax({\n      url: updatedContentUri,\n      type: 'GET',\n      dataType: 'json',\n      success: function (json) {\n        updateTableModificationForm(json);\n        renderTable(uri);\n        $('#table-modify-form').slideDown(\"slow\");\n      }\n    });\n  }\n\n  /** Update the table modifications form. **/\n  function updateTableModificationForm(tableJson) {\n    $(\"#rows-excluded\").val(\"\");\n    $(\"#header-rows\").val(\"\");\n    $(\"#header-columns\").val(\"\");\n    $(\"#rows-excluded\").val(asCommaSeparatedStr(tableJson.modifications.rowsExcluded));\n    $(\"#header-rows\").val(asCommaSeparatedStr(tableJson.modifications.headerRows));\n    $(\"#header-columns\").val(asCommaSeparatedStr(tableJson.modifications.headerColumns));\n  }\n\n  /** Delete / Cancel **/\n  $('.btn-table-builder-cancel').on('click', function () {\n    $('.table-builder').stop().fadeOut(200).remove();\n\n    // delete the preview table\n    if (previewTable) {\n      $(previewTable.files).each(function (index, file) {\n        var fileToDelete = pageUrl + '/' + file.filename;\n        deleteContent(Florence.collection.id, fileToDelete,\n          onSuccess = function () {\n            console.log(\"deleted table file: \" + fileToDelete);\n          });\n      });\n\n      deleteContent(Florence.collection.id, previewTable.uri + \".json\", function(){}, function(){});\n    }\n  });\n\n  /** Save **/\n  $('.btn-table-builder-create').on('click', function () {\n    // if uploaded = true rename the preview table\n    previewTable = buildJsonObjectFromForm(previewTable);\n    var tableExists = false;\n\n    if (table) {\n      tableExists = true;\n      table = mapJsonValues(previewTable, table);\n    } else { // just keep the preview files\n      table = previewTable;\n      addTableToPageJson(table);\n    }\n\n    saveTableJson(table, success=function() {\n      if (tableExists) {\n\n        if (previewTable.files.length == 0) {\n            addFilesToPreview();\n        }\n\n        // if a table exists, rename the preview to its name\n        $(previewTable.files).each(function (index, file) {\n          var fromFile = pageUrl + '/' + file.filename;\n          var toFile = pageUrl + '/' + file.filename.replace(previewTable.filename, table.filename);\n          console.log(\"moving... table file: \" + fromFile + \" to: \" + toFile);\n          renameContent(Florence.collection.id, fromFile, toFile,\n            onSuccess = function () {\n              console.log(\"Moved table file: \" + fromFile + \" to: \" + toFile);\n            });\n        });\n        deleteContent(Florence.collection.id, previewTable.uri + \".json\", function(){}, function(){});\n      }\n\n      if (onSave) {\n        onSave(table.filename, '<ons-table path=\"' + table.filename + '\" />');\n      }\n      $('.table-builder').stop().fadeOut(200).remove();\n    });\n  });\n\n  setShortcuts('#table-title');\n\n  function addTableToPageJson(table) {\n    if (!pageData.tables) {\n      pageData.tables = [];\n    } else {\n\n      var existingTable = _.find(pageData.tables, function (existingTable) {\n        return existingTable.filename === table.filename;\n      });\n\n      if (existingTable) {\n        existingTable.title = table.title;\n        return;\n      }\n    }\n\n    pageData.tables.push({title: table.title, filename: table.filename, uri: table.uri});\n  }\n\n  function mapJsonValues(from, to) {\n    to = buildJsonObjectFromForm(to);\n\n    $(from.files).each(function (fromIndex, fromFile) {\n      var fileExistsInImage = false;\n\n      $(to.files).each(function (toIndex, toFile) {\n        if (fromFile.type == toFile.type) {\n          fileExistsInImage = true;\n          toFile.fileName = fromFile.fileName;\n          toFile.fileType = fromFile.fileType;\n        }\n      });\n\n      if(!fileExistsInImage) {\n        to.files.push(fromFile);\n      }\n\n    });\n\n    return to;\n  }\n\n  function buildJsonObjectFromForm(table) {\n    if (!table) {\n      table = {};\n    }\n\n    table.type = 'table';\n    table.title = $('#table-title').val();\n\n    if (!table.filename) {\n        table.filename = StringUtils.randomId();\n    }\n\n    table.uri = pageUrl + \"/\" + table.filename;\n\n    if (table.title === '') {\n      table.title = '[Title]';\n    }\n\n    if (!table.files) {\n      table.files = [];\n    }\n\n    table.modifications = {};\n    table.modifications.rowsExcluded = inputAsList(\"#rows-excluded\", []);\n    table.modifications.headerRows = inputAsList(\"#header-rows\", []);\n    table.modifications.headerColumns = inputAsList(\"#header-columns\", []);\n    return table;\n  }\n\n  function asCommaSeparatedStr(_list) {\n    var currentValues = \"\";\n    _list.forEach( function( item) {\n      currentValues = item + \", \" + currentValues;\n    });\n    return currentValues.substring(0, currentValues.lastIndexOf(\",\"));\n  }\n\n  /** Converts a comma separated string to a list **/\n  function inputAsList(_elemId, _list) {\n    if ( $(_elemId).val() ) {\n      var valuesString = $(_elemId).val().split(\",\");\n      valuesString.forEach( function(item) {\n        var value = item.trim();\n        if (value) {\n          _list.push(value);\n        }\n      });\n    }\n    return _list;\n  }\n\n  function validateList(_list, fieldName, errors) {\n    if (_list.length == 0) {\n        return errors;\n    }\n\n    for (i = 0; i < _list.length; i++) {\n      var value = _list[i];\n      if (isNaN(value) || (!value)) {\n        errors.messages.push(fieldName + \" is invalid.\");\n        isValid = false;\n        break;\n      }\n    }\n    return errors;\n  }\n}\n\nfunction loadTablesList(collectionId, data) {\n    var html = templates.workEditTables(data);\n    $('#tables').replaceWith(html);\n    initialiseTablesList(collectionId, data);\n    initialiseClipboard();\n}\n\nfunction refreshTablesList(collectionId, data) {\n    var html = templates.workEditTables(data);\n    $('#table-list').replaceWith($(html).find('#table-list'));\n    initialiseTablesList(collectionId, data);\n    initialiseClipboard();\n}\n\nfunction initialiseTablesList(collectionId, data) {\n\n    $('#add-table').click(function () {\n        loadTableBuilder(data, function () {\n            Florence.Editor.isDirty = false;\n            refreshPreview();\n            refreshTablesList(collectionId, data);\n        });\n    });\n\n    $(data.tables).each(function (index, table) {\n        var basePath = data.uri;\n        var tablePath = basePath + '/' + table.filename;\n        var tableJson = tablePath;\n\n        $(\"#table-edit_\" + index).click(function () {\n            getPageData(collectionId, tableJson,\n                onSuccess = function (tableData) {\n                    loadTableBuilder(data, function () {\n                        Florence.Editor.isDirty = false;\n                        refreshPreview();\n                        refreshTablesList(collectionId, data);\n                    }, tableData);\n                })\n        });\n\n        $(\"#table-delete_\" + index).click(function () {\n            swal({\n                title: \"Warning\",\n                text: \"Are you sure you want to delete this table?\",\n                type: \"warning\",\n                showCancelButton: true,\n                confirmButtonText: \"Delete\",\n                cancelButtonText: \"Cancel\",\n                closeOnConfirm: false\n            }, function (result) {\n                if (result === true) {\n                    $(this).parent().remove();\n                    // delete any files associated with the table.\n                    var extraFiles = [table.filename + '.html', table.filename + '.xls'];\n                    _(extraFiles).each(function (file) {\n                        var fileToDelete = basePath + '/' + file;\n                        deleteContent(collectionId, fileToDelete,\n                            onSuccess = function () {\n                            },\n                            onError = function (error) {\n                            });\n                    });\n\n                    // remove the table from the page json when its deleted\n                    data.tables = _(data.tables).filter(function (item) {\n                        return item.filename !== table.filename\n                    });\n                    // save the updated page json\n                    putContent(collectionId, basePath, JSON.stringify(data),\n                        success = function () {\n\n                            // delete the table json file\n                            deleteContent(collectionId, tableJson + '.json', onSuccess = function () {\n                            }, onError = function (error) {\n                            });\n\n                            Florence.Editor.isDirty = false;\n                            refreshTablesList(collectionId, data);\n\n                            swal({\n                                title: \"Deleted\",\n                                text: \"This table has been deleted\",\n                                type: \"success\",\n                                timer: 2000\n                            });\n                        },\n                        error = function (response) {\n                            if (response.status !== 404)\n                                handleApiError(response);\n                        }\n                    );\n\n\n                }\n            });\n        });\n    });\n    // Make sections sortable\n    function sortable() {\n        $('#sortable-table').sortable();\n    }\n\n    sortable();\n}/**\n * Creates data visualisation's JSON\n * @param collectionId\n * @param pageType\n * @param collectionData\n */\n\nfunction loadVisualisationCreator(collectionId, pageType, collectionData) {\n    var pageData, pageTitle, pageId, newUri, safeNewUri, uriSection, pageIdTrimmed;\n    var parentUrlData = \"/data\";\n    $.ajax({\n        url: parentUrlData,\n        dataType: 'json',\n        crossDomain: true,\n        success: function (checkData) {\n            //Checks page is being built in root - the directory is not recognised, so we're looking for the home_page page type\n            if (checkData.type === 'home_page') {\n                submitFormHandler();\n                return true;\n            } else {\n                sweetAlert(\"This is not a valid place to create this page.\");\n                //TODO load data vis directory\n            }\n        },\n        error: function () {\n            console.log('No page data returned');\n        }\n    });\n\n    function submitFormHandler() {\n        pageData = pageTypeDataVisualisation(pageType);\n\n        // Prepend unique code field into create form\n        var codeInput = \"<label for='visualisation-uid'>Unique ID</label><input placeholder='Eg DVC126' type='text' id='visualisation-uid'>\";\n        $('.edition').after(codeInput);\n\n        $('form').submit(function(e) {\n            e.preventDefault();\n            var nameValid = validatePageName();\n            if (!nameValid) {\n                return false;\n            }\n\n            // Update page title and UID\n            pageTitle = $('#pagename').val();\n            pageData.description.title = pageTitle;\n            pageId = $('#visualisation-uid').val();\n            pageData.uid = pageId;\n\n            // Save the new page\n            pageIdTrimmed = pageId.replace(/[^A-Z0-9]+/ig, \"\").toLowerCase();\n            uriSection = \"visualisations\";\n            newUri = makeUrl(uriSection, pageIdTrimmed);\n            safeNewUri = checkPathSlashes(newUri);\n            Florence.globalVars.pagePath = safeNewUri;\n            saveContent(collectionId, safeNewUri, pageData, collectionData);\n        });\n\n    }\n}\n\nfunction pageTypeDataVisualisation(pageType) {\n    return {\n        description: {\n            title: \"\"\n        },\n        uid: \"\",\n        type: pageType,\n        zipTitle: \"\",\n        filenames: [],\n        indexPage: \"\"\n\n    };\n}\n\n\n/**\n * Logout the current user and return to the login screen.\n */\nfunction logout() {\n  delete_cookie('access_token');\n  delete_cookie('collection');\n  localStorage.setItem(\"loggedInAs\", \"\");\n  localStorage.setItem(\"userType\", \"\");\n  Florence.refreshAdminMenu();\n  viewController();\n}\n\nfunction delete_cookie(name) {\n  document.cookie = name + '=; path=/; expires=Thu, 01 Jan 1970 00:00:01 GMT;';\n}function makeUrl(args) {\n  var accumulator;\n  accumulator = [];\n  for(var i=0; i < arguments.length; i++) {\n    accumulator =  accumulator.concat(arguments[i]\n                              .split('/')\n                              .filter(function(argument){return argument !== \"\";}));\n  }\n  return accumulator.join('/');\n}\n\n/**\n * Manages markdown content\n * @param collectionId\n * @param data\n * @param field - JSON data key\n * @param idField - HTML id for the template\n */\nfunction renderMarkdownContentAccordionSection(collectionId, data, field, idField) {\n\n    // the list of content sections to render in accordion section.\n    var list = data[field];\n\n    // a view model including the list and field name the list is contained in.\n    var dataTemplate = {list: list, idField: idField};\n\n    // render the HTML for the accordion section.\n    var html = templates.editorContent(dataTemplate);\n\n    // inject the HTML into the accordion section\n    $('#' + idField).replaceWith(html);\n\n    // attach event handlers for the buttons.\n    initialiseMarkdownContentAccordionSection(collectionId, data, field, idField)\n}\n\nfunction refreshMarkdownContentAccordionSection(collectionId, data, field, idField) {\n    var list = data[field];\n    var dataTemplate = {list: list, idField: idField};\n    var html = templates.editorContent(dataTemplate);\n    $('#sortable-' + idField).replaceWith($(html).find('#sortable-' + idField));\n    initialiseMarkdownContentAccordionSection(collectionId, data, field, idField)\n}\n\nfunction initialiseMarkdownContentAccordionSection(collectionId, data, field, idField) {\n\n    // for each entry in the list\n    function debugLogAccordionSection() {\n        for (var i = 0; i < data[field].length; i++) {\n            console.log(data[field][i].title)\n        }\n    }\n\n    $(data[field]).each(function (index) {\n\n        $('#' + idField + '-title_' + index).on('input', function () {\n            data[field][index].title = $(this).val();\n            //debugLogAccordionSection();\n        });\n\n        // attach edit handler\n        $('#' + idField + '-edit_' + index).click(function () {\n\n            // create view model to pass to the markdown editor\n            var editedSectionValue = {\n                \"title\": data[field][index].title,\n                \"markdown\": data[field][index].markdown\n            };\n\n            // create the function to define what happens on save in the markdown editor\n            var saveContent = function (updatedContent) {\n                data[field][index].markdown = updatedContent;\n                saveContentThenRefreshSection(collectionId, data.uri, data, field, idField);\n\n                // when finished in the markdown editor be sure to refresh the charts / tables / images list to show any newly added\n                refreshChartList(collectionId, data);\n                refreshTablesList(collectionId, data);\n                refreshEquationsList(collectionId, data);\n                refreshImagesList(collectionId, data);\n            };\n\n            loadMarkdownEditor(editedSectionValue, saveContent, data);\n        });\n\n        // attach delete handler\n        $('#' + idField + '-delete_' + index).click(function () {\n            swal({\n                title: \"Warning\",\n                text: \"Are you sure you want to delete?\",\n                type: \"warning\",\n                showCancelButton: true,\n                confirmButtonText: \"Delete\",\n                cancelButtonText: \"Cancel\",\n                closeOnConfirm: false\n            }, function (result) {\n                if (result === true) {\n\n                    // delete the item from the data model\n                    data[field].splice(index, 1);\n\n                    // post content to the server and refresh accordion section view.\n                    saveContentThenRefreshSection(collectionId, data.uri, data, field, idField);\n\n                    swal({\n                        title: \"Deleted\",\n                        text: \"This \" + idField + \" has been deleted\",\n                        type: \"success\",\n                        timer: 2000\n                    });\n                }\n            });\n        });\n    });\n\n    // Attach add new handler.\n    $('#add-' + idField).off().one('click', function () {\n        data[field].push({markdown: \"\", title: \"\"});\n        saveContentThenRefreshSection(collectionId, data.uri, data, field, idField);\n    });\n\n    function sortable() {\n\n        var sortableStartPosition;\n\n        $('#sortable-' + idField).sortable({\n            start: function (event, ui) {\n\n                // remember the index of the item at the start of drag + drop\n                sortableStartPosition = ui.item.index();\n                //console.log(\"sortable start: \" + sortableStartPosition);\n            },\n            stop: function (event, ui) {\n\n                // determine the new index of the item after being dropped.\n                var sortableEndPosition = ui.item.index();\n                //console.log(\"sortable update: Start: \" + sortableStartPosition + \" now: \" + sortableEndPosition) ;\n\n                var sectionsArray = data[field];\n                var item = data[field][sortableStartPosition];\n\n                // Move the item from the start drag position to the end drop position in the data model.\n                sectionsArray.splice(sortableStartPosition, 1);\n                sectionsArray.splice(sortableEndPosition, 0, item);\n\n                saveContentThenRefreshSection(collectionId, data.uri, data, field, idField);\n            }\n        });\n    }\n\n    sortable();\n\n    function saveContentThenRefreshSection(collectionId, path, data, field, idField) {\n        putContent(collectionId, path, JSON.stringify(data),\n            success = function () {\n                Florence.Editor.isDirty = false;\n                refreshMarkdownContentAccordionSection(collectionId, data, field, idField);\n                refreshPreview(data.uri);\n            },\n            error = function (response) {\n                if (response.status === 400) {\n                    sweetAlert(\"Cannot edit this page\", \"It is already part of another collection.\");\n                }\n                else {\n                    handleApiError(response);\n                }\n            }\n        );\n    }\n}\n\nfunction markDownEditorSetLines() {\n  var textarea = $(\"#wmd-input\");\n  // var linesHolder = $('.markdown-editor-line-numbers');\n  var textareaWidth = textarea.width();\n  var charWidth = 7;\n  var lineHeight = 21;\n  var textareaMaxChars = Math.floor(textareaWidth / charWidth);\n  var lines = textarea.val().split('\\n');\n  var linesLi = '';\n  var cursorEndPos = textarea.prop('selectionEnd');\n  var charMapArray = [];\n  var charMapArrayJoin = [];\n  var lineLengthArray = [];\n  var contentLength = textarea.val().length;\n  var cumulativeLineLength = 0;\n  // var cursorLine = textarea.prop('selectionStart').split('\\n').length;\n  $.each(lines, function(index){\n    var lineNumber = index + 1;\n    var lineLength = this.length;\n    var lineWrap = Math.round(lineLength / textareaMaxChars);\n    // var lineWrap = Math.floor(lineLength / textareaMaxChars);\n    // var lineWrap = Math.ceil(lineLength / textareaMaxChars);\n\n    //console.log('max chars: ' + textareaMaxChars);\n    //console.log('line length: ' + lineLength);\n\n    var numberOfLinesCovered = StringUtils.textareaLines(this, textareaMaxChars, 0, 0);\n    var liPaddingBottom = numberOfLinesCovered * lineHeight;\n\n    if(lineNumber === 1) {\n      cumulativeLineLength += lineLength;\n    } else {\n      cumulativeLineLength += lineLength + 1;\n      // console.log('+1');\n    }\n\n    linesLi += '<li id=\"markdownEditorLine-' + lineNumber + '\" style=\"padding-bottom:' + liPaddingBottom +'px\">&nbsp;</li>';\n    lineLengthArray.push(cumulativeLineLength);\n\n    //push to charmap\n    // charMapArray.push(this.replace(this.split(''), lineNumber));\n    // console.log(this.selectionStart);\n    //console.log('line wrap: ' + lineWrap + ' (' + lineLength / textareaMaxChars + ')');\n  });\n\n  if(linesLi) {\n    var linesOl = '<ol>' + linesLi + '</ol>';\n    $('#markdown-editor-line-numbers').html(linesOl);\n    // console.log(linesOl);\n  }\n\n  //sync scroll\n  // $('.markdown-editor-line-numbers ol').css('margin-top', -textarea.scrollTop());\n  // textarea.on('scroll', function () {\n  //   // var editorHeight = $('.wmd-input').height();\n  //   // var previewHeight = $('.wmd-preview').height();\n  //   // console.log(editorHeight);\n  //   var marginTop = $(this).scrollTop();\n  //   $('.markdown-editor-line-numbers ol').css('margin-top', -marginTop);\n  //   $('.wmd-preview').scrollTop(marginTop);\n  // });\n\n\n  //proportional scroll\n  //var $wmdscrollsync = $('.wmd-input, .wmd-preview');\n  //var wmdsync = function(e){\n  //    var $other = $wmdscrollsync.not(this).off('scroll'), other = $other.get(0);\n  //    var percentage = this.scrollTop / (this.scrollHeight - this.offsetHeight);\n  //    other.scrollTop = percentage * (other.scrollHeight - other.offsetHeight);\n  //    setTimeout( function(){ $other.on('scroll', wmdsync ); },10);\n  //}\n  //$wmdscrollsync.on( 'scroll', wmdsync);\n\n\n\n  for (var i = 0; i < lineLengthArray.length; i++) {\n    if(cursorEndPos <= lineLengthArray[i]) {\n      // console.log(i + 1);\n      var activeLine = i + 1;\n      $('#markdownEditorLine-' + activeLine).addClass('active');\n      break;\n    }\n    // console.log(lineLengthArray[i]);\n    //Do something\n  }\n\n\n\n}\nfunction menuselect(classId) {\n  $.widget(\"custom.iconselectmenu\", $.ui.selectmenu, {\n    _renderItem: function(ul, item) {\n      var li = $(\"<li>\", {\n        text: item.label\n      });\n\n      if (item.disabled) {\n        li.addClass(\"ui-state-disabled\");\n      }\n\n      $(\"<span>\", {\n        style: item.element.attr(\"data-style\"),\n        \"class\": \"ui-icon \" + item.element.attr(\"data-class\")\n      })\n        .appendTo(li);\n\n      return li.appendTo(ul);\n    }\n  });\n\n  $(classId)\n    .iconselectmenu()\n    .iconselectmenu(\"menuWidget\")\n    .addClass(\"ui-menu-icons customicons\");\n}/**\n * Overlays modal for selecting where a node of the browse tree is being moved to\n * @param fromUrl - where the node is being moved from\n */\n\nfunction moveBrowseNode(fromUrl) {\n    var moveToBtn = \"<button class='btn btn--positive btn-browse-move-to'>Move here</button>\",\n        moveInProgress = true, // flag to use to see state of move process\n        headerHeight = 98,\n        $browseTree = $('#browse-tree'),\n        $wrapper = $('.wrapper'),\n        overlay = $('<div class=\"overlay\"></div>'),\n        browseTreeMoveHeader = $('<div class=\"workspace-menu__header\"><h2>Select a location</h2></div>'),\n        $treeBrowser = $('.workspace-browse');\n\n    // Toggle buttons on selected item\n    showBrowseTreeModal();\n    toggleMoveHereButton();\n\n    // Switch off browse tree changes updating the preview or global pagePath\n    $('.js-browse__item-title').off().click(function (e) {\n        var $this = $(this),\n            itemUrl = $this.closest('.js-browse__item').attr('data-url');\n\n        // Set previously selected item to normal\n        toggleMoveHereButton();\n\n        if (itemUrl) {\n            treeNodeSelect(itemUrl);\n        } else {\n            selectParentDirectories($this);\n        }\n\n        openBrowseBranch($this);\n\n        // Toggle buttons on newly selected item\n        toggleMoveHereButton();\n\n        $('.btn-browse-move-to').click(function() {\n\n            // Data to be sent to Zebedee\n            var toUrl = $(this).closest('.js-browse__item').attr('data-url'),\n                moveData = {fromUrl: fromUrl, toUrl: toUrl};\n            console.log('Move data: ', moveData);\n\n            // Remove current event binding and return ordinary browse tree functionality\n            $('.js-browse__item-title').off();\n            bindBrowseTreeClick();\n\n            // Set state of move to finished\n            moveInProgress = false;\n\n            // Show ordinary browse tree buttons\n            toggleMoveHereButton();\n            hideBrowseTreeModal();\n\n        });\n\n    });\n\n    // Removes the usual buttons on browse tree items and replaces them with a single 'Move here' button\n    function toggleMoveHereButton() {\n        var $thisButtons = $('.page__buttons--list.selected'),\n            $moveToButton = $('.btn-browse-move-to');\n\n        // Remove previous, so they're not littered around the DOM or if move is finished\n        $moveToButton.remove();\n\n        // Toggle current buttons (show if move is finished or hide if move is in progress\n        $thisButtons.find('.js-browse__buttons--primary, .js-browse__buttons--secondary').toggle();\n\n        if (moveInProgress) {\n            // Hide existing buttons in selected item and add in new 'Move here' button\n            $thisButtons.append(moveToBtn);\n        }\n\n    }\n\n    function showBrowseTreeModal() {\n        // give blacked put appearance to page\n        $wrapper.append(overlay);\n        // add move header to browse tree\n        $browseTree.prepend(browseTreeMoveHeader);\n        // bring browse tree element in front of overlay\n        $browseTree.css({'z-index': 1001, 'position': 'relative'});\n        // resize browser height because adding header has taken up space\n        $treeBrowser.height($treeBrowser[0].offsetHeight - headerHeight);\n    }\n\n    function hideBrowseTreeModal() {\n        //remove overlay & header\n        overlay.remove();\n        browseTreeMoveHeader.remove();\n        // 'reset' z-index\n        $browseTree.css({'z-index': 1, 'position': 'relative'});\n        // calculate size after removing header\n        $treeBrowser.height($treeBrowser[0].offsetHeight + headerHeight);\n    }\n\n}\nfunction parseURL(url) {\n    var parser = document.createElement('a'),\n        searchObject = {},\n        queries, split, i;\n    // Let the browser do the work\n    parser.href = url;\n    // Convert query string to object\n    queries = parser.search.replace(/^\\?/, '').split('&');\n    for( i = 0; i < queries.length; i++ ) {\n        split = queries[i].split('=');\n        searchObject[split[0]] = split[1];\n    }\n    return {\n        protocol: parser.protocol,\n        host: parser.host,\n        hostname: parser.hostname,\n        port: parser.port,\n        pathname: parser.pathname,\n        search: parser.search,\n        searchObject: searchObject,\n        hash: parser.hash\n    };\n}\n\nfunction postApproveCollection(collectionId) {\n    $.ajax({\n        url: \"/zebedee/approve/\" + collectionId,\n        dataType: 'json',\n        contentType: 'application/json',\n        crossDomain: true,\n        type: 'POST',\n        success: function () {\n            // $('.over').remove(); // Commented because I can't see what this does at the moment?\n            hidePanel({onHide: function(){\n                    // Select collections tab\n                    viewController('collections')\n                }\n            });\n        },\n        error: function (response) {\n            // $('.over').remove();\n            if (response.status === 409) {\n                sweetAlert(\"Cannot approve this collection\", \"It contains files that have not been approved.\");\n            }\n            else {\n                handleApiError(response);\n            }\n        }\n    });\n}\nfunction saveAndCompleteContent(collectionId, path, content, recursive, redirectToPath) {\n\n    if (!recursive) {\n        recursive = false;\n    }\n\n    putContent(collectionId, path, content,\n        success = function () {\n            Florence.Editor.isDirty = false;\n            if (redirectToPath) {\n                completeContent(collectionId, path, recursive, redirectToPath);\n            } else {\n                completeContent(collectionId, path, recursive);\n            }\n        },\n        error = function (response) {\n            if (response.status === 400) {\n                sweetAlert(\"Cannot edit this page\", \"It is already part of another collection.\");\n            }\n            else {\n                handleApiError(response);\n            }\n        },\n        recursive);\n}\n\nfunction completeContent(collectionId, path, recursive, redirectToPath) {\n    var redirect = redirectToPath;\n    var safePath = checkPathSlashes(path);\n    if (safePath === '/') {\n        safePath = '';          // edge case for home\n    }\n\n    if (Florence.globalVars.welsh) {\n        var url = \"/zebedee/complete/\" + collectionId + \"?uri=\" + safePath + \"/data_cy.json\";\n    } else {\n        var url = \"/zebedee/complete/\" + collectionId + \"?uri=\" + safePath + \"/data.json\";\n    }\n\n    var url = url + '&recursive=' + recursive;\n\n    // Update content\n    $.ajax({\n        url: url,\n        dataType: 'json',\n        contentType: 'application/json',\n        type: 'POST',\n        success: function () {\n            if (redirect) {\n                createWorkspace(redirect, collectionId, 'edit');\n                return;\n            } else {\n                // Remove selection from 'working on: collection' tab\n                $('.js-nav-item--collection').hide();\n                $('.js-nav-item').removeClass('selected');\n                $('.js-nav-item--collections').addClass('selected');\n\n                viewCollections(collectionId);\n            }\n        },\n        error: function (response) {\n            handleApiError(response);\n        }\n    });\n}\n/**\n * save content to zebedee, making it in progress in a collection.\n * @param collectionId\n * @param path\n * @param content\n * @param overwriteExisting - should the content be overwritten if it already exists?\n * @param recursive - should we recurse the directory of the file and make all files under it in progress?\n * @param success\n * @param error\n */\nfunction postContent(collectionId, path, content, overwriteExisting, recursive, success, error) {\n    // Temporary workaround for content disappearing from bulletins - store last 10 saves to local storage and update with server response later\n    postToLocalStorage(collectionId, path, content);\n\n\n    var safePath = checkPathSlashes(path);\n    if (safePath === '/') {\n        safePath = '';          // edge case for home\n    }\n\n    if (Florence.globalVars.welsh) {\n        var url = \"/zebedee/content/\" + collectionId + \"?uri=\" + safePath + \"/data_cy.json\";\n        var toAddLang = JSON.parse(content);\n        toAddLang.description.language = 'cy';\n        content = JSON.stringify(toAddLang);\n    } else {\n        var url = \"/zebedee/content/\" + collectionId + \"?uri=\" + safePath + \"/data.json\";\n    }\n\n    var url = url + '&overwriteExisting=' + overwriteExisting;\n    var url = url + '&recursive=' + recursive;\n\n    $.ajax({\n        url: url,\n        dataType: 'json',\n        contentType: 'application/json',\n        type: 'POST',\n        data: content,\n        success: function (response) {\n            addLocalPostResponse(response);\n            success(response);\n        },\n        error: function (response) {\n            addLocalPostResponse(response);\n            if (error) {\n                error(response);\n            } else {\n                handleApiError(response);\n            }\n        }\n    });\n}\n\nfunction postToLocalStorage(collectionId, path, content) {\n    var newSaveTime = new Date();\n    var newId = collectionId;\n    var newPath = path;\n    var newContent = JSON.parse(content);\n\n    console.log(newContent);\n    \n    var localBackup = localStorage.getItem('localBackup');\n\n    if (localBackup == null) {\n        // If storage item doesn't exist yet initialise it with first save\n        localBackup = [\n            {\n                collectionId: newId,\n                content: newContent,\n                path: newPath,\n                saveTime: newSaveTime,\n                postResponse: ''\n            }\n        ]\n    } else {\n        // Parse string back into JSON for reading and writing\n        localBackup = JSON.parse(localBackup);\n\n        var backupLength = localBackup.length;\n\n        // Remove oldest entry if array is full\n        if (backupLength == 10) {\n            localBackup.pop();\n        }\n\n        // Add new entry to the top of the array\n        localBackup.unshift(\n            {\n                collectionId: newId,\n                content: newContent,\n                path: newPath,\n                saveTime: newSaveTime,\n                postResponse: ''\n            }\n        );\n    }\n\n    localBackup = JSON.stringify(localBackup);\n    localStorage.setItem('localBackup', localBackup);\n}\n\nfunction addLocalPostResponse(response) {\n    var localBackup = JSON.parse(localStorage.getItem('localBackup'));\n    localBackup[0].postResponse = response;\n    localStorage.setItem('localBackup', JSON.stringify(localBackup));\n}\n/**\n * Http post to the zebedee API to authenticate a user.\n * @param email - the email of the user to authenticate\n * @param password - the password of the user\n * @returns {boolean}\n */\nfunction postLogin(email, password) {\n    $.ajax({\n        url: \"/zebedee/login\",\n        dataType: 'json',\n        contentType: 'application/json',\n        crossDomain: true,\n        type: 'POST',\n        data: JSON.stringify({\n            email: email,\n            password: password\n        }),\n        success: function (response) {\n            document.cookie = \"access_token=\" + response + \";path=/\";\n            localStorage.setItem(\"loggedInAs\", email);\n\n            // Storing in Redux for use in refactored JS\n            var userState = __webpack_require__(24);\n            userState.email.set(email);\n\n            getUserPermission(\n                function (permission) {\n                    console.log(permission);\n                    // Only allow access to editors and admin\n                    if (permission.admin || permission.editor) {\n                        getPublisherType(permission);\n                        Florence.refreshAdminMenu();\n                        viewController();\n\n                    } else {\n                        logout();\n                        sweetAlert(\"You do not have the permissions to enter here. Please contact an administrator\");\n                    }\n                },\n                function (error) {\n                    logout();\n                    sweetAlert(\"There is a problem with permissions. Please contact an administrator\");\n                },\n                email\n            );\n        },\n        error: function (response) {\n            if (response.status === 417) {\n                viewChangePassword(email, true);\n            } else {\n                handleLoginApiError(response);\n            }\n        }\n    });\n    return true;\n}\n\nfunction getPublisherType(permission) {\n    // Variable for user type to be dispatched to Redux later\n    var userState = __webpack_require__(24),\n        userType;\n\n    // Store in localStorage publisher type\n    if (permission.admin) {\n        localStorage.setItem(\"userType\", \"PUBLISHING_SUPPORT\");\n        userType = \"PUBLISHING_SUPPORT\"\n    } else if (permission.editor && !permission.dataVisPublisher) {\n        localStorage.setItem(\"userType\", \"PUBLISHING_SUPPORT\");\n        userType = \"PUBLISHING_SUPPORT\";\n    } else if (permission.editor && permission.dataVisPublisher) {\n        localStorage.setItem(\"userType\", \"DATA_VISUALISATION\");\n        userType = \"DATA_VISUALISATION\";\n    } else if (!permission.admin && !permission.editor && !permission.dataVisPublisher) {\n        localStorage.setItem(\"userType\", \"VIEWER\");\n        userType = \"VIEWER\";\n    }\n\n    // Update Redux with user type\n    userState.type.set(userType);\n}\nfunction saveAndReviewContent(collectionId, path, content, recursive, redirectToPath) {\n\n    if (!recursive) {\n        recursive = false;\n    }\n\n    putContent(collectionId, path, content,\n        success = function () {\n            Florence.Editor.isDirty = false;\n            if (redirectToPath) {\n                postReview(collectionId, path, recursive, redirectToPath);\n            } else {\n                postReview(collectionId, path, recursive);\n            }\n        },\n        error = function (response) {\n            if (response.status === 400) {\n                sweetAlert(\"Cannot edit this page\", \"It is already part of another collection.\");\n            }\n            else {\n                handleApiError(response);\n            }\n        },\n        recursive);\n}\n\nfunction postReview(collectionId, path, recursive, redirectToPath) {\n    var redirect = redirectToPath;\n    var safePath = checkPathSlashes(path);\n    if (safePath === '/') {\n        safePath = '';          // edge case for home\n    }\n\n    if (Florence.globalVars.welsh) {\n        var url = \"/zebedee/review/\" + collectionId + \"?uri=\" + safePath + \"/data_cy.json\";\n    } else {\n        var url = \"/zebedee/review/\" + collectionId + \"?uri=\" + safePath + \"/data.json\";\n    }\n\n    var url = url + '&recursive=' + recursive;\n\n    // Open the file for editing\n    $.ajax({\n        url: url,\n        dataType: 'json',\n        contentType: 'application/json',\n        type: 'POST',\n        success: function () {\n            if (redirect) {\n                createWorkspace(redirect, collectionId, 'edit');\n                return;\n            } else {\n                // Remove selection from 'working on: collection' tab\n                $('.js-nav-item--collection').hide();\n                $('.js-nav-item').removeClass('selected');\n                $('.js-nav-item--collections').addClass('selected');\n\n                viewCollections(collectionId);\n            }\n        },\n        error: function () {\n            console.log('Error');\n        }\n    });\n}\nfunction postTeam(name) {\n\n    var encodedName = encodeURIComponent(name);\n    $.ajax({\n        url: \"/zebedee/teams/\" + encodedName,\n        dataType: 'json',\n        contentType: 'application/json',\n        type: 'POST',\n        data: JSON.stringify({\n            name: encodedName\n        }),\n        success: function () {\n\n            viewTeams(selectTableRowAndDisplayTeamDetails);\n\n            // on success of view teams, display new team details and highlight team in table\n            function selectTableRowAndDisplayTeamDetails() {\n                var rowToSelect = $(\"table\").find(\"[data-id='\" + name + \"']\");\n                viewTeamDetails(name, rowToSelect);\n            }\n\n        },\n        error: function (response) {\n            handleUserPostError(response);\n        }\n    });\n\n    /**\n     * Handle error response from creating the team.\n     * @param response\n     */\n    function handleUserPostError(response) {\n        if (response.status === 403 || response.status === 401) {\n            sweetAlert(\"You are not permitted to create teams.\");\n        }\n        else if (response.status === 409) {\n            sweetAlert(\"Error\", response.responseJSON.message, \"error\");\n        } else {\n            handleApiError(response);\n        }\n    }\n}\n\nfunction postTeamMember(name, email) {\n    var encodedName = encodeURIComponent(name);\n    $.ajax({\n        url: \"/zebedee/teams/\" + encodedName + \"?email=\" + email,\n        dataType: 'json',\n        contentType: 'application/json',\n        type: 'POST',\n        data: JSON.stringify({\n            name: email\n        }),\n        success: function () {\n            console.log('Team member added: ' + email);\n        },\n        error: function (response) {\n            handleUserPostError(response);\n        }\n    });\n\n    /**\n     * Handle error response from creating the team.\n     * @param response\n     */\n    function handleUserPostError(response) {\n        if (response.status === 403 || response.status === 401) {\n            sweetAlert(\"You are not permitted to add users.\");\n        }\n        else if (response.status === 409) {\n            sweetAlert(\"Error\", response.responseJSON.message, \"error\");\n        } else {\n            handleApiError(response);\n        }\n    }\n}\nfunction postUser(name, email, password, isAdmin, isEditor, isDataVisPublisher) {\n\n    var html = templates.loadingAnimation({dark: true, large: true});\n    sweetAlert({\n        title: \"User being created...\",\n        text: html,\n        showConfirmButton: false,\n        html: true\n    });\n\n    $.ajax({\n        url: \"/zebedee/users\",\n        dataType: 'json',\n        contentType: 'application/json',\n        type: 'POST',\n        data: JSON.stringify({\n            name: name,\n            email: email\n        }),\n        success: function () {\n            console.log('User created');\n            setPassword();\n        },\n        error: function (response) {\n            handleUserPostError(response);\n        }\n    });\n\n    /**\n     * Once the user is created do a separate post to the zebedee API\n     * to set the password.\n     */\n    function setPassword() {\n        postPassword(\n            success = function () {\n                console.log('Password set');\n                setPermissions();\n            },\n            error = null,\n            email,\n            password);\n    }\n\n    /**\n     * Once the user is created and the password is set, set the permissions for the user.\n     */\n    function setPermissions() {\n        postPermission(\n            success = function () {\n                sweetAlert(\"User created\", \"User '\" + email + \"' has been created\", \"success\");\n                viewController('users');\n            },\n            error = null,\n            email = email,\n            admin = isAdmin,\n            editor = isEditor,\n            dataVisPublisher = isDataVisPublisher\n            );\n    }\n\n    /**\n     * Handle error response from creating the user.\n     * @param response\n     */\n    function handleUserPostError(response) {\n        if (response.status === 403 || response.status === 401) {\n            sweetAlert(\"You are not permitted to create users.\");\n        }\n        else if (response.status === 409) {\n            sweetAlert(\"Error\", response.responseJSON.message, \"error\");\n        } else {\n            handleApiError(response);\n        }\n    }\n}\n\nfunction publish(collectionId) {\n\n  // Open the file for editing\n  $.ajax({\n    url: \"/zebedee/publish/\" + collectionId,\n    dataType: 'json',\n    contentType: 'application/json',\n    crossDomain: true,\n    type: 'POST',\n    success: function (response) {\n      $('.over').remove();\n\n      if(response) {\n        sweetAlert(\"Published!\", \"Your collection has successfully published\", \"success\");\n\n        $('.publish-selected').animate({right: \"-50%\"}, 500);\n        // Wait until the animation ends\n        setTimeout(function () {\n          viewController('publish');\n        }, 500);\n      } else {\n        console.log('An error has occurred during the publish process, please contact an administrator. ' + response);\n        sweetAlert(\"Oops!\", 'An error has occurred during the publish process, please contact an administrator.', \"error\");\n      }\n    },\n    error: function (response) {\n      $('.over').remove();\n      handleApiError(response);\n    }\n  });\n}\n\nfunction unlock(collectionId) {\n\n  // Open the file for editing\n  $.ajax({\n    url: \"/zebedee/unlock/\" + collectionId,\n    dataType: 'json',\n    contentType: 'application/json',\n    crossDomain: true,\n    type: 'POST',\n    success: function () {\n      sweetAlert(\"Unlocked!\", \"Your collection has be unlocked from publishing\", \"success\");\n      $('.publish-selected').animate({right: \"-50%\"}, 500);\n      // Wait until the animation ends\n      setTimeout(function () {\n        viewController('publish');\n      }, 500);\n    },\n    error: function (response) {\n      handleApiError(response);\n    }\n  });\n}\n\nfunction refreshPreview(url) {\n\n  if (url) {\n    var safeUrl = checkPathSlashes(url);\n    var newUrl = Florence.babbageBaseUrl + safeUrl;\n    document.getElementById('iframe').contentWindow.location.href = newUrl;\n    $('.browser-location').val(newUrl);\n  }\n  else {\n    var urlStored = Florence.globalVars.pagePath;\n    var safeUrl = checkPathSlashes(urlStored);\n    var newUrl = Florence.babbageBaseUrl + safeUrl;\n    document.getElementById('iframe').contentWindow.location.href = newUrl;\n    $('.browser-location').val(newUrl);\n  }\n}\n\n/**\n * Manages related data\n * @param collectionId\n * @param data\n * @param templateData\n * @param field - JSON data key\n * @param idField - HTML id for the template\n */\n\nfunction renderRelatedItemAccordionSection(collectionId, data, templateData, field, idField) {\n    var list = templateData[field];\n    var dataTemplate = createRelatedItemAccordionSectionViewModel(idField, list, data);\n    var html = templates.editorRelated(dataTemplate);\n    $('#' + idField).replaceWith(html);\n    resolvePageTitlesThenRefresh(collectionId, data, templateData, field, idField);\n    $(\".workspace-edit\").scrollTop(Florence.globalVars.pagePos);\n}\n\nfunction refreshRelatedItemAccordionSection(collectionId, data, templateData, field, idField) {\n    var list = templateData[field];\n    var dataTemplate = createRelatedItemAccordionSectionViewModel(idField, list, data);\n    var html = templates.editorRelated(dataTemplate);\n    $('#sortable-' + idField).replaceWith($(html).find('#sortable-' + idField));\n    initialiseRelatedItemAccordionSection(collectionId, data, templateData, field, idField);\n}\n\nfunction createRelatedItemAccordionSectionViewModel(idField, list, data) {\n    var dataTemplate;\n    var isPublication = (data.type === 'bulletin' || data.type === 'article' || data.type === 'compendium_chapter');\n\n    if (idField === 'article') {\n        dataTemplate = {list: list, idField: idField, idPlural: 'articles (DO NOT USE. TO BE DELETED)'};\n    } else if (idField === 'bulletin') {\n        dataTemplate = {list: list, idField: idField, idPlural: 'bulletins (DO NOT USE. TO BE DELETED)'};\n    } else if (idField === 'dataset') {\n        dataTemplate = {list: list, idField: idField, idPlural: 'datasets'};\n    } else if (idField === 'document') {\n        dataTemplate = {list: list, idField: idField, idPlural: 'bulletins | articles | compendia'};\n    } else if (idField === 'qmi' && isPublication) {\n        // Tell users not to use related QMIs if editing a publication (input being phased out)\n        dataTemplate = {list: list, idField: idField, idPlural: 'QMIs (DO NOT USE. TO BE DELETED)'}\n    } else if (idField === 'qmi') {\n        dataTemplate = {list: list, idField: idField, idPlural: 'QMIs'}\n    } else if (idField === 'methodology' && isPublication) {\n        // Tell users not to use related methodology if editing a publication (input being phased out)\n        dataTemplate = {list: list, idField: idField, idPlural: 'methodology (DO NOT USE. TO BE DELETED)'};\n    } else if (idField === 'methodology') {\n        dataTemplate = {list: list, idField: idField, idPlural: 'methodology'};\n    } else if (idField === 'link') {\n        dataTemplate = {list: list, idField: idField, idPlural: 'links'};\n    } else {\n        dataTemplate = {list: list, idField: idField};\n    }\n    return dataTemplate;\n}\n\nfunction initialiseRelatedItemAccordionSection(collectionId, data, templateData, field, idField) {\n\n    if (data[field]) {\n        $(data[field]).each(function (index) {\n            // Attach delete button handler.\n            $('#' + idField + '-delete_' + index).click(function () {\n                deleteItem(index);\n            });\n        });\n    }\n\n    // attach add button handler.\n    $('#add-' + idField).click(function () {\n        renderRelatedItemModal();\n    });\n\n    // Make sections sortable\n    function sortable() {\n        var sortableStartPosition;\n\n        $('#sortable-' + idField).sortable({\n            start: function (event, ui) {\n\n                // remember the index of the item at the start of drag + drop\n                sortableStartPosition = ui.item.index();\n                console.log(\"sortable start: \" + sortableStartPosition);\n            },\n            stop: function (event, ui) {\n\n                // determine the new index of the item after being dropped.\n                var sortableEndPosition = ui.item.index();\n                console.log(\"sortable update: Start: \" + sortableStartPosition + \" now: \" + sortableEndPosition);\n\n                var sectionsArray = data[field];\n                var item = data[field][sortableStartPosition];\n\n                // Move the item from the start drag position to the end drop position in the data model.\n                sectionsArray.splice(sortableStartPosition, 1);\n                sectionsArray.splice(sortableEndPosition, 0, item);\n\n                saveContentAndRefreshSection();\n            }\n        });\n    }\n\n    sortable();\n\n    function deleteItem(index) {\n        swal({\n            title: \"Warning\",\n            text: \"Are you sure you want to delete this link?\",\n            type: \"warning\",\n            showCancelButton: true,\n            confirmButtonText: \"Delete\",\n            cancelButtonText: \"Cancel\",\n            closeOnConfirm: false\n        }, function (result) {\n            if (result === true) {\n\n                showDeletedMessage();\n\n                // delete the item from the data model.\n                data[field].splice(index, 1);\n                templateData[field].splice(index, 1);\n\n                saveContentAndRefreshSection();\n            }\n        });\n    }\n\n    function saveContentAndRefreshSection() {\n        putContent(collectionId, data.uri, JSON.stringify(data),\n            success = function () {\n                Florence.Editor.isDirty = false;\n                refreshPreview(data.uri);\n                refreshRelatedItemAccordionSection(collectionId, data, templateData, field, idField);\n            },\n            error = function (response) {\n                if (response.status === 409) {\n                    sweetAlert(\"Cannot edit this page\", \"It is already part of another collection.\");\n                } else {\n                    handleApiError(response);\n                }\n            }\n        );\n    }\n\n    function showDeletedMessage() {\n        swal({\n            title: \"Deleted\",\n            text: \"This \" + idField + \" has been deleted\",\n            type: \"success\",\n            timer: 2000\n        });\n    }\n\n    function renderRelatedItemModal() {\n\n        var viewModel = {hasLatest: false}; //Set to true if 'latest' checkbox should show\n        var latestCheck; //Populated with true/false later to check state of checkbox\n\n        if (idField === 'article' || idField === 'bulletin' || idField === 'articles' || idField === 'bulletins' || idField === 'document' || idField === 'highlights') {\n            viewModel = {hasLatest: true};\n        }\n\n        $('.modal').remove();\n        var modal = templates.relatedModal(viewModel);\n        $('.workspace-menu').append(modal);\n        $('.modal-box input[type=text]').focus();\n\n        //Modal click events\n        $('.btn-uri-cancel').off().one('click', function () {\n            $('.modal').remove();\n            //createWorkspace(data.uri, collectionId, 'edit');\n        });\n\n        $('.btn-uri-get').click(function () {\n            var pastedUrl = $('#uri-input').val();\n            var dataUrl = checkPathParsed(pastedUrl);\n            var latestCheck = $('input[id=\"latest\"]').prop('checked');\n            getPage(data, templateData, field, latestCheck, dataUrl);\n            $('.modal').remove();\n        });\n\n        $('.btn-uri-browse').off().one('click', function () {\n            var iframeEvent = document.getElementById('iframe').contentWindow;\n            iframeEvent.removeEventListener('click', Florence.Handler, true);\n            createWorkspace(data.uri, collectionId, '', null, true);\n            $('.modal').remove();\n\n            //Disable the editor\n            $('body').append(\n                \"<div class='col col--5 panel modal-background'></div>\"\n            );\n\n            //Add buttons to iframe window\n            var iframeNav = templates.iframeNav(viewModel);\n            $(iframeNav).hide().appendTo('.browser').fadeIn(600);\n\n            //Take iframe window to homepage/root\n            $('#iframe').attr('src', '/');\n\n            $('.btn-browse-cancel').off().one('click', function () {\n                createWorkspace(data.uri, collectionId, 'edit');\n                $('.iframe-nav').remove();\n                $('.modal-background').remove();\n            });\n\n            //Remove added markup if user navigates away from editor screen\n            $('a:not(.btn-browse-get)').click(function () {\n                $('.iframe-nav').remove();\n                $('.modal-background').remove();\n            });\n\n            $('.btn-browse-get').off().one('click', function () {\n                var dataUrl = getPathNameTrimLast();\n                latestCheck = $('input[id=\"latest\"]').prop('checked');\n                $('.iframe-nav').remove();\n                $('.modal-background').remove();\n                getPage(data, templateData, field, latestCheck, dataUrl);\n            });\n        });\n    }\n\n    function getPage(data, templateData, field, latestCheck, dataUrl) {\n\n        var dataUrlData = dataUrl + \"/data\";\n        var latestUrl;\n        if (latestCheck) {\n            var tempUrl = dataUrl.split('/');\n            tempUrl.pop();\n            tempUrl.push('latest');\n            latestUrl = tempUrl.join('/');\n        } else {\n            latestUrl = dataUrl;\n        }\n\n        $.ajax({\n            url: dataUrlData,\n            dataType: 'json',\n            crossDomain: true,\n            success: function (page) {\n\n                if ((field === 'relatedBulletins' || field === 'statsBulletins') && page.type === 'bulletin') {\n                    initialiseField();\n                }\n                else if ((field === 'relatedDatasets' || field === 'datasets') && (page.type === 'dataset' || page.type === 'timeseries_dataset')) {\n                    initialiseField();\n                }\n                else if (field === 'relatedArticles' && (page.type === 'article' || page.type === 'article_download' || page.type === 'compendium_landing_page')) {\n                    initialiseField();\n                }\n                else if ((field === 'relatedDocuments') && (page.type === 'article' || page.type === 'article_download' || page.type === 'bulletin' || page.type === 'compendium_landing_page')) {\n                    initialiseField();\n                }\n                else if ((field === 'relatedDatasets' || field === 'datasets') && (page.type === 'dataset_landing_page' || page.type === 'compendium_data')) {\n                    initialiseField();\n                }\n                else if ((field === 'items') && (page.type === 'timeseries')) {\n                    initialiseField();\n                }\n                else if ((field === 'relatedData') && (page.type === 'dataset_landing_page' || page.type === 'timeseries' || page.type === 'compendium_data')) {\n                    initialiseField();\n                }\n                else if (field === 'relatedMethodology' && (page.type === 'static_qmi')) {\n                    initialiseField();\n                }\n                else if (field === 'relatedMethodologyArticle' && (page.type === 'static_methodology' || page.type === 'static_methodology_download')) {\n                    initialiseField();\n                }\n                else if (field === 'highlightedLinks' && (page.type === 'article' || page.type === 'article_download' || page.type === 'bulletin' || page.type === 'compendium_landing_page')) {\n                    initialiseField();\n                }\n                else if (field === 'links') {\n                    initialiseField();\n                }\n                else {\n                    sweetAlert(\"This is not a valid document\");\n                    //createWorkspace(data.uri, collectionId, 'edit');\n                    return;\n                }\n\n                function initialiseField() {\n                    if (!data[field]) {\n                        data[field] = [];\n                        templateData[field] = [];\n                    }\n                }\n\n                data[field].push({uri: latestUrl});\n\n                var viewModelTitle = latestCheck ? '(Latest) ' + page.description.title : page.description.title;\n                var viewModel = {uri: latestUrl, description: {title: viewModelTitle}};\n                if (page.description.edition) {\n                    viewModel.description.edition = page.description.edition;\n                }\n                templateData[field].push(viewModel);\n\n                saveContentAndRefreshSection();\n                //saveRelated(collectionId, data.uri, data, templateData, field, idField);\n\n            },\n            error: function () {\n                console.log('No page data returned');\n            }\n        });\n    }\n}\n\nfunction resolvePageTitlesThenRefresh(collectionId, data, templateData, field, idField) {\n    var ajaxRequest = [];\n    $(templateData[field]).each(function (index, path) {\n        templateData[field][index].description = {};\n        var eachUri = path.uri;\n        var latest = eachUri.match(/\\/latest\\/?$/) ? true : false;\n        var dfd = $.Deferred();\n        getBabbagePageData(collectionId, eachUri,\n            success = function (response) {\n                templateData[field][index].description.title = latest ? '(Latest) ' + response.description.title : response.description.title;\n                if (response.description.edition) {\n                    templateData[field][index].description.edition = response.description.edition;\n                }\n                dfd.resolve();\n            },\n            error = function () {\n                sweetAlert(\"Error\", field + ' address: ' + eachUri + ' is not found.', \"error\");\n                dfd.resolve();\n            }\n        );\n        ajaxRequest.push(dfd);\n    });\n\n    $.when.apply($, ajaxRequest).then(function () {\n        refreshRelatedItemAccordionSection(collectionId, data, templateData, field, idField);\n    });\n}\nfunction renameCompendiumChildren (arrayToRename, titleNoSpace, editionNoSpace) {\n  arrayToRename.forEach(function (elem, index, array) {\n    var x = elem.uri.split(\"/\");\n    x.splice([x.length - 3], 2, titleNoSpace, editionNoSpace);\n    elem.uri = x.join(\"/\");\n  });\n  return arrayToRename;\n}\n\nfunction renameDatasetChildren (arrayToRename, titleNoSpace) {\n  arrayToRename.forEach(function (elem, index, array) {\n    var x = elem.uri.split(\"/\");\n    x.splice([x.length - 2], 1, titleNoSpace);\n    elem.uri = x.join(\"/\");\n  });\n  return arrayToRename;\n}\n\nfunction renameContent(collectionId, path, newPath, success, error) {\n  $.ajax({\n    url: \"/zebedee/contentrename/\" + collectionId + \"?uri=\" + checkPathSlashes(path) + \"&toUri=\" + checkPathSlashes(newPath),\n    type: 'POST',\n    success: function (response) {\n      if (success)\n        success(response);\n    },\n    error: function (response) {\n      if (error) {\n        error(response);\n      } else {\n        handleApiError(response);\n      }\n    }\n  });\n}\n\n/**\n * Manages the editor menus\n * @param collectionId\n * @param pageData\n * @param isPageComplete - if present page has been approved\n */\n\nfunction renderAccordionSections(collectionId, pageData, isPageComplete) {\n\n    var templateData = jQuery.extend(true, {}, pageData); // clone page data to add template related properties.\n    templateData.isPageComplete = isPageComplete;\n\n    if (pageData.type === 'home_page') {\n        var email = localStorage.getItem('loggedInAs');   // get user permissions\n        getUserPermission(\n            function (permission) {\n                if (permission.admin) {\n                    var html = templates.workEditT1(templateData);\n                    $('.workspace-menu').html(html);\n                    editServiceMessage(collectionId, pageData);\n                    accordion();\n                    t1Editor(collectionId, pageData, templateData);   //templateData used to resolve section titles\n                } else {\n                    $('.workspace-menu').html(\"<section class='panel workspace-edit'><div class='edit-section'>\" +\n                        \"<div class='edit-section__head'><h1>You cannot edit this page. Please contact an administrator</h1></div></div></section>\");\n                }\n            },\n            function (error) {\n                sweetAlert(\"There is a problem with permissions. Please contact an administrator\");\n            },\n            email\n        );\n    }\n\n    else if (pageData.type === 'home_page_census') {\n        var email = localStorage.getItem('loggedInAs');   // get user permissions\n        getUserPermission(\n            function (permission) {\n                if (permission.admin) {\n                    var html = templates.workEditT1Census(templateData);\n                    $('.workspace-menu').html(html);\n                    if (pageData.images) {\n                        loadImagesList(collectionId, pageData);\n                    }\n                    editBlocks(collectionId, pageData, templateData, 'sections', 'block');\n                    accordion();\n                    t1EditorCensus(collectionId, pageData, templateData);   //templateData used to resolve section titles\n                } else {\n                    $('.workspace-menu').html(\"<section class='panel workspace-edit'><div class='edit-section'>\" +\n                        \"<div class='edit-section__head'><h1>You cannot edit this page. Please contact an administrator</h1></div></div></section>\");\n                }\n            },\n            function (error) {\n                sweetAlert(\"There is a problem with permissions. Please contact an administrator\");\n            },\n            email\n        );\n    }\n\n    else if (pageData.type === 'taxonomy_landing_page') {\n        var html = templates.workEditT2(templateData);\n        $('.workspace-menu').html(html);\n        renderRelatedItemAccordionSection(collectionId, pageData, templateData, 'highlightedLinks', 'highlights');\n        accordion();\n        t2Editor(collectionId, pageData);\n    }\n\n    else if (pageData.type === 'product_page') {\n        var html = templates.workEditT3(templateData);\n        $('.workspace-menu').html(html);\n        renderRelatedItemAccordionSection(collectionId, pageData, templateData, 'items', 'timeseries');\n        renderRelatedItemAccordionSection(collectionId, pageData, templateData, 'statsBulletins', 'bulletins');\n        renderRelatedItemAccordionSection(collectionId, pageData, templateData, 'relatedArticles', 'articles');\n        renderRelatedItemAccordionSection(collectionId, pageData, templateData, 'datasets', 'datasets');\n        renderRelatedItemAccordionSection(collectionId, pageData, templateData, 'relatedMethodology', 'qmi');\n        renderRelatedItemAccordionSection(collectionId, pageData, templateData, 'relatedMethodologyArticle', 'methodology');\n        accordion();\n        t3Editor(collectionId, pageData);\n    }\n\n    else if (pageData.type === 'bulletin') {\n        var html = templates.workEditT4Bulletin(templateData);\n        $('.workspace-menu').html(html);\n        if (pageData.charts) {\n            loadChartsList(collectionId, pageData);\n        }\n        if (pageData.tables) {\n            loadTablesList(collectionId, pageData);\n        }\n        if (pageData.equations) {\n            loadEquationsList(collectionId, pageData);\n        }\n        if (pageData.images) {\n            loadImagesList(collectionId, pageData);\n        }\n        renderMarkdownContentAccordionSection(collectionId, pageData, 'sections', 'section');\n        renderMarkdownContentAccordionSection(collectionId, pageData, 'accordion', 'tab');\n        renderRelatedItemAccordionSection(collectionId, pageData, templateData, 'relatedDocuments', 'document');\n        renderRelatedItemAccordionSection(collectionId, pageData, templateData, 'relatedData', 'data');\n        renderRelatedItemAccordionSection(collectionId, pageData, templateData, 'relatedMethodology', 'qmi');\n        renderRelatedItemAccordionSection(collectionId, pageData, templateData, 'relatedMethodologyArticle', 'methodology');\n        editTopics(collectionId, pageData, templateData, 'topics', 'topics');\n        addFile(collectionId, pageData, 'pdfTable', 'pdf');\n        renderExternalLinkAccordionSection(collectionId, pageData, 'links', 'link');\n        editDocumentCorrection(collectionId, pageData, templateData, 'versions', 'correction');\n        editAlert(collectionId, pageData, templateData, 'alerts', 'alert');\n        accordion();\n        bulletinEditor(collectionId, pageData);\n    }\n\n    else if (pageData.type === 'article') {\n        var html = templates.workEditT4Article(templateData);\n        $('.workspace-menu').html(html);\n        if (pageData.charts) {\n            loadChartsList(collectionId, pageData);\n        }\n        if (pageData.tables) {\n            loadTablesList(collectionId, pageData);\n        }\n        if (pageData.equations) {\n            loadEquationsList(collectionId, pageData);\n        }\n        if (pageData.images) {\n            loadImagesList(collectionId, pageData);\n        }\n        renderMarkdownContentAccordionSection(collectionId, pageData, 'sections', 'section');\n        renderMarkdownContentAccordionSection(collectionId, pageData, 'accordion', 'tab');\n        renderRelatedItemAccordionSection(collectionId, pageData, templateData, 'relatedDocuments', 'document');\n        renderRelatedItemAccordionSection(collectionId, pageData, templateData, 'relatedData', 'data');\n        renderRelatedItemAccordionSection(collectionId, pageData, templateData, 'relatedMethodology', 'qmi');\n        renderRelatedItemAccordionSection(collectionId, pageData, templateData, 'relatedMethodologyArticle', 'methodology');\n        editTopics(collectionId, pageData, templateData, 'topics', 'topics');\n        addFile(collectionId, pageData, 'pdfTable', 'pdf');\n        renderExternalLinkAccordionSection(collectionId, pageData, 'links', 'link');\n        editDocumentCorrection(collectionId, pageData, templateData, 'versions', 'correction');\n        editAlert(collectionId, pageData, templateData, 'alerts', 'alert');\n        accordion();\n        articleEditor(collectionId, pageData);\n    }\n\n    else if (pageData.type === 'article_download') {\n        var html = templates.workEditT4ArticleDownload(templateData);\n        $('.workspace-menu').html(html);\n        if (pageData.charts) {\n            loadChartsList(collectionId, pageData);\n        }\n        if (pageData.tables) {\n            loadTablesList(collectionId, pageData);\n        }\n        if (pageData.images) {\n            loadImagesList(collectionId, pageData);\n        }\n        editMarkdownWithNoTitle(collectionId, pageData, 'markdown', 'content');\n        renderRelatedItemAccordionSection(collectionId, pageData, templateData, 'relatedDocuments', 'document');\n        renderRelatedItemAccordionSection(collectionId, pageData, templateData, 'relatedData', 'data');\n        renderRelatedItemAccordionSection(collectionId, pageData, templateData, 'relatedMethodology', 'qmi');\n        renderRelatedItemAccordionSection(collectionId, pageData, templateData, 'relatedMethodologyArticle', 'methodology');\n        editTopics(collectionId, pageData, templateData, 'topics', 'topics');\n        addFile(collectionId, pageData, 'downloads', 'file');\n        renderExternalLinkAccordionSection(collectionId, pageData, 'links', 'link');\n        editAlert(collectionId, pageData, templateData, 'alerts', 'alert');\n        editDocWithFilesCorrection(collectionId, pageData, 'versions', 'correction');\n        accordion();\n        ArticleDownloadEditor(collectionId, pageData);\n    }\n\n    else if (pageData.type === 'timeseries') {\n        var html = templates.workEditT5(templateData);\n        $('.workspace-menu').html(html);\n        editMarkdownOneObject(collectionId, pageData, 'section');\n        editMarkdownWithNoTitle(collectionId, pageData, 'notes', 'note');\n        renderRelatedItemAccordionSection(collectionId, pageData, templateData, 'relatedDocuments', 'document');\n        renderRelatedItemAccordionSection(collectionId, pageData, templateData, 'relatedData', 'timeseries');\n        renderRelatedItemAccordionSection(collectionId, pageData, templateData, 'relatedDatasets', 'dataset');\n        renderRelatedItemAccordionSection(collectionId, pageData, templateData, 'relatedMethodology', 'qmi');\n        renderRelatedItemAccordionSection(collectionId, pageData, templateData, 'relatedMethodologyArticle', 'methodology');\n        editTopics(collectionId, pageData, templateData, 'topics', 'topics');\n        editAlert(collectionId, pageData, templateData, 'alerts', 'alert');\n        accordion();\n        timeseriesEditor(collectionId, pageData);\n    }\n\n    else if (pageData.type === 'compendium_landing_page') {\n        var html = templates.workEditT6(templateData);\n        $('.workspace-menu').html(html);\n        renderRelatedItemAccordionSection(collectionId, pageData, templateData, 'relatedDocuments', 'document');\n        renderRelatedItemAccordionSection(collectionId, pageData, templateData, 'relatedData', 'data');\n        renderRelatedItemAccordionSection(collectionId, pageData, templateData, 'relatedMethodology', 'qmi');\n        renderRelatedItemAccordionSection(collectionId, pageData, templateData, 'relatedMethodologyArticle', 'methodology');\n        editTopics(collectionId, pageData, templateData, 'topics', 'topics');\n        editAlert(collectionId, pageData, templateData, 'alerts', 'alert');\n        accordion();\n        compendiumEditor(collectionId, pageData, templateData);     //templateData used to resolve chapter titles\n    }\n\n    else if (pageData.type === 'compendium_chapter') {\n        var html = templates.workEditT4Compendium(templateData);\n        $('.workspace-menu').html(html);\n        if (pageData.charts) {\n            loadChartsList(collectionId, pageData);\n        }\n        if (pageData.tables) {\n            loadTablesList(collectionId, pageData);\n        }\n        if (pageData.equations) {\n            loadEquationsList(collectionId, pageData);\n        }\n        if (pageData.images) {\n            loadImagesList(collectionId, pageData);\n        }\n        renderMarkdownContentAccordionSection(collectionId, pageData, 'sections', 'section');\n        renderMarkdownContentAccordionSection(collectionId, pageData, 'accordion', 'tab');\n        renderRelatedItemAccordionSection(collectionId, pageData, templateData, 'relatedDocuments', 'document');\n        renderRelatedItemAccordionSection(collectionId, pageData, templateData, 'relatedMethodology', 'qmi');\n        renderRelatedItemAccordionSection(collectionId, pageData, templateData, 'relatedMethodologyArticle', 'methodology');\n        renderExternalLinkAccordionSection(collectionId, pageData, 'links', 'link');\n        addFile(collectionId, pageData, 'pdfTable', 'pdf');\n        editDocumentCorrection(collectionId, pageData, templateData, 'versions', 'correction');\n        editAlert(collectionId, pageData, templateData, 'alerts', 'alert');\n        accordion();\n        compendiumChapterEditor(collectionId, pageData);\n    }\n\n    else if (pageData.type === 'compendium_data') {\n        var html = templates.workEditT8Compendium(templateData);\n        $('.workspace-menu').html(html);\n        renderRelatedItemAccordionSection(collectionId, pageData, templateData, 'relatedDocuments', 'document');\n        renderRelatedItemAccordionSection(collectionId, pageData, templateData, 'relatedDatasets', 'dataset');\n        renderRelatedItemAccordionSection(collectionId, pageData, templateData, 'relatedMethodology', 'qmi');\n        renderRelatedItemAccordionSection(collectionId, pageData, templateData, 'relatedMethodologyArticle', 'methodology');\n        addFileWithDetails(collectionId, pageData, 'downloads', 'file');\n        editDocWithFilesCorrection(collectionId, pageData, 'versions', 'correction');\n        accordion();\n        compendiumDataEditor(collectionId, pageData);\n    }\n\n    else if (pageData.type === 'static_landing_page') {\n        var html = templates.workEditT7Landing(templateData);\n        $('.workspace-menu').html(html);\n        editMarkdownWithNoTitle(collectionId, pageData, 'markdown', 'content');\n        accordion();\n        staticLandingPageEditor(collectionId, pageData);\n    }\n\n    else if (pageData.type === 'static_page') {\n        var html = templates.workEditT7(templateData);\n        $('.workspace-menu').html(html);\n        if (pageData.tables) {\n            loadTablesList(collectionId, pageData);\n        }\n\n        editMarkdownWithNoTitle(collectionId, pageData, 'markdown', 'content');\n        addFile(collectionId, pageData, 'downloads', 'file');\n        editIntAndExtLinks(collectionId, pageData, templateData, 'links', 'link');\n        accordion();\n        staticPageEditor(collectionId, pageData);\n    }\n\n    else if (pageData.type === 'static_article') {\n        var html = templates.workEditT7StaticArticle(templateData);\n        $('.workspace-menu').html(html);\n        if (pageData.charts) {\n            loadChartsList(collectionId, pageData);\n        }\n        if (pageData.tables) {\n            loadTablesList(collectionId, pageData);\n        }\n        if (pageData.equations) {\n            loadEquationsList(collectionId, pageData);\n        }\n        if (pageData.images) {\n            loadImagesList(collectionId, pageData);\n        }\n        renderMarkdownContentAccordionSection(collectionId, pageData, 'sections', 'section');\n        editIntAndExtLinks(collectionId, pageData, templateData, 'links', 'link');\n        addFile(collectionId, pageData, 'downloads', 'file');\n        editAlert(collectionId, pageData, templateData, 'alerts', 'alert');\n        accordion();\n        staticArticleEditor(collectionId, pageData);\n    }\n\n    else if (pageData.type === 'static_qmi') {\n        var html = templates.workEditT7(templateData);\n        $('.workspace-menu').html(html);\n        editMarkdownWithNoTitle(collectionId, pageData, 'markdown', 'content');\n        addFile(collectionId, pageData, 'downloads', 'file');\n        renderRelatedItemAccordionSection(collectionId, pageData, templateData, 'relatedDocuments', 'document');\n        renderRelatedItemAccordionSection(collectionId, pageData, templateData, 'relatedDatasets', 'dataset');\n        renderExternalLinkAccordionSection(collectionId, pageData, 'links', 'link');\n        accordion();\n        qmiEditor(collectionId, pageData);\n    }\n\n    else if (pageData.type === 'static_foi') {\n        var html = templates.workEditT7(templateData);\n        $('.workspace-menu').html(html);\n        editMarkdownWithNoTitle(collectionId, pageData, 'markdown', 'content');\n        addFile(collectionId, pageData, 'downloads', 'file');\n        accordion();\n        foiEditor(collectionId, pageData);\n    }\n\n    else if (pageData.type === 'static_adhoc') {\n        var html = templates.workEditT7(templateData);\n        $('.workspace-menu').html(html);\n        editMarkdownWithNoTitle(collectionId, pageData, 'markdown', 'content');\n        addFile(collectionId, pageData, 'downloads', 'file');\n        accordion();\n        adHocEditor(collectionId, pageData);\n    }\n\n    else if (pageData.type === 'static_methodology') {\n        var html = templates.workEditT4Methodology(templateData);\n        $('.workspace-menu').html(html);\n        if (pageData.charts) {\n            loadChartsList(collectionId, pageData);\n        }\n        if (pageData.tables) {\n            loadTablesList(collectionId, pageData);\n        }\n        if (pageData.images) {\n            loadImagesList(collectionId, pageData);\n        }\n        if (pageData.equations) {\n            loadEquationsList(collectionId, pageData);\n        }\n        renderMarkdownContentAccordionSection(collectionId, pageData, 'sections', 'section');\n        renderMarkdownContentAccordionSection(collectionId, pageData, 'accordion', 'tab');\n        renderRelatedItemAccordionSection(collectionId, pageData, templateData, 'relatedDocuments', 'document');\n        renderRelatedItemAccordionSection(collectionId, pageData, templateData, 'relatedDatasets', 'dataset');\n        addFile(collectionId, pageData, 'downloads', 'file');\n        editIntAndExtLinks(collectionId, pageData, templateData, 'links', 'link');\n        addFile(collectionId, pageData, 'pdfTable', 'pdf');\n        //editTopics (collectionId, pageData, templateData, 'topics', 'topics');  //ready 2b used\n        editAlert(collectionId, pageData, templateData, 'alerts', 'alert');\n        accordion();\n        methodologyEditor(collectionId, pageData);\n    }\n\n    else if (pageData.type === 'static_methodology_download') {\n        var html = templates.workEditT7(templateData);\n        $('.workspace-menu').html(html);\n        editMarkdownWithNoTitle(collectionId, pageData, 'markdown', 'content');\n        addFile(collectionId, pageData, 'downloads', 'file');\n        addFile(collectionId, pageData, 'pdfDownloads', 'pdfFile');\n        renderRelatedItemAccordionSection(collectionId, pageData, templateData, 'relatedDocuments', 'document');\n        renderRelatedItemAccordionSection(collectionId, pageData, templateData, 'relatedDatasets', 'dataset');\n        editIntAndExtLinks(collectionId, pageData, templateData, 'links', 'link');\n        editAlert(collectionId, pageData, templateData, 'alerts', 'alert');\n        accordion();\n        methodologyDownloadEditor(collectionId, pageData);\n    }\n\n    else if (pageData.type === 'dataset_landing_page') {\n        var html = templates.workEditT8LandingPage(templateData);\n        $('.workspace-menu').html(html);\n        editMarkdownOneObject(collectionId, pageData, 'section', 'Notes');\n        addDataset(collectionId, pageData, 'datasets', 'edition');\n        renderRelatedItemAccordionSection(collectionId, pageData, templateData, 'relatedDatasets', 'dataset');\n        renderRelatedItemAccordionSection(collectionId, pageData, templateData, 'relatedDocuments', 'document');\n        renderRelatedItemAccordionSection(collectionId, pageData, templateData, 'relatedMethodology', 'qmi');\n        renderRelatedItemAccordionSection(collectionId, pageData, templateData, 'relatedMethodologyArticle', 'methodology');\n        renderExternalLinkAccordionSection(collectionId, pageData, 'links', 'link');\n        editTopics(collectionId, pageData, templateData, 'topics', 'topics');\n        editAlert(collectionId, pageData, templateData, 'alerts', 'alert');\n        accordion();\n        datasetLandingEditor(collectionId, pageData);\n    }\n\n    else if (pageData.type === 'dataset') {\n        var html = templates.workEditT8(templateData);\n        $('.workspace-menu').html(html);\n        editDatasetVersion(collectionId, pageData, 'versions', 'version');\n        editDatasetVersion(collectionId, pageData, 'versions', 'correction');\n        addFile(collectionId, pageData, 'supplementaryFiles', 'supplementary-files');\n        accordion();\n        datasetEditor(collectionId, pageData);\n    }\n\n    else if (pageData.type === 'timeseries_dataset') {\n        var html = templates.workEditT8(templateData);\n        $('.workspace-menu').html(html);\n        editDatasetVersion(collectionId, pageData, 'versions', 'version');\n        addFile(collectionId, pageData, 'supplementaryFiles', 'supplementary-files');\n        editDatasetVersion(collectionId, pageData, 'versions', 'correction');\n        accordion();\n        datasetEditor(collectionId, pageData);\n    }\n\n    else if (pageData.type === 'release') {\n        var html = templates.workEditT16(templateData);\n        $('.workspace-menu').html(html);\n        editMarkdownWithNoTitle(collectionId, pageData, 'markdown', 'prerelease');\n        editDate(collectionId, pageData, templateData, 'dateChanges', 'changeDate');\n        renderExternalLinkAccordionSection(collectionId, pageData, 'links', 'link');\n        //renderRelatedItemAccordionSection (collectionId, pageData, templateData, 'relatedDocuments', 'document');\n        //renderRelatedItemAccordionSection (collectionId, pageData, templateData, 'relatedDatasets', 'data');\n        accordion();\n        releaseEditor(collectionId, pageData, templateData);\n    }\n\n    else if (pageData.type === 'visualisation') {\n        var html = templates.workEditVisualisation(templateData);\n        $('.workspace-menu').html(html);\n        accordion();\n        visualisationEditor(collectionId, pageData, templateData);\n    }\n\n    else {\n\n        var workspace_menu_sub_edit =\n            '<section class=\"workspace-edit\">' +\n            '  <p style=\"font-size:20px; color:red;\">Page: ' + pageData.type + ' is not supported.</p>' +\n            '  <textarea class=\"fl-editor__headline\" name=\"fl-editor__headline\" style=\"height: 728px\" cols=\"104\"></textarea>' +\n            '  <nav class=\"edit-nav\">' +\n            '  </nav>' +\n            '</section>';\n\n        $('.workspace-menu').html(workspace_menu_sub_edit);\n        $('.fl-editor__headline').val(JSON.stringify(pageData, null, 2));\n\n        refreshEditNavigation();\n\n        var editNav = $('.edit-nav');\n        editNav.off(); // remove any existing event handlers.\n\n        editNav.on('click', '.btn-edit-save', function () {\n            var pageDataToSave = $('.fl-editor__headline').val();\n            updateContent(collectionId, pageData.uri, pageDataToSave);\n        });\n\n        // complete\n        editNav.on('click', '.btn-edit-save-and-submit-for-review', function () {\n            var pageDataToSave = $('.fl-editor__headline').val();\n            saveAndCompleteContent(collectionId, pageData.uri, pageDataToSave);\n        });\n\n        // review\n        editNav.on('click', '.btn-edit-save-and-submit-for-approval', function () {\n            var pageDataToSave = $('.fl-editor__headline').val();\n            saveAndReviewContent(collectionId, pageData.uri, pageDataToSave);\n        });\n    }\n\n    // Listen on all input within the workspace edit panel for dirty checks.\n    $('.workspace-edit :input').on('input', function () {\n        Florence.Editor.isDirty = true;\n        // remove the handler now we know content has changed.\n        //$(':input').unbind('input');\n        //console.log('Changes detected.');\n    });\n}\n\nfunction refreshEditNavigation() {\n    getCollection(Florence.collection.id,\n        success = function (collection) {\n            var pagePath = getPreviewUrl();\n            var pageFile = pagePath + '/data.json';\n            var lastCompletedEvent = getLastCompletedEvent(collection, pageFile);\n            var isPageComplete = !(!lastCompletedEvent || lastCompletedEvent.email === Florence.Authentication.loggedInEmail());\n\n            var editNav = templates.editNav({isPageComplete: isPageComplete});\n            $('.edit-nav').html(editNav);\n        },\n        error = function (response) {\n            handleApiError(response);\n        })\n}function resetPage() {\n    // Prevent default behaviour of all form submits throught Florence\n    $(document).on('submit', 'form', function(e) {\n        e.preventDefault();\n    });\n\n    // Fix for modal form submits not being detected\n    $(document).on('click', 'button', function() {\n        var $closestForm = $(this).closest('form');\n        $closestForm.submit(function(e) {\n            e.preventDefault();\n        });\n    });\n\n    // Stop anchors doing default behaviour\n    // $(document).on('click', 'a', function(e) {\n    //     e.preventDefault();\n    //     console.log('Anchor click stopped on: ', e);\n    // });\n\n    // $(document).on('click', 'form', function(e) {\n    //     e.preventDefault();\n    //     console.log('Form clicked');\n    // });\n\n    // $(document).on('click', 'button', function (e) {\n    //     e.preventDefault();\n    //     console.log(e);\n    // });\n\n    // $(document).on('submit', '#cancel-form', function(e) {\n    //     e.preventDefault();\n    //     console.log(e);\n    // });\n}/**\n * Save new content.\n * @param collectionId\n * @param uri\n * @param data - new content being posted for update\n * @param collectionData - JSON for collection\n */\nfunction saveContent(collectionId, uri, data, collectionData) {\n    postContent(collectionId, uri, JSON.stringify(data), false, false,\n        success = function (message) {\n            console.log(\"Updating completed \" + message);\n            createWorkspace(uri, collectionId, 'edit', collectionData);\n        },\n        error = function (response) {\n            if (response.status === 409) {\n                sweetAlert(\"Cannot create this page\", \"It already exists.\");\n            }\n            else {\n                handleApiError(response);\n            }\n        }\n    );\n}\nfunction saveNewCorrection (collectionId, path, success, error) {\n  var safePath = checkPathSlashes(path);\n  if (safePath === '/') {\n    safePath = '';          // edge case for home\n  }\n\n  var url = \"/zebedee/version/\" + collectionId + \"?uri=\" + safePath;\n\n  // Update content\n  $.ajax({\n    url: url,\n    dataType: 'json',\n    contentType: 'application/json',\n    type: 'POST',\n    success: function (response) {\n      success(response);\n    },\n    error: function (response) {\n      if (error) {\n        error(response);\n      } else {\n        handleApiError(response);\n      }\n    }\n  });\n}\n\nfunction setShortcuts(field, callback) {\n  $(field).select(function (e) {\n    $(field).on('keydown', null, 'ctrl+m', function (ev) {\n      var inputValue = $(field).val();\n      var start = e.target.selectionStart;\n      var end = e.target.selectionEnd;\n      var outputValue = [inputValue.slice(0, start), \"^\", inputValue.slice(start, end), \"^\", inputValue.slice(end)].join('');\n      $(field).val(outputValue);\n      ev.stopImmediatePropagation();\n      ev.preventDefault();\n      if(typeof callback === 'function') {\n        callback();\n      }\n    });\n    $(field).on('keyup', null, 'ctrl+q', function (ev) {\n      var inputValue = $(field).val();\n      var start = e.target.selectionStart;\n      var end = e.target.selectionEnd;\n      var outputValue = [inputValue.slice(0, start), \"~\", inputValue.slice(start, end), \"~\", inputValue.slice(end)].join('');\n      $(field).val(outputValue);\n      ev.stopImmediatePropagation();\n      if(typeof callback === 'function') {\n        callback();\n      }\n    });\n  });\n}function setupFlorence() {\n    window.templates = Handlebars.templates;\n    Handlebars.registerPartial(\"browseNode\", templates.browseNode);\n    Handlebars.registerPartial(\"browseNodeDataVis\", templates.browseNodeDataVis);\n    Handlebars.registerPartial(\"editNav\", templates.editNav);\n    Handlebars.registerPartial(\"editNavChild\", templates.editNavChild);\n    Handlebars.registerPartial(\"selectorHour\", templates.selectorHour);\n    Handlebars.registerPartial(\"selectorMinute\", templates.selectorMinute);\n    Handlebars.registerPartial(\"tickAnimation\", templates.tickAnimation);\n    Handlebars.registerPartial(\"loadingAnimation\", templates.loadingAnimation);\n    Handlebars.registerPartial(\"childDeletes\", templates.childDeletes);\n    Handlebars.registerHelper('select', function (value, options) {\n        var $el = $('<select />').html(options.fn(this));\n        $el.find('[value=\"' + value + '\"]').attr({'selected': 'selected'});\n        return $el.html();\n    });\n    Handlebars.registerHelper('ifCond', function (v1, operator, v2, options) {\n\n        switch (operator) {\n            case '==':\n                return (v1 == v2) ? options.fn(this) : options.inverse(this);\n            case '===':\n                return (v1 === v2) ? options.fn(this) : options.inverse(this);\n            case '<':\n                return (v1 < v2) ? options.fn(this) : options.inverse(this);\n            case '<=':\n                return (v1 <= v2) ? options.fn(this) : options.inverse(this);\n            case '>':\n                return (v1 > v2) ? options.fn(this) : options.inverse(this);\n            case '>=':\n                return (v1 >= v2) ? options.fn(this) : options.inverse(this);\n            case '&&':\n                return (v1 && v2) ? options.fn(this) : options.inverse(this);\n            case '||':\n                return (v1 || v2) ? options.fn(this) : options.inverse(this);\n            default:\n                return options.inverse(this);\n        }\n    });\n    //Check if array contains element\n    Handlebars.registerHelper('ifContains', function (elem, list, options) {\n        if (list.indexOf(elem) > -1) {\n            return options.fn(this);\n        }\n        return options.inverse(this);\n    });\n    // Add two values together. Primary usage was '@index + 1' to create numbered lists\n    Handlebars.registerHelper('plus', function (value1, value2) {\n        return value1 + value2;\n    });\n    // Add two values together. Primary usage was '@index + 1' to create numbered lists\n    Handlebars.registerHelper('lastEditedBy', function (array) {\n        if (array) {\n            var event = array[array.length - 1];\n            if (event) {\n                return 'Last edited ' + StringUtils.formatIsoDateString(new Date(event.date)) + \" by \" + event.email;\n            }\n        }\n        return '';\n    });\n    Handlebars.registerHelper('createdBy', function (array) {\n        if (array) {\n            var event = getCollectionCreatedEvent(array);\n            if (event) {\n                return 'Created ' + StringUtils.formatIsoDateString(new Date(event.date)) + \" by \" + event.email + '';\n            } else {\n                return \"\";\n            }\n        }\n        return \"\";\n    });\n    // If two strings match\n    Handlebars.registerHelper('if_eq', function (a, b, opts) {\n        if (a == b)\n            return opts.fn(this);\n        else\n            return opts.inverse(this);\n    });\n    // If two strings don't match\n    Handlebars.registerHelper('if_ne', function (a, b, opts) {\n        if (a != b)\n            return opts.fn(this);\n        else\n            return opts.inverse(this);\n    });\n\n    Handlebars.registerHelper('comma_separated_list', function (array) {\n        var asString = \"\";\n\n        if (array) {\n            array.forEach(function (item) {\n                asString = asString + item + \", \";\n            });\n            return asString.substring(0, asString.lastIndexOf(\",\"));\n        }\n        return asString;\n    });\n\n    Handlebars.registerHelper('parent_dir', function (uri) {\n        var pathSections = uri.split(\"/\");\n        if (pathSections.length > 0) {\n            return \"/\" + pathSections[pathSections.length -1];\n        }\n        return \"\";\n    });\n\n    Handlebars.registerHelper('debug', function (message, object) {\n        console.log(\"DEBUG: \" + message + \" \" + JSON.stringify(object));\n        return \"\";\n    });\n\n\n    Florence.globalVars.activeTab = false;\n\n    // load main florence template\n    var florence = templates.florence;\n\n    $('body').append(florence);\n    Florence.refreshAdminMenu();\n\n    var adminMenu = $('.js-nav');\n    // dirty checks on admin menu\n    adminMenu.on('click', '.js-nav-item', function () {\n        if (Florence.Editor.isDirty) {\n            swal({\n                title: \"Warning\",\n                text: \"If you do not come back to this page, you will lose any unsaved changes\",\n                type: \"warning\",\n                showCancelButton: true,\n                confirmButtonText: \"Continue\",\n                cancelButtonText: \"Cancel\"\n            }, function (result) {\n                if (result === true) {\n                    Florence.Editor.isDirty = false;\n                    processMenuClick(this);\n                    return true;\n                } else {\n                    return false;\n                }\n            });\n        } else {\n            processMenuClick(this);\n        }\n    });\n\n\n    window.onbeforeunload = function () {\n        if (Florence.Editor.isDirty) {\n            return 'You have unsaved changes.';\n        }\n    };\n    viewController();\n\n\n    function processMenuClick(clicked) {\n        Florence.collection = {};\n\n        $('.js-nav-item--collection').hide();\n        $('.js-nav-item').removeClass('selected');\n        var menuItem = $(clicked);\n\n        menuItem.addClass('selected');\n\n\n        if (menuItem.hasClass(\"js-nav-item--collections\")) {\n            viewController('collections');\n        } else if (menuItem.hasClass(\"js-nav-item--collection\")) {\n            var thisCollection = CookieUtils.getCookieValue(\"collection\");\n            viewCollections(thisCollection);\n            $(\".js-nav-item--collections\").addClass('selected');\n        } else if (menuItem.hasClass(\"js-nav-item--users\")) {\n            viewController('users');\n        } else if (menuItem.hasClass(\"js-nav-item--teams\")) {\n            viewController('teams');\n        } else if (menuItem.hasClass(\"js-nav-item--publish\")) {\n            viewController('publish');\n        } else if (menuItem.hasClass(\"js-nav-item--reports\")) {\n            viewController('reports');\n        } else if (menuItem.hasClass(\"js-nav-item--login\")) {\n            viewController('login');\n        } else if (menuItem.hasClass(\"js-nav-item--logout\")) {\n            logout();\n            viewController();\n        }\n    }\n\n    // Get ping times to zebedee and surface for user\n    var lastPingTime;\n    var pingTimes = [];\n\n    function doPing() {\n        var start = new Date().getTime();\n        $.ajax({\n            url: \"/zebedee/ping\",\n            dataType: 'json',\n            contentType: 'application/json',\n            type: 'POST',\n            data: JSON.stringify({\n                lastPingTime: lastPingTime\n            }),\n            success: function (response) {\n\n                // Handle session information\n                checkSessionTimeout(response);\n\n                var end = new Date().getTime();\n                var time = end - start;\n\n                lastPingTime = time;\n                pingTimes.push(time);\n                if (pingTimes.length > 5)\n                    pingTimes.shift();\n\n                var sum = 0;\n                for (var i = 0; i < pingTimes.length; ++i) {\n                    sum += pingTimes[i];\n                }\n\n                var averagePingTime = sum / pingTimes.length;\n\n                networkStatus(lastPingTime);\n\n                if (averagePingTime < 100) {\n                    console.log(\"ping time: pretty good! \" + time + \" average: \" + averagePingTime + \" \" + pingTimes);\n                } else if (averagePingTime < 300) {\n                    console.log(\"ping time: not so good! \" + time + \" average: \" + averagePingTime + \" \" + pingTimes);\n                } else {\n                    console.log(\"ping time: really bad! \" + time);\n                }\n\n                pingTimer = setTimeout(function () {\n                    doPing();\n                }, 10000);\n            }\n        });\n    }\n\n    var pingTimer = setTimeout(function () {\n        doPing();\n    }, 10000);\n\n    // Alert user if ping states that their session is going to log out (log out if it's run out too)\n    var countdownIsShown = false,\n        secondCounter = 0;\n\n    function checkSessionTimeout(sessionData) {\n        var currentDateTime = new Date(),\n            sessionExpiry = new Date(sessionData.sessionExpiryDate),\n            timeLeftInSession = parseInt((sessionExpiry - currentDateTime)/1000);\n\n        if (timeLeftInSession <= 31 && !countdownIsShown) {\n            // Session is going to expire soon, warn user and give them option to reset session timer\n            countdownIsShown = true;\n            secondCounter = timeLeftInSession;\n            console.log(\"Session to expire in \" + timeLeftInSession + \" seconds\");\n            sweetAlert({\n                type: \"warning\",\n                title: \"Session expiring in <span id='session-expiry'>\" + timeLeftInSession + \"</span> seconds\",\n                text: \"You've not been active for sometime now, are you still using Florence?\",\n                html: true,\n                confirmButtonText: \"I'm still using Florence!\"\n            }, function(response) {\n                if (response) {\n                    $.get(\"/zebedee/users?email=\" + Florence.Authentication.loggedInEmail());\n                    countdownIsShown = false;\n                    console.log(\"Session timer reset\");\n                }\n            });\n            // Update alert with amount of time user has left until they're logged out\n            var sessionCountdown = setInterval(function() {\n                secondCounter -= 1;\n                $('#session-expiry').html(secondCounter);\n\n                // If session has timed out & the warning hasn't been closed yet, log out the user and inform them why they've been logged out\n                if (secondCounter === 0 && countdownIsShown) {\n                    sweetAlert({\n                        type: \"warning\",\n                        title: \"Your session has expired\",\n                        text: \"Florence was left inactive for too long so you have been logged out\"\n                    });\n                    logout();\n                    countdownIsShown = false;\n                    clearInterval(sessionCountdown);\n                } else if (!countdownIsShown) {\n                    // User responded to warning so Florence is active now, clear the countdown\n                    clearInterval(sessionCountdown);\n                }\n            }, 1000);\n        }\n    }\n\n    // Reset default functions from certain elements - eg form submits\n    resetPage();\n\n    // Log every click that will be changing the state or data in Florence\n    $(document).on('click', 'a, button, input[type=\"button\"], iframe, .table--primary tr, .js-nav-item, .page__item', function(e) {\n        var diagnosticJSON = JSON.stringify(new clickEventObject(e));\n        $.ajax({\n            url: \"/zebedee/clickEventLog\",\n            type: 'POST',\n            contentType: \"application/json\",\n            data: diagnosticJSON,\n            async: true,\n        });\n    });\n\n    function clickEventObject(event) {\n        this.user = localStorage.getItem('loggedInAs');\n        triggerTemp = {};\n        collectionTemp = {};\n\n        if (event.target.id) {\n            triggerTemp.elementId = event.target.id;\n        }\n\n        if ($(event.target).attr('class')) {\n            classes = [];\n            $.each($(event.target).attr('class').split(\" \"), function(index, value) {\n                if (value) {\n                    classes.push(value);\n                }\n            });\n            if (classes.length > 0) {\n                triggerTemp.elementClasses = classes;\n            }\n        }\n\n        if (Florence.collection.id) {\n            collectionTemp.id = Florence.collection.id;\n        }\n\n        if (Florence.collection.name) {\n            collectionTemp.name = Florence.collection.name;\n        }\n\n        if (Florence.collection.type) {\n            collectionTemp.type = Florence.collection.type;\n        }\n\n        if (triggerTemp.elementId || triggerTemp.elementClasses) {\n            this.trigger = triggerTemp;\n        }\n\n        if (collectionTemp.id || collectionTemp.name || collectionTemp.type) {\n            this.collection = collectionTemp\n        }\n    }\n\n    // Check running version versus latest and notify user if they don't match\n    var runningVersion,\n        userWarned = false;\n    function checkVersion() {\n        return fetch('assets/version.json')\n            .then(function(response) {\n                return response.json();\n            })\n            .then(function(responseJson) {\n                return responseJson;\n            })\n            .catch(function(err) {\n                console.log(\"Error getting latest Florence version: \", err);\n                return err\n            });\n    }\n\n    checkVersion().then(function(response) {\n        runningVersion = response;\n    });\n\n    setInterval(function() {\n        // Get the latest version and alert user if it differs from version stored on load (but only if the user hasn't been warned already, so they don't get spammed after being warned already)\n        if (!userWarned) {\n            checkVersion().then(function (response) {\n                if (response.major !== runningVersion.major || response.minor !== runningVersion.minor || response.build !== runningVersion.build) {\n                    console.log(\"New version of Florence available: \", response.major + \".\" + response.minor + \".\" + response.build);\n                    swal({\n                        title: \"New version of Florence available\",\n                        type: \"info\",\n                        showCancelButton: true,\n                        closeOnCancel: false,\n                        closeOnConfirm: false,\n                        confirmButtonText: \"Refresh Florence\",\n                        cancelButtonText: \"Don't refresh\"\n                    }, function (isConfirm) {\n                        userWarned = true;\n                        if (isConfirm) {\n                            location.reload();\n                        } else {\n                            swal(\"Warning\", \"Florence could be unstable without the latest version\", \"warning\")\n                        }\n                    });\n                    runningVersion = response;\n                }\n            });\n        }\n    }, 10000)\n}\n\nfunction releaseEditor(collectionId, data) {\n    var setActiveTab, getActiveTab;\n    var renameUri = false;\n    var pageDataRequests = [];\n    var pages = {};\n\n    $(\".edit-accordion\").on('accordionactivate', function (event, ui) {\n        setActiveTab = $(\".edit-accordion\").accordion(\"option\", \"active\");\n        if (setActiveTab !== false) {\n            Florence.globalVars.activeTab = setActiveTab;\n        }\n    });\n\n    getActiveTab = Florence.globalVars.activeTab;\n    accordion(getActiveTab);\n    getLastPosition();\n\n    processCollection(collectionId, 'noSave');\n\n    $(\"#title\").on('input', function () {\n        renameUri = true;\n        data.description.title = $(this).val();\n    });\n    $(\"#provisionalDate\").on('input', function () {\n        data.description.provisionalDate = $(this).val();\n    });\n    var dateTmp = data.description.releaseDate;\n    var dateTmpFormatted = $.datepicker.formatDate('dd MM yy', new Date(dateTmp));\n    $('#releaseDate').val(dateTmpFormatted).datepicker({dateFormat: 'dd MM yy'});\n    if (!data.description.finalised) {\n        $('.release-date').on('change', function () {\n            var publishTime = parseInt($('#release-hour').val()) + parseInt($('#release-min').val());\n            var toIsoDate = $('#releaseDate').datepicker(\"getDate\");\n            data.description.releaseDate = new Date(parseInt(new Date(toIsoDate).getTime()) + publishTime).toISOString();\n        });\n    } else {\n        $('.release-date').on('change', function () {\n            swal({\n                title: \"Warning\",\n                text: \"You will need to add an explanation for this change. Are you sure you want to proceed?\",\n                type: \"warning\",\n                showCancelButton: true,\n                confirmButtonText: \"Continue\",\n                cancelButtonText: \"Cancel\"\n            }, function (result) {\n                if (result === true) {\n                    saveOldDate(collectionId, data, dateTmp);\n                    var publishTime = parseInt($('#release-hour').val()) + parseInt($('#release-min').val());\n                    var toIsoDate = $('#releaseDate').datepicker(\"getDate\");\n                    data.description.releaseDate = new Date(parseInt(new Date(toIsoDate).getTime()) + publishTime).toISOString();\n                } else {\n                    $('#releaseDate').val(dateTmpFormatted);\n                }\n            });\n        });\n    }\n\n    var date = new Date(data.description.releaseDate);\n    var hour = date.getHours();\n    $('#release-hour').val(hour * 3600000);\n\n    var minutes = date.getMinutes();\n    $('#release-min').val(minutes * 60000);\n\n    $(\"#nextRelease\").on('input', function () {\n        data.description.nextRelease = $(this).val();\n        \n    });\n    if (!data.description.contact) {\n        data.description.contact = {};\n    }\n    $(\"#contactName\").on('input', function () {\n        data.description.contact.name = $(this).val();\n        \n    });\n    $(\"#contactEmail\").on('input', function () {\n        data.description.contact.email = $(this).val();\n        \n    });\n    $(\"#contactTelephone\").on('input', function () {\n        data.description.contact.telephone = $(this).val();\n        \n    });\n    $(\"#summary\").on('input', function () {\n        data.description.summary = $(this).val();\n        \n    });\n\n    /* The checked attribute is a boolean attribute, which means the corresponding property is true if the attribute is present at all—even if, for example, the attribute has no value or is set to empty string value or even \"false\" */\n    var checkBoxStatus = function (id) {\n        if (id === 'natStat') {\n            if (data.description.nationalStatistic === \"false\" || data.description.nationalStatistic === false) {\n                return false;\n            } else {\n                return true;\n            }\n        } else if (id === 'cancelled') {\n            if (data.description.cancelled === \"false\" || data.description.cancelled === false) {\n                return false;\n            } else {\n                return true;\n            }\n        } else if (id === 'finalised') {\n            if (data.description.finalised === \"false\" || data.description.finalised === false) {\n                return false;\n            } else {\n                return true;\n            }\n        }\n    };\n\n    // Gets status of checkbox and sets JSON to match\n    $(\"#natStat input[type='checkbox']\").prop('checked', checkBoxStatus($('#natStat').attr('id'))).click(function () {\n        data.description.nationalStatistic = $(\"#natStat input[type='checkbox']\").prop('checked') ? true : false;\n        \n    });\n\n    $(\"#cancelled input[type='checkbox']\").prop('checked', checkBoxStatus($('#cancelled').attr('id'))).click(function () {\n        data.description.cancelled = $(\"#cancelled input[type='checkbox']\").prop('checked') ? true : false;\n        if (data.description.cancelled) {\n            var editedSectionValue = {};\n            editedSectionValue.title = \"Please enter the reason for the cancellation\";\n            var saveContent = function (updatedContent) {\n                data.description.cancellationNotice = [updatedContent];\n                putContent(collectionId, data.uri, JSON.stringify(data),\n                    success = function () {\n                        Florence.Editor.isDirty = false;\n                        loadPageDataIntoEditor(data.uri, collectionId);\n                        refreshPreview(data.uri);\n                    },\n                    error = function (response) {\n                        if (response.status === 400) {\n                            sweetAlert(\"Cannot edit this page\", \"It is already part of another collection.\");\n                        }\n                        else {\n                            handleApiError(response);\n                        }\n                    }\n                );\n            };\n            loadMarkdownEditor(editedSectionValue, saveContent, data, 'notEmpty');\n        } else {\n            data.description.cancellationNotice = [];\n        }\n        \n    });\n\n    if (data.description.finalised) {\n        $(\"#finalised input[type='checkbox']\").prop('checked', checkBoxStatus($('#finalised').attr('id'))).click(function (e) {\n            sweetAlert('You cannot change this field once it is finalised.');\n            e.preventDefault();\n        });\n    } else {\n        $(\"#finalised input[type='checkbox']\").prop('checked', checkBoxStatus($('#finalised').attr('id'))).click(function () {\n            swal({\n                title: \"Warning\",\n                text: \"You will not be able reset the date to provisional once you've done this. Are you sure you want to proceed?\",\n                type: \"warning\",\n                showCancelButton: true,\n                confirmButtonText: \"Continue\",\n                cancelButtonText: \"Cancel\"\n            }, function (result) {\n                if (result) {\n                    data.description.finalised = $(\"#finalised input[type='checkbox']\").prop('checked') ? true : false;\n                    if (data.description.finalised) {\n                        // remove provisional date\n                        data.description.provisionalDate = \"\";\n                        $('.provisional-date').remove();\n                        $('#finalised').remove();\n                    }\n                } else {\n                    $(\"#finalised input[type='checkbox']\").prop('checked', false);\n                }\n            });\n        });\n    }\n\n    $(\"#dateChange\").on('input', function () {\n        data.dateChanges.previousDate = $(this).val();\n        \n    });\n\n    function saveOldDate(collectionId, data, oldDate) {\n        data.dateChanges.push({previousDate: oldDate, changeNotice: \"\"});\n        initialiseLastNoteMarkdown(collectionId, data, 'dateChanges', 'changeNotice');\n    }\n\n    $('#add-preview').click(function () {\n        //Check if it is article, bulletin or dataset\n        processCollection(collectionId);\n    });\n\n    function processCollection(collectionId, noSave) {\n        pageDataRequests.push(\n            getCollectionDetails(collectionId,\n                success = function (response) {\n                    pages = response;\n                },\n                error = function (response) {\n                    handleApiError(response);\n                }\n            )\n        );\n        $.when.apply($, pageDataRequests).then(function () {\n            if(pages.releaseUri && pages.releaseUri == data.uri) {\n                processPreview(data, pages);\n                if (noSave) {\n                    putContent(collectionId, data.uri, JSON.stringify(data),\n                      success = function () {\n                          Florence.Editor.isDirty = false;\n                          refreshPreview(data.uri);\n                      },\n                      error = function (response) {\n                          if (response.status === 400) {\n                              sweetAlert(\"Cannot edit this page\", \"It is already part of another collection.\");\n                          } else {\n                              handleApiError(response);\n                          }\n                      }\n                    );\n                } else {\n                    updateContent(collectionId, data.uri, JSON.stringify(data));\n                }\n            }\n        });\n    }\n\n    //Add uri to relatedDocuments or relatedDatasets\n    function processPreview(data, pages) {\n        data.relatedDocuments = [];\n        data.relatedDatasets = [];\n        data.relatedMethodology = [];\n        data.relatedMethodologyArticle = [];\n        _.each(pages.inProgress, function (page) {\n            if (page.type === 'article' || page.type === 'article_download' || page.type === 'bulletin' || page.type === 'compendium_landing_page') {\n                data.relatedDocuments.push({uri: page.uri});\n                //console.log(page.uri);\n            } else if (page.type === 'dataset_landing_page') {\n                data.relatedDatasets.push({uri: page.uri});\n            } else if (page.type === 'static_qmi') {\n                data.relatedMethodology.push({uri: page.uri});\n            } else if (page.type === 'static_methodology' || page.type === 'static_methodology_download') {\n                data.relatedMethodologyArticle.push({uri: page.uri});\n            }\n        });\n        _.each(pages.complete, function (page) {\n            if (page.type === 'article' || page.type === 'article_download' || page.type === 'bulletin' || page.type === 'compendium_landing_page') {\n                data.relatedDocuments.push({uri: page.uri});\n                //console.log(page.uri);\n            } else if (page.type === 'dataset_landing_page') {\n                data.relatedDatasets.push({uri: page.uri});\n            } else if (page.type === 'static_qmi') {\n                data.relatedMethodology.push({uri: page.uri});\n            } else if (page.type === 'static_methodology' || page.type === 'static_methodology_download') {\n                data.relatedMethodologyArticle.push({uri: page.uri});\n            }\n        });\n        _.each(pages.reviewed, function (page) {\n            if (page.type === 'article' || page.type === 'article_download' || page.type === 'bulletin' || page.type === 'compendium_landing_page') {\n                data.relatedDocuments.push({uri: page.uri});\n                //console.log(page.uri);\n            } else if (page.type === 'dataset_landing_page') {\n                data.relatedDatasets.push({uri: page.uri});\n            } else if (page.type === 'static_qmi') {\n                data.relatedMethodology.push({uri: page.uri});\n            } else if (page.type === 'static_methodology' || page.type === 'static_methodology_download') {\n                data.relatedMethodologyArticle.push({uri: page.uri});\n            }\n        });\n    }\n\n    // Check whether release is being added back into collection and the published flag should be toggled to truthy\n    function checkPublishedFlag(data) {\n        return new Promise (function(resolve, reject) {\n            if (!data.description.published) {\n                getCollection(collectionId, success = function (collectionData) {\n                    if (collectionData.releaseUri == data.uri) {\n                        data.description.published = true;\n                    }\n                    resolve()\n                }, error = function (error) {\n                    reject(error);\n                });\n            } else {\n                resolve();\n            }\n        });\n    }\n\n    //Save and update preview page\n    //Get collection content\n\n    // Save\n    var editNav = $('.edit-nav');\n    editNav.off(); // remove any existing event handlers.\n\n    editNav.on('click', '.btn-edit-save', function () {\n        save(updateContent);\n    });\n\n    // completed to review\n    editNav.on('click', '.btn-edit-save-and-submit-for-review', function () {\n        save(saveAndCompleteContent);\n    });\n\n    // reviewed to approve\n    editNav.on('click', '.btn-edit-save-and-submit-for-approval', function () {\n        save(saveAndReviewContent);\n    });\n\n    function save(onSave) {\n        // Check whether the publish flag needs to be toggle - this is async so needs to be a promise\n        checkPublishedFlag(data).then(function() {\n            // Once publish flag is checked then continue with rest of save\n            checkRenameUri(collectionId, data, renameUri, onSave);\n        }).catch(function(error) {\n            console.log(\"Error getting collection data: \", error);\n        });\n\n    }\n}\n\nfunction t1Editor(collectionId, data, templateData) {\n\n  var newSections = [];\n  var setActiveTab, getActiveTab;\n\n  $(\".edit-accordion\").on('accordionactivate', function (event, ui) {\n    setActiveTab = $(\".edit-accordion\").accordion(\"option\", \"active\");\n    if (setActiveTab !== false) {\n      Florence.globalVars.activeTab = setActiveTab;\n    }\n  });\n\n  getActiveTab = Florence.globalVars.activeTab;\n  accordion(getActiveTab);\n\n  resolveTitleT1(collectionId, data, templateData, 'sections');\n\n  // Metadata edition and saving\n  if (Florence.globalVars.welsh) {\n    $(\"#title\").on('input', function () {\n      $(this).textareaAutoSize();\n      data.description.title = $(this).val();\n    });\n  } else {\n    $(\".title\").remove();\n  }\n  $(\"#summary\").on('input', function () {\n    $(this).textareaAutoSize();\n    data.description.summary = $(this).val();\n  });\n  $(\"#keywordsTag\").tagit({\n    availableTags: data.description.keywords,\n    singleField: true,\n    allowSpaces: true,\n    singleFieldNode: $('#keywords')\n  });\n  $('#keywords').on('change', function () {\n    data.description.keywords = $('#keywords').val().split(',');\n  });\n  $(\"#metaDescription\").on('input', function () {\n    $(this).textareaAutoSize();\n    data.description.metaDescription = $(this).val();\n  });\n\n\n  // Save\n  var editNav = $('.edit-nav');\n  editNav.off(); // remove any existing event handlers.\n\n  editNav.on('click', '.btn-edit-save', function () {\n    save();\n    updateContent(collectionId, '', JSON.stringify(data));\n  });\n\n  // completed to review\n  editNav.on('click', '.btn-edit-save-and-submit-for-review', function () {\n    //pageData = $('.fl-editor__headline').val();\n    save();\n    saveAndCompleteContent(collectionId, '', JSON.stringify(data));\n  });\n\n  // reviewed to approve\n  editNav.on('click', '.btn-edit-save-and-submit-for-approval', function () {\n    save();\n    saveAndReviewContent(collectionId, '', JSON.stringify(data));\n  });\n\n  function save() {\n    // sections\n    var orderSections = $(\"#sortable-section\").sortable('toArray');\n    $(orderSections).each(function (indexS, nameS) {\n      var uri = data.sections[parseInt(nameS)].statistics.uri;\n      var safeUri = checkPathSlashes(uri);\n      var link = data.sections[parseInt(nameS)].theme.uri;\n      newSections[parseInt(indexS)] = {\n        theme: {uri: link},\n        statistics: {uri: safeUri}\n      };\n    });\n    data.sections = newSections;\n  }\n}\n\nfunction resolveTitleT1(collectionId, data, templateData, field) {\n  var ajaxRequest = [];\n  $(templateData[field]).each(function (index, path) {\n    var eachUri = path.statistics.uri;\n    var dfd = $.Deferred();\n    getBabbagePageData(collectionId, eachUri,\n      success = function (response) {\n        templateData[field][index].statistics.title = response.description.title;\n        dfd.resolve();\n      },\n      error = function () {\n        sweetAlert(\"Error\", field + ' address: ' + eachUri + ' is not found.', \"error\");\n        dfd.resolve();\n      }\n    );\n    ajaxRequest.push(dfd);\n  });\n\n  $.when.apply($, ajaxRequest).then(function () {\n    var dataTemplate = templateData[field];\n    var html = templates.workEditT1Sections(dataTemplate);\n    $('#to-populate').replaceWith(html);\n\n    //Edit section\n    $(data.sections).each(function (index, section) {\n//  lastIndexSections = index + 1;\n      $(\"#section-edit_\" + index).on('click', function () {\n        swal ({\n          title: \"Warning\",\n          text: \"If you do not come back to this page, you will lose any unsaved changes\",\n          type: \"warning\",\n          showCancelButton: true,\n          confirmButtonText: \"Continue\",\n          cancelButtonText: \"Cancel\"\n        }, function(result) {\n          if (result === true) {\n            var iframeEvent = document.getElementById('iframe').contentWindow;\n            iframeEvent.removeEventListener('click', Florence.Handler, true);\n            createWorkspace('/', collectionId, '', null, true);\n\n            $('#' + index).replaceWith(\n              '<div id=\"' + index + '\" class=\"edit-section__sortable-item\">' +\n              '  <textarea id=\"uri_' + index + '\" placeholder=\"Go to the related document and click Get\"></textarea>' +\n              '  <button class=\"btn-page-get\" id=\"section-get_' + index + '\">Get</button>' +\n              '  <button class=\"btn-page-cancel\" id=\"section-cancel_' + index + '\">Cancel</button>' +\n              '</div>');\n            $(\"#section-cancel_\" + index).hide();\n\n            $(\"#section-get_\" + index).one('click', function () {\n              var pastedUrl = $('#uri_' + index).val();\n              if (!pastedUrl) {\n                pastedUrl = getPathNameTrimLast();\n              } else {\n                pastedUrl = checkPathParsed(pastedUrl);\n              }\n              var sectionUrlData = pastedUrl + \"/data\";\n\n              $.ajax({\n                url: sectionUrlData,\n                dataType: 'json',\n                crossDomain: true,\n                success: function (sectionData) {\n                  if (sectionData.type === 'timeseries') {\n                    data.sections.splice(index, 1,\n                      {\n                        theme: {uri: getTheme(sectionData.uri)},\n                        statistics: {uri: sectionData.uri}\n                      });\n                    putContent(collectionId, '', JSON.stringify(data),\n                      success = function (response) {\n                        console.log(\"Updating completed \" + response);\n                        Florence.Editor.isDirty = false;\n                        createWorkspace('/', collectionId, 'edit');\n                      },\n                      error = function (response) {\n                        if (response.status === 400) {\n                          sweetAlert(\"Cannot edit this page\", \"It is already part of another collection.\");\n                        }\n                        else {\n                          handleApiError(response);\n                        }\n                      }\n                    );\n                  } else {\n                    sweetAlert(\"This is not a time series\");\n                  }\n                },\n                error: function () {\n                  console.log('No page data returned');\n                }\n              });\n            });\n\n            $(\"#section-cancel_\" + index).show().one('click', function () {\n              createWorkspace('', collectionId, 'edit');\n            });\n          }\n        });\n      });\n    });\n\n    function sortableSections() {\n      $(\"#sortable-section\").sortable();\n    }\n\n    sortableSections();\n\n  });\n}\n\nfunction getTheme(uri) {\n  var parts = uri.split('/');\n  var theme = parts.splice(0, 2);\n  return theme.join('/');\n}\nfunction t1EditorCensus(collectionId, data, templateData) {\n\n  var newBlocks = [], newImage = [];\n  var setActiveTab, getActiveTab;\n  var renameUri = false;\n\n  $(\".edit-accordion\").on('accordionactivate', function (event, ui) {\n    setActiveTab = $(\".edit-accordion\").accordion(\"option\", \"active\");\n    if (setActiveTab !== false) {\n      Florence.globalVars.activeTab = setActiveTab;\n    }\n  });\n\n  getActiveTab = Florence.globalVars.activeTab;\n  accordion(getActiveTab);\n\n  // Metadata edition and saving\n  $(\"#title\").on('input', function () {\n    renameUri = true;\n    $(this).textareaAutoSize();\n    data.description.title = $(this).val();\n  });\n\n  $(\"#summary\").on('input', function () {\n    $(this).textareaAutoSize();\n    data.description.summary = $(this).val();\n  });\n  $(\"#keywordsTag\").tagit({\n    availableTags: data.description.keywords,\n    singleField: true,\n    allowSpaces: true,\n    singleFieldNode: $('#keywords')\n  });\n  $('#keywords').on('change', function () {\n    data.description.keywords = $('#keywords').val().split(',');\n  });\n  $(\"#metaDescription\").on('input', function () {\n    $(this).textareaAutoSize();\n    data.description.metaDescription = $(this).val();\n  });\n\n  // Save\n  var editNav = $('.edit-nav');\n  editNav.off(); // remove any existing event handlers.\n\n  editNav.on('click', '.btn-edit-save', function () {\n    save(updateContent);\n  });\n\n  // completed to review\n  editNav.on('click', '.btn-edit-save-and-submit-for-review', function () {\n    save(saveAndCompleteContent);\n  });\n\n  // reviewed to approve\n  editNav.on('click', '.btn-edit-save-and-submit-for-approval', function () {\n    save(saveAndReviewContent);\n  });\n\n  function save(onSave) {\n    // Blocks\n    var orderBlocks = $(\"#sortable-block\").sortable('toArray');\n    $(orderBlocks).each(function (indexB, titleB) {\n      if (!data.sections[parseInt(titleB)].title) {\n        var uri = data.sections[parseInt(titleB)].uri;\n        var size = data.sections[parseInt(titleB)].size;\n        var safeUri = checkPathSlashes(uri);\n        newBlocks[indexB] = {uri: safeUri, size: size};\n      } else {\n        var uri = data.sections[parseInt(titleB)].uri;\n        var title = data.sections[parseInt(titleB)].title;\n        var size = data.sections[parseInt(titleB)].size;\n        var image = data.sections[parseInt(titleB)].image;\n        var text = data.sections[parseInt(titleB)].text;\n        newBlocks[indexB] = {uri: uri, title: title, text: text, image: image, size: size};\n      }\n    });\n    data.sections = newBlocks;\n    // images\n    var orderImage = $(\"#sortable-image\").sortable('toArray');\n    $(orderImage).each(function (indexImage, nameImage) {\n      var uri = data.images[parseInt(nameImage)].uri;\n      var title = data.images[parseInt(nameImage)].title;\n      var filename = data.images[parseInt(nameImage)].filename;\n      var safeUri = checkPathSlashes(uri);\n      newImage[indexImage] = {uri: safeUri, title: title, filename: filename};\n    });\n    data.images = newImage;\n\n    checkRenameUri(collectionId, data, renameUri, onSave);\n  }\n\n}\n\nfunction t2Editor(collectionId, data) {\n\n  var setActiveTab, getActiveTab;\n\n  $(\".edit-accordion\").on('accordionactivate', function (event, ui) {\n    setActiveTab = $(\".edit-accordion\").accordion(\"option\", \"active\");\n    if (setActiveTab !== false) {\n      Florence.globalVars.activeTab = setActiveTab;\n    }\n  });\n\n  getActiveTab = Florence.globalVars.activeTab;\n  accordion(getActiveTab);\n\n  // Metadata load, edition and saving\n  $(\"#title\").on('input', function () {\n    $(this).textareaAutoSize();\n    data.description.title = $(this).val();\n  });\n  $(\"#summary\").on('input', function () {\n    $(this).textareaAutoSize();\n    data.description.summary = $(this).val();\n  });\n  $(\"#keywordsTag\").tagit({\n    availableTags: data.description.keywords,\n    singleField: true,\n    allowSpaces: true,\n    singleFieldNode: $('#keywords')\n  });\n  $('#keywords').on('change', function () {\n    data.description.keywords = $('#keywords').val().split(',');\n  });\n  $(\"#metaDescription\").on('input', function () {\n    $(this).textareaAutoSize();\n    data.description.metaDescription = $(this).val();\n  });\n\n  // Save\n  var editNav = $('.edit-nav');\n  editNav.off(); // remove any existing event handlers.\n\n  editNav.on('click', '.btn-edit-save', function () {\n    Florence.globalVars.pagePos = $(\".workspace-edit\").scrollTop();\n    updateContent(collectionId, data.uri, JSON.stringify(data));\n  });\n\n  // completed to review\n  editNav.on('click', '.btn-edit-save-and-submit-for-review', function () {\n    Florence.globalVars.pagePos = $(\".workspace-edit\").scrollTop();\n    saveAndCompleteContent(collectionId, data.uri, JSON.stringify(data));\n  });\n\n  // reviewed to approve\n  editNav.on('click', '.btn-edit-save-and-submit-for-approval', function () {\n    Florence.globalVars.pagePos = $(\".workspace-edit\").scrollTop();\n    saveAndReviewContent(collectionId, data.uri, JSON.stringify(data));\n  });\n}\n\nfunction t3Editor(collectionId, data) {\n\n  var setActiveTab, getActiveTab;\n\n  $(\".edit-accordion\").on('accordionactivate', function (event, ui) {\n    setActiveTab = $(\".edit-accordion\").accordion(\"option\", \"active\");\n    if (setActiveTab !== false) {\n      Florence.globalVars.activeTab = setActiveTab;\n    }\n  });\n\n  getActiveTab = Florence.globalVars.activeTab;\n  accordion(getActiveTab);\n  getLastPosition();\n\n  // Metadata load, edition and saving\n  $(\"#title\").on('input', function () {\n    $(this).textareaAutoSize();\n    data.description.title = $(this).val();\n  });\n  $(\"#summary\").on('input', function () {\n    $(this).textareaAutoSize();\n    data.description.summary = $(this).val();\n  });\n  $(\"#keywordsTag\").tagit({\n    availableTags: data.description.keywords,\n    singleField: true,\n    allowSpaces: true,\n    singleFieldNode: $('#keywords')\n  });\n  $('#keywords').on('change', function () {\n    data.description.keywords = $('#keywords').val().split(',');\n  });\n  $(\"#metaDescription\").on('input', function () {\n    $(this).textareaAutoSize();\n    data.description.metaDescription = $(this).val();\n  });\n\n  // Save\n  var editNav = $('.edit-nav');\n  editNav.off(); // remove any existing event handlers.\n\n  editNav.on('click', '.btn-edit-save', function () {\n    Florence.globalVars.pagePos = $(\".workspace-edit\").scrollTop();\n    updateContent(collectionId, data.uri, JSON.stringify(data));\n  });\n\n  // completed to review\n  editNav.on('click', '.btn-edit-save-and-submit-for-review', function () {\n    Florence.globalVars.pagePos = $(\".workspace-edit\").scrollTop();\n    saveAndCompleteContent(collectionId, data.uri, JSON.stringify(data));\n  });\n\n  // reviewed to approve\n  editNav.on('click', '.btn-edit-save-and-submit-for-approval', function () {\n    Florence.globalVars.pagePos = $(\".workspace-edit\").scrollTop();\n    saveAndReviewContent(collectionId, data.uri, JSON.stringify(data));\n  });\n\n}\n\nfunction ArticleDownloadEditor(collectionId, data) {\n\n//  var index = data.release;\n  var newFiles = [], newChart = [], newTable = [], newImage = [], newData = [], newLinks = [], newRelatedQmi = [], newRelatedMethodology = [], newDocuments = [];\n  var setActiveTab, getActiveTab;\n  var renameUri = false;\n\n  $(\".edit-accordion\").on('accordionactivate', function (event, ui) {\n    setActiveTab = $(\".edit-accordion\").accordion(\"option\", \"active\");\n    if (setActiveTab !== false) {\n      Florence.globalVars.activeTab = setActiveTab;\n    }\n  });\n\n  getActiveTab = Florence.globalVars.activeTab;\n  accordion(getActiveTab);\n  getLastPosition();\n\n  // Metadata load, edition and saving\n  $(\"#title\").on('input', function () {\n    renameUri = true;\n    $(this).textareaAutoSize();\n    data.description.title = $(this).val();\n  });\n  $(\"#edition\").on('input', function () {\n    renameUri = true;\n    $(this).textareaAutoSize();\n    data.description.edition = $(this).val();\n  });\n  if (!data.description.releaseDate) {\n    $('#releaseDate').datepicker({dateFormat: 'dd MM yy'}).on('change', function () {\n      data.description.releaseDate = new Date($(this).datepicker({dateFormat: 'dd MM yy'})[0].value).toISOString();\n    });\n  } else {\n    dateTmp = data.description.releaseDate;\n    var dateTmpFormatted = $.datepicker.formatDate('dd MM yy', new Date(dateTmp));\n    $('#releaseDate').val(dateTmpFormatted).datepicker({dateFormat: 'dd MM yy'}).on('change', function () {\n      data.description.releaseDate = new Date($('#releaseDate').datepicker('getDate')).toISOString();\n    });\n  }\n\n  $(\"#nextRelease\").on('input', function () {\n    $(this).textareaAutoSize();\n    data.description.nextRelease = $(this).val();\n  });\n  if (!data.description.contact) {\n    data.description.contact = {};\n  }\n  $(\"#contactName\").on('input', function () {\n    $(this).textareaAutoSize();\n    data.description.contact.name = $(this).val();\n  });\n  $(\"#contactEmail\").on('input', function () {\n    $(this).textareaAutoSize();\n    data.description.contact.email = $(this).val();\n  });\n  $(\"#contactTelephone\").on('input', function () {\n    $(this).textareaAutoSize();\n    data.description.contact.telephone = $(this).val();\n  });\n  $(\"#abstract\").on('input', function () {\n    $(this).textareaAutoSize();\n    data.description._abstract = $(this).val();\n  });\n  $(\"#keywordsTag\").tagit({\n    availableTags: data.description.keywords,\n    singleField: true,\n    allowSpaces: true,\n    singleFieldNode: $('#keywords')\n  });\n  $('#keywords').on('change', function () {\n    data.description.keywords = $('#keywords').val().split(',');\n  });\n  $(\"#metaDescription\").on('input', function () {\n    $(this).textareaAutoSize();\n    data.description.metaDescription = $(this).val();\n  });\n\n  /* The checked attribute is a boolean attribute, which means the corresponding property is true if the attribute\n   is present at all—even if, for example, the attribute has no value or is set to empty string value or even \"false\" */\n  var checkBoxStatus = function () {\n    if (data.description.nationalStatistic === \"false\" || data.description.nationalStatistic === false) {\n      return false;\n    }\n    return true;\n  };\n\n  $(\"#metadata-list input[type='checkbox']\").prop('checked', checkBoxStatus).click(function () {\n    data.description.nationalStatistic = $(\"#metadata-list input[type='checkbox']\").prop('checked') ? true : false;\n  });\n\n  // Save\n  var editNav = $('.edit-nav');\n  editNav.off(); // remove any existing event handlers.\n\n  editNav.on('click', '.btn-edit-save', function () {\n    save(updateContent);\n  });\n\n  // completed to review\n  editNav.on('click', '.btn-edit-save-and-submit-for-review', function () {\n    save(saveAndCompleteContent);\n  });\n\n  // reviewed to approve\n  editNav.on('click', '.btn-edit-save-and-submit-for-approval', function () {\n    save(saveAndReviewContent);\n  });\n\n  function save(onSave) {\n\n    Florence.globalVars.pagePos = $(\".workspace-edit\").scrollTop();\n\n    // Sections\n    data.markdown = [$('#content-markdown').val()];\n\n    // charts\n    var orderChart = $(\"#sortable-chart\").sortable('toArray');\n    $(orderChart).each(function (indexCh, nameCh) {\n      var uri = data.charts[parseInt(nameCh)].uri;\n      var title = data.charts[parseInt(nameCh)].title;\n      var filename = data.charts[parseInt(nameCh)].filename;\n      var safeUri = checkPathSlashes(uri);\n      newChart[indexCh] = {uri: safeUri, title: title, filename: filename};\n    });\n    data.charts = newChart;\n    // tables\n    var orderTable = $(\"#sortable-table\").sortable('toArray');\n    $(orderTable).each(function (indexTable, nameTable) {\n      var uri = data.tables[parseInt(nameTable)].uri;\n      var title = data.tables[parseInt(nameTable)].title;\n      var filename = data.tables[parseInt(nameTable)].filename;\n      var safeUri = checkPathSlashes(uri);\n      newTable[indexTable] = {uri: safeUri, title: title, filename: filename};\n    });\n    data.tables = newTable;\n    // images\n    var orderImage = $(\"#sortable-image\").sortable('toArray');\n    $(orderImage).each(function (indexImage, nameImage) {\n      var uri = data.images[parseInt(nameImage)].uri;\n      var title = data.images[parseInt(nameImage)].title;\n      var filename = data.images[parseInt(nameImage)].filename;\n      var safeUri = checkPathSlashes(uri);\n      newImage[indexImage] = {uri: safeUri, title: title, filename: filename};\n    });\n    data.images = newImage;\n\n    // Files are uploaded. Save metadata\n    var orderFile = $(\"#sortable-file\").sortable('toArray');\n    $(orderFile).each(function (indexF, nameF) {\n      var title = $('#file-title_' + nameF).val();\n      var file = data.downloads[parseInt(nameF)].file;\n      newFiles[indexF] = {title: title, file: file};\n    });\n    data.downloads = newFiles;\n    // External links\n    var orderLink = $(\"#sortable-link\").sortable('toArray');\n    $(orderLink).each(function (indexL, nameL) {\n      var displayText = data.links[parseInt(nameL)].title;\n      var link = $('#link-uri_' + nameL).val();\n      newLinks[indexL] = {uri: link, title: displayText};\n    });\n    data.links = newLinks;\n\n    checkRenameUri(collectionId, data, renameUri, onSave);\n  }\n}\n\n\nfunction articleEditor(collectionId, data) {\n\n  var newChart = [], newTable = [], newEquation = [], newImage = [], newLinks = [], newFiles = [];\n  var setActiveTab, getActiveTab;\n  var renameUri = false;\n\n  $(\".edit-accordion\").on('accordionactivate', function (event, ui) {\n    setActiveTab = $(\".edit-accordion\").accordion(\"option\", \"active\");\n    if (setActiveTab !== false) {\n      Florence.globalVars.activeTab = setActiveTab;\n    }\n  });\n\n  getActiveTab = Florence.globalVars.activeTab;\n  accordion(getActiveTab);\n  getLastPosition();\n\n  // Metadata edition and saving\n  $(\"#title\").on('input', function () {\n    renameUri = true;\n    $(this).textareaAutoSize();\n    data.description.title = $(this).val();\n  });\n  $(\"#edition\").on('input', function () {\n    renameUri = true;\n    $(this).textareaAutoSize();\n    data.description.edition = $(this).val();\n  });\n\n  if (!data.description.releaseDate) {\n    $('#releaseDate').datepicker({dateFormat: 'dd MM yy'}).on('change', function () {\n      data.description.releaseDate = new Date($(this).datepicker({dateFormat: 'dd MM yy'})[0].value).toISOString();\n    });\n  } else {\n    dateTmp = data.description.releaseDate;\n    var dateTmpFormatted = $.datepicker.formatDate('dd MM yy', new Date(dateTmp));\n    $('#releaseDate').val(dateTmpFormatted).datepicker({dateFormat: 'dd MM yy'}).on('change', function () {\n      data.description.releaseDate = new Date($('#releaseDate').datepicker('getDate')).toISOString();\n    });\n  }\n\n  $(\"#nextRelease\").on('input', function () {\n    $(this).textareaAutoSize();\n    data.description.nextRelease = $(this).val();\n  });\n  if (!data.description.contact) {\n    data.description.contact = {};\n  }\n  $(\"#contactName\").on('input', function () {\n    $(this).textareaAutoSize();\n    data.description.contact.name = $(this).val();\n  });\n  $(\"#contactEmail\").on('input', function () {\n    $(this).textareaAutoSize();\n    data.description.contact.email = $(this).val();\n  });\n  $(\"#contactTelephone\").on('input', function () {\n    $(this).textareaAutoSize();\n    data.description.contact.telephone = $(this).val();\n  });\n  $(\"#abstract\").on('input', function () {\n    $(this).textareaAutoSize();\n    data.description._abstract = $(this).val();\n  });\n  $(\"#keywordsTag\").tagit({\n    availableTags: data.description.keywords,\n    singleField: true,\n    allowSpaces: true,\n    singleFieldNode: $('#keywords')\n  });\n  $('#keywords').on('change', function () {\n    data.description.keywords = $('#keywords').val().split(',');\n  });\n  $(\"#metaDescription\").on('input', function () {\n    $(this).textareaAutoSize();\n    data.description.metaDescription = $(this).val();\n  });\n\n  /* The checked attribute is a boolean attribute, which means the corresponding property is true if the attribute\n   is present at all—even if, for example, the attribute has no value or is set to empty string value or even \"false\" */\n  var checkBoxStatus = function () {\n    if (data.description.nationalStatistic === \"false\" || data.description.nationalStatistic === false) {\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  $(\"#metadata-list input[type='checkbox']\").prop('checked', checkBoxStatus).click(function () {\n    data.description.nationalStatistic = $(\"#metadata-list input[type='checkbox']\").prop('checked') ? true : false;\n  });\n\n  // Save\n  var editNav = $('.edit-nav');\n  editNav.off(); // remove any existing event handlers.\n\n  editNav.on('click', '.btn-edit-save', function () {\n    save(updateContent);\n  });\n\n  // completed to review\n  editNav.on('click', '.btn-edit-save-and-submit-for-review', function () {\n    save(saveAndCompleteContent);\n  });\n\n  // reviewed to approve\n  editNav.on('click', '.btn-edit-save-and-submit-for-approval', function () {\n    save(saveAndReviewContent);\n  });\n\n  function save(onSave) {\n\n    Florence.globalVars.pagePos = $(\".workspace-edit\").scrollTop();\n\n    // charts\n    var orderChart = $(\"#sortable-chart\").sortable('toArray');\n    $(orderChart).each(function (indexCh, nameCh) {\n      var uri = data.charts[parseInt(nameCh)].uri;\n      var title = data.charts[parseInt(nameCh)].title;\n      var filename = data.charts[parseInt(nameCh)].filename;\n      var safeUri = checkPathSlashes(uri);\n      newChart[indexCh] = {uri: safeUri, title: title, filename: filename};\n    });\n    data.charts = newChart;\n    // tables\n    var orderTable = $(\"#sortable-table\").sortable('toArray');\n    $(orderTable).each(function (indexTable, nameTable) {\n      var uri = data.tables[parseInt(nameTable)].uri;\n      var title = data.tables[parseInt(nameTable)].title;\n      var filename = data.tables[parseInt(nameTable)].filename;\n      var safeUri = checkPathSlashes(uri);\n      newTable[indexTable] = {uri: safeUri, title: title, filename: filename};\n    });\n    data.tables = newTable;\n    // equations\n    var orderEquation = $(\"#sortable-equation\").sortable('toArray');\n    $(orderEquation).each(function (indexEquation, nameEquation) {\n      var uri = data.equations[parseInt(nameEquation)].uri;\n      var title = data.equations[parseInt(nameEquation)].title;\n      var filename = data.equations[parseInt(nameEquation)].filename;\n      var safeUri = checkPathSlashes(uri);\n      newEquation[indexEquation] = {uri: safeUri, title: title, filename: filename};\n    });\n    data.equations = newEquation;\n    // images\n    var orderImage = $(\"#sortable-image\").sortable('toArray');\n    $(orderImage).each(function (indexImage, nameImage) {\n      var uri = data.images[parseInt(nameImage)].uri;\n      var title = data.images[parseInt(nameImage)].title;\n      var filename = data.images[parseInt(nameImage)].filename;\n      var safeUri = checkPathSlashes(uri);\n      newImage[indexImage] = {uri: safeUri, title: title, filename: filename};\n    });\n    data.images = newImage;\n    // External links\n    var orderLink = $(\"#sortable-link\").sortable('toArray');\n    $(orderLink).each(function (indexL, nameL) {\n      var displayText = data.links[parseInt(nameL)].title;\n      var link = $('#link-uri_' + nameL).val();\n      newLinks[indexL] = {uri: link, title: displayText};\n    });\n    data.links = newLinks;\n    // Files are uploaded. Save metadata\n    var orderFile = $(\"#sortable-pdf\").sortable('toArray');\n    $(orderFile).each(function (indexF, nameF) {\n      var title = $('#pdf-title_' + nameF).val();\n      var file = data.pdfTable[parseInt(nameF)].file;\n      newFiles[indexF] = {title: title, file: file};\n    });\n    data.pdfTable = newFiles;\n\n    checkRenameUri(collectionId, data, renameUri, onSave);\n  }\n}\n\nfunction bulletinEditor(collectionId, data) {\n\n    var newChart = [], newTable = [], newEquation = [], newImage = [], newLinks = [], newFiles = [];\n    var setActiveTab, getActiveTab;\n    var renameUri = false;\n\n    $(\".edit-accordion\").on('accordionactivate', function (event, ui) {\n        setActiveTab = $(\".edit-accordion\").accordion(\"option\", \"active\");\n        if (setActiveTab !== false) {\n            Florence.globalVars.activeTab = setActiveTab;\n        }\n    });\n\n    getActiveTab = Florence.globalVars.activeTab;\n    accordion(getActiveTab);\n    getLastPosition();\n\n    // Metadata load, edition and saving\n    $(\"#title\").on('input', function () {\n        renameUri = true;\n        $(this).textareaAutoSize();\n        data.description.title = $(this).val();\n    });\n    $(\"#edition\").on('input', function () {\n        renameUri = true;\n        $(this).textareaAutoSize();\n        data.description.edition = $(this).val();\n    });\n\n    if (!data.description.releaseDate) {\n        $('#releaseDate').datepicker({dateFormat: 'dd MM yy'}).on('change', function () {\n            data.description.releaseDate = new Date($(this).datepicker({dateFormat: 'dd MM yy'})[0].value).toISOString();\n        });\n    } else {\n        dateTmp = data.description.releaseDate;\n        var dateTmpFormatted = $.datepicker.formatDate('dd MM yy', new Date(dateTmp));\n        $('#releaseDate').val(dateTmpFormatted).datepicker({dateFormat: 'dd MM yy'}).on('change', function () {\n            data.description.releaseDate = new Date($('#releaseDate').datepicker('getDate')).toISOString();\n        });\n    }\n\n    $(\"#nextRelease\").on('input', function () {\n        $(this).textareaAutoSize();\n        data.description.nextRelease = $(this).val();\n    });\n    if (!data.description.contact) {\n        data.description.contact = {};\n    }\n    $(\"#contactName\").on('input', function () {\n        $(this).textareaAutoSize();\n        data.description.contact.name = $(this).val();\n    });\n    $(\"#contactEmail\").on('input', function () {\n        $(this).textareaAutoSize();\n        data.description.contact.email = $(this).val();\n    });\n    $(\"#contactTelephone\").on('input', function () {\n        $(this).textareaAutoSize();\n        data.description.contact.telephone = $(this).val();\n    });\n    $(\"#summary\").on('input', function () {\n        $(this).textareaAutoSize();\n        data.description.summary = $(this).val();\n    });\n    $(\"#headline1\").on('input', function () {\n        $(this).textareaAutoSize();\n        data.description.headline1 = $(this).val();\n    });\n    $(\"#headline2\").on('input', function () {\n        $(this).textareaAutoSize();\n        data.description.headline2 = $(this).val();\n    });\n    $(\"#headline3\").on('input', function () {\n        $(this).textareaAutoSize();\n        data.description.headline3 = $(this).val();\n    });\n    $(\"#keywordsTag\").tagit({\n        availableTags: data.description.keywords,\n        singleField: true,\n        allowSpaces: true,\n        singleFieldNode: $('#keywords')\n    });\n    $('#keywords').on('change', function () {\n        data.description.keywords = $('#keywords').val().split(',');\n    });\n    $(\"#metaDescription\").on('input', function () {\n        $(this).textareaAutoSize();\n        data.description.metaDescription = $(this).val();\n    });\n\n    /* The checked attribute is a boolean attribute, which means the corresponding property is true if the attribute\n     is present at all—even if, for example, the attribute has no value or is set to empty string value or even \"false\" */\n    var checkBoxStatus = function () {\n        if (data.description.nationalStatistic === \"false\" || data.description.nationalStatistic === false) {\n            return false;\n        }\n        return true;\n    };\n\n    $(\"#metadata-list input[type='checkbox']\").prop('checked', checkBoxStatus).click(function () {\n        data.description.nationalStatistic = $(\"#metadata-list input[type='checkbox']\").prop('checked') ? true : false;\n    });\n\n    // Save\n    var editNav = $('.edit-nav');\n    editNav.off(); // remove any existing event handlers.\n\n    editNav.on('click', '.btn-edit-save', function () {\n        save(updateContent);\n    });\n\n    // completed to review\n    editNav.on('click', '.btn-edit-save-and-submit-for-review', function () {\n        save(saveAndCompleteContent);\n    });\n\n    // reviewed to approve\n    editNav.on('click', '.btn-edit-save-and-submit-for-approval', function () {\n        save(saveAndReviewContent);\n    });\n\n    function save(onSave) {\n\n        Florence.globalVars.pagePos = $(\".workspace-edit\").scrollTop();\n\n        // charts\n        var orderChart = $(\"#sortable-chart\").sortable('toArray');\n        $(orderChart).each(function (indexCh, nameCh) {\n            var uri = data.charts[parseInt(nameCh)].uri;\n            var title = data.charts[parseInt(nameCh)].title;\n            var filename = data.charts[parseInt(nameCh)].filename;\n            var safeUri = checkPathSlashes(uri);\n            newChart[indexCh] = {uri: safeUri, title: title, filename: filename};\n        });\n        data.charts = newChart;\n        // tables\n        var orderTable = $(\"#sortable-table\").sortable('toArray');\n        $(orderTable).each(function (indexTable, nameTable) {\n            var uri = data.tables[parseInt(nameTable)].uri;\n            var title = data.tables[parseInt(nameTable)].title;\n            var filename = data.tables[parseInt(nameTable)].filename;\n            var safeUri = checkPathSlashes(uri);\n            newTable[indexTable] = {uri: safeUri, title: title, filename: filename};\n        });\n        data.tables = newTable;\n        // equations\n        var orderEquation = $(\"#sortable-equation\").sortable('toArray');\n        $(orderEquation).each(function (indexEquation, nameEquation) {\n            var uri = data.equations[parseInt(nameEquation)].uri;\n            var title = data.equations[parseInt(nameEquation)].title;\n            var filename = data.equations[parseInt(nameEquation)].filename;\n            var safeUri = checkPathSlashes(uri);\n            newEquation[indexEquation] = {uri: safeUri, title: title, filename: filename};\n        });\n        data.equations = newEquation;\n        // images\n        var orderImage = $(\"#sortable-image\").sortable('toArray');\n        $(orderImage).each(function (indexImage, nameImage) {\n            var uri = data.images[parseInt(nameImage)].uri;\n            var title = data.images[parseInt(nameImage)].title;\n            var filename = data.images[parseInt(nameImage)].filename;\n            var safeUri = checkPathSlashes(uri);\n            newImage[indexImage] = {uri: safeUri, title: title, filename: filename};\n        });\n        data.images = newImage;\n        // External links\n        var orderLink = $(\"#sortable-link\").sortable('toArray');\n        $(orderLink).each(function (indexL, nameL) {\n            var displayText = data.links[parseInt(nameL)].title;\n            var link = $('#link-uri_' + nameL).val();\n            newLinks[indexL] = {uri: link, title: displayText};\n        });\n        data.links = newLinks;\n        // Files are uploaded. Save metadata\n        var orderFile = $(\"#sortable-pdf\").sortable('toArray');\n        $(orderFile).each(function (indexF, nameF) {\n            var title = $('#pdf-title_' + nameF).val();\n            var file = data.pdfTable[parseInt(nameF)].file;\n            newFiles[indexF] = {title: title, file: file};\n        });\n        data.pdfTable = newFiles;\n\n        checkRenameUri(collectionId, data, renameUri, onSave);\n    }\n}\n\nfunction timeseriesEditor(collectionId, data) {\n\n  var setActiveTab, getActiveTab;\n\n  $(\".edit-accordion\").on('accordionactivate', function (event, ui) {\n    setActiveTab = $(\".edit-accordion\").accordion(\"option\", \"active\");\n    if (setActiveTab !== false) {\n      Florence.globalVars.activeTab = setActiveTab;\n    }\n  });\n\n  getActiveTab = Florence.globalVars.activeTab;\n  accordion(getActiveTab);\n  getLastPosition();\n\n  // Metadata edition and saving\n  $(\"#title\").on('input', function () {\n    $(this).textareaAutoSize();\n    data.description.title = $(this).val();\n  });\n  $(\"#nextRelease\").on('input', function () {\n    $(this).textareaAutoSize();\n    data.description.nextRelease = $(this).val();\n  });\n  if (!data.description.contact) {\n    data.description.contact = {};\n  }\n  $(\"#contactName\").on('input', function () {\n    $(this).textareaAutoSize();\n    data.description.contact.name = $(this).val();\n  });\n  $(\"#contactEmail\").on('input', function () {\n    $(this).textareaAutoSize();\n    data.description.contact.email = $(this).val();\n  });\n  $(\"#contactTelephone\").on('input', function () {\n    $(this).textareaAutoSize();\n    data.description.contact.telephone = $(this).val();\n  });\n  $(\"#number\").on('input', function () {\n    $(this).textareaAutoSize();\n    data.description.number = $(this).val();\n  });\n  $(\"#keyNote\").on('input', function () {\n    $(this).textareaAutoSize();\n    data.description.keyNote = $(this).val();\n  });\n  $(\"#unit\").on('input', function () {\n    $(this).textareaAutoSize();\n    data.description.unit = $(this).val();\n  });\n  $(\"#preUnit\").on('input', function () {\n    $(this).textareaAutoSize();\n    data.description.preUnit = $(this).val();\n  });\n  $(\"#source\").on('input', function () {\n    $(this).textareaAutoSize();\n    data.description.source = $(this).val();\n  });\n  $(\"#keywordsTag\").tagit({\n    availableTags: data.description.keywords,\n    singleField: true,\n    allowSpaces: true,\n    singleFieldNode: $('#keywords')\n  });\n  $('#keywords').on('change', function () {\n    data.description.keywords = $('#keywords').val().split(',');\n  });\n  $(\"#metaDescription\").on('input', function () {\n    $(this).textareaAutoSize();\n    data.description.metaDescription = $(this).val();\n  });\n\n  /* The checked attribute is a boolean attribute, which means the corresponding property is true if the attribute\n   is present at all—even if, for example, the attribute has no value or is set to empty string value or even \"false\" */\n  var checkBoxStatus = function () {\n    if (data.description.nationalStatistic === \"false\" || data.description.nationalStatistic === false) {\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  $(\"#metadata-list #natStat input[type='checkbox']\").prop('checked', checkBoxStatus).click(function () {\n    data.description.nationalStatistic = $(\"#metadata-list #natStat input[type='checkbox']\").prop('checked') ? true : false;\n  });\n\n  var isIndexStatus = function () {\n    if (data.description.isIndex === true) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  $(\"#metadata-list #isIndex input[type='checkbox']\").prop('checked', isIndexStatus).click(function () {\n    data.description.isIndex = $(\"#metadata-list #isIndex input[type='checkbox']\").prop('checked') ? true : false;\n  });\n\n  // Save\n  var editNav = $('.edit-nav');\n  editNav.off(); // remove any existing event handlers.\n\n  editNav.on('click', '.btn-edit-save', function () {\n    if (Florence.globalVars.welsh) {\n      sweetAlert('You cannot perform this operation in Welsh.');\n    } else {\n      Florence.globalVars.pagePos = $(\".workspace-edit\").scrollTop();\n      updateContent(collectionId, data.uri, JSON.stringify(data));\n    }\n  });\n\n  // completed to review\n  editNav.on('click', '.btn-edit-save-and-submit-for-review', function () {\n    if (Florence.globalVars.welsh) {\n      sweetAlert('You cannot perform this operation in Welsh.');\n    } else {\n      Florence.globalVars.pagePos = $(\".workspace-edit\").scrollTop();\n      saveAndCompleteContent(collectionId, data.uri, JSON.stringify(data));\n    }\n  });\n\n  // reviewed to approve\n  editNav.on('click', '.btn-edit-save-and-submit-for-approval', function () {\n    Florence.globalVars.pagePos = $(\".workspace-edit\").scrollTop();\n    saveAndReviewContent(collectionId, data.uri, JSON.stringify(data));\n  });\n\n}\n\nfunction compendiumChapterEditor(collectionId, data) {\n\n    var newChart = [], newTable = [], newEquation = [], newImage = [], newLinks = [];\n    var parentUrl = getParentPage(data.uri);\n    var setActiveTab, getActiveTab;\n\n    //Add parent link onto page\n    loadParentLink(collectionId, data, parentUrl);\n\n    $(\".edit-accordion\").on('accordionactivate', function (event, ui) {\n        setActiveTab = $(\".edit-accordion\").accordion(\"option\", \"active\");\n        if (setActiveTab !== false) {\n            Florence.globalVars.activeTab = setActiveTab;\n        }\n    });\n\n    getActiveTab = Florence.globalVars.activeTab;\n    accordion(getActiveTab);\n    getLastPosition();\n\n    // Metadata edition and saving\n    $(\"#title\").on('input', function () {\n        $(this).textareaAutoSize();\n        sweetAlert(\"Cannot remame this page here\", \"Go back to parent page and use the rename function there\");\n    });\n    $(\"#headline\").on('input', function () {\n        $(this).textareaAutoSize();\n        data.description.headline = $(this).val();\n    });\n    if (!data.description.releaseDate) {\n        $('#releaseDate').datepicker({dateFormat: 'dd MM yy'}).on('change', function () {\n            data.description.releaseDate = new Date($(this).datepicker({dateFormat: 'dd MM yy'})[0].value).toISOString();\n        });\n    } else {\n        dateTmp = data.description.releaseDate;\n        var dateTmpFormatted = $.datepicker.formatDate('dd MM yy', new Date(dateTmp));\n        $('#releaseDate').val(dateTmpFormatted).datepicker({dateFormat: 'dd MM yy'}).on('change', function () {\n            data.description.releaseDate = new Date($('#releaseDate').datepicker('getDate')).toISOString();\n        });\n    }\n    $(\"#nextRelease\").on('input', function () {\n        $(this).textareaAutoSize();\n        data.description.nextRelease = $(this).val();\n    });\n    if (!data.description.contact) {\n        data.description.contact = {};\n    }\n    $(\"#contactName\").on('input', function () {\n        $(this).textareaAutoSize();\n        data.description.contact.name = $(this).val();\n    });\n    $(\"#contactEmail\").on('input', function () {\n        $(this).textareaAutoSize();\n        data.description.contact.email = $(this).val();\n    });\n    $(\"#contactTelephone\").on('input', function () {\n        $(this).textareaAutoSize();\n        data.description.contact.telephone = $(this).val();\n    });\n    $(\"#abstract\").on('input', function () {\n        $(this).textareaAutoSize();\n        data.description._abstract = $(this).val();\n    });\n    $(\"#keywordsTag\").tagit({\n        availableTags: data.description.keywords,\n        singleField: true,\n        allowSpaces: true,\n        singleFieldNode: $('#keywords')\n    });\n    $('#keywords').on('change', function () {\n        data.description.keywords = $('#keywords').val().split(',');\n    });\n    $(\"#metaDescription\").on('input', function () {\n        $(this).textareaAutoSize();\n        data.description.metaDescription = $(this).val();\n    });\n\n    /* The checked attribute is a boolean attribute, which means the corresponding property is true if the attribute\n     is present at all—even if, for example, the attribute has no value or is set to empty string value or even \"false\" */\n    var checkBoxStatus = function () {\n        if (data.description.nationalStatistic === \"false\" || data.description.nationalStatistic === false) {\n            return false;\n        } else {\n            return true;\n        }\n    };\n\n    $(\"#metadata-list input[type='checkbox']\").prop('checked', checkBoxStatus).click(function () {\n        data.description.nationalStatistic = $(\"#metadata-list input[type='checkbox']\").prop('checked') ? true : false;\n    });\n\n    // Save\n    var editNav = $('.edit-nav');\n    editNav.off(); // remove any existing event handlers.\n\n    editNav.on('click', '.btn-edit-save', function () {\n        save();\n        updateContent(collectionId, data.uri, JSON.stringify(data));\n    });\n\n    // completed to review\n    editNav.on('click', '.btn-edit-save-and-submit-for-review', function () {\n        save();\n        saveAndCompleteContent(collectionId, data.uri, JSON.stringify(data), false, parentUrl);\n    });\n\n    // reviewed to approve\n    editNav.on('click', '.btn-edit-save-and-submit-for-approval', function () {\n        save();\n        saveAndReviewContent(collectionId, data.uri, JSON.stringify(data), false, parentUrl);\n    });\n\n\n    function save() {\n\n        Florence.globalVars.pagePos = $(\".workspace-edit\").scrollTop();\n\n        // charts\n        var orderChart = $(\"#sortable-chart\").sortable('toArray');\n        $(orderChart).each(function (indexCh, nameCh) {\n            var uri = data.charts[parseInt(nameCh)].uri;\n            var title = data.charts[parseInt(nameCh)].title;\n            var filename = data.charts[parseInt(nameCh)].filename;\n            var safeUri = checkPathSlashes(uri);\n            newChart[indexCh] = {uri: safeUri, title: title, filename: filename};\n        });\n        data.charts = newChart;\n\n        // tables\n        var orderTable = $(\"#sortable-table\").sortable('toArray');\n        $(orderTable).each(function (indexTable, nameTable) {\n            var uri = data.tables[parseInt(nameTable)].uri;\n            var title = data.tables[parseInt(nameTable)].title;\n            var filename = data.tables[parseInt(nameTable)].filename;\n            var safeUri = checkPathSlashes(uri);\n            newTable[indexTable] = {uri: safeUri, title: title, filename: filename};\n        });\n        data.tables = newTable;\n        var orderEquation = $(\"#sortable-equation\").sortable('toArray');\n        $(orderEquation).each(function (indexEquation, nameEquation) {\n            var uri = data.equations[parseInt(nameEquation)].uri;\n            var title = data.equations[parseInt(nameEquation)].title;\n            var filename = data.equations[parseInt(nameEquation)].filename;\n            var safeUri = checkPathSlashes(uri);\n            newEquation[indexEquation] = {uri: safeUri, title: title, filename: filename};\n        });\n        data.equations = newEquation;\n        // images\n        var orderImage = $(\"#sortable-image\").sortable('toArray');\n        $(orderImage).each(function (indexImage, nameImage) {\n            var uri = data.images[parseInt(nameImage)].uri;\n            var title = data.images[parseInt(nameImage)].title;\n            var filename = data.images[parseInt(nameImage)].filename;\n            var safeUri = checkPathSlashes(uri);\n            newImage[indexImage] = {uri: safeUri, title: title, filename: filename};\n        });\n        data.images = newImage;\n\n        // External links\n        var orderLink = $(\"#sortable-link\").sortable('toArray');\n        $(orderLink).each(function (indexL, nameL) {\n            var displayText = data.links[parseInt(nameL)].title;\n            var link = $('#link-uri_' + nameL).val();\n            newLinks[indexL] = {uri: link, title: displayText};\n        });\n        data.links = newLinks;\n    }\n}\n\nfunction compendiumDataEditor(collectionId, data) {\n\n    var newFiles = [];\n    var parentUrl = getParentPage(data.uri);\n    var setActiveTab, getActiveTab;\n\n    //Add parent link onto page\n    loadParentLink(collectionId, data, parentUrl);\n\n    $(\".edit-accordion\").on('accordionactivate', function (event, ui) {\n        setActiveTab = $(\".edit-accordion\").accordion(\"option\", \"active\");\n        if (setActiveTab !== false) {\n            Florence.globalVars.activeTab = setActiveTab;\n        }\n    });\n\n    getActiveTab = Florence.globalVars.activeTab;\n    accordion(getActiveTab);\n    getLastPosition();\n\n    // Metadata edition and saving\n    $(\"#title\").on('input', function () {\n        $(this).textareaAutoSize();\n        sweetAlert(\"Cannot remame this page here\", \"Go back to parent page and use the rename function there\");\n    });\n    $(\"#summary\").on('input', function () {\n        $(this).textareaAutoSize();\n        data.description.summary = $(this).val();\n    });\n    //if (!Florence.collection.date) {                    //overwrite scheduled collection date\n    if (!data.description.releaseDate) {\n        $('#releaseDate').datepicker({dateFormat: 'dd MM yy'}).on('change', function () {\n            data.description.releaseDate = new Date($(this).datepicker({dateFormat: 'dd MM yy'})[0].value).toISOString();\n        });\n    } else {\n        dateTmp = data.description.releaseDate;\n        var dateTmpFormatted = $.datepicker.formatDate('dd MM yy', new Date(dateTmp));\n        $('#releaseDate').val(dateTmpFormatted).datepicker({dateFormat: 'dd MM yy'}).on('change', function () {\n            data.description.releaseDate = new Date($('#releaseDate').datepicker('getDate')).toISOString();\n        });\n    }\n    //} else {\n    //    $('.release-date').hide();\n    //}\n    $(\"#nextRelease\").on('input', function () {\n        $(this).textareaAutoSize();\n        data.description.nextRelease = $(this).val();\n    });\n    if (!data.description.contact) {\n        data.description.contact = {};\n    }\n    $(\"#contactName\").on('input', function () {\n        $(this).textareaAutoSize();\n        data.description.contact.name = $(this).val();\n    });\n    $(\"#contactEmail\").on('input', function () {\n        $(this).textareaAutoSize();\n        data.description.contact.email = $(this).val();\n    });\n    $(\"#contactTelephone\").on('input', function () {\n        $(this).textareaAutoSize();\n        data.description.contact.telephone = $(this).val();\n    });\n    $(\"#datasetId\").on('input', function () {\n        $(this).textareaAutoSize();\n        data.description.datasetId = $(this).val();\n    });\n    $(\"#keywordsTag\").tagit({\n        availableTags: data.description.keywords,\n        singleField: true,\n        allowSpaces: true,\n        singleFieldNode: $('#keywords')\n    });\n    $('#keywords').on('change', function () {\n        data.description.keywords = $('#keywords').val().split(',');\n    });\n    $(\"#metaDescription\").on('input', function () {\n        $(this).textareaAutoSize();\n        data.description.metaDescription = $(this).val();\n    });\n\n    /* The checked attribute is a boolean attribute, which means the corresponding property is true if the attribute\n     is present at all—even if, for example, the attribute has no value or is set to empty string value or even \"false\" */\n    var checkBoxStatus = function () {\n        if (data.description.nationalStatistic === \"false\" || data.description.nationalStatistic === false) {\n            return false;\n        } else {\n            return true;\n        }\n    };\n    $(\"#metadata-list input[type='checkbox']\").prop('checked', checkBoxStatus).click(function () {\n        data.description.nationalStatistic = $(\"#metadata-list input[type='checkbox']\").prop('checked') ? true : false;\n    });\n\n    // Save\n    var editNav = $('.edit-nav');\n    editNav.off(); // remove any existing event handlers.\n\n    editNav.on('click', '#save', function () {\n        save();\n        updateContent(collectionId, data.uri, JSON.stringify(data));\n    });\n\n    // completed to review\n    editNav.on('click', '.btn-edit-save-and-submit-for-review', function () {\n        //pageData = $('.fl-editor__headline').val();\n        save();\n        saveAndCompleteContent(collectionId, data.uri, JSON.stringify(data), parentUrl);\n    });\n\n    // reviewed to approve\n    editNav.on('click', '.btn-edit-save-and-submit-for-approval', function () {\n        save();\n        saveAndReviewContent(collectionId, data.uri, JSON.stringify(data), parentUrl);\n    });\n\n    function save() {\n\n        Florence.globalVars.pagePos = $(\".workspace-edit\").scrollTop();\n\n        // Files are uploaded. Save metadata\n        var orderFile = $(\"#sortable-file\").sortable('toArray');\n        $(orderFile).each(function (indexF, nameF) {\n            var title = $('#file-title_' + nameF).val();\n            var fileDescription = $(\"#file-summary_\" + nameF).val();\n            var file = data.downloads[parseInt(nameF)].file;\n            newFiles[indexF] = {title: title, fileDescription: fileDescription, file: file};\n        });\n        data.downloads = newFiles;\n    }\n}\n\nfunction compendiumEditor(collectionId, data, templateData) {\n\n//  var index = data.release;\n  var newChapters = [];\n  var lastIndexChapter, lastIndexDataset;\n  var setActiveTab, getActiveTab;\n  var renameUri = false;\n\n  $(\".edit-accordion\").on('accordionactivate', function (event, ui) {\n    setActiveTab = $(\".edit-accordion\").accordion(\"option\", \"active\");\n    if (setActiveTab !== false) {\n      Florence.globalVars.activeTab = setActiveTab;\n    }\n  });\n\n  getActiveTab = Florence.globalVars.activeTab;\n  accordion(getActiveTab);\n  getLastPosition();\n\n  resolveTitleT6(collectionId, data, templateData, 'chapters');\n  resolveTitleT6(collectionId, data, templateData, 'datasets');\n\n  // Metadata load, edition and saving\n  $(\"#title\").on('input', function () {\n    renameUri = true;\n    $(this).textareaAutoSize();\n    data.description.title = $(this).val();\n  });\n  $(\"#edition\").on('input', function () {\n    renameUri = true;\n    $(this).textareaAutoSize();\n    data.description.edition = $(this).val();\n  });\n  if (!data.description.releaseDate) {\n    $('#releaseDate').datepicker({dateFormat: 'dd MM yy'}).on('change', function () {\n      data.description.releaseDate = new Date($(this).datepicker({dateFormat: 'dd MM yy'})[0].value).toISOString();\n    });\n  } else {\n    dateTmp = data.description.releaseDate;\n    var dateTmpFormatted = $.datepicker.formatDate('dd MM yy', new Date(dateTmp));\n    $('#releaseDate').val(dateTmpFormatted).datepicker({dateFormat: 'dd MM yy'}).on('change', function () {\n      data.description.releaseDate = new Date($('#releaseDate').datepicker('getDate')).toISOString();\n    });\n  }\n  $(\"#nextRelease\").on('input', function () {\n    $(this).textareaAutoSize();\n    data.description.nextRelease = $(this).val();\n  });\n  if (!data.description.contact) {\n    data.description.contact = {};\n  }\n  $(\"#contactName\").on('input', function () {\n    $(this).textareaAutoSize();\n    data.description.contact.name = $(this).val();\n  });\n  $(\"#contactEmail\").on('input', function () {\n    $(this).textareaAutoSize();\n    data.description.contact.email = $(this).val();\n  });\n  $(\"#contactTelephone\").on('input', function () {\n    $(this).textareaAutoSize();\n    data.description.contact.telephone = $(this).val();\n  });\n  $(\"#summary\").on('input', function () {\n    $(this).textareaAutoSize();\n    data.description.summary = $(this).val();\n  });\n  $(\"#headline\").on('input', function () {\n    $(this).textareaAutoSize();\n    data.description.headline = $(this).val();\n  });\n  $(\"#keywordsTag\").tagit({\n    availableTags: data.description.keywords,\n    singleField: true,\n    allowSpaces: true,\n    singleFieldNode: $('#keywords')\n  });\n  $('#keywords').on('change', function () {\n    data.description.keywords = $('#keywords').val().split(',');\n  });\n  $(\"#metaDescription\").on('input', function () {\n    $(this).textareaAutoSize();\n    data.description.metaDescription = $(this).val();\n  });\n\n  /* The checked attribute is a boolean attribute, which means the corresponding property is true if the attribute\n   is present at all—even if, for example, the attribute has no value or is set to empty string value or even \"false\" */\n  var checkBoxStatus = function () {\n    if (data.description.nationalStatistic === \"false\" || data.description.nationalStatistic === false) {\n      return false;\n    }\n    return true;\n  };\n\n  $(\"#metadata-list input[type='checkbox']\").prop('checked', checkBoxStatus).click(function () {\n    data.description.nationalStatistic = $(\"#metadata-list input[type='checkbox']\").prop('checked') ? true : false;\n  });\n\n  //Add new chapter\n  $(\"#add-chapter\").one('click', function () {\n    var chapterTitle;\n    $('#sortable-chapter').append(\n      '<div id=\"' + lastIndexChapter + '\" class=\"edit-section__sortable-item\">' +\n      '<textarea class=\"auto-size\" id=\"new-chapter-title\" placeholder=\"Type title here and click add\"></textarea>' +\n      '<div class=\"edit-section__buttons\">' +\n      '<button class=\"btn-markdown-edit\" id=\"chapter-add\">Edit chapter</button>' +\n      '</div>' +\n      '</div>');\n    $('#new-chapter-title').on('input', function () {\n      $(this).textareaAutoSize();\n      chapterTitle = $(this).val();\n    });\n    $('#chapter-add').on('click', function () {\n      if (chapterTitle.length < 5) {\n        sweetAlert(\"This is not a valid file title\");\n        return true;\n      } else {\n        loadT6Creator(collectionId, data.description.releaseDate, 'compendium_chapter', data.uri, chapterTitle);\n      }\n    });\n  });\n\n  //Add new table (only one per compendium)\n  if (!data.datasets || data.datasets.length === 0) {\n    $(\"#add-compendium-data\").one('click', function () {\n      var tableTitle;\n      $('#sortable-compendium-data').append(\n        '<div id=\"' + lastIndexDataset + '\" class=\"edit-section__item\">' +\n        '<textarea class=\"auto-size\" id=\"new-compendium-data-title\" placeholder=\"Type title here and click add\"></textarea>' +\n        '<div class=\"edit-section__buttons\">' +\n        '<button class=\"btn-markdown-edit\" id=\"compendium-data-add\">Edit data</button>' +\n        '</div>' +\n        '</div>');\n      $('#new-compendium-data-title').on('input', function () {\n        $(this).textareaAutoSize();\n        tableTitle = $(this).val();\n      });\n      $('#compendium-data-add').on('click', function () {\n        if (tableTitle.length < 5) {\n          sweetAlert(\"This is not a valid file title\");\n          return true;\n        } else {\n          loadT6Creator(collectionId, data.description.releaseDate, 'compendium_data', data.uri, tableTitle);\n        }\n      });\n    });\n  } else {\n    $('#add-compendium-data').hide().one('click', function () {\n      sweetAlert('At the moment you can have one section here.');\n    });\n  }\n\n  // Save\n  var editNav = $('.edit-nav');\n  editNav.off(); // remove any existing event handlers.\n\n  editNav.on('click', '.btn-edit-save', function () {\n    save(updateContent);\n  });\n\n  // completed to review\n  editNav.on('click', '.btn-edit-save-and-submit-for-review', function () {\n    save(saveAndCompleteContent);\n  });\n\n  // reviewed to approve\n  editNav.on('click', '.btn-edit-save-and-submit-for-approval', function () {\n    save(saveAndReviewContent);\n  });\n\n  function save(onSave) {\n\n    Florence.globalVars.pagePos = $(\".workspace-edit\").scrollTop();\n\n    // Chapters\n    var orderRelatedChapter = $(\"#sortable-chapter\").sortable('toArray');\n    $(orderRelatedChapter).each(function (indexC, nameC) {\n      var uri = data.chapters[parseInt(nameC)].uri;\n      var safeUri = checkPathSlashes(uri);\n      newChapters[indexC] = {uri: safeUri};\n    });\n    data.chapters = newChapters;\n\n    checkRenameUri(collectionId, data, renameUri, onSave);\n  }\n}\n\nfunction resolveTitleT6(collectionId, data, templateData, field) {\n  var ajaxRequest = [];\n  $(templateData[field]).each(function (index, path) {\n    templateData[field][index].description = {};\n    var eachUri = path.uri;\n    var dfd = $.Deferred();\n    getPageDataTitle(collectionId, eachUri,\n      function (response) {\n        templateData[field][index].description.title = response.title;\n        dfd.resolve();\n      },\n      function () {\n        sweetAlert(\"Error\", field + ' address: ' + eachUri + ' is not found.', \"error\");\n        dfd.resolve();\n      }\n    );\n    ajaxRequest.push(dfd);\n  });\n\n  $.when.apply($, ajaxRequest).then(function () {\n    var dataTemplate = templateData[field];\n    if (field === 'datasets') {\n      var html = templates.workEditT6Dataset(dataTemplate);\n    } else {\n      var html = templates.workEditT6Chapter(dataTemplate);\n    }\n    $('#' + field).replaceWith(html);\n\n    if (field === 'datasets') {\n      editData(collectionId, data);\n    } else {\n      editChapters(collectionId, data);\n    }\n  });\n}\n\nfunction editChapters(collectionId, data) {\n  // Edit chapters\n  // Load chapter to edit\n  $(data.chapters).each(function (index) {\n    lastIndexChapter = index + 1;\n\n    //open document\n    $(\"#chapter-edit_\" + index).click(function () {\n      var selectedChapter = data.chapters[index].uri;\n      createWorkspace(selectedChapter, collectionId, 'edit');\n    });\n\n    $('#chapter-edit-label_' + index).click(function () {\n      var selectedChapter = data.chapters[index].uri;\n      getPageData(collectionId, selectedChapter,\n        function (pageData) {\n          var markdown = pageData.description.title;\n          var editedSectionValue = {title: 'Compendium chapter title', markdown: markdown};\n          var saveContent = function (updatedContent) {\n            pageData.description.title = updatedContent;\n            var childTitle = updatedContent.replace(/[^A-Z0-9]+/ig, \"\").toLowerCase();\n            putContent(collectionId, pageData.uri, JSON.stringify(pageData),\n              function () {\n                //save children change and move\n                checkRenameUri(collectionId, pageData, true, updateContent);\n                putContent(collectionId, data.uri, JSON.stringify(data),\n                  function () {\n                    // on success update dataset uri in parent and save\n                    data.chapters[index].uri = data.uri + \"/\" + childTitle;\n                  },\n                  function (response) {\n                    if (response.status === 409) {\n                      sweetAlert(\"Cannot edit this page\", \"It is already part of another collection.\");\n                    } else {\n                      handleApiError(response);\n                    }\n                  }\n                );\n              },\n              function (message) {\n                if (message.status === 400) {\n                  sweetAlert(\"Cannot edit this page\", \"It is already part of another collection.\");\n                }\n                else {\n                  handleApiError(message);\n                }\n              }\n            );\n          };\n          loadMarkdownEditor(editedSectionValue, saveContent, pageData);\n        },\n        function (message) {\n          handleApiError(message);\n        }\n      );\n    });\n\n    // Delete\n    $(\"#chapter-delete_\" + index).click(function () {\n      swal({\n        title: \"Warning\",\n        text: \"You are going to delete the chapter this link refers to. Are you sure you want to proceed?\",\n        type: \"warning\",\n        showCancelButton: true,\n        confirmButtonText: \"Continue\",\n        cancelButtonText: \"Cancel\",\n        closeOnConfirm: false\n      }, function (result) {\n        if (result === true) {\n          var selectedChapter = data.chapters[index].uri;\n          var path = data.uri;\n          $(\"#\" + index).remove();\n          data.chapters.splice(index, 1);\n          putContent(collectionId, path, JSON.stringify(data),\n            function () {\n              swal({\n                title: \"Deleted\",\n                text: \"This file has been deleted\",\n                type: \"success\",\n                timer: 2000\n              });\n              Florence.Editor.isDirty = false;\n              deleteContent(collectionId, selectedChapter, function () {\n                refreshPreview(path);\n                loadPageDataIntoEditor(path, collectionId);\n              }, error);\n            },\n            function (response) {\n              if (response.status === 400) {\n                sweetAlert(\"Cannot edit this page\", \"It is already part of another collection.\");\n              }\n              else {\n                handleApiError(response);\n              }\n            }\n          );\n        }\n      });\n    });\n  });\n\n  function sortableSections() {\n    $(\"#sortable-chapter\").sortable();\n  }\n\n  sortableSections();\n}\n\nfunction editData(collectionId, data) {\n  // Edit data reference table\n  // Load table to edit\n  if (!data.datasets || data.datasets.length === 0) {\n    lastIndexDataset = 0;\n  } else {\n    $(data.datasets).each(function (index) {\n      //open document\n      var selectedData = data.datasets[index].uri;\n      $(\"#compendium-data-edit_\" + index).click(function () {\n        refreshPreview(selectedData);\n        viewWorkspace(selectedData, collectionId, 'edit');\n      });\n\n      $('#compendium-data-edit-label_' + index).click(function () {\n        getPageData(collectionId, selectedData,\n          function (pageData) {\n            var markdown = pageData.description.title;\n            var editedSectionValue = {title: 'Compendium dataset title', markdown: markdown};\n            var saveContent = function (updatedContent) {\n              pageData.description.title = updatedContent;\n              var childTitle = updatedContent.replace(/[^A-Z0-9]+/ig, \"\").toLowerCase();\n              putContent(collectionId, pageData.uri, JSON.stringify(pageData),\n                function () {\n                  //save children changes\n                  //move\n                  checkRenameUri(collectionId, pageData, true, updateContent);\n                  putContent(collectionId, data.uri, JSON.stringify(data),\n                    function () {\n                      // on success update dataset uri in parent and save\n                      data.datasets[index].uri = data.uri + \"/\" + childTitle;\n                    },\n                    function (response) {\n                      if (response.status === 409) {\n                        sweetAlert(\"Cannot edit this page\", \"It is already part of another collection.\");\n                      } else {\n                        handleApiError(response);\n                      }\n                    }\n                  );\n                },\n                function (message) {\n                  if (message.status === 400) {\n                    sweetAlert(\"Cannot edit this page\", \"It is already part of another collection.\");\n                  }\n                  else {\n                    handleApiError(message);\n                  }\n                }\n              );\n            };\n            loadMarkdownEditor(editedSectionValue, saveContent, pageData);\n          },\n          function (message) {\n            handleApiError(message);\n          }\n        );\n      });\n\n      // Delete\n      $(\"#compendium-data-delete_\" + index).click(function () {\n        //var result = confirm(\"You are going to delete the chapter this link refers to. Are you sure you want to proceed?\");\n        swal({\n          title: \"Warning\",\n          text: \"You are going to delete the chapter this link refers to. Are you sure you want to proceed?\",\n          type: \"warning\",\n          showCancelButton: true,\n          confirmButtonText: \"Delete\",\n          cancelButtonText: \"Cancel\",\n          closeOnConfirm: false\n        }, function (result) {\n          if (result === true) {\n            var selectedData = data.datasets[index].uri;\n            var path = data.uri;\n            $(\"#\" + index).remove();\n            data.datasets.splice(index, 1);\n            putContent(collectionId, path, JSON.stringify(data),\n              function () {\n                swal({\n                  title: \"Deleted\",\n                  text: \"This file has been deleted\",\n                  type: \"success\",\n                  timer: 2000\n                });\n                Florence.Editor.isDirty = false;\n                deleteContent(collectionId, selectedData, function () {\n                  refreshPreview(path);\n                  loadPageDataIntoEditor(path, collectionId);\n                }, error);\n              },\n              function (response) {\n                if (response.status === 400) {\n                  sweetAlert(\"Cannot edit this page\", \"It is already part of another collection.\");\n                }\n                else {\n                  handleApiError(response);\n                }\n              }\n            );\n          }\n        });\n      });\n    });\n  }\n}\n\nfunction adHocEditor(collectionId, data) {\n\n  var newFiles = [];\n  var setActiveTab, getActiveTab;\n  var renameUri = false;\n\n  $(\".edit-accordion\").on('accordionactivate', function (event, ui) {\n    setActiveTab = $(\".edit-accordion\").accordion(\"option\", \"active\");\n    if (setActiveTab !== false) {\n      Florence.globalVars.activeTab = setActiveTab;\n    }\n  });\n\n  getActiveTab = Florence.globalVars.activeTab;\n  accordion(getActiveTab);\n  getLastPosition();\n\n  $(\"#metadata-f\").remove();\n  $(\"#metadata-md\").remove();\n  $(\"#metadata-q\").remove();\n  $(\"#metadata-s\").remove();\n  $(\"#summary-p\").remove();\n  $(\"#contact-p\").remove();\n  $(\"#natStat\").remove();\n  $(\"#survey-p\").remove();\n  $(\"#frequency-p\").remove();\n  $(\"#compilation-p\").remove();\n  $(\"#geoCoverage-p\").remove();\n  $(\"#sampleSize-p\").remove();\n  $(\".lastRevised-p\").remove();\n\n  // Metadata edition and saving\n  $(\"#title\").on('input', function () {\n    renameUri = true;\n    $(this).textareaAutoSize();\n    data.description.title = $(this).val();\n  });\n  //if (!Florence.collection.date) {                    //overwrite scheduled collection date\n  if (!data.description.releaseDate) {\n    $('#releaseDate').datepicker({dateFormat: 'dd MM yy'}).on('change', function () {\n      data.description.releaseDate = new Date($(this).datepicker({dateFormat: 'dd MM yy'})[0].value).toISOString();\n    });\n  } else {\n    dateTmp = data.description.releaseDate;\n    var dateTmpFormatted = $.datepicker.formatDate('dd MM yy', new Date(dateTmp));\n    $('#releaseDate').val(dateTmpFormatted).datepicker({dateFormat: 'dd MM yy'}).on('change', function () {\n      data.description.releaseDate = new Date($('#releaseDate').datepicker('getDate')).toISOString();\n    });\n  }\n  //} else {\n  //    $('.release-date').hide();\n  //}\n  $(\"#reference\").on('input', function () {\n    renameUri = true;\n    $(this).textareaAutoSize();\n    var isNumber = $(this).val();\n    if (isNumber.match(/^\\d+$/)) {\n      data.description.reference = isNumber;\n    } else {\n      sweetAlert('This needs to be a number');\n    }\n  });\n  $(\"#keywordsTag\").tagit({\n    availableTags: data.description.keywords,\n    singleField: true,\n    allowSpaces: true,\n    singleFieldNode: $('#keywords')\n  });\n  $('#keywords').on('change', function () {\n    data.description.keywords = $('#keywords').val().split(',');\n  });\n  $(\"#metaDescription\").on('input', function () {\n    $(this).textareaAutoSize();\n    data.description.metaDescription = $(this).val();\n  });\n\n  // Save\n  var editNav = $('.edit-nav');\n  editNav.off(); // remove any existing event handlers.\n\n  editNav.on('click', '.btn-edit-save', function () {\n    save(updateContent);\n  });\n\n  // completed to review\n  editNav.on('click', '.btn-edit-save-and-submit-for-review', function () {\n    save(saveAndCompleteContent);\n  });\n\n  // reviewed to approve\n  editNav.on('click', '.btn-edit-save-and-submit-for-approval', function () {\n    save(saveAndReviewContent);\n  });\n\n  function save(onSave) {\n\n    Florence.globalVars.pagePos = $(\".workspace-edit\").scrollTop();\n\n    // Sections\n    data.markdown = [$('#content-markdown').val()];\n    // Files are uploaded. Save metadata\n    var orderFile = $(\"#sortable-file\").sortable('toArray');\n    $(orderFile).each(function (indexF, nameF) {\n      var title = $('#file-title_' + nameF).val();\n      var file = data.downloads[parseInt(nameF)].file;\n      newFiles[indexF] = {title: title, file: file};\n    });\n    data.downloads = newFiles;\n\n    checkRenameUri(collectionId, data, renameUri, onSave);\n  }\n}\n\nfunction foiEditor(collectionId, data) {\n\n  var newFiles = [];\n  var setActiveTab, getActiveTab;\n  var renameUri = false;\n\n  $(\".edit-accordion\").on('accordionactivate', function (event, ui) {\n    setActiveTab = $(\".edit-accordion\").accordion(\"option\", \"active\");\n    if (setActiveTab !== false) {\n      Florence.globalVars.activeTab = setActiveTab;\n    }\n  });\n\n  getActiveTab = Florence.globalVars.activeTab;\n  accordion(getActiveTab);\n  getLastPosition();\n\n  $(\"#metadata-ad\").remove();\n  $(\"#metadata-md\").remove();\n  $(\"#metadata-q\").remove();\n  $(\"#metadata-s\").remove();\n  $(\"#summary-p\").remove();\n  $(\"#contact-p\").remove();\n  $(\"#natStat\").remove();\n  $(\"#survey-p\").remove();\n  $(\"#frequency-p\").remove();\n  $(\"#compilation-p\").remove();\n  $(\"#geoCoverage-p\").remove();\n  $(\"#sampleSize-p\").remove();\n  $(\".lastRevised-p\").remove();\n  $(\"#reference-p\").remove();\n\n  // Metadata edition and saving\n  $(\"#title\").on('input', function () {\n    renameUri = true;\n    $(this).textareaAutoSize();\n    data.description.title = $(this).val();\n  });\n  //if (!Florence.collection.date) {                    //overwrite scheduled collection date\n  if (!data.description.releaseDate) {\n    $('#releaseDate').datepicker({dateFormat: 'dd MM yy'}).on('change', function () {\n      data.description.releaseDate = new Date($(this).datepicker({dateFormat: 'dd MM yy'})[0].value).toISOString();\n    });\n  } else {\n    dateTmp = data.description.releaseDate;\n    var dateTmpFormatted = $.datepicker.formatDate('dd MM yy', new Date(dateTmp));\n    $('#releaseDate').val(dateTmpFormatted).datepicker({dateFormat: 'dd MM yy'}).on('change', function () {\n      data.description.releaseDate = new Date($('#releaseDate').datepicker('getDate')).toISOString();\n    });\n  }\n  //} else {\n  //    $('.release-date').hide();\n  //}\n  $(\"#keywordsTag\").tagit({\n    availableTags: data.description.keywords,\n    singleField: true,\n    allowSpaces: true,\n    singleFieldNode: $('#keywords')\n  });\n  $('#keywords').on('change', function () {\n    data.description.keywords = $('#keywords').val().split(',');\n  });\n  $(\"#metaDescription\").on('input', function () {\n    $(this).textareaAutoSize();\n    data.description.metaDescription = $(this).val();\n  });\n\n  // Save\n  var editNav = $('.edit-nav');\n  editNav.off(); // remove any existing event handlers.\n\n  editNav.on('click', '.btn-edit-save', function () {\n    save(updateContent);\n  });\n\n  // completed to review\n  editNav.on('click', '.btn-edit-save-and-submit-for-review', function () {\n    save(saveAndCompleteContent);\n  });\n\n  // reviewed to approve\n  editNav.on('click', '.btn-edit-save-and-submit-for-approval', function () {\n    save(saveAndReviewContent);\n  });\n\n  function save(onSave) {\n    // Sections\n    data.markdown = [$('#content-markdown').val()];\n    // Files are uploaded. Save metadata\n    var orderFile = $(\"#sortable-file\").sortable('toArray');\n    $(orderFile).each(function (indexF, nameF) {\n      var title = $('#file-title_' + nameF).val();\n      var file = data.downloads[parseInt(nameF)].file;\n      newFiles[indexF] = {title: title, file: file};\n    });\n    data.downloads = newFiles;\n\n    checkRenameUri(collectionId, data, renameUri, onSave);\n  }\n}\n\nfunction methodologyDownloadEditor(collectionId, data) {\n\n  var newFiles = [], newPdfFiles = [];\n  var setActiveTab, getActiveTab;\n  var renameUri = false;\n\n  $(\".edit-accordion\").on('accordionactivate', function (event, ui) {\n    setActiveTab = $(\".edit-accordion\").accordion(\"option\", \"active\");\n    if (setActiveTab !== false) {\n      Florence.globalVars.activeTab = setActiveTab;\n    }\n  });\n\n  getActiveTab = Florence.globalVars.activeTab;\n  accordion(getActiveTab);\n  getLastPosition();\n\n  $(\"#metadata-ad\").remove();\n  $(\"#metadata-f\").remove();\n  $(\"#metadata-q\").remove();\n  $(\"#metadata-s\").remove();\n  $(\"#summary-p\").remove();\n  $(\"#natStat\").remove();\n  $(\"#survey-p\").remove();\n  $(\"#frequency-p\").remove();\n  $(\"#compilation-p\").remove();\n  $(\"#geoCoverage-p\").remove();\n  $(\"#sampleSize-p\").remove();\n  $(\".lastRevised-p\").remove();\n  $(\"#reference-p\").remove();\n\n  // Metadata edition and saving\n  $(\"#title\").on('input', function () {\n    renameUri = true;\n    $(this).textareaAutoSize();\n    data.description.title = $(this).val();\n  });\n  if (!data.description.contact) {\n    data.description.contact = {};\n  }\n  $(\"#contactName\").on('input', function () {\n    $(this).textareaAutoSize();\n    data.description.contact.name = $(this).val();\n  });\n  $(\"#contactEmail\").on('input', function () {\n    $(this).textareaAutoSize();\n    data.description.contact.email = $(this).val();\n  });\n  $(\"#contactTelephone\").on('input', function () {\n    $(this).textareaAutoSize();\n    data.description.contact.telephone = $(this).val();\n  });\n  if (!data.description.releaseDate) {\n    $('#releaseDate').datepicker({dateFormat: 'dd MM yy'}).on('change', function () {\n      data.description.releaseDate = new Date($(this).datepicker({dateFormat: 'dd MM yy'})[0].value).toISOString();\n    });\n  } else {\n    dateTmp = data.description.releaseDate;\n    var dateTmpFormatted = $.datepicker.formatDate('dd MM yy', new Date(dateTmp));\n    $('#releaseDate').val(dateTmpFormatted).datepicker({dateFormat: 'dd MM yy'}).on('change', function () {\n      data.description.releaseDate = new Date($('#releaseDate').datepicker('getDate')).toISOString();\n    });\n  }\n  $(\"#keywordsTag\").tagit({\n    availableTags: data.description.keywords,\n    singleField: true,\n    allowSpaces: true,\n    singleFieldNode: $('#keywords')\n  });\n  $('#keywords').on('change', function () {\n    data.description.keywords = $('#keywords').val().split(',');\n  });\n  $(\"#metaDescription\").on('input', function () {\n    $(this).textareaAutoSize();\n    data.description.metaDescription = $(this).val();\n  });\n\n  // Save\n  var editNav = $('.edit-nav');\n  editNav.off(); // remove any existing event handlers.\n\n  editNav.on('click', '.btn-edit-save', function () {\n    save(updateContent);\n  });\n\n  // completed to review\n  editNav.on('click', '.btn-edit-save-and-submit-for-review', function () {\n    save(saveAndCompleteContent);\n  });\n\n  // reviewed to approve\n  editNav.on('click', '.btn-edit-save-and-submit-for-approval', function () {\n    save(saveAndReviewContent);\n  });\n\n  function save(onSave) {\n    // Sections\n    data.markdown = [$('#content-markdown').val()];\n    // Files are uploaded. Save metadata\n    var orderFile = $(\"#sortable-file\").sortable('toArray');\n    $(orderFile).each(function (indexF, nameF) {\n      var title = $('#file-title_' + nameF).val();\n      var file = data.downloads[parseInt(nameF)].file;\n      newFiles[indexF] = {title: title, file: file};\n    });\n    data.downloads = newFiles;\n    // PDF files are uploaded. Save metadata\n    var orderPdfFile = $(\"#sortable-pdfFile\").sortable('toArray');\n    $(orderPdfFile).each(function (indexP, nameP) {\n      var pdfTitle = $('#pdfFile-title_' + nameP).val();\n      var pdfFile = data.pdfDownloads[parseInt(nameP)].file;\n      newPdfFiles[indexP] = {title: pdfTitle, file: pdfFile};\n    });\n    data.pdfDownloads = newPdfFiles;\n\n    checkRenameUri(collectionId, data, renameUri, onSave);\n  }\n}\n\n\nfunction methodologyEditor(collectionId, data) {\n\n  var newChart = [], newTable = [], newEquation = [], newImage = [], newFiles = [];\n  var setActiveTab, getActiveTab;\n  var renameUri = false;\n\n  $(\".edit-accordion\").on('accordionactivate', function (event, ui) {\n    setActiveTab = $(\".edit-accordion\").accordion(\"option\", \"active\");\n    if (setActiveTab !== false) {\n      Florence.globalVars.activeTab = setActiveTab;\n    }\n  });\n\n  getActiveTab = Florence.globalVars.activeTab;\n  accordion(getActiveTab);\n  getLastPosition();\n\n  // Metadata load, edition and saving\n  $(\"#title\").on('input', function () {\n    renameUri = true;\n    $(this).textareaAutoSize();\n    data.description.title = $(this).val();\n  });\n  //if (!Florence.collection.date) {                        //overwrite scheduled collection date\n  if (!data.description.releaseDate) {\n    $('#releaseDate').datepicker({dateFormat: 'dd MM yy'}).on('change', function () {\n      data.description.releaseDate = new Date($(this).datepicker({dateFormat: 'dd MM yy'})[0].value).toISOString();\n    });\n  } else {\n    //dateTmp = $('#releaseDate').val();\n    dateTmp = data.description.releaseDate;\n    var dateTmpFormatted = $.datepicker.formatDate('dd MM yy', new Date(dateTmp));\n    $('#releaseDate').val(dateTmpFormatted).datepicker({dateFormat: 'dd MM yy'}).on('change', function () {\n      data.description.releaseDate = new Date($('#releaseDate').datepicker('getDate')).toISOString();\n    });\n  }\n  //} else {\n  //    $('.release-date').hide();\n  //}\n  if (!data.description.contact) {\n    data.description.contact = {};\n  }\n  $(\"#contactName\").on('input', function () {\n    $(this).textareaAutoSize();\n    data.description.contact.name = $(this).val();\n  });\n  $(\"#contactEmail\").on('input', function () {\n    $(this).textareaAutoSize();\n    data.description.contact.email = $(this).val();\n  });\n  $(\"#contactTelephone\").on('input', function () {\n    $(this).textareaAutoSize();\n    data.description.contact.telephone = $(this).val();\n  });\n  $(\"#summary\").on('input', function () {\n    $(this).textareaAutoSize();\n    data.description.summary = $(this).val();\n  });\n  $(\"#keywordsTag\").tagit({\n    availableTags: data.description.keywords,\n    singleField: true,\n    allowSpaces: true,\n    singleFieldNode: $('#keywords')\n  });\n  $('#keywords').on('change', function () {\n    data.description.keywords = $('#keywords').val().split(',');\n  });\n  $(\"#metaDescription\").on('input', function () {\n    $(this).textareaAutoSize();\n    data.description.metaDescription = $(this).val();\n  });\n\n  // Save\n  var editNav = $('.edit-nav');\n  editNav.off(); // remove any existing event handlers.\n\n  editNav.on('click', '.btn-edit-save', function () {\n    save(updateContent);\n  });\n\n  // completed to review\n  editNav.on('click', '.btn-edit-save-and-submit-for-review', function () {\n    save(saveAndCompleteContent);\n  });\n\n  // reviewed to approve\n  editNav.on('click', '.btn-edit-save-and-submit-for-approval', function () {\n    save(saveAndReviewContent);\n  });\n\n  function save(onSave) {\n    Florence.globalVars.pagePos = $(\".workspace-edit\").scrollTop();\n\n    // charts\n    var orderChart = $(\"#sortable-chart\").sortable('toArray');\n    $(orderChart).each(function (indexCh, nameCh) {\n      var uri = data.charts[parseInt(nameCh)].uri;\n      var title = data.charts[parseInt(nameCh)].title;\n      var filename = data.charts[parseInt(nameCh)].filename;\n      var safeUri = checkPathSlashes(uri);\n      newChart[indexCh] = {uri: safeUri, title: title, filename: filename};\n    });\n    data.charts = newChart;\n    // tables\n    var orderTable = $(\"#sortable-table\").sortable('toArray');\n    $(orderTable).each(function (indexTable, nameTable) {\n      var uri = data.tables[parseInt(nameTable)].uri;\n      var title = data.tables[parseInt(nameTable)].title;\n      var filename = data.tables[parseInt(nameTable)].filename;\n      var safeUri = checkPathSlashes(uri);\n      newTable[indexTable] = {uri: safeUri, title: title, filename: filename};\n    });\n    data.tables = newTable;\n    // equations\n    var orderEquation = $(\"#sortable-equation\").sortable('toArray');\n    $(orderEquation).each(function (indexEquation, nameEquation) {\n      var uri = data.equations[parseInt(nameEquation)].uri;\n      var title = data.equations[parseInt(nameEquation)].title;\n      var filename = data.equations[parseInt(nameEquation)].filename;\n      var safeUri = checkPathSlashes(uri);\n      newEquation[indexEquation] = {uri: safeUri, title: title, filename: filename};\n    });\n    data.equations = newEquation;\n    // images\n    var orderImage = $(\"#sortable-image\").sortable('toArray');\n    $(orderImage).each(function (indexImage, nameImage) {\n      var uri = data.images[parseInt(nameImage)].uri;\n      var title = data.images[parseInt(nameImage)].title;\n      var filename = data.images[parseInt(nameImage)].filename;\n      var safeUri = checkPathSlashes(uri);\n      newImage[indexImage] = {uri: safeUri, title: title, filename: filename};\n    });\n    data.images = newImage;\n\n    // Files are uploaded. Save metadata\n    var orderFile = $(\"#sortable-file\").sortable('toArray');\n    $(orderFile).each(function (indexF, nameF) {\n      var title = $('#file-title_' + nameF).val();\n      var file = data.downloads[parseInt(nameF)].file;\n      newFiles[indexF] = {title: title, file: file};\n    });\n    data.downloads = newFiles;\n\n    checkRenameUri(collectionId, data, renameUri, onSave);\n  }\n}\n\nfunction qmiEditor(collectionId, data) {\n\n  var newFiles = [];\n  var setActiveTab, getActiveTab;\n  var renameUri = false;\n\n  $(\".edit-accordion\").on('accordionactivate', function (event, ui) {\n    setActiveTab = $(\".edit-accordion\").accordion(\"option\", \"active\");\n    if (setActiveTab !== false) {\n      Florence.globalVars.activeTab = setActiveTab;\n    }\n  });\n\n  getActiveTab = Florence.globalVars.activeTab;\n  accordion(getActiveTab);\n  getLastPosition();\n\n  $(\"#metadata-ad\").remove();\n  $(\"#metadata-f\").remove();\n  $(\"#metadata-md\").remove();\n  $(\"#metadata-s\").remove();\n  $(\"#summary-p\").remove();\n  $(\".release-date\").remove();\n  $(\"#reference-p\").remove();\n\n  // Metadata edition and saving\n  $(\"#title\").on('input', function () {\n    renameUri = true;\n    $(this).textareaAutoSize();\n    data.description.title = $(this).val();\n  });\n  if (!data.description.contact) {\n    data.description.contact = {};\n  }\n  $(\"#contactName\").on('input', function () {\n    $(this).textareaAutoSize();\n    data.description.contact.name = $(this).val();\n  });\n  $(\"#contactEmail\").on('input', function () {\n    $(this).textareaAutoSize();\n    data.description.contact.email = $(this).val();\n  });\n  $(\"#contactTelephone\").on('input', function () {\n    $(this).textareaAutoSize();\n    data.description.contact.telephone = $(this).val();\n  });\n  $(\"#survey\").on('input', function () {\n    $(this).textareaAutoSize();\n    data.description.surveyName = $(this).val();\n  });\n  $(\"#frequency\").on('input', function () {\n    $(this).textareaAutoSize();\n    data.description.frequency = $(this).val();\n  });\n  $(\"#compilation\").on('input', function () {\n    $(this).textareaAutoSize();\n    data.description.compilation = $(this).val();\n  });\n  $(\"#geoCoverage\").on('input', function () {\n    $(this).textareaAutoSize();\n    data.description.geographicCoverage = $(this).val();\n  });\n  $(\"#sampleSize\").on('input', function () {\n    $(this).textareaAutoSize();\n    data.description.sampleSize = $(this).val();\n  });\n  if (!data.description.lastRevised) {\n    $('#lastRevised').datepicker({dateFormat: 'dd MM yy'}).on('change', function () {\n      data.description.lastRevised = new Date($(this).datepicker({dateFormat: 'dd MM yy'})[0].value).toISOString();\n    });\n  } else {\n    dateTmp = data.description.lastRevised;\n    var dateTmpFormatted = $.datepicker.formatDate('dd MM yy', new Date(dateTmp));\n    $('#lastRevised').val(dateTmpFormatted).datepicker({dateFormat: 'dd MM yy'}).on('change', function () {\n      data.description.lastRevised = new Date($('#lastRevised').datepicker('getDate')).toISOString();\n    });\n  }\n  $(\"#keywordsTag\").tagit({\n    availableTags: data.description.keywords,\n    singleField: true,\n    allowSpaces: true,\n    singleFieldNode: $('#keywords')\n  });\n  $('#keywords').on('change', function () {\n    data.description.keywords = $('#keywords').val().split(',');\n  });\n  $(\"#metaDescription\").on('input', function () {\n    $(this).textareaAutoSize();\n    data.description.metaDescription = $(this).val();\n  });\n\n  /* The checked attribute is a boolean attribute, which means the corresponding property is true if the attribute\n   is present at all—even if, for example, the attribute has no value or is set to empty string value or even \"false\" */\n  var checkBoxStatus = function () {\n    if (data.description.nationalStatistic === \"false\" || data.description.nationalStatistic === false) {\n      return false;\n    }\n    return true;\n  };\n\n  $(\"#metadata-list input[type='checkbox']\").prop('checked', checkBoxStatus).click(function () {\n    data.description.nationalStatistic = $(\"#metadata-list input[type='checkbox']\").prop('checked') ? true : false;\n  });\n\n  // Save\n  var editNav = $('.edit-nav');\n  editNav.off(); // remove any existing event handlers.\n\n  editNav.on('click', '.btn-edit-save', function () {\n    save(updateContent);\n  });\n\n  // completed to review\n  editNav.on('click', '.btn-edit-save-and-submit-for-review', function () {\n    save(saveAndCompleteContent);\n  });\n\n  // reviewed to approve\n  editNav.on('click', '.btn-edit-save-and-submit-for-approval', function () {\n    save(saveAndReviewContent);\n  });\n\n  function save(onSave) {\n\n    Florence.globalVars.pagePos = $(\".workspace-edit\").scrollTop();\n\n    // Sections\n    data.markdown = [$('#content-markdown').val()];\n    // Files are uploaded. Save metadata\n    var orderFile = $(\"#sortable-file\").sortable('toArray');\n    $(orderFile).each(function (indexF, nameF) {\n      var title = $('#file-title_' + nameF).val();\n      var file = data.downloads[parseInt(nameF)].file;\n      newFiles[indexF] = {title: title, file: file};\n    });\n    data.downloads = newFiles;\n\n    checkRenameUri(collectionId, data, renameUri, onSave);\n  }\n}\n\nfunction staticArticleEditor(collectionId, data) {\n\n  var newChart = [], newTable = [], newEquation = [], newImage = [], newLinks = [], newFiles = [];\n  var setActiveTab, getActiveTab;\n  var renameUri = false;\n\n  $(\".edit-accordion\").on('accordionactivate', function (event, ui) {\n    setActiveTab = $(\".edit-accordion\").accordion(\"option\", \"active\");\n    if (setActiveTab !== false) {\n      Florence.globalVars.activeTab = setActiveTab;\n    }\n  });\n\n  getActiveTab = Florence.globalVars.activeTab;\n  accordion(getActiveTab);\n  getLastPosition();\n\n  // Metadata load, edition and saving\n  $(\"#title\").on('input', function () {\n    renameUri = true;\n    $(this).textareaAutoSize();\n    data.description.title = $(this).val();\n  });\n  //if (!Florence.collection.date) {                        //overwrite scheduled collection date\n  if (!data.description.releaseDate) {\n    $('#releaseDate').datepicker({dateFormat: 'dd MM yy'}).on('change', function () {\n      data.description.releaseDate = new Date($(this).datepicker({dateFormat: 'dd MM yy'})[0].value).toISOString();\n    });\n  } else {\n    //dateTmp = $('#releaseDate').val();\n    dateTmp = data.description.releaseDate;\n    var dateTmpFormatted = $.datepicker.formatDate('dd MM yy', new Date(dateTmp));\n    $('#releaseDate').val(dateTmpFormatted).datepicker({dateFormat: 'dd MM yy'}).on('change', function () {\n      data.description.releaseDate = new Date($('#releaseDate').datepicker('getDate')).toISOString();\n    });\n  }\n  //} else {\n  //    $('.release-date').hide();\n  //}\n  $(\"#summary\").on('input', function () {\n    $(this).textareaAutoSize();\n    data.description.summary = $(this).val();\n  });\n  $(\"#keywordsTag\").tagit({\n    availableTags: data.description.keywords,\n    singleField: true,\n    allowSpaces: true,\n    singleFieldNode: $('#keywords')\n  });\n  $('#keywords').on('change', function () {\n    data.description.keywords = $('#keywords').val().split(',');\n  });\n  $(\"#metaDescription\").on('input', function () {\n    $(this).textareaAutoSize();\n    data.description.metaDescription = $(this).val();\n  });\n\n  // Save\n  var editNav = $('.edit-nav');\n  editNav.off(); // remove any existing event handlers.\n\n  editNav.on('click', '.btn-edit-save', function () {\n    save(updateContent);\n  });\n\n  // completed to review\n  editNav.on('click', '.btn-edit-save-and-submit-for-review', function () {\n    save(saveAndCompleteContent);\n  });\n\n  // reviewed to approve\n  editNav.on('click', '.btn-edit-save-and-submit-for-approval', function () {\n    save(saveAndReviewContent);\n  });\n\n  function save(onSave) {\n\n    Florence.globalVars.pagePos = $(\".workspace-edit\").scrollTop();\n\n    // charts\n    var orderChart = $(\"#sortable-chart\").sortable('toArray');\n    $(orderChart).each(function (indexCh, nameCh) {\n      var uri = data.charts[parseInt(nameCh)].uri;\n      var title = data.charts[parseInt(nameCh)].title;\n      var filename = data.charts[parseInt(nameCh)].filename;\n      var safeUri = checkPathSlashes(uri);\n      newChart[indexCh] = {uri: safeUri, title: title, filename: filename};\n    });\n    data.charts = newChart;\n    // tables\n    var orderTable = $(\"#sortable-table\").sortable('toArray');\n    $(orderTable).each(function (indexTable, nameTable) {\n      var uri = data.tables[parseInt(nameTable)].uri;\n      var title = data.tables[parseInt(nameTable)].title;\n      var filename = data.tables[parseInt(nameTable)].filename;\n      var safeUri = checkPathSlashes(uri);\n      newTable[indexTable] = {uri: safeUri, title: title, filename: filename};\n    });\n    data.tables = newTable;\n    // equations\n    var orderEquation = $(\"#sortable-equation\").sortable('toArray');\n    $(orderEquation).each(function (indexEquation, nameEquation) {\n      var uri = data.equations[parseInt(nameEquation)].uri;\n      var title = data.equations[parseInt(nameEquation)].title;\n      var filename = data.equations[parseInt(nameEquation)].filename;\n      var safeUri = checkPathSlashes(uri);\n      newEquation[indexEquation] = {uri: safeUri, title: title, filename: filename};\n    });\n    data.equations = newEquation;\n    // images\n    var orderImage = $(\"#sortable-image\").sortable('toArray');\n    $(orderImage).each(function (indexImage, nameImage) {\n      var uri = data.images[parseInt(nameImage)].uri;\n      var title = data.images[parseInt(nameImage)].title;\n      var filename = data.images[parseInt(nameImage)].filename;\n      var safeUri = checkPathSlashes(uri);\n      newImage[indexImage] = {uri: safeUri, title: title, filename: filename};\n    });\n    data.images = newImage;\n    // Files are uploaded. Save metadata\n    var orderFile = $(\"#sortable-file\").sortable('toArray');\n    $(orderFile).each(function (indexF, nameF) {\n      var title = $('#file-title_' + nameF).val();\n      var file = data.downloads[parseInt(nameF)].file;\n      newFiles[indexF] = {title: title, file: file};\n    });\n    data.downloads = newFiles;\n    // links\n    var orderLink = $(\"#sortable-link\").sortable('toArray');\n    $(orderLink).each(function (indexL, nameL) {\n      if (data.links[parseInt(nameL)].title) {\n        var name = data.links[parseInt(nameL)].title;\n        var link = data.links[parseInt(nameL)].uri;\n        newLinks[indexL] = {uri: link, title: name};\n      } else {\n        var link = data.links[parseInt(nameL)].uri;\n        newLinks[indexL] = {uri: link};\n      }\n    });\n    data.links = newLinks;\n\n    checkRenameUri(collectionId, data, renameUri, onSave);\n  }\n}\n\nfunction staticLandingPageEditor(collectionId, data) {\n\n  var newSections = [], newLinks = [];\n  var setActiveTab, getActiveTab;\n  var renameUri = false;\n\n  $(\".edit-accordion\").on('accordionactivate', function (event, ui) {\n    setActiveTab = $(\".edit-accordion\").accordion(\"option\", \"active\");\n    if (setActiveTab !== false) {\n      Florence.globalVars.activeTab = setActiveTab;\n    }\n  });\n\n  getActiveTab = Florence.globalVars.activeTab;\n  accordion(getActiveTab);\n\n\n  // Metadata edition and saving\n  $(\"#title\").on('input', function () {\n    renameUri = true;\n    $(this).textareaAutoSize();\n    data.description.title = $(this).val();\n  });\n  $(\"#summary\").on('input', function () {\n    $(this).textareaAutoSize();\n    data.description.summary = $(this).val();\n  });\n  $(\"#keywordsTag\").tagit({\n    availableTags: data.description.keywords,\n    singleField: true,\n    allowSpaces: true,\n    singleFieldNode: $('#keywords')\n  });\n  $('#keywords').on('change', function () {\n    data.description.keywords = $('#keywords').val().split(',');\n  });\n  $(\"#metaDescription\").on('input', function () {\n    $(this).textareaAutoSize();\n    data.description.metaDescription = $(this).val();\n  });\n\n  // Edit content\n  // Load and edition\n  $(data.sections).each(function (index) {\n\n    $('#section-uri_' + index).on('paste', function () {\n      setTimeout(function () {\n        var pastedUrl = $('#section-uri_' + index).val();\n        var safeUrl = checkPathParsed(pastedUrl);\n        $('#section-uri_' + index).val(safeUrl);\n      }, 50);\n    });\n\n    if (!$('#section-uri_' + index).val()) {\n      $('<button class=\"btn-edit-save-and-submit-for-review\" id=\"section-get_' + index + '\">Go to</button>').insertAfter('#section-uri_' + index);\n\n      $('#section-get_' + index).click(function () {\n        var iframeEvent = document.getElementById('iframe').contentWindow;\n        iframeEvent.removeEventListener('click', Florence.Handler, true);\n        createWorkspace(data.uri, collectionId, '', null, true);\n        $('#section-get_' + index).html('Copy link').off().one('click', function () {\n          var uriCheck = getPathNameTrimLast();\n          var uriChecked = checkPathSlashes(uriCheck);\n          data.sections[index].uri = uriChecked;\n          putContent(collectionId, data.uri, JSON.stringify(data),\n            success = function (response) {\n              console.log(\"Updating completed \" + response);\n              Florence.Editor.isDirty = false;\n              viewWorkspace(data.uri, collectionId, 'edit');\n              refreshPreview(data.uri);\n              var iframeEvent = document.getElementById('iframe').contentWindow;\n              iframeEvent.addEventListener('click', Florence.Handler, true);\n            },\n            error = function (response) {\n              if (response.status === 400) {\n                  sweetAlert(\"Cannot edit this page\", \"It is already part of another collection.\");\n              }\n              else {\n                handleApiError(response);\n              }\n            }\n          );\n        });\n      });\n    }\n\n    $(\"#section-edit_\" + index).click(function () {\n      var editedSectionValue = {\n        \"title\": $('#section-title_' + index).val(),\n        \"markdown\": $(\"#section-markdown_\" + index).val()\n      };\n\n      var saveContent = function (updatedContent) {\n        data.sections[index].summary = updatedContent;\n        data.sections[index].title = $('#section-title_' + index).val();\n        data.sections[index].uri = $('#section-uri_' + index).val();\n        updateContent(collectionId, data.uri, JSON.stringify(data));\n      };\n\n      loadMarkdownEditor(editedSectionValue, saveContent, data);\n    });\n\n    // Delete\n    $(\"#section-delete_\" + index).click(function () {\n      swal ({\n        title: \"Warning\",\n        text: \"Are you sure you want to delete?\",\n        type: \"warning\",\n        showCancelButton: true,\n        confirmButtonText: \"Delete\",\n        cancelButtonText: \"Cancel\",\n        closeOnConfirm: false\n      }, function(result) {\n        if (result === true) {\n          $(\"#\" + index).remove();\n          data.sections.splice(index, 1);\n          updateContent(collectionId, data.uri, JSON.stringify(data));\n          swal({\n            title: \"Deleted\",\n            text: \"This section has been deleted\",\n            type: \"success\",\n            timer: 2000\n          });\n        }\n      });\n    });\n\n      // Tooltips\n    $(function () {\n      $('#section-uri_' + index).tooltip({\n        items: '#section-uri_' + index,\n        content: 'Copy link or click Go to, navigate to page and click Copy link. Then add a title and click Edit',\n        show: \"slideDown\", // show immediately\n        open: function (event, ui) {\n          ui.tooltip.hover(\n            function () {\n              $(this).fadeTo(\"slow\", 0.5);\n            });\n        }\n      });\n    });\n\n    $(function () {\n      $('#section-title_' + index).tooltip({\n        items: '#section-title_' + index,\n        content: 'Type a title and click Edit',\n        show: \"slideDown\", // show immediately\n        open: function (event, ui) {\n          ui.tooltip.hover(\n            function () {\n              $(this).fadeTo(\"slow\", 0.5);\n            });\n        }\n      });\n    });\n  });\n\n  //Add new content\n  $(\"#add-section\").one('click', function () {\n    swal ({\n      title: \"Warning\",\n      text: \"If you do not come back to this page, you will lose any unsaved changes\",\n      type: \"warning\",\n      showCancelButton: true,\n      confirmButtonText: \"Continue\",\n      cancelButtonText: \"Cancel\"\n    }, function(result) {\n      if (result === true) {\n        data.sections.push({uri: \"\", title: \"\", summary: \"\"});\n        updateContent(collectionId, data.uri, JSON.stringify(data));\n      } else {\n        loadPageDataIntoEditor(data.uri, collectionId);\n      }\n    });\n  });\n\n  function sortableContent() {\n    $(\"#sortable-section\").sortable();\n  }\n\n  sortableContent();\n\n  renderExternalLinkAccordionSection(collectionId, data, 'links', 'link');\n\n  // Save\n  var editNav = $('.edit-nav');\n  editNav.off(); // remove any existing event handlers.\n\n  editNav.on('click', '.btn-edit-save', function () {\n    save(updateContent);\n  });\n\n  // completed to review\n  editNav.on('click', '.btn-edit-save-and-submit-for-review', function () {\n    save(saveAndCompleteContent);\n  });\n\n  // reviewed to approve\n  editNav.on('click', '.btn-edit-save-and-submit-for-approval', function () {\n    save(saveAndReviewContent);\n  });\n\n  function save(onSave) {\n\n    Florence.globalVars.pagePos = $(\".workspace-edit\").scrollTop();\n\n    // Sections\n    var orderSection = $(\"#sortable-section\").sortable('toArray');\n    $(orderSection).each(function (indexS, nameS) {\n      var summary = data.sections[parseInt(nameS)].summary;\n        // Fixes title or uri not saving unless markdown edited\n        var title = $('#section-title_' + nameS).val();\n        var uri = $('#section-uri_' + nameS).val();\n      //var title = data.sections[parseInt(nameS)].title;\n      //var uri = data.sections[parseInt(nameS)].uri;\n      var uriChecked = checkPathSlashes(uri);\n      newSections[indexS] = {uri: uriChecked, title: title, summary: summary};\n    });\n    data.sections = newSections;\n    // External links\n    var orderLink = $(\"#sortable-link\").sortable('toArray');\n    $(orderLink).each(function (indexL, nameL) {\n      var displayText = data.links[parseInt(nameL)].title;\n      var link = $('#link-uri_' + nameL).val();\n      newLinks[indexL] = {uri: link, title: displayText};\n    });\n    data.links = newLinks;\n\n    checkRenameUri(collectionId, data, renameUri, onSave);\n  }\n}\n\nfunction staticPageEditor(collectionId, data) {\n\n  var newLinks = [], newFiles = [], newChart = [], newTable = [], newImage = [];\n  var setActiveTab, getActiveTab;\n  var renameUri = false;\n\n  $(\".edit-accordion\").on('accordionactivate', function (event, ui) {\n    setActiveTab = $(\".edit-accordion\").accordion(\"option\", \"active\");\n    if (setActiveTab !== false) {\n      Florence.globalVars.activeTab = setActiveTab;\n    }\n  });\n\n  getActiveTab = Florence.globalVars.activeTab;\n  accordion(getActiveTab);\n\n  $(\"#metadata-ad\").remove();\n  $(\"#metadata-f\").remove();\n  $(\"#metadata-md\").remove();\n  $(\"#metadata-q\").remove();\n  $(\"#contact-p\").remove();\n  $(\"#natStat\").remove();\n  $(\"#survey-p\").remove();\n  $(\"#frequency-p\").remove();\n  $(\"#compilation-p\").remove();\n  $(\"#geoCoverage-p\").remove();\n  $(\"#sampleSize-p\").remove();\n  $(\".lastRevised-p\").remove();\n  $(\"#reference-p\").remove();\n\n  // Metadata edition and saving\n  $(\"#title\").on('input', function () {\n    renameUri = true;\n    $(this).textareaAutoSize();\n    data.description.title = $(this).val();\n  });\n  $(\"#summary\").on('input', function () {\n    $(this).textareaAutoSize();\n    data.description.summary = $(this).val();\n  });\n  if (!data.description.releaseDate) {\n    $('#releaseDate').datepicker({dateFormat: 'dd MM yy'}).on('change', function () {\n      data.description.releaseDate = new Date($(this).datepicker({dateFormat: 'dd MM yy'})[0].value).toISOString();\n    });\n  } else {\n    dateTmp = data.description.releaseDate;\n    var dateTmpFormatted = $.datepicker.formatDate('dd MM yy', new Date(dateTmp));\n    $('#releaseDate').val(dateTmpFormatted).datepicker({dateFormat: 'dd MM yy'}).on('change', function () {\n      data.description.releaseDate = new Date($('#releaseDate').datepicker('getDate')).toISOString();\n    });\n  }\n  $(\"#keywordsTag\").tagit({\n    availableTags: data.description.keywords,\n    singleField: true,\n    allowSpaces: true,\n    singleFieldNode: $('#keywords')\n  });\n  $('#keywords').on('change', function () {\n    data.description.keywords = $('#keywords').val().split(',');\n  });\n  $(\"#metaDescription\").on('input', function () {\n    $(this).textareaAutoSize();\n    data.description.metaDescription = $(this).val();\n  });\n\n  // Save\n  var editNav = $('.edit-nav');\n  editNav.off(); // remove any existing event handlers.\n\n  editNav.on('click', '.btn-edit-save', function () {\n    save(updateContent);\n  });\n\n  // completed to review\n  editNav.on('click', '.btn-edit-save-and-submit-for-review', function () {\n    save(saveAndCompleteContent);\n  });\n\n  // reviewed to approve\n  editNav.on('click', '.btn-edit-save-and-submit-for-approval', function () {\n    save(saveAndReviewContent);\n  });\n\n  function save(onSave) {\n    // Sections\n    data.markdown = [$('#content-markdown').val()];\n    // Files are uploaded. Save metadata\n    var orderFile = $(\"#sortable-file\").sortable('toArray');\n    $(orderFile).each(function (indexF, nameF) {\n      var title = $('#file-title_' + nameF).val();\n      var file = data.downloads[parseInt(nameF)].file;\n      newFiles[indexF] = {title: title, file: file};\n    });\n    data.downloads = newFiles;\n    // charts\n    var orderChart = $(\"#sortable-chart\").sortable('toArray');\n    $(orderChart).each(function (indexCh, nameCh) {\n      var uri = data.charts[parseInt(nameCh)].uri;\n      var title = data.charts[parseInt(nameCh)].title;\n      var filename = data.charts[parseInt(nameCh)].filename;\n      var safeUri = checkPathSlashes(uri);\n      newChart[indexCh] = {uri: safeUri, title: title, filename: filename};\n    });\n    data.charts = newChart;\n    // tables\n    var orderTable = $(\"#sortable-table\").sortable('toArray');\n    $(orderTable).each(function (indexTable, nameTable) {\n      var uri = data.tables[parseInt(nameTable)].uri;\n      var title = data.tables[parseInt(nameTable)].title;\n      var filename = data.tables[parseInt(nameTable)].filename;\n      var safeUri = checkPathSlashes(uri);\n      newTable[indexTable] = {uri: safeUri, title: title, filename: filename};\n    });\n    data.tables = newTable;\n    // images\n    var orderImage = $(\"#sortable-image\").sortable('toArray');\n    $(orderImage).each(function (indexImage, nameImage) {\n      var uri = data.images[parseInt(nameImage)].uri;\n      var title = data.images[parseInt(nameImage)].title;\n      var filename = data.images[parseInt(nameImage)].filename;\n      var safeUri = checkPathSlashes(uri);\n      newImage[indexImage] = {uri: safeUri, title: title, filename: filename};\n    });\n    data.images = newImage;\n    // links\n    var orderLink = $(\"#sortable-link\").sortable('toArray');\n    $(orderLink).each(function (indexL, nameL) {\n      if (data.links[parseInt(nameL)].title) {\n        var name = data.links[parseInt(nameL)].title;\n        var link = data.links[parseInt(nameL)].uri;\n        newLinks[indexL] = {uri: link, title: name};\n      } else {\n        var link = data.links[parseInt(nameL)].uri;\n        newLinks[indexL] = {uri: link};\n      }\n    });\n    data.links = newLinks;\n\n    checkRenameUri(collectionId, data, renameUri, onSave);\n  }\n}\n\nfunction datasetEditor(collectionId, data) {\n\n  var newFiles = [];\n  var setActiveTab, getActiveTab;\n  var parentUrl = getParentPage(data.uri);\n\n  //Add parent link onto page\n  loadParentLink(collectionId, data, parentUrl);\n\n\n  $(\".edit-accordion\").on('accordionactivate', function () {\n    setActiveTab = $(\".edit-accordion\").accordion(\"option\", \"active\");\n    if (setActiveTab !== false) {\n      Florence.globalVars.activeTab = setActiveTab;\n    }\n  });\n\n  getActiveTab = Florence.globalVars.activeTab;\n  accordion(getActiveTab);\n  getLastPosition();\n\n  // Save\n  var editNav = $('.edit-nav');\n  editNav.off(); // remove any existing event handlers.\n\n  editNav.on('click', '.btn-edit-save', function () {\n    save();\n    updateContent(collectionId, data.uri, JSON.stringify(data));\n  });\n\n  // completed to review\n  editNav.on('click', '.btn-edit-save-and-submit-for-review', function () {\n    //pageData = $('.fl-editor__headline').val();\n    save();\n    saveAndCompleteContent(collectionId, data.uri, JSON.stringify(data), false, parentUrl);\n  });\n\n  // reviewed to approve\n  editNav.on('click', '.btn-edit-save-and-submit-for-approval', function () {\n    save();\n    saveAndReviewContent(collectionId, data.uri, JSON.stringify(data), false, parentUrl);\n  });\n\n  function save() {\n    // Files are uploaded. Save metadata\n    var orderFile = $(\"#sortable-supplementary-files\").sortable('toArray');\n    $(orderFile).each(function (indexF, nameF) {\n      var title = $('#supplementary-files-title_' + nameF).val();\n      var file = data.supplementaryFiles[parseInt(nameF)].file;\n      newFiles[indexF] = {title: title, file: file};\n    });\n    data.supplementaryFiles = newFiles;\n    // Notes\n    data.section = {markdown: $('#one-markdown').val()};\n  }\n}function datasetLandingEditor(collectionId, data) {\n\n  var newDatasets = [], newLinks = [], newRelatedDocuments = [], newRelatedQmi = [], newRelatedMethodology = [];\n  var setActiveTab, getActiveTab;\n  var renameUri = false;\n\n  $(\".edit-accordion\").on('accordionactivate', function (event, ui) {\n    setActiveTab = $(\".edit-accordion\").accordion(\"option\", \"active\");\n    if (setActiveTab !== false) {\n      Florence.globalVars.activeTab = setActiveTab;\n    }\n  });\n\n  getActiveTab = Florence.globalVars.activeTab;\n  accordion(getActiveTab);\n  getLastPosition();\n\n  resolveTitleT8(collectionId, data, 'datasets');\n\n  // Metadata edition and saving\n  $(\"#title\").on('input', function () {\n    renameUri = true;\n    $(this).textareaAutoSize();\n    data.description.title = $(this).val();\n  });\n  $(\"#summary\").on('input', function () {\n    $(this).textareaAutoSize();\n    data.description.summary = $(this).val();\n  });\n  //if (!Florence.collection.date) {                      //overwrite scheduled collection date\n  if (!data.description.releaseDate) {\n    $('#releaseDate').datepicker({dateFormat: 'dd MM yy'}).on('change', function () {\n      data.description.releaseDate = new Date($(this).datepicker({dateFormat: 'dd MM yy'})[0].value).toISOString();\n    });\n  } else {\n    dateTmp = data.description.releaseDate;\n    var dateTmpFormatted = $.datepicker.formatDate('dd MM yy', new Date(dateTmp));\n    $('#releaseDate').val(dateTmpFormatted).datepicker({dateFormat: 'dd MM yy'}).on('change', function () {\n      data.description.releaseDate = new Date($('#releaseDate').datepicker('getDate')).toISOString();\n    });\n  }\n  //} else {\n  //    $('.release-date').hide();\n  //}\n  $(\"#nextRelease\").on('input', function () {\n    $(this).textareaAutoSize();\n    data.description.nextRelease = $(this).val();\n  });\n  if (!data.description.contact) {\n    data.description.contact = {};\n  }\n  $(\"#contactName\").on('input', function () {\n    $(this).textareaAutoSize();\n    data.description.contact.name = $(this).val();\n  });\n  $(\"#contactEmail\").on('input', function () {\n    $(this).textareaAutoSize();\n    data.description.contact.email = $(this).val();\n  });\n  $(\"#contactTelephone\").on('input', function () {\n    $(this).textareaAutoSize();\n    data.description.contact.telephone = $(this).val();\n  });\n  $(\"#datasetId\").on('input', function () {\n    $(this).textareaAutoSize();\n    data.description.datasetId = $(this).val();\n  });\n  $(\"#keywordsTag\").tagit({\n    availableTags: data.description.keywords,\n    singleField: true,\n    allowSpaces: true,\n    singleFieldNode: $('#keywords')\n  });\n  $('#keywords').on('change', function () {\n    data.description.keywords = $('#keywords').val().split(',');\n  });\n  $(\"#metaDescription\").on('input', function () {\n    $(this).textareaAutoSize();\n    data.description.metaDescription = $(this).val();\n  });\n\n  /* The checked attribute is a boolean attribute, which means the corresponding property is true if the attribute\n   is present at all—even if, for example, the attribute has no value or is set to empty string value or even \"false\" */\n  var checkBoxStatus = function () {\n    if (data.description.nationalStatistic === \"false\" || data.description.nationalStatistic === false) {\n      return false;\n    } else {\n      return true;\n    }\n  };\n  $(\"#metadata-list input[type='checkbox']\").prop('checked', checkBoxStatus).click(function () {\n    data.description.nationalStatistic = $(\"#metadata-list input[type='checkbox']\").prop('checked') ? true : false;\n  });\n\n  // Save\n  var editNav = $('.edit-nav');\n  editNav.off(); // remove any existing event handlers.\n\n  editNav.on('click', '.btn-edit-save', function () {\n    save(updateContent);\n  });\n\n  // completed to review\n  editNav.on('click', '.btn-edit-save-and-submit-for-review', function () {\n    save(saveAndCompleteContent);\n  });\n\n  // reviewed to approve\n  editNav.on('click', '.btn-edit-save-and-submit-for-approval', function () {\n    save(saveAndReviewContent);\n  });\n\n  function save(onSave) {\n\n    Florence.globalVars.pagePos = $(\".workspace-edit\").scrollTop();\n\n    // Datasets are uploaded. Save metadata\n    var orderDataset = $(\"#sortable-edition\").sortable('toArray');\n    $(orderDataset).each(function (indexF, nameF) {\n      var file = data.datasets[parseInt(nameF)].uri;\n      newDatasets[indexF] = {uri: file};\n    });\n    data.datasets = newDatasets;\n\n    // links\n    var orderLink = $(\"#sortable-link\").sortable('toArray');\n    $(orderLink).each(function (indexL, nameL) {\n      var displayText = data.links[parseInt(nameL)].title;\n      var link = $('#link-uri_' + nameL).val();\n      newLinks[indexL] = {uri: link, title: displayText};\n    });\n    data.links = newLinks;\n\n    checkRenameUri(collectionId, data, renameUri, onSave);\n  }\n}\n\nfunction resolveTitleT8(collectionId, data, field) {\n  var ajaxRequest = [];\n  var templateData = $.extend(true, {}, data);\n  $(templateData[field]).each(function (index, path) {\n    templateData[field][index].description = {};\n    var eachUri = path.uri;\n    var dfd = $.Deferred();\n    getPageDataTitle(collectionId, eachUri,\n      function (response) {\n        templateData[field][index].description.edition = response.edition;\n        templateData[field][index].uri = eachUri;\n        dfd.resolve();\n      },\n      function () {\n        sweetAlert(\"Error\", field + ' address: ' + eachUri + ' is not found.', \"error\");\n        dfd.resolve();\n      }\n    );\n    ajaxRequest.push(dfd);\n  });\n\n  $.when.apply($, ajaxRequest).then(function () {\n    var dataTemplate = templateData[field];\n    var html = templates.workEditT8LandingDatasetList(dataTemplate);\n    $('#edition').replaceWith(html);\n    addEditionEditButton(collectionId, data, templateData);\n  });\n}\n\nfunction addEditionEditButton(collectionId, data, templateData) {\n  // Load dataset to edit\n  $(templateData.datasets).each(function (index) {\n    //open document\n    $(\"#edition-edit_\" + index).click(function () {\n      var selectedEdition = data.datasets[index].uri;\n      Florence.globalVars.activeTab = '';\n      createWorkspace(selectedEdition, collectionId, 'edit');\n    });\n\n    $('#edition-edit-label_' + index).click(function () {\n      var selectedEdition = data.datasets[index].uri;\n      getPageData(collectionId, selectedEdition,\n        function (pageData) {\n          var markdown = pageData.description.edition;\n          var editedSectionValue = {title: 'Edition title', markdown: markdown};\n          var saveContent = function (updatedContent) {\n            pageData.description.edition = updatedContent;\n            var childTitle = updatedContent.replace(/[^A-Z0-9]+/ig, \"\").toLowerCase();\n            putContent(collectionId, pageData.uri, JSON.stringify(pageData),\n              function () {\n                //save children changes and move\n                checkRenameUri(collectionId, pageData, true, updateContent);\n                //update dataset uri in parent and save\n                data.datasets[index].uri = data.uri + \"/\" + childTitle;\n                putContent(collectionId, data.uri, JSON.stringify(data),\n                  function () {},\n                  function (response) {\n                    if (response.status === 409) {\n                      sweetAlert(\"Cannot edit this page\", \"It is already part of another collection.\");\n                    } else {\n                      handleApiError(response);\n                    }\n                  }\n                );\n              },\n              function (message) {\n                if (message.status === 400) {\n                  sweetAlert(\"Cannot edit this page\", \"It is already part of another collection.\");\n                }\n                else {\n                  handleApiError(message);\n                }\n              }\n            );\n          };\n          loadMarkdownEditor(editedSectionValue, saveContent, pageData);\n        },\n        function (message) {\n          handleApiError(message);\n        }\n      );\n    });\n\n    // Delete (assuming datasets in makeEditSection - not dynamic fields here)\n    $('#edition-delete_' + index).click(function () {\n      swal({\n        title: \"Warning\",\n        text: \"Are you sure you want to delete this edition?\",\n        type: \"warning\",\n        showCancelButton: true,\n        confirmButtonText: \"Delete\",\n        cancelButtonText: \"Cancel\",\n        closeOnConfirm: false\n      }, function (result) {\n        if (result === true) {\n          swal({\n            title: \"Deleted\",\n            text: \"This edition has been deleted\",\n            type: \"success\",\n            timer: 2000\n          });\n          var position = $(\".workspace-edit\").scrollTop();\n          Florence.globalVars.pagePos = position;\n          $('#edition-delete_' + index).parent().remove();\n          $.ajax({\n            url: \"/zebedee/content/\" + collectionId + \"?uri=\" + data.datasets[index].uri,\n            type: \"DELETE\",\n            success: function (res) {\n              console.log(res);\n            },\n            error: function (res) {\n              console.log(res);\n            }\n          });\n          data.datasets.splice(index, 1);\n          updateContent(collectionId, data.uri, JSON.stringify(data));\n        }\n      });\n    });\n  });\n\n  function sortableSections() {\n    $(\"#sortable-edition\").sortable();\n  }\n\n  sortableSections();\n}\n\nfunction transfer(source, destination, uri) {\n  var transferRequest = {\n    source: source,\n    destination: destination,\n    uri: uri\n  };\n  $.ajax({\n    url: \"/zebedee/transfer\",\n    type: \"POST\",\n    dataType: \"json\",\n    contentType: 'application/json',\n    data: JSON.stringify(transferRequest),\n    success: function() {\n      console.log(' file has been moved');\n    },\n    error: function() {\n      console.log('error moving file');\n    }\n  });\n}\n\nfunction treeNodeSelect(url) {\n    var urlPart = url.replace(Florence.babbageBaseUrl, '');\n\n    // BEING REMOVED BECAUSE BABBAGE IS NOW RENDERING SAME AS NORMAL PAGE - Remove the trailing slash on visualisations so the node select works as expected (unless at root)\n    // if (urlPart !== '/') {\n    //     urlPart = urlPart.replace(/\\/+$/, '');\n    // }\n\n    var $selectedListItem = $('[data-url=\"' + urlPart + '\"]'); //get first li with data-url with url\n    $('.js-browse__item.selected').removeClass('selected');\n    $selectedListItem.addClass('selected');\n\n    // Hide container for item and buttons for previous and show selected one\n    $('.page__container.selected').removeClass('selected');\n    $selectedListItem.find('.page__container:first').addClass('selected');\n\n    // Hide previous displayed page buttons and show selected one\n    if ($selectedListItem.find('.page__buttons:first')) {\n        $('.page__buttons.selected').removeClass('selected');\n        $selectedListItem.find('.page__buttons:first').addClass('selected');\n    }\n\n    //page-list-tree\n    $('.tree-nav-holder ul').removeClass('active');\n    $selectedListItem.parents('ul').addClass('active');\n    $selectedListItem.closest('li').children('ul').addClass('active');\n\n    // Update browse tree scroll position\n    browseScrollPos();\n\n    // Open active directories\n    selectParentDirectories($selectedListItem);\n}\n/*\n*   Function that are applied just to UI/styling and aren't specific to certain screens or functions\n */\n\nvar $delegatedSelector = $('#main'); // This should be the highest point event handlers are delegated up to\n\n// Add focus styling to selects\nvar $closestWrap;\n$delegatedSelector.on('focus', '.select-wrap select', function(e) {\n    $closestWrap = $(e.target).closest('.select-wrap');\n    $closestWrap.toggleClass('select-wrap--focus');\n});\n\n$delegatedSelector.on('focusout', '.select-wrap select', function(e) {\n    $closestWrap.toggleClass('select-wrap--focus');\n});\n\n// Function to add loading icon to a button\nfunction loadingBtn(selector) {\n    var loadingHTML = $(templates.loadingAnimation()).css('top', '-3px'); // -3px to get animation in centre of button\n\n    selector\n        .width(selector.width()).height(selector.height()) // make btn keep width & height with loading icon\n        .empty() // remove button text\n        .append(loadingHTML); // Load loading animation template into button\n}function uiTidyUp() {\n\t//wrap selects with <div class=\"select-wrap\">\n\t// $('select').wrap('<span class=\"select-wrap\"></span>');\n\tconsole.log('uiTidyup');\n\t$(function() {\n \n    $( 'select' )\n      .selectmenu()\n      .selectmenu( \"menuWidget\" )\n        .addClass( \"overflow\" );\n  });\n}function updateContent(collectionId, path, content, redirectToPath) {\n    putContent(collectionId, path, content,\n        success = function () {\n            Florence.Editor.isDirty = false;\n            if (redirectToPath) {\n                createWorkspace(redirectToPath, collectionId, 'edit');\n                return;\n            } else {\n                //createWorkspace(path, collectionId, 'edit');\n                refreshPreview(path);\n                loadPageDataIntoEditor(path, collectionId);\n            }\n        },\n        error = function (response) {\n            if (response.status === 409) {\n                sweetAlert(\"Cannot edit this page\", \"It is already part of another collection.\");\n            } else {\n                handleApiError(response);\n            }\n        }\n    );\n}\n/**\n * Show the change password screen to change the password for the given email.\n * @param email - The email address of the user to change the password for.\n * @param authenticate - true if the existing password for the user needs to be entered.\n */\nfunction viewChangePassword(email, authenticate) {\n\n  var viewModel = {\n    authenticate: authenticate\n  };\n  \n  $('body').append(templates.changePassword(viewModel));\n\n  $('.change-password-overlay__inner input:first').focus(); // Put focus on first input\n\n  $('#update-password').on('click', function () {\n    var oldPassword = $('#password-old').val();\n    var newPassword = $('#password-new').val();\n    var confirmPassword = $('#password-confirm').val();\n\n    if(newPassword !== confirmPassword) {\n      sweetAlert('The passphrases provided do not match', 'Please enter the new passphrase again and confirm it.');\n    } else if(!newPassword.match(/.+\\s.+\\s.+\\s.+/)) {\n      sweetAlert('The passphrase does not have four words', 'Please enter a new passphrase and confirm it.');\n    } else if(newPassword.length < 15) {\n      sweetAlert('The passphrase is too short', 'Please make sure it has at least 15 characters (including spaces).');\n    } else {\n      submitNewPassword(newPassword, oldPassword);\n    }\n  });\n\n  $('#update-password-cancel').on('click', function () {\n    $('.change-password-overlay').stop().fadeOut(200).remove();\n  });\n\n  function submitNewPassword(newPassword, oldPassword) {\n    postPassword(\n      success = function () {\n        console.log('Password updated');\n        sweetAlert(\"Password updated\", \"\", \"success\");\n        $('.change-password-overlay').stop().fadeOut(200).remove();\n\n        if(authenticate) {\n          postLogin(email, newPassword);\n        }\n      },\n      error = function (response) {\n        if (response.status === 403 || response.status === 401) {\n          if (authenticate) {\n            sweetAlert('The password you entered is incorrect. Please try again');\n          } else {\n            sweetAlert('You are not authorised to change the password for this user');\n          }\n        }\n      },\n      email,\n      newPassword,\n      oldPassword);\n  }\n}\n\n\nfunction viewCollectionDetails(collectionId, $this) {\n\n    getCollectionDetails(collectionId,\n        success = function (response) {\n            populateCollectionDetails(response, collectionId, $this);\n        },\n        error = function (response) {\n            handleApiError(response);\n        }\n    );\n\n    function populateCollectionDetails(collection, collectionId) {\n\n        Florence.setActiveCollection(collection);\n\n        // Set published date\n        if (!collection.publishDate) {\n            collection.date = '[manual collection]';\n        } else if (collection.publishDate && collection.type === 'manual') {\n            collection.date = '[manual collection] Originally scheduled for ' + StringUtils.formatIsoFull(collection.publishDate);\n        } else {\n            collection.date = StringUtils.formatIsoFull(collection.publishDate);\n        }\n\n        // Set collection progress\n        ProcessPages(collection.inProgress);\n        ProcessPages(collection.complete);\n        ProcessPages(collection.reviewed);\n\n        // Set collection approval state\n        var approvalStates = {inProgress: false, thrownError: false, completed: false};\n        switch (collection.approvalStatus) {\n            case (undefined): {\n                collection.approvalState = '';\n                break;\n            }\n            case ('IN_PROGRESS'): {\n                approvalStates.inProgress = true;\n                break;\n            }\n            case ('COMPLETE'): {\n                approvalStates.completed = true;\n                break;\n            }\n            case ('ERROR'): {\n                approvalStates.thrownError = true;\n                break;\n            }\n        }\n        collection.approvalState = approvalStates;\n\n        var showPanelOptions = {\n            html: window.templates.collectionDetails(collection)\n        };\n        showPanel($this, showPanelOptions);\n\n        var deleteButton = $('#collection-delete'),\n            collectionCanBeDeleted = collection.inProgress.length === 0\n                && collection.complete.length === 0\n                && collection.reviewed.length === 0\n                && collection.timeseriesImportFiles.length === 0\n                && collection.pendingDeletes.length <= 0;\n        if (collectionCanBeDeleted) {\n            deleteButton.show().click(function () {\n                swal({\n                    title: \"Warning\",\n                    text: \"Are you sure you want to delete this collection?\",\n                    type: \"warning\",\n                    showCancelButton: true,\n                    confirmButtonText: \"Continue\",\n                    cancelButtonText: \"Cancel\",\n                    closeOnConfirm: false\n                }, function (result) {\n                    if (result === true) {\n                        deleteCollection(collectionId,\n                            function () {\n                                swal({\n                                    title: \"Collection deleted\",\n                                    type: \"success\",\n                                    timer: 2000\n                                });\n                                viewCollections();\n                            },\n                            function (error) {\n                                viewCollectionDetails(collectionId);\n                                sweetAlert('File has not been deleted. Contact an administrator', error, \"error\");\n                            })\n                    } else {\n                    }\n                });\n            });\n        } else {\n            deleteButton.hide();\n        }\n\n        var $approveBtn = $('.btn-collection-approve'),\n            $editBtn = $('.btn-collection-edit'),\n            $workOnBtn = $('.btn-collection-work-on');\n\n        if (collection.approvalState.inProgress) {\n            // Collection has been approved and is generating PDF, timeseries etc so disable buttons\n            $workOnBtn.addClass('btn--disabled').attr('disabled', true);\n            $approveBtn.addClass('btn--disabled').attr('disabled', true);\n        } else if (collection.approvalState.thrownError) {\n            // Collection has thrown error doing pre-publish tasks, give user option to retry approval\n            $workOnBtn.hide();\n            $approveBtn.text('Retry approval').show().one('click', function () {\n                postApproveCollection(collection.id);\n            });\n        } else if (showApproveButton(collection)) {\n            // Collection has been reviewed and is ready for approval, so show button and bind click\n            $approveBtn.show().one('click', function () {\n                postApproveCollection(collection.id);\n            });\n        } else {\n            // You can't approve collections unless there is nothing left to be reviewed, hide approve button\n            $approveBtn.hide();\n        }\n\n        //edit collection\n        $editBtn.click(function () {\n            editCollection(collection);\n        });\n\n        //page-list\n        $('.page__item:not(.delete-child)').click(function () {\n            $('.page-list li').removeClass('selected');\n            $('.page__buttons').hide();\n            $('.page__children').hide();\n\n            var $this = $(this),\n                $buttons = $this.next('.page__buttons'),\n                $childrenPages = $buttons.length > 0 ? $buttons.next('.page__children') : $this.next('.page__children');\n\n            $this.parent('li').addClass('selected');\n            $buttons.show();\n            $childrenPages.show();\n        });\n\n        $('.btn-page-edit').click(function () {\n            var path = $(this).attr('data-path');\n            var language = $(this).attr('data-language');\n            if (language === 'cy') {\n                var safePath = checkPathSlashes(path);\n                Florence.globalVars.welsh = true;\n            } else {\n                var safePath = checkPathSlashes(path);\n                Florence.globalVars.welsh = false;\n            }\n            getPageDataDescription(collectionId, safePath,\n                success = function () {\n                    createWorkspace(safePath, collectionId, 'edit', collection);\n                },\n                error = function (response) {\n                    handleApiError(response);\n                }\n            );\n        });\n\n        $('.page-delete').click(function () {\n            var path = $(this).attr('data-path');\n            var language = $(this).attr('data-language');\n\n            //Shows relevant alert text - SweetAlert doesn't return a true or false in same way that confirm() does so have to write each alert with delete function called after it\n            function deleteAlert(text) {\n                swal({\n                    title: \"Warning\",\n                    text: text,\n                    type: \"warning\",\n                    showCancelButton: true,\n                    confirmButtonText: \"Delete\",\n                    cancelButtonText: \"Cancel\",\n                    closeOnConfirm: false\n                }, function (result) {\n                    if (result === true) {\n                        //if (language === 'cy' && !(path.match(/\\/bulletins\\//) || path.match(/\\/articles\\//))) {\n                        if (language === 'cy') {\n                            path = path + '/data_cy.json';\n                        }\n                        deleteContent(collectionId, path, function () {\n                                viewCollectionDetails(collectionId);\n                                swal({\n                                    title: \"Page deleted\",\n                                    text: \"This page has been deleted\",\n                                    type: \"success\",\n                                    timer: 2000\n                                });\n                            }, function (error) {\n                                handleApiError(error);\n                            }\n                        );\n                    }\n                });\n            }\n\n            //if (path.match(/\\/bulletins\\//) || path.match(/\\/articles\\//)) {\n            //  deleteAlert(\"This will delete the English and Welsh content of this page, if any. Are you sure you want to delete this page from the collection?\");\n            //} else if (language === 'cy') {\n            deleteAlert(\"Are you sure you want to delete this page from the collection?\");\n            //} else {\n            //  deleteAlert(\"This will delete the English and Welsh content of this page, if any. Are you sure you want to delete this page from the collection?\");\n            //}\n        });\n\n        $('.delete-marker-remove').click(function () {\n            var selection = $('.page-list').find('.selected');\n            var uri = $(this).attr('data-path');\n            removeDeleteMarker(uri, function() {\n                // selection.remove();\n                getCollectionDetails(collectionId,\n                    success = function (response) {\n                        populateCollectionDetails(response, collectionId, $this);\n                    },\n                    error = function (response) {\n                        handleApiError(response);\n                    }\n                );\n                sweetAlert('Undo', \"Deletion removed\", 'success');\n            });\n        });\n\n        $('.btn-collection-cancel').click(function () {\n            hidePanel({});\n        });\n\n        $workOnBtn.click(function () {\n            var workspaceState = __webpack_require__(25);\n            workspaceState.reset();\n            var collectionState = __webpack_require__(28);\n            collectionState.set(collection);\n            var workspaceController = __webpack_require__(29);\n            workspaceController.init();\n            // Florence.globalVars.welsh = false;\n            // createWorkspace('', collectionId, 'browse', collection);\n        });\n\n        setCollectionDetailsHeight();\n    };\n\n    function ProcessPages(pages) {\n        _.sortBy(pages, 'uri');\n        _.each(pages, function (page) {\n            page.uri = page.uri.replace('/data.json', '');\n            return page;\n        });\n    }\n\n    function setCollectionDetailsHeight() {\n        var panelHeight = parseInt($('.panel--off-canvas').height());\n\n        var headHeight = parseInt($('.slider__head').height());\n        var headPadding = parseInt($('.slider__head').css('padding-bottom'));\n\n        var contentPadding = parseInt($('.slider__content').css('padding-bottom'));\n\n        var navHeight = parseInt($('.slider__nav').height());\n        var navPadding = (parseInt($('.slider__nav').css('padding-bottom'))) + (parseInt($('.slider__nav').css('padding-top')));\n\n        var contentHeight = panelHeight - (headHeight + headPadding + contentPadding + navHeight + navPadding);\n        $('.slider__content').css('height', contentHeight);\n    }\n\n    function showApproveButton(collection) {\n        // If the collection contains deletes...\n        if (collection.pendingDeletes && collection.pendingDeletes.length > 0) {\n            // Check that the current user is not the owner of any of the deletes.\n            for (i = 0; i < collection.pendingDeletes.length; i++) {\n                var pendingDelete = collection.pendingDeletes[i];\n                if (pendingDelete.user == localStorage.getItem('loggedInAs')) {\n                    $(\"#approval-permission-blocked\").show();\n                    return false;\n                }\n            }\n\n            return (collection.inProgress.length === 0 && collection.complete.length === 0\n                && collection.reviewed.length >= 0) || (collection.timeseriesImportFiles.length > 0);\n        }\n        return (collection.inProgress.length === 0 && collection.complete.length === 0\n            && collection.reviewed.length > 0) || (collection.timeseriesImportFiles.length > 0);\n    }\n}function viewCollections(collectionId) {\n\n    var result = {};\n    var pageDataRequests = []; // list of promises - one for each ajax request.\n    pageDataRequests.push(\n        $.ajax({\n            url: \"/zebedee/collections\",\n            type: \"get\",\n            success: function (data) {\n                result.data = data;\n            },\n            error: function (jqxhr) {\n                handleApiError(jqxhr);\n            }\n        })\n    );\n    pageDataRequests.push(\n        getTeams(\n            success = function (team) {\n                result.team = team;\n            },\n            error = function (response) {\n                handleApiError(response);\n            }\n        )\n    );\n\n    $.when.apply($, pageDataRequests).then(function () {\n\n        var response = [], teams = [], date = \"\";\n\n        $.each(result.data, function (i, collection) {\n            var approvalStates = {inProgress: false, thrownError: false, completed: false};\n\n            if (collection.approvalStatus != \"COMPLETE\") {\n\n                // Set publish date\n                if (!collection.publishDate) {\n                    date = '[manual collection]';\n                } else if (collection.publishDate && collection.type === 'manual') {\n                    date = StringUtils.formatIsoDateString(collection.publishDate) + ' [rolled back]';\n                } else {\n                    date = StringUtils.formatIsoDateString(collection.publishDate);\n                }\n\n                // Set approval state\n                switch (collection.approvalStatus) {\n                    case (undefined): {\n                        break;\n                    }\n                    case ('IN_PROGRESS'): {\n                        approvalStates.inProgress = true;\n                        break;\n                    }\n                    case ('COMPLETE'): {\n                        approvalStates.completed = true;\n                        break;\n                    }\n                    case ('ERROR'): {\n                        approvalStates.thrownError = true;\n                        break;\n                    }\n                }\n\n                response.push({id: collection.id, name: collection.name, date: date, approvalState: approvalStates});\n            }\n        });\n\n        var isDataVis = false;\n        if (Florence.Authentication.userType() === \"DATA_VISUALISATION\") {\n            isDataVis = true;\n        }\n        var collectionsHtml = templates.collectionList({response: response, teams: result.team.teams, isDataVis: isDataVis});\n        $('.section').html(collectionsHtml);\n\n        if (collectionId) {\n            viewCollectionDetails(collectionId, $('.js-selectable-table tr[data-id=\"' + collectionId + '\"]'));\n        }\n\n        $('.js-selectable-table tbody tr').click(function () {\n            var collectionId = $(this).attr('data-id');\n            viewCollectionDetails(collectionId, $(this));\n        });\n\n        $(\"#team-tag\").tagit({\n            singleField: true,\n            singleFieldNode: $('#team-input')\n        });\n\n        $('.ui-autocomplete-input').hide();\n\n        $('select#team').change(function () {\n            $('#team-tag').tagit('createTag', $(\"#team option:selected\").text());\n        });\n\n        $('#team-input').change(function () {\n            teams = $('#team-input').val().split(',');\n            //After creating the array tagit leaves an empty string if all elements are removed\n            if (teams.length === 1 && teams[0] === \"\") {\n                teams = [];\n            }\n        });\n\n        $('form input[type=radio]').click(function () {\n\n            if ($(this).val() === 'manual') {\n                $('#scheduledPublishOptions').hide();\n            } else if ($(this).val() === 'scheduled') {\n                $('#scheduledPublishOptions').show();\n            } else if ($(this).val() === 'custom') {\n                $('#customScheduleOptions').show();\n                $('#releaseScheduleOptions').hide();\n            } else if ($(this).val() === 'release') {\n                $('#customScheduleOptions').hide();\n                $('#releaseScheduleOptions').show();\n            }\n        });\n\n\n        $(function () {\n            var today = new Date();\n            $('#date').datepicker({\n                minDate: today,\n                dateFormat: 'dd/mm/yy',\n                constrainInput: true\n            });\n        });\n\n\n        $('.btn-select-release').on(\"click\", function (e) {\n            e.preventDefault();\n            viewReleaseSelector();\n        });\n\n        $('.form-create-collection').submit(function (e) {\n            e.preventDefault();\n            createCollection(teams);\n        });\n    });\n}function viewController(view) {\n\n    if (Florence.Authentication.isAuthenticated()) {\n\n        if (view === 'collections') {\n            viewCollections();\n        }\n        else if (view === 'users') {\n            viewUsers();\n        }\n        else if (view === 'teams') {\n            viewTeams();\n        }\n        else if (view === 'login') {\n            viewLogIn();\n        }\n        else if (view === 'publish') {\n            viewPublish();\n        }\n        else if (view === 'reports') {\n            viewReports();\n        }\n        else {\n            viewController('collections');\n        }\n    }\n    else {\n        viewLogIn();\n    }\n}\n\nfunction viewLogIn() {\n\n    var login_form = templates.login;\n    $('.section').html(login_form);\n\n    $('.form-login').submit(function (e) {\n        e.preventDefault();\n        loadingBtn($('#login'));\n        var email = $('.fl-user-and-access__email').val();\n        var password = $('.fl-user-and-access__password').val();\n        postLogin(email, password);\n    });\n}\n\nfunction viewPublish() {\n    var manual = '[manual collection]';\n\n    $.ajax({\n        url: \"/zebedee/collections\",\n        type: \"get\",\n        crossDomain: true,\n        success: function (collections) {\n            $(collections).each(function (i) {\n                if (!collections[i].type || (collections[i].type === 'manual')) {\n                    collections[i].publishDate = manual;\n                }\n            });\n            populatePublishTable(collections);\n        },\n        error: function (response) {\n            handleApiError(response);\n        }\n    });\n\n    var result = [];\n\n    function populatePublishTable(collections) {\n\n\n        var collectionsByDate = _.chain(collections)\n            .filter(function (collection) {\n                return collection.approvalStatus == \"COMPLETE\"\n            })\n            .sortBy('publishDate')\n            .groupBy('publishDate')\n            .value();\n\n        for (var key in collectionsByDate) {\n            var response = [];\n            if (key === manual) {\n                var formattedDate = manual;\n            } else {\n                var formattedDate = StringUtils.formatIsoFull(key);\n            }\n            $(collectionsByDate[key]).each(function (n) {\n                var id = collectionsByDate[key][n].id;\n                response.push(id);\n            });\n            result.push({date: formattedDate, ids: response});\n        }\n\n        var publishList = templates.publishList(result);\n        $('.section').html(publishList);\n\n        $('.js-selectable-table tbody tr').click(function () {\n            var collections = $(this).attr('data-collections').split(',');\n            Florence.collectionToPublish.publishDate = $(this).find('td').html();\n            viewPublishDetails(collections);\n\n            var showPanelOptions = {\n                html: false,\n                moveCenteredPanel: true\n            };\n            showPanel($(this), showPanelOptions);\n            // $('.panel--centred').animate({marginLeft: \"0%\"}, 800);\n        });\n    }\n}\n\nfunction viewPublishDetails(collections) {\n\n    var manual = '[manual collection]';\n    var result = {\n        date: Florence.collectionToPublish.publishDate,\n        subtitle: '',\n        collectionDetails: [],\n        pendingDeletes: []\n    };\n    var pageDataRequests = []; // list of promises - one for each ajax request to load page data.\n    var onlyOne = 0;\n\n    $.each(collections, function (i, collectionId) {\n        onlyOne += 1;\n        pageDataRequests.push(\n            getCollectionDetails(collectionId,\n                success = function (response) {\n                    if (result.date === manual) {\n                        result.collectionDetails.push({\n                            id: response.id,\n                            name: response.name,\n                            pageDetails: response.reviewed,\n                            pageType: 'manual',\n                            pendingDeletes: response.pendingDeletes\n                        });\n                    } else {\n                        result.collectionDetails.push({\n                            id: response.id,\n                            name: response.name,\n                            pageDetails: response.reviewed\n                        });\n                    }\n                },\n                error = function (response) {\n                    handleApiError(response);\n                }\n            )\n        );\n    });\n\n    if (onlyOne < 2) {\n        result.subtitle = 'The following collection has been approved';\n    } else {\n        result.subtitle = 'The following collections have been approved';\n    }\n\n    $.when.apply($, pageDataRequests).then(function () {\n        var publishDetails = templates.publishDetails(result);\n        $('.panel--off-canvas').html(publishDetails);\n        bindAccordions();\n\n        $('.btn-collection-publish').click(function () {\n            var collection = $(this).closest('.js-accordion').find('.collection-name').attr('data-id');\n            console.log(collection);\n            publish(collection);\n        });\n\n        $('.btn-collection-unlock').click(function () {\n            var collection = $(this).closest('.js-accordion').find('.collection-name').attr('data-id');\n            console.log(collection);\n\n            if (result.date !== manual) {\n                swal({\n                        title: \"Are you sure?\",\n                        text: \"If unlocked, this collection will not be published on \" + result.date + \" unless it is approved\" +\n                        \" again\",\n                        type: \"warning\",\n                        showCancelButton: true,\n                        confirmButtonColor: \"#6d272b\",\n                        confirmButtonText: \"Yes, unlock it!\",\n                        closeOnConfirm: false\n                    },\n                    function () {\n                        unlock(collection);\n                    });\n            } else {\n                unlock(collection);\n            }\n        });\n\n        //page-list\n        $('.page__item:not(.delete-child)').click(function () {\n            $('.page-list li').removeClass('selected');\n            $('.page__buttons').hide();\n            $('.page__children').hide();\n\n            // $(this).parent('li').addClass('selected');\n            // $(this).next('.page__buttons').show();\n\n            var $this = $(this),\n                $buttons = $this.next('.page__buttons'),\n                $childrenPages = $buttons.length > 0 ? $buttons.next('.page__children') : $this.next('.page__children');\n\n            $this.parent('li').addClass('selected');\n            $buttons.show();\n            $childrenPages.show();\n        });\n\n        $('.btn-collection-cancel').click(function () {\n            var hidePanelOptions = {\n                onHide: false,\n                moveCenteredPanel: true\n            };\n\n            hidePanel(hidePanelOptions);\n        });\n    });\n}\n/**\n * Load the release selector screen and populate the list of available releases.\n */\nfunction viewReleaseSelector() {\n\n    var html = templates.releaseSelector();\n    $('body').append(html);\n\n    var releases = [];\n    PopulateReleasesForUri(\"/releasecalendar/data?view=upcoming\", releases);\n\n    $('.btn-release-selector-cancel').on('click', function () {\n        $('.release-select').stop().fadeOut(200).remove();\n    });\n\n    var $searchInput = $('#release-search-input');\n    $searchInput.focus();\n    $searchInput.on('input', function () {\n        var searchText = $(this).val();\n        populateReleasesList(releases, searchText);\n    });\n\n    function PopulateReleasesForUri(baseReleaseUri, releases) {\n        //console.log(\"populating release for uri \" + baseReleaseUri);\n        $.ajax({\n                url: baseReleaseUri,\n                type: \"get\",\n                success: function (data) {\n                    populateRemainingReleasePages(data, releases, baseReleaseUri);\n                },\n                error: function (response) {\n                    handleApiError(response);\n                }\n            }\n        );\n    }\n\n    /**\n     * Take the data from the response of getting the first release page and\n     * determine if there are any more pages to get.\n     * @param data\n     */\n    function populateRemainingReleasePages(data, releases, baseReleaseUri) {\n        var pageSize = 10;\n        _(data.result.results).each(function (release) {\n            releases.push(release);\n        });\n\n        // if there are more results than the existing page size, go get them.\n        if (data.result.numberOfResults > pageSize) {\n\n            var pagesToGet = Math.ceil((data.result.numberOfResults - pageSize) / pageSize);\n            var pageDataRequests = []; // list of promises - one for each ajax request to load page data.\n\n            for (var i = 2; i < pagesToGet + 2; i++) {\n                var dfd = getReleasesPage(baseReleaseUri, i, releases);\n                pageDataRequests.push(dfd);\n            }\n\n            $.when.apply($, pageDataRequests).then(function () {\n                populateReleasesList(releases);\n            });\n        } else {\n            populateReleasesList(releases);\n        }\n    }\n\n    /**\n     * Get the release page for the given index and add the response to the given releases array.\n     * @param i\n     * @param releases\n     * @returns {*}\n     */\n    function getReleasesPage(baseReleaseUri, i, releases) {\n        //console.log(\"getting page  \" + i + \" for \" + baseReleaseUri);\n        var dfd = $.Deferred();\n        $.ajax({\n            url: baseReleaseUri + '&page=' + i,\n            type: \"get\",\n            success: function (data) {\n                _(data.result.results).each(function (release) {\n                    releases.push(release);\n                });\n                dfd.resolve();\n            },\n            error: function (response) {\n                handleApiError(response);\n                dfd.resolve();\n            }\n        });\n        return dfd;\n    }\n\n    /**\n     * Populate the releases list from the given array of releases.\n     * @param releases\n     */\n    function populateReleasesList(releases, filter) {\n        var releaseList = $('#release-list');\n        releaseList.find('tr').remove(); // remove existing table entries\n\n        _(_.sortBy(releases, function (release) {\n            return release.description.releaseDate\n        }))\n            .each(function (release) {\n                if (!filter || (release.description.title.toUpperCase().indexOf(filter.toUpperCase()) > -1)) {\n                    var date = StringUtils.formatIsoFullDateString(release.description.releaseDate);\n                    releaseList.append('<tr data-id=\"' + release.description.title + '\" data-uri=\"' + release.uri + '\"><td>' + release.description.title + '</td><td>' + date + '</td></tr>');\n                }\n            });\n\n        releaseList.find('tr').on('click', function () {\n            var releaseTitle = $(this).attr('data-id');\n            var releaseUri = $(this).attr('data-uri'),\n                $releaseTitle = $('.selected-release');\n            Florence.CreateCollection.selectedRelease = {uri: releaseUri, title: releaseTitle};\n\n\n            $releaseTitle.show().text(releaseTitle);\n            $('.release-select').stop().fadeOut(200).remove();\n        })\n    }\n}/**\n * Display panel with selected report's details\n *\n * @param collection = selected collection data object\n * @param isPublished = boolean flag of whether selected collection is published or not\n * @param $this = jQuery object of selected item from table\n */\n\nfunction viewReportDetails(collection, isPublished, $this) {\n\n    var details, reportDetails, published, events;\n\n    // get the event details\n    $.ajax({\n        url: \"/zebedee/collectionHistory/\" + collection.id,\n        type: \"get\",\n        crossDomain: true,\n        success: function (events) {\n\n            // format eventDate to user readable date\n            $(events).each(function (i) {\n                var formattedDate = events[i].eventDetails.date;\n                events[i].formattedDate = StringUtils.formatIsoFull(formattedDate);\n            });\n\n            if (isPublished) {\n\n\n                $.ajax({\n                    url: \"/zebedee/publishedCollections/\" + collection.id,\n                    type: \"GET\",\n                    crossDomain: true,\n                    success: function (collection) {\n\n                        var collection = collection[0];\n\n                        var date = collection.publishEndDate;\n                        collection.formattedDate = StringUtils.formatIsoFull(date);\n\n                        // Load details with published data\n                        if (!collection.publishResults || collection.publishResults.length === 0) {\n                            return;\n                        }\n\n                        var success = collection.publishResults[collection.publishResults.length - 1];\n                        var duration = (function () {\n\n                            if (collection.publishStartDate && collection.publishEndDate) {\n                                var start = new Date(collection.publishStartDate);\n                                var end = new Date(collection.publishEndDate);\n                            } else {\n                                var start = new Date(success.transaction.startDate);\n                                var end = new Date(success.transaction.endDate);\n                            }\n                            return end - start;\n                        })();\n\n\n                        if (collection.publishStartDate) {\n                            var starting = StringUtils.formatIsoFullSec(collection.publishStartDate);\n                        } else {\n                            var starting = StringUtils.formatIsoFullSec(success.transaction.startDate);\n                        }\n\n                        // var verifiedCount = collection.verifiedCount;\n                        // var verifyFailedCount = collection.verifyFailedCount;\n                        // var verifyInprogressCount = collection.verifyInprogressCount;\n                        details = {\n                            name: collection.name,\n                            // verifiedCount: verifiedCount,\n                            // verifyInprogressCount: verifyInprogressCount,\n                            // verifyFailedCount: verifyFailedCount,\n                            date: collection.formattedDate,\n                            starting: starting,\n                            duration: duration,\n                            success: success,\n                            events: events\n                        };\n\n                        var showPanelOptions = {\n                            html: templates.reportPublishedDetails(details),\n                            moveCenteredPanel: true\n                        };\n\n                        showPanel($this, showPanelOptions);\n                        bindAccordions();\n                        bindTableOrdering();\n\n                    },\n                    error: function (response) {\n                        handleApiError(response);\n                    }\n                });\n\n\n\n            } else {\n\n                // Load details with unpublished data\n                details = {\n                    name: collection.name,\n                    events: events\n                };\n\n                var showPanelOptions = {\n                    html: templates.reportUnpublishedDetails(details),\n                    moveCenteredPanel: true\n                };\n                showPanel($this, showPanelOptions);\n            }\n\n            bindAccordions();\n\n            $('.btn-collection-cancel').click(function () {\n                var hidePanelOptions = {\n                    moveCenteredPanel: true\n                };\n                hidePanel(hidePanelOptions)\n            });\n\n        },\n        error: function (response) {\n            handleApiError(response);\n        }\n    });\n\n}\n\nfunction bindTableOrdering() {\n    // Bind table ordering functionality to publish times\n    var $publishTimeHeadings = $('.publish-times-table th');\n    $publishTimeHeadings.click(function () {\n\n        // Get table, reverse order and rebuild it\n        var table = $(this).parents('table').eq(0);\n        var rows = table.find('tr:gt(0)').toArray().sort(comparer($(this).index()));\n        this.asc = !this.asc;\n        if (!this.asc) {\n            rows = rows.reverse();\n        }\n        for (var i = 0; i < rows.length; i++) {\n            table.append(rows[i]);\n        }\n\n        /* TODO Get sorting arrows working - also code commented out in related SCSS */\n        // Update active classes to show sort direction in UI\n        $publishTimeHeadings.removeClass('active active--asc active--desc');\n        var tableDirection = \"asc\";\n        if (!this.asc) {\n            tableDirection = \"desc\";\n        }\n        var activeClass = \"active active--\" + tableDirection;\n        $(this).addClass(activeClass);\n    });\n\n    function comparer(index) {\n        return function (a, b) {\n            var valA = getCellValue(a, index), valB = getCellValue(b, index);\n            return $.isNumeric(valA) && $.isNumeric(valB) ? valA - valB : valA.localeCompare(valB);\n        }\n    }\n\n    function getCellValue(row, index) {\n        return $(row).children('td').eq(index).html()\n    }\n\n}function viewReports() {\n\n    $.ajax({\n        url: \"/zebedee/publishedCollections\",\n        type: \"GET\",\n        crossDomain: true,\n        success: function (collections) {\n            getUnpublishedCollections(collections);\n        },\n        error: function (response) {\n            handleApiError(response);\n        }\n    });\n\n    function getUnpublishedCollections(publishedCollections) {\n        $.ajax({\n            url: \"/zebedee/collections\",\n            type: \"GET\",\n            crossDomain: true,\n            success: function(response) {\n                var collections = [];\n                collections[\"published\"] = publishedCollections;\n                collections[\"unpublished\"] = response;\n                populateTable(collections);\n            },\n            error: function (response) {\n                handleApiError(response)\n            }\n        })\n    }\n\n    function populateTable(collections) {\n        var collections = collections;\n        //console.log(collections);\n\n        // Build published collections objects\n        // // var publishedCollections = _.chain(collections.published)\n        // //     .filter(function (collection) {\n        // //         return collection.publishResults && collection.publishResults.length > 0;\n        // //     })\n        // //     .value();\n        //\n        //\n        // console.log(publishedCollections);\n        // $(publishedCollections).each(function (n, coll) {\n        //     var date = publishedCollections[n].\n        //     if (coll.publishResults && coll.publishResults.length > 0) {\n        //\n        //         if (coll.publishStartDate) {\n        //             var date = coll.publishStartDate;\n        //         } else {\n        //             var date = coll.publishResults[coll.publishResults.length - 1].transaction.startDate;\n        //         }\n        //\n        //         publishedCollections[n].formattedDate = StringUtils.formatIsoFull(date);\n        //     }\n        // });\n        //\n        // collections[\"published\"] = publishedCollections;\n\n        var publishedCollections = collections.published;\n\n        $(publishedCollections).each(function (i) {\n            publishedCollections[i].order = i;\n        });\n\n        // Format the publishDate to user readable and add into JSON\n        $(publishedCollections).each(function (i) {\n            var formattedDate = collections[\"published\"][i].publishDate;\n            collections[\"published\"][i].formattedDate = StringUtils.formatIsoFull(formattedDate);\n        });\n\n        // Pass data to template \n        var reportList = templates.reportList(collections);\n        $('.section').html(reportList);\n\n        // Bind click on unpublished collection\n        $('.unpublished').click(function() {\n            var i = $(this).attr('data-collections-order');\n            var isPublished = false;\n            viewReportDetails(collections.unpublished[i], isPublished, $(this));\n\n            selectTr($(this));\n        });\n\n        // Bind click on published collection\n        $('.published').click(function () {\n            var i = $(this).attr('data-collections-order');\n            var isPublished = true;\n            viewReportDetails(collections.published[i], isPublished, $(this));\n\n            selectTr($(this));\n        });\n\n        function selectTr($this) {\n            // $('.publish-select-table tbody tr').removeClass('selected');\n            // $this.addClass('selected');\n            // $('.publish-selected').animate({right: \"0%\"}, 800);\n            // $('.publish-select').animate({marginLeft: \"0%\"}, 500);\n            var showPanelOptions = {\n\n            }\n        }\n    }\n}\n/**\n * Display the details of the team with the given name.\n * @param teamName\n * @param $this = jQuery object of selected table item\n */\nfunction viewTeamDetails(teamName, $this) {\n\n    getTeams(\n        success = function (team) {\n            populateTeamDetails(team, $this);\n        },\n        error = function (response) {\n            handleApiError(response);\n        },\n        teamName\n    );\n\n    function populateTeamDetails(team, $this) {\n\n        var showPanelOptions = {\n            html: window.templates.teamDetails(team)\n        };\n        showPanel($this, showPanelOptions);\n\n        $('.btn-team-delete').click(function () {\n            swal({\n                title: \"Confirm deletion\",\n                text: \"Please enter the name of the team you want to delete\",\n                type: \"input\",\n                inputPlaceHolder: \"Name\",\n                showCancelButton: true,\n                closeOnConfirm: false,\n                confirmButtonText: \"Delete\",\n                animation: \"slide-from-top\"\n            }, function (result) {\n                console.log(result);\n                if (result) {\n                    if (result === teamName) {\n                        var encodedName = encodeURIComponent(teamName);\n                        deleteTeam(encodedName);\n                    } else {\n                        sweetAlert(\"Oops!\", 'The name you entered did not match the team you want to delete.');\n                    }\n                }\n            });\n        });\n\n        $('.btn-team-cancel').click(function () {\n            hidePanel({});\n        });\n\n        $('.btn-team-edit-members').click(function () {\n            populateMembers(team);\n        });\n    }\n}\n\nfunction populateMembers(team) {\n    var userArray, userNotInTeam;\n    getUsers(\n        function (users) {\n            userArray = _.pluck(users, \"email\");\n            //console.log(\"UA: \" + userArray);\n            userNotInTeam = _.difference(userArray, team.members);\n            //console.log(\"UNIT: \" + userNotInTeam);\n            var teamsHtml = templates.teamEdit({team: team, user: userNotInTeam});\n            $('.section').append(teamsHtml);\n\n            $('#team-search-input').on('input', function () {\n                var searchText = $(this).val();\n                populateUsersList(userNotInTeam, searchText);\n            });\n\n            $('.btn-team-selector-cancel').click(function () {\n                $('.team-select').stop().fadeOut(200).remove();\n                viewTeamDetails(team.name);\n            });\n\n            $('.user-list').on('click', '.btn-team-add', function() {\n                console.log('you clicked add');\n                var $this = $(this),\n                    $li = $this.parent('li'),\n                    $email = $this.data('email');\n                $li.remove();\n                moveUser($email, true)\n                postTeamMember(team.name, $email);\n                userNotInTeam = _.difference(userNotInTeam, [$email]);\n\n            });\n\n\n            $('.team-list').on('click', '.btn-team-remove', function() {\n                console.log('you clicked remove');\n                var $this = $(this),\n                    $li = $this.parent('li'),\n                    $email = $this.data('email');\n                $li.remove();\n                moveUser($email, false)\n                deleteTeamMember(team.name, $email);\n                userNotInTeam.push($email);\n            });\n\n            //dragAndDrop();\n        },\n        function (jqxhr) {\n            handleApiError(jqxhr);\n        }\n    );\n\n    /**\n     * Populate the users list from the given array of users.\n     * @param users\n     */\n    function populateUsersList(users, filter) {\n        var userList = $('.user-list');\n        userList.find('li').remove(); // remove existing table entries\n\n        _(_.sortBy(users, function (user) {\n            return user;\n        }))\n            .each(function (user) {\n                if (!filter || (user.toUpperCase().indexOf(filter.toUpperCase()) > -1)) {\n                    userList.append('<li >' + user + ' <button class=\"btn-team-list btn-team-add\" data-email=\"' + user + '\">Add</button></li>');\n                }\n            });\n        //dragAndDrop();\n    }\n\n    //function dragAndDrop() {\n    //    $('.user-list > li').draggable({\n    //        appendTo: 'document',\n    //        helper: 'clone',\n    //        cursor: 'move'\n    //    });\n    //\n    //    $('.team-list > li').draggable({\n    //        appendTo: 'document',\n    //        helper: 'clone',\n    //        cursor: 'move'\n    //    });\n    //\n    //    $('.user-list').droppable({\n    //        accept: \".team-list > li\",\n    //        drop: function (event, ui) {\n    //            var targetElem = $(this).attr(\"id\");\n    //            $(this).addClass(\"ui-state-highlight\");\n    //            $(ui.draggable).appendTo(this);\n    //            deleteTeamMember(team.name, ui.draggable[0].firstChild.textContent);\n    //            userNotInTeam.push(ui.draggable[0].firstChild.textContent);\n    //        }\n    //    });\n    //\n    //    $('.team-list').droppable({\n    //        accept: \".user-list > li\",\n    //        drop: function (event, ui) {\n    //            var targetElem = $(this).attr(\"id\");\n    //            $(this).addClass(\"ui-state-highlight\");\n    //            $(ui.draggable).appendTo(this);\n    //            postTeamMember(team.name, ui.draggable[0].firstChild.textContent);\n    //            userNotInTeam = _.difference(userNotInTeam, [ui.draggable[0].firstChild.textContent]);\n    //        }\n    //    });\n    //};\n\n    /**\n     * Handle moving list items between lsits.\n     * @param user - email string\n     * @param beingAdded - true or false\n     */\n    function moveUser(user, beingAdded) {\n        if (beingAdded) {\n            button = '<button class=\"btn-team-list btn-team-remove\" data-email=\"' + user + '\">Remove</button>';\n        } else {\n            button = '<button class=\"btn-team-list btn-team-add\" data-email=\"' + user + '\">Add</button>';\n        }\n        var str = '<li>' + user + ' ' + button + '</li>';\n\n        if (beingAdded) {\n            $('.team-list').prepend(str);\n        } else {\n            $('.user-list').prepend(str);\n        }\n    }\n}\n\n\nfunction viewTeams(selectTableRowAndDisplayTeamDetails) {\n\n    getTeams(\n        success = function (data) {\n            populateTeamsTable(data.teams);\n\n            // on creation of new team highlight row in table and display team details\n            if (selectTableRowAndDisplayTeamDetails) {\n                selectTableRowAndDisplayTeamDetails();\n            }\n        },\n        error = function (jqxhr) {\n            handleApiError(jqxhr);\n        }\n    );\n\n    function populateTeamsTable(data) {\n        var teamsHtml = templates.teamList(data);\n        $('.section').html(teamsHtml);\n\n        $('.js-selectable-table tbody tr').click(function () {\n            var teamId = $(this).attr('data-id');\n            viewTeamDetails(teamId, $(this));\n        });\n\n        $('.form-create-team').submit(function (e) {\n            e.preventDefault();\n\n            var teamName = $('#create-team-name').val();\n\n            if (teamName.length < 1) {\n                sweetAlert(\"Please enter a user name.\");\n                return;\n            }\n\n            teamName = teamName.trim();\n            postTeam(teamName);\n        });\n    }\n}\n\n\n/**\n * Display the details of the user with the given email.\n *\n * @param email\n * @param $this = jQuery object of selected table item\n */\nfunction viewUserDetails(email, $this) {\n\n    getUsers(\n        success = function (user) {\n            populateUserDetails(user, email, $this);\n        },\n        error = function (response) {\n            handleApiError(response);\n        },\n        email\n    );\n\n    var isAdmin, isEditor, isVisPublisher;\n    function populateUserDetails(user, email, $this) {\n        getUserPermission(\n            function (permission) {\n                isAdmin = permission.admin;\n                isEditor = permission.editor;\n                isVisPublisher = permission.dataVisPublisher;\n\n                addPermissionToJSON(user);\n\n                var showPanelOptions = {\n                    html: window.templates.userDetails(user)\n                };\n                showPanel($this, showPanelOptions);\n\n                $('.btn-user-change-password').click(function () {\n                    var currentPasswordRequired = false;\n\n                    if (email == Florence.Authentication.loggedInEmail()) {\n                        currentPasswordRequired = true;\n                    }\n\n                    viewChangePassword(email, currentPasswordRequired);\n                });\n\n                $('.btn-user-delete').click(function () {\n                    swal({\n                        title: \"Confirm deletion\",\n                        text: \"Please enter the email address of the user you want to delete\",\n                        type: \"input\",\n                        inputPlaceHolder: \"Email address\",\n                        showCancelButton: true,\n                        closeOnConfirm: false,\n                        confirmButtonText: \"Delete\",\n                        animation: \"slide-from-top\"\n                    }, function (result) {\n                        console.log(result);\n                        if (result) {\n                            if (result === email) {\n                                swal({\n                                    title: \"User deleted\",\n                                    text: \"This user has been deleted\",\n                                    type: \"success\",\n                                    timer: 2000\n                                });\n                                deleteUser(email);\n                            } else {\n                                sweetAlert(\"Oops!\", 'The email you entered did not match the user you want to delete.')\n                            }\n                        }\n                    });\n                });\n\n                $('.btn-user-cancel').click(function () {\n                    hidePanel({});\n                });\n            },\n            function (error) {handleApiError(error);},\n            email\n        );\n\n    }\n\n    /*\n     * Add permissions object to JSON so accessible to handlebars template\n     * @param user - JSON object\n     */\n    function addPermissionToJSON (user) {\n        user['permission'] = permissionStr(isAdmin, isEditor, isVisPublisher);\n    }\n\n\n    /*\n     * Logic to work out user role\n     * @param isAdmin - true/false\n     * @param isEditor - true/false\n     * @return the user's role as string\n     */\n    function permissionStr (isAdmin, isEditor, isVisPublisher) {\n        var permissionStr;\n        if (!isAdmin && !isEditor) {permissionStr = 'viewer';}\n        if (isEditor && !isVisPublisher) {permissionStr = 'publisher';}\n        if (isEditor && isVisPublisher) {permissionStr = 'visualisation publisher';}\n        if (isAdmin) {permissionStr = \"admin\";}\n\n        return permissionStr;\n    }\n}function viewUsers(view) {\n    var loggedUser = localStorage.getItem('loggedInAs');\n    getUsers(\n        success = function (data) {\n            //based on user permission will show the options to create different users\n            getUserPermission(\n                function (permission) {\n                    populateUsersTable(data, permission);\n                },\n                function (error) {\n                    handleApiError(error);\n                },\n                loggedUser\n            );\n        },\n        error = function (jqxhr) {\n            handleApiError(jqxhr);\n        }\n    );\n\n    function populateUsersTable(data, permission) {\n        var orderedUsers = _.sortBy(data, 'name');\n        var dataTemplate = {data: orderedUsers, permission: permission};\n        var usersHtml = templates.userList(dataTemplate);\n        var isAdmin = false;\n        var isDataVisPublisher = false;\n        var isEditor = false;\n        $('.section').html(usersHtml);\n\n\n        $('.js-selectable-table tbody tr').click(function () {\n            var userId = $(this).attr('data-id');\n            viewUserDetails(userId, $(this));\n        });\n\n        $('.radioBtnDiv').change(function () {\n            if ($('input:checked').val() === 'admin') {\n                isAdmin = true;\n                isEditor = true;\n                isDataVisPublisher = false;\n            }\n            else if ($('input:checked').val() === 'publisher') {\n                isAdmin = false;\n                isEditor = true;\n                isDataVisPublisher = false;\n            }\n            else if ($('input:checked').val() === 'dataVisPublisher') {\n                isAdmin = false;\n                isEditor = false;\n                isDataVisPublisher = true;\n            }\n            else {\n                isAdmin = false;\n                isEditor = false;\n                isDataVisPublisher = false;\n            }\n        });\n\n        $('.form-create-user').submit(function (e) {\n            e.preventDefault();\n\n            var username = $('#create-user-username').val();\n            var email = $('#create-user-email').val();\n            var password = $('#create-user-password').val();\n\n            if (username.length < 1) {\n                sweetAlert(\"Please enter a user name.\");\n                return;\n            }\n\n            if (email.length < 1) {\n                sweetAlert(\"Please enter a user name.\");\n                return;\n            }\n\n            if (password.length < 1) {\n                sweetAlert(\"Please enter a password.\");\n                return;\n            }\n            postUser(username, email, password, isAdmin, isEditor, isDataVisPublisher);\n            viewUsers();\n        });\n    }\n}\n\nfunction viewWorkspace(path, collectionId, menu) {\n\n  var currentPath = '';\n  if (path) {\n    currentPath = path;\n  }\n  Florence.globalVars.pagePath = currentPath;\n\n  if (menu === 'browse') {\n    $('.nav__item--workspace').removeClass('selected');\n    $(\"#browse\").addClass('selected');\n    loadBrowseScreen(collectionId, 'click');\n  }\n  else if (menu === 'create') {\n    $('.nav__item--workspace').removeClass('selected');\n    $(\"#create\").addClass('selected');\n    loadCreateScreen(currentPath, collectionId);\n  }\n  else if (menu === 'edit') {\n    $('.nav__item--workspace').removeClass('selected');\n    $(\"#edit\").addClass('selected');\n    loadPageDataIntoEditor(currentPath, collectionId);\n  }\n}\n\n/**\n * Editor screen for uploading visualisations\n * @param collectionId\n * @param data\n */\n\nfunction visualisationEditor(collectionId, data) {\n    var path = data.uri,\n        $fileInput = $('#input-vis'),\n        $fileForm = $('#upload-vis'),\n        i, setActiveTab, getActiveTab;\n\n    // Active tab\n    $(\".edit-accordion\").on('accordionactivate', function () {\n        setActiveTab = $(\".edit-accordion\").accordion(\"option\", \"active\");\n        if (setActiveTab !== false) {\n            Florence.globalVars.activeTab = setActiveTab;\n        }\n    });\n    getActiveTab = Florence.globalVars.activeTab;\n    accordion(getActiveTab);\n    getLastPosition();\n\n    // Update hidden select to display all HTML files in ZIP\n    var selectOptions = [\"<option value=''>-- Select an HTML file to preview --</option>\"],\n        $selectWrapper = $('#select-vis-wrapper');\n\n    for (i = 0; i < data.filenames.length; i++) {\n        selectOptions.push(\"<option value='\" + data.filenames[i] + \"'>\" + data.filenames[i] + \"</option>\")\n    }\n    $selectWrapper.find('select').empty().append(selectOptions.join(''));\n    $selectWrapper.show();\n    $('#browser-location').hide();\n    $('.browser.disabled').removeClass('disabled');\n\n    // Bind to select's change and toggle preview to selected HTML file\n    $('#select-vis-preview').change(function() {\n        refreshVisPreview(\"/\" + $(this).val());\n    });\n\n    // Disable preview when navigating back to browse tab\n    $('#browse').click(function() {\n        $selectWrapper.hide();\n        $('#browser-location').show();\n        $('.browser').addClass('disabled');\n        updateBrowserURL(\"/\");\n        $('#iframe').attr('src', Florence.babbageBaseUrl);\n    });\n\n    // Submit new ZIP file\n    bindZipSubmit();\n\n    // Bind file save to the change event of the file input\n    $fileInput.on('change', function() {\n        data.zipTitle = ($(this).val()).split('\\\\').pop();\n        $fileForm.submit();\n    });\n\n    // Bind save buttons\n    var editNav = $('.edit-nav');\n    editNav.off(); // remove any existing event handlers.\n\n    editNav.on('click', '.btn-edit-save', function () {\n        save();\n    });\n\n    editNav.on('click', '.btn-edit-save-and-submit-for-review', function () {\n        saveAndCompleteContent(collectionId, data.uri, JSON.stringify(data), true);\n    });\n\n    editNav.on('click', '.btn-edit-save-and-submit-for-approval', function () {\n        saveAndReviewContent(collectionId, data.uri, JSON.stringify(data), true);\n    });\n\n\n    /* FUNCTIONS */\n    function bindZipSubmit() {\n        // Upload ZIP file\n        $('#upload-vis').on('submit', function (e) {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n\n            var formdata = new FormData($(this)[0]),\n                file = this[0].files[0];\n\n            if (!$('#input-vis')) {\n                sweetAlert(\"Please choose a file before submitting\");\n                return false;\n            }\n\n            $('.input__file').attr('data-file-title', 'File uploading ...');\n\n            var fileNameNoSpace = file.name.replace(/[^a-zA-Z0-9\\.]/g, \"\").toLowerCase();\n            var uniqueIdNoSpace = data.uid.replace(/[^a-zA-Z0-9\\.]/g, \"\").toLowerCase();\n            var contentUri = \"/visualisations/\" + uniqueIdNoSpace + \"/content\";\n            var uriUpload = contentUri + \"/\" + fileNameNoSpace;\n            var safeUriUpload = checkPathSlashes(uriUpload);\n\n            path = \"/visualisations/\" + uniqueIdNoSpace;\n\n            deleteAndUploadFile(\n                safeUriUpload, contentUri, formdata,\n                success = function () {\n                    unpackZip(safeUriUpload,\n                        success = function () {\n\n                            // On unpack of Zip refresh the reload editor and preview\n                            loadPageDataIntoEditor(path, collectionId);\n                        }\n                    );\n                }\n            )\n\n        });\n    }\n\n    // Refresh preview (don't use global refreshPreview function because we want do other functions at the same time when selecting different HTML files)\n    function refreshVisPreview(url) {\n        document.getElementById('iframe').contentWindow.location.href = Florence.babbageBaseUrl + path + url;\n    }\n\n    function deleteAndUploadFile(path, contentUri, formData, success) {\n        $.ajax({\n            url: \"/zebedee/DataVisualisationZip/\" + Florence.collection.id + \"?zipPath=\" + contentUri,\n            type: 'DELETE',\n            async: false,\n            cache: false,\n            contentType: false,\n            processData: false,\n            success: function (response) {\n                uploadFile(path, formData, success);\n            },\n            error: function (response) {\n                handleApiError(response);\n            }\n        });\n    }\n\n    function uploadFile(path, formData, success) {\n        // Send zip file to zebedee\n        $.ajax({\n            url: \"/zebedee/content/\" + Florence.collection.id + \"?uri=\" + path,\n            type: 'POST',\n            data: formData,\n            async: false,\n            cache: false,\n            contentType: false,\n            processData: false,\n            success: function (response) {\n                success(response);\n            },\n            error: function (response) {\n                handleApiError(response);\n            }\n        });\n    }\n\n    function unpackZip(zipPath, success, error) {\n        // Unpack contents of ZIP\n        console.log(\"Unpack: \" + zipPath);\n        var url = \"/zebedee/DataVisualisationZip/\" + Florence.collection.id + \"?zipPath=\" + zipPath;\n\n        $.ajax({\n            url: url,\n            contentType: 'application/json',\n            type: 'POST',\n            success: function (response) {\n                success(response);\n            },\n            error: function (response) {\n                if (error) {\n                    error(response);\n                } else {\n                    handleApiError(response);\n                }\n            }\n        });\n    }\n\n    function save() {\n        putContent(collectionId, data.uri, JSON.stringify(data),\n            success = function () {\n                Florence.Editor.isDirty = false;\n                // refreshVisPreview();\n                // refreshPreview();\n                loadPageDataIntoEditor(data.uri, collectionId);\n            },\n            error = function (response) {\n                if (response.status === 409) {\n                    sweetAlert(\"Cannot edit this page\", \"It is already part of another collection.\");\n                } else {\n                    handleApiError(response);\n                }\n            },\n            true\n        );\n    }\n}\n/**\n * Registers service worker (in root of Florence)\n */\n\nif (navigator.serviceWorker) {\n    navigator.serviceWorker.register('../florence/service-worker.js').then(function(registration) {\n        console.log('ServiceWorker registration successful with scope:',  registration.scope);\n    }).catch(function(error) {\n        console.log('ServiceWorker registration failed:', error);\n    });\n}\n/**\n *  A simple jQuery accordion\n *  Requires a container ('js-accordion'), a title ('js-accordion__title) and the content ('js-accordion__content')\n **/\n\nfunction bindAccordions() {\n    var $accordions = $('.js-accordion'),\n        $title = $accordions.find('.js-accordion__title');\n\n    // if ($accordions.length === 1) {\n    //     $accordions.find('.js-accordion__content').addClass('accordion__content--borders');\n    // }\n\n    $title.click(function() {\n        var $this = $(this),\n            $activeAccordions = $('.js-accordion .active'),\n            active = false;\n\n        // Remove class that disables animations on load\n        $this.next('.js-accordion__content').removeClass('disable-animation');\n\n        // Detect whether the accordion is active already or not\n        if ($this.hasClass('active')) {\n            active = true;\n        }\n\n        // Deselect any accordions already active\n        $activeAccordions.closest('.js-accordion').removeClass('active');\n        $activeAccordions.removeClass('active');\n\n        // Activate clicked accordion if it wasn't already\n        if (!active) {\n            $this.closest('.js-accordion').addClass('active');\n            $this.addClass('active');\n            $this.next('.js-accordion__content').addClass('active');\n        }\n\n    });\n}\n/**\n * Controls the enhanced file input type, inputs is hidden off of page so javascript performs functions that you'd see happen natively\n */\n\n$(function() {\n    var $body = $('body');\n\n    // Update file name being displayed when a new one is uploaded\n    $body.on('change', '.input__file input', function() {\n        var $this = $(this),\n            fileName = ($this.val()).split('\\\\').pop(); // split file path by backslashes into an array and use last entry\n\n        $this.closest('label').attr('data-file-title', fileName);\n    });\n\n    // Focus state\n    var $fileInput;\n    $body.on('focusin', '.input__file input', function() {\n        $fileInput = $('.input__file');\n        $fileInput.addClass('focus');\n    });\n    $body.on('focusout', '.input__file input', function() {\n        $fileInput.removeClass('focus');\n    })\n});\n/**\n * Hide panel off-screen\n * @param options = options that can be passed to the function to perform\n *\n * @option onHide = function to run at the end of the hide animation\n * @options moveCenteredPanel = if true then remove margin from the centered selectable panel\n */\n\nfunction hidePanel(options) {\n    $('.js-selectable-table tbody tr').removeClass('selected');\n\n    if (options.onHide) {\n        // Run any functions set to run once the off-screen panel is hidden\n        $('.panel--off-canvas').stop().animate({right: \"-50%\"}, 500, function() {\n            options.onHide();\n        });\n    } else {\n        // Default to just hiding off-screen panel\n        $('.panel--off-canvas').stop().animate({right: \"-50%\"}, 500);\n    }\n\n    if (options.moveCenteredPanel) {\n        // Add the default margin back in for the centered panel\n        $('.panel--centred').animate({marginLeft: \"25%\"}, 800);\n    }\n}\n/**\n * Animate off-screen panel to appear on-screen\n *\n * @param $this = the table item that has been selected\n * @param options = object of options for the function to use\n *\n * @options html = contents of the panel/slider\n * @options moveCenteredPanel = if true then remove margin from the centered selectable panel\n */\n\nfunction showPanel($this, options) {\n\n    if ($this) {\n        $('.js-selectable-table tbody tr').removeClass('selected');\n        $this.addClass('selected');\n    }\n\n    if (options.html) {\n        $('.panel--off-canvas').html(options.html).animate({right: \"0%\"}, 500);\n    } else {\n        $('.panel--off-canvas').animate({right: \"0%\"}, 500);\n    }\n\n    if (options.moveCenteredPanel) {\n        // Remove the margin from the centered panel to make room for off-screen panel\n        $('.panel--centred').animate({marginLeft: \"0\"}, 500);\n    }\n}\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(global) {/*global window, global*/\nvar util = __webpack_require__(2)\nvar assert = __webpack_require__(6)\nvar now = __webpack_require__(7)\n\nvar slice = Array.prototype.slice\nvar console\nvar times = {}\n\nif (typeof global !== \"undefined\" && global.console) {\n    console = global.console\n} else if (typeof window !== \"undefined\" && window.console) {\n    console = window.console\n} else {\n    console = {}\n}\n\nvar functions = [\n    [log, \"log\"],\n    [info, \"info\"],\n    [warn, \"warn\"],\n    [error, \"error\"],\n    [time, \"time\"],\n    [timeEnd, \"timeEnd\"],\n    [trace, \"trace\"],\n    [dir, \"dir\"],\n    [consoleAssert, \"assert\"]\n]\n\nfor (var i = 0; i < functions.length; i++) {\n    var tuple = functions[i]\n    var f = tuple[0]\n    var name = tuple[1]\n\n    if (!console[name]) {\n        console[name] = f\n    }\n}\n\nmodule.exports = console\n\nfunction log() {}\n\nfunction info() {\n    console.log.apply(console, arguments)\n}\n\nfunction warn() {\n    console.log.apply(console, arguments)\n}\n\nfunction error() {\n    console.warn.apply(console, arguments)\n}\n\nfunction time(label) {\n    times[label] = now()\n}\n\nfunction timeEnd(label) {\n    var time = times[label]\n    if (!time) {\n        throw new Error(\"No such label: \" + label)\n    }\n\n    var duration = now() - time\n    console.log(label + \": \" + duration + \"ms\")\n}\n\nfunction trace() {\n    var err = new Error()\n    err.name = \"Trace\"\n    err.message = util.format.apply(null, arguments)\n    console.error(err.stack)\n}\n\nfunction dir(object) {\n    console.log(util.inspect(object) + \"\\n\")\n}\n\nfunction consoleAssert(expression) {\n    if (!expression) {\n        var arr = slice.call(arguments, 1)\n        assert.ok(false, util.format.apply(null, arr))\n    }\n}\n\n/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL34vY29uc29sZS1icm93c2VyaWZ5L2luZGV4LmpzPzY1ZGIiXSwic291cmNlc0NvbnRlbnQiOlsiLypnbG9iYWwgd2luZG93LCBnbG9iYWwqL1xudmFyIHV0aWwgPSByZXF1aXJlKFwidXRpbFwiKVxudmFyIGFzc2VydCA9IHJlcXVpcmUoXCJhc3NlcnRcIilcbnZhciBub3cgPSByZXF1aXJlKFwiZGF0ZS1ub3dcIilcblxudmFyIHNsaWNlID0gQXJyYXkucHJvdG90eXBlLnNsaWNlXG52YXIgY29uc29sZVxudmFyIHRpbWVzID0ge31cblxuaWYgKHR5cGVvZiBnbG9iYWwgIT09IFwidW5kZWZpbmVkXCIgJiYgZ2xvYmFsLmNvbnNvbGUpIHtcbiAgICBjb25zb2xlID0gZ2xvYmFsLmNvbnNvbGVcbn0gZWxzZSBpZiAodHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIiAmJiB3aW5kb3cuY29uc29sZSkge1xuICAgIGNvbnNvbGUgPSB3aW5kb3cuY29uc29sZVxufSBlbHNlIHtcbiAgICBjb25zb2xlID0ge31cbn1cblxudmFyIGZ1bmN0aW9ucyA9IFtcbiAgICBbbG9nLCBcImxvZ1wiXSxcbiAgICBbaW5mbywgXCJpbmZvXCJdLFxuICAgIFt3YXJuLCBcIndhcm5cIl0sXG4gICAgW2Vycm9yLCBcImVycm9yXCJdLFxuICAgIFt0aW1lLCBcInRpbWVcIl0sXG4gICAgW3RpbWVFbmQsIFwidGltZUVuZFwiXSxcbiAgICBbdHJhY2UsIFwidHJhY2VcIl0sXG4gICAgW2RpciwgXCJkaXJcIl0sXG4gICAgW2NvbnNvbGVBc3NlcnQsIFwiYXNzZXJ0XCJdXG5dXG5cbmZvciAodmFyIGkgPSAwOyBpIDwgZnVuY3Rpb25zLmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIHR1cGxlID0gZnVuY3Rpb25zW2ldXG4gICAgdmFyIGYgPSB0dXBsZVswXVxuICAgIHZhciBuYW1lID0gdHVwbGVbMV1cblxuICAgIGlmICghY29uc29sZVtuYW1lXSkge1xuICAgICAgICBjb25zb2xlW25hbWVdID0gZlxuICAgIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBjb25zb2xlXG5cbmZ1bmN0aW9uIGxvZygpIHt9XG5cbmZ1bmN0aW9uIGluZm8oKSB7XG4gICAgY29uc29sZS5sb2cuYXBwbHkoY29uc29sZSwgYXJndW1lbnRzKVxufVxuXG5mdW5jdGlvbiB3YXJuKCkge1xuICAgIGNvbnNvbGUubG9nLmFwcGx5KGNvbnNvbGUsIGFyZ3VtZW50cylcbn1cblxuZnVuY3Rpb24gZXJyb3IoKSB7XG4gICAgY29uc29sZS53YXJuLmFwcGx5KGNvbnNvbGUsIGFyZ3VtZW50cylcbn1cblxuZnVuY3Rpb24gdGltZShsYWJlbCkge1xuICAgIHRpbWVzW2xhYmVsXSA9IG5vdygpXG59XG5cbmZ1bmN0aW9uIHRpbWVFbmQobGFiZWwpIHtcbiAgICB2YXIgdGltZSA9IHRpbWVzW2xhYmVsXVxuICAgIGlmICghdGltZSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJObyBzdWNoIGxhYmVsOiBcIiArIGxhYmVsKVxuICAgIH1cblxuICAgIHZhciBkdXJhdGlvbiA9IG5vdygpIC0gdGltZVxuICAgIGNvbnNvbGUubG9nKGxhYmVsICsgXCI6IFwiICsgZHVyYXRpb24gKyBcIm1zXCIpXG59XG5cbmZ1bmN0aW9uIHRyYWNlKCkge1xuICAgIHZhciBlcnIgPSBuZXcgRXJyb3IoKVxuICAgIGVyci5uYW1lID0gXCJUcmFjZVwiXG4gICAgZXJyLm1lc3NhZ2UgPSB1dGlsLmZvcm1hdC5hcHBseShudWxsLCBhcmd1bWVudHMpXG4gICAgY29uc29sZS5lcnJvcihlcnIuc3RhY2spXG59XG5cbmZ1bmN0aW9uIGRpcihvYmplY3QpIHtcbiAgICBjb25zb2xlLmxvZyh1dGlsLmluc3BlY3Qob2JqZWN0KSArIFwiXFxuXCIpXG59XG5cbmZ1bmN0aW9uIGNvbnNvbGVBc3NlcnQoZXhwcmVzc2lvbikge1xuICAgIGlmICghZXhwcmVzc2lvbikge1xuICAgICAgICB2YXIgYXJyID0gc2xpY2UuY2FsbChhcmd1bWVudHMsIDEpXG4gICAgICAgIGFzc2VydC5vayhmYWxzZSwgdXRpbC5mb3JtYXQuYXBwbHkobnVsbCwgYXJyKSlcbiAgICB9XG59XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vY29uc29sZS1icm93c2VyaWZ5L2luZGV4LmpzXG4vLyBtb2R1bGUgaWQgPSAxXG4vLyBtb2R1bGUgY2h1bmtzID0gMSJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ },
/* 2 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(global, process, console) {// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global.process)) {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = __webpack_require__(4);\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = __webpack_require__(5);\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\n/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(3), __webpack_require__(1)))//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ },
/* 3 */
/***/ function(module, exports) {

	eval("// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ },
/* 4 */
/***/ function(module, exports) {

	eval("module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL34vdXRpbC9zdXBwb3J0L2lzQnVmZmVyQnJvd3Nlci5qcz84NTk2Il0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gaXNCdWZmZXIoYXJnKSB7XG4gIHJldHVybiBhcmcgJiYgdHlwZW9mIGFyZyA9PT0gJ29iamVjdCdcbiAgICAmJiB0eXBlb2YgYXJnLmNvcHkgPT09ICdmdW5jdGlvbidcbiAgICAmJiB0eXBlb2YgYXJnLmZpbGwgPT09ICdmdW5jdGlvbidcbiAgICAmJiB0eXBlb2YgYXJnLnJlYWRVSW50OCA9PT0gJ2Z1bmN0aW9uJztcbn1cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vdXRpbC9zdXBwb3J0L2lzQnVmZmVyQnJvd3Nlci5qc1xuLy8gbW9kdWxlIGlkID0gNFxuLy8gbW9kdWxlIGNodW5rcyA9IDEiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ },
/* 5 */
/***/ function(module, exports) {

	eval("if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL34vdXRpbC9+L2luaGVyaXRzL2luaGVyaXRzX2Jyb3dzZXIuanM/YWJhNSJdLCJzb3VyY2VzQ29udGVudCI6WyJpZiAodHlwZW9mIE9iamVjdC5jcmVhdGUgPT09ICdmdW5jdGlvbicpIHtcbiAgLy8gaW1wbGVtZW50YXRpb24gZnJvbSBzdGFuZGFyZCBub2RlLmpzICd1dGlsJyBtb2R1bGVcbiAgbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBpbmhlcml0cyhjdG9yLCBzdXBlckN0b3IpIHtcbiAgICBjdG9yLnN1cGVyXyA9IHN1cGVyQ3RvclxuICAgIGN0b3IucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckN0b3IucHJvdG90eXBlLCB7XG4gICAgICBjb25zdHJ1Y3Rvcjoge1xuICAgICAgICB2YWx1ZTogY3RvcixcbiAgICAgICAgZW51bWVyYWJsZTogZmFsc2UsXG4gICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICAgIH1cbiAgICB9KTtcbiAgfTtcbn0gZWxzZSB7XG4gIC8vIG9sZCBzY2hvb2wgc2hpbSBmb3Igb2xkIGJyb3dzZXJzXG4gIG1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gaW5oZXJpdHMoY3Rvciwgc3VwZXJDdG9yKSB7XG4gICAgY3Rvci5zdXBlcl8gPSBzdXBlckN0b3JcbiAgICB2YXIgVGVtcEN0b3IgPSBmdW5jdGlvbiAoKSB7fVxuICAgIFRlbXBDdG9yLnByb3RvdHlwZSA9IHN1cGVyQ3Rvci5wcm90b3R5cGVcbiAgICBjdG9yLnByb3RvdHlwZSA9IG5ldyBUZW1wQ3RvcigpXG4gICAgY3Rvci5wcm90b3R5cGUuY29uc3RydWN0b3IgPSBjdG9yXG4gIH1cbn1cblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi91dGlsL34vaW5oZXJpdHMvaW5oZXJpdHNfYnJvd3Nlci5qc1xuLy8gbW9kdWxlIGlkID0gNVxuLy8gbW9kdWxlIGNodW5rcyA9IDEiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ },
/* 6 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(global) {'use strict';\n\n// compare and isBuffer taken from https://github.com/feross/buffer/blob/680e9e5e488f22aac27599a57dc844a6315928dd/index.js\n// original notice:\n\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\nfunction compare(a, b) {\n  if (a === b) {\n    return 0;\n  }\n\n  var x = a.length;\n  var y = b.length;\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break;\n    }\n  }\n\n  if (x < y) {\n    return -1;\n  }\n  if (y < x) {\n    return 1;\n  }\n  return 0;\n}\nfunction isBuffer(b) {\n  if (global.Buffer && typeof global.Buffer.isBuffer === 'function') {\n    return global.Buffer.isBuffer(b);\n  }\n  return !!(b != null && b._isBuffer);\n}\n\n// based on node assert, original notice:\n\n// http://wiki.commonjs.org/wiki/Unit_Testing/1.0\n//\n// THIS IS NOT TESTED NOR LIKELY TO WORK OUTSIDE V8!\n//\n// Originally from narwhal.js (http://narwhaljs.org)\n// Copyright (c) 2009 Thomas Robinson <280north.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the 'Software'), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar util = __webpack_require__(2);\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar pSlice = Array.prototype.slice;\nvar functionsHaveNames = (function () {\n  return function foo() {}.name === 'foo';\n}());\nfunction pToString (obj) {\n  return Object.prototype.toString.call(obj);\n}\nfunction isView(arrbuf) {\n  if (isBuffer(arrbuf)) {\n    return false;\n  }\n  if (typeof global.ArrayBuffer !== 'function') {\n    return false;\n  }\n  if (typeof ArrayBuffer.isView === 'function') {\n    return ArrayBuffer.isView(arrbuf);\n  }\n  if (!arrbuf) {\n    return false;\n  }\n  if (arrbuf instanceof DataView) {\n    return true;\n  }\n  if (arrbuf.buffer && arrbuf.buffer instanceof ArrayBuffer) {\n    return true;\n  }\n  return false;\n}\n// 1. The assert module provides functions that throw\n// AssertionError's when particular conditions are not met. The\n// assert module must conform to the following interface.\n\nvar assert = module.exports = ok;\n\n// 2. The AssertionError is defined in assert.\n// new assert.AssertionError({ message: message,\n//                             actual: actual,\n//                             expected: expected })\n\nvar regex = /\\s*function\\s+([^\\(\\s]*)\\s*/;\n// based on https://github.com/ljharb/function.prototype.name/blob/adeeeec8bfcc6068b187d7d9fb3d5bb1d3a30899/implementation.js\nfunction getName(func) {\n  if (!util.isFunction(func)) {\n    return;\n  }\n  if (functionsHaveNames) {\n    return func.name;\n  }\n  var str = func.toString();\n  var match = str.match(regex);\n  return match && match[1];\n}\nassert.AssertionError = function AssertionError(options) {\n  this.name = 'AssertionError';\n  this.actual = options.actual;\n  this.expected = options.expected;\n  this.operator = options.operator;\n  if (options.message) {\n    this.message = options.message;\n    this.generatedMessage = false;\n  } else {\n    this.message = getMessage(this);\n    this.generatedMessage = true;\n  }\n  var stackStartFunction = options.stackStartFunction || fail;\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, stackStartFunction);\n  } else {\n    // non v8 browsers so we can have a stacktrace\n    var err = new Error();\n    if (err.stack) {\n      var out = err.stack;\n\n      // try to strip useless frames\n      var fn_name = getName(stackStartFunction);\n      var idx = out.indexOf('\\n' + fn_name);\n      if (idx >= 0) {\n        // once we have located the function frame\n        // we need to strip out everything before it (and its line)\n        var next_line = out.indexOf('\\n', idx + 1);\n        out = out.substring(next_line + 1);\n      }\n\n      this.stack = out;\n    }\n  }\n};\n\n// assert.AssertionError instanceof Error\nutil.inherits(assert.AssertionError, Error);\n\nfunction truncate(s, n) {\n  if (typeof s === 'string') {\n    return s.length < n ? s : s.slice(0, n);\n  } else {\n    return s;\n  }\n}\nfunction inspect(something) {\n  if (functionsHaveNames || !util.isFunction(something)) {\n    return util.inspect(something);\n  }\n  var rawname = getName(something);\n  var name = rawname ? ': ' + rawname : '';\n  return '[Function' +  name + ']';\n}\nfunction getMessage(self) {\n  return truncate(inspect(self.actual), 128) + ' ' +\n         self.operator + ' ' +\n         truncate(inspect(self.expected), 128);\n}\n\n// At present only the three keys mentioned above are used and\n// understood by the spec. Implementations or sub modules can pass\n// other keys to the AssertionError's constructor - they will be\n// ignored.\n\n// 3. All of the following functions must throw an AssertionError\n// when a corresponding condition is not met, with a message that\n// may be undefined if not provided.  All assertion methods provide\n// both the actual and expected values to the assertion error for\n// display purposes.\n\nfunction fail(actual, expected, message, operator, stackStartFunction) {\n  throw new assert.AssertionError({\n    message: message,\n    actual: actual,\n    expected: expected,\n    operator: operator,\n    stackStartFunction: stackStartFunction\n  });\n}\n\n// EXTENSION! allows for well behaved errors defined elsewhere.\nassert.fail = fail;\n\n// 4. Pure assertion tests whether a value is truthy, as determined\n// by !!guard.\n// assert.ok(guard, message_opt);\n// This statement is equivalent to assert.equal(true, !!guard,\n// message_opt);. To test strictly for the value true, use\n// assert.strictEqual(true, guard, message_opt);.\n\nfunction ok(value, message) {\n  if (!value) fail(value, true, message, '==', assert.ok);\n}\nassert.ok = ok;\n\n// 5. The equality assertion tests shallow, coercive equality with\n// ==.\n// assert.equal(actual, expected, message_opt);\n\nassert.equal = function equal(actual, expected, message) {\n  if (actual != expected) fail(actual, expected, message, '==', assert.equal);\n};\n\n// 6. The non-equality assertion tests for whether two objects are not equal\n// with != assert.notEqual(actual, expected, message_opt);\n\nassert.notEqual = function notEqual(actual, expected, message) {\n  if (actual == expected) {\n    fail(actual, expected, message, '!=', assert.notEqual);\n  }\n};\n\n// 7. The equivalence assertion tests a deep equality relation.\n// assert.deepEqual(actual, expected, message_opt);\n\nassert.deepEqual = function deepEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'deepEqual', assert.deepEqual);\n  }\n};\n\nassert.deepStrictEqual = function deepStrictEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'deepStrictEqual', assert.deepStrictEqual);\n  }\n};\n\nfunction _deepEqual(actual, expected, strict, memos) {\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n  } else if (isBuffer(actual) && isBuffer(expected)) {\n    return compare(actual, expected) === 0;\n\n  // 7.2. If the expected value is a Date object, the actual value is\n  // equivalent if it is also a Date object that refers to the same time.\n  } else if (util.isDate(actual) && util.isDate(expected)) {\n    return actual.getTime() === expected.getTime();\n\n  // 7.3 If the expected value is a RegExp object, the actual value is\n  // equivalent if it is also a RegExp object with the same source and\n  // properties (`global`, `multiline`, `lastIndex`, `ignoreCase`).\n  } else if (util.isRegExp(actual) && util.isRegExp(expected)) {\n    return actual.source === expected.source &&\n           actual.global === expected.global &&\n           actual.multiline === expected.multiline &&\n           actual.lastIndex === expected.lastIndex &&\n           actual.ignoreCase === expected.ignoreCase;\n\n  // 7.4. Other pairs that do not both pass typeof value == 'object',\n  // equivalence is determined by ==.\n  } else if ((actual === null || typeof actual !== 'object') &&\n             (expected === null || typeof expected !== 'object')) {\n    return strict ? actual === expected : actual == expected;\n\n  // If both values are instances of typed arrays, wrap their underlying\n  // ArrayBuffers in a Buffer each to increase performance\n  // This optimization requires the arrays to have the same type as checked by\n  // Object.prototype.toString (aka pToString). Never perform binary\n  // comparisons for Float*Arrays, though, since e.g. +0 === -0 but their\n  // bit patterns are not identical.\n  } else if (isView(actual) && isView(expected) &&\n             pToString(actual) === pToString(expected) &&\n             !(actual instanceof Float32Array ||\n               actual instanceof Float64Array)) {\n    return compare(new Uint8Array(actual.buffer),\n                   new Uint8Array(expected.buffer)) === 0;\n\n  // 7.5 For all other Object pairs, including Array objects, equivalence is\n  // determined by having the same number of owned properties (as verified\n  // with Object.prototype.hasOwnProperty.call), the same set of keys\n  // (although not necessarily the same order), equivalent values for every\n  // corresponding key, and an identical 'prototype' property. Note: this\n  // accounts for both named and indexed properties on Arrays.\n  } else if (isBuffer(actual) !== isBuffer(expected)) {\n    return false;\n  } else {\n    memos = memos || {actual: [], expected: []};\n\n    var actualIndex = memos.actual.indexOf(actual);\n    if (actualIndex !== -1) {\n      if (actualIndex === memos.expected.indexOf(expected)) {\n        return true;\n      }\n    }\n\n    memos.actual.push(actual);\n    memos.expected.push(expected);\n\n    return objEquiv(actual, expected, strict, memos);\n  }\n}\n\nfunction isArguments(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n}\n\nfunction objEquiv(a, b, strict, actualVisitedObjects) {\n  if (a === null || a === undefined || b === null || b === undefined)\n    return false;\n  // if one is a primitive, the other must be same\n  if (util.isPrimitive(a) || util.isPrimitive(b))\n    return a === b;\n  if (strict && Object.getPrototypeOf(a) !== Object.getPrototypeOf(b))\n    return false;\n  var aIsArgs = isArguments(a);\n  var bIsArgs = isArguments(b);\n  if ((aIsArgs && !bIsArgs) || (!aIsArgs && bIsArgs))\n    return false;\n  if (aIsArgs) {\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return _deepEqual(a, b, strict);\n  }\n  var ka = objectKeys(a);\n  var kb = objectKeys(b);\n  var key, i;\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length !== kb.length)\n    return false;\n  //the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  //~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] !== kb[i])\n      return false;\n  }\n  //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!_deepEqual(a[key], b[key], strict, actualVisitedObjects))\n      return false;\n  }\n  return true;\n}\n\n// 8. The non-equivalence assertion tests for any deep inequality.\n// assert.notDeepEqual(actual, expected, message_opt);\n\nassert.notDeepEqual = function notDeepEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'notDeepEqual', assert.notDeepEqual);\n  }\n};\n\nassert.notDeepStrictEqual = notDeepStrictEqual;\nfunction notDeepStrictEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'notDeepStrictEqual', notDeepStrictEqual);\n  }\n}\n\n\n// 9. The strict equality assertion tests strict equality, as determined by ===.\n// assert.strictEqual(actual, expected, message_opt);\n\nassert.strictEqual = function strictEqual(actual, expected, message) {\n  if (actual !== expected) {\n    fail(actual, expected, message, '===', assert.strictEqual);\n  }\n};\n\n// 10. The strict non-equality assertion tests for strict inequality, as\n// determined by !==.  assert.notStrictEqual(actual, expected, message_opt);\n\nassert.notStrictEqual = function notStrictEqual(actual, expected, message) {\n  if (actual === expected) {\n    fail(actual, expected, message, '!==', assert.notStrictEqual);\n  }\n};\n\nfunction expectedException(actual, expected) {\n  if (!actual || !expected) {\n    return false;\n  }\n\n  if (Object.prototype.toString.call(expected) == '[object RegExp]') {\n    return expected.test(actual);\n  }\n\n  try {\n    if (actual instanceof expected) {\n      return true;\n    }\n  } catch (e) {\n    // Ignore.  The instanceof check doesn't work for arrow functions.\n  }\n\n  if (Error.isPrototypeOf(expected)) {\n    return false;\n  }\n\n  return expected.call({}, actual) === true;\n}\n\nfunction _tryBlock(block) {\n  var error;\n  try {\n    block();\n  } catch (e) {\n    error = e;\n  }\n  return error;\n}\n\nfunction _throws(shouldThrow, block, expected, message) {\n  var actual;\n\n  if (typeof block !== 'function') {\n    throw new TypeError('\"block\" argument must be a function');\n  }\n\n  if (typeof expected === 'string') {\n    message = expected;\n    expected = null;\n  }\n\n  actual = _tryBlock(block);\n\n  message = (expected && expected.name ? ' (' + expected.name + ').' : '.') +\n            (message ? ' ' + message : '.');\n\n  if (shouldThrow && !actual) {\n    fail(actual, expected, 'Missing expected exception' + message);\n  }\n\n  var userProvidedMessage = typeof message === 'string';\n  var isUnwantedException = !shouldThrow && util.isError(actual);\n  var isUnexpectedException = !shouldThrow && actual && !expected;\n\n  if ((isUnwantedException &&\n      userProvidedMessage &&\n      expectedException(actual, expected)) ||\n      isUnexpectedException) {\n    fail(actual, expected, 'Got unwanted exception' + message);\n  }\n\n  if ((shouldThrow && actual && expected &&\n      !expectedException(actual, expected)) || (!shouldThrow && actual)) {\n    throw actual;\n  }\n}\n\n// 11. Expected to throw an error:\n// assert.throws(block, Error_opt, message_opt);\n\nassert.throws = function(block, /*optional*/error, /*optional*/message) {\n  _throws(true, block, error, message);\n};\n\n// EXTENSION! This is annoying to write outside this module.\nassert.doesNotThrow = function(block, /*optional*/error, /*optional*/message) {\n  _throws(false, block, error, message);\n};\n\nassert.ifError = function(err) { if (err) throw err; };\n\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    if (hasOwn.call(obj, key)) keys.push(key);\n  }\n  return keys;\n};\n\n/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ },
/* 7 */
/***/ function(module, exports) {

	eval("module.exports = now\n\nfunction now() {\n    return new Date().getTime()\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL34vZGF0ZS1ub3cvaW5kZXguanM/ZDJiNiJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IG5vd1xuXG5mdW5jdGlvbiBub3coKSB7XG4gICAgcmV0dXJuIG5ldyBEYXRlKCkuZ2V0VGltZSgpXG59XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vZGF0ZS1ub3cvaW5kZXguanNcbi8vIG1vZHVsZSBpZCA9IDdcbi8vIG1vZHVsZSBjaHVua3MgPSAxIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ },
/* 8 */
/***/ function(module, exports, __webpack_require__) {

	eval("\"use strict\";\n\nvar store = __webpack_require__(9);\n\nvar baseUrlState = {\n\n    get: function get() {\n        return store.getState().baseUrl;\n    },\n\n    set: function set(baseUrl) {\n        store.dispatch({\n            type: \"UPDATE_BASE_URL\",\n            baseUrl: baseUrl\n        });\n    }\n\n};\n\nmodule.exports = baseUrlState;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9hcHAvc2hhcmVkL3N0YXRlL2Jhc2VVcmxTdGF0ZS5qcz82ZDg3Il0sInNvdXJjZXNDb250ZW50IjpbIlxudmFyIHN0b3JlID0gcmVxdWlyZSgnc2hhcmVkL3N0YXRlL3N0YXRlJyk7XG5cbnZhciBiYXNlVXJsU3RhdGUgPSB7XG5cbiAgICBnZXQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gc3RvcmUuZ2V0U3RhdGUoKS5iYXNlVXJsO1xuICAgIH0sXG5cbiAgICBzZXQ6IGZ1bmN0aW9uKGJhc2VVcmwpIHtcbiAgICAgICAgc3RvcmUuZGlzcGF0Y2goe1xuICAgICAgICAgICAgdHlwZTogXCJVUERBVEVfQkFTRV9VUkxcIixcbiAgICAgICAgICAgIGJhc2VVcmw6IGJhc2VVcmxcbiAgICAgICAgfSk7XG4gICAgfVxuXG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IGJhc2VVcmxTdGF0ZTtcblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gYXBwL3NoYXJlZC9zdGF0ZS9iYXNlVXJsU3RhdGUuanMiXSwibWFwcGluZ3MiOiI7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRkE7QUFJQTtBQUNBO0FBWkE7QUFDQTtBQWNBIiwic291cmNlUm9vdCI6IiJ9");

/***/ },
/* 9 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(console) {\"use strict\";\n\nvar Redux = __webpack_require__(10);\n\n/* Reducer */\nfunction florence() {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n    var action = arguments[1];\n\n    // Parse to string, clone and parse back to object to keep original state immutable\n    var newState = JSON.parse(JSON.stringify(state));\n\n    // Reducer switch function, updates the state as necessary\n    switch (action.type) {\n        case \"UPDATE_BASE_URL\":\n            {\n                newState.baseUrl = action.baseUrl;\n                break;\n            }\n        case \"UPDATE_BROWSE_TREE_DATA\":\n            {\n                newState.workspace.browseTreeData = action.browseTreeData;\n                break;\n            }\n        case \"RESET_WORKSPACE\":\n            {\n                newState.workspace = initialState.workspace;\n                break;\n            }\n        case \"UPDATE_ACTIVE_WORKSPACE_SCREEN\":\n            {\n                newState.workspace.activeScreen = action.activeScreen;\n                break;\n            }\n        case \"UPDATE_WORKSPACE_ACTIVE_URL\":\n            {\n                newState.workspace.activeUrl = action.activeUrl;\n                break;\n            }\n        case \"UPDATE_WORKSPACE_PREVIEW_URL\":\n            {\n                newState.workspace.activeUrl = action.previewUrl;\n                break;\n            }\n        case \"UPDATE_COLLECTION_DATA\":\n            {\n                newState.workspace.collectionData = action.collectionData;\n                break;\n            }\n        case \"UPDATE_USER_EMAIL\":\n            {\n                newState.user.email = action.userEmail;\n                break;\n            }\n        case \"UPDATE_USER_TYPE\":\n            {\n                newState.user.type = action.userType;\n                break;\n            }\n        case \"UPDATE_IS_DIRTY\":\n            {\n                newState.workspace.isDirty = action.isDirty;\n                break;\n            }\n        case \"UPDATE_EDITOR_DATA\":\n            {\n                newState.workspace.editorData = action.editorData;\n                break;\n            }\n        default:\n            {\n                console.log(\"State action '%s' not recognised\", action.type);\n            }\n    }\n\n    return newState;\n}\n\n/* Create store */\nvar createStore = Redux.createStore;\nvar initialState = {\n    baseUrl: \"\",\n    user: {\n        email: \"\",\n        hasSession: false,\n        sessonExpiryDate: \"\",\n        type: \"\"\n    },\n    activeView: {\n        name: \"editor\"\n    },\n    workspace: {\n        collectionData: {},\n        browseTreeData: {},\n        activeScreen: \"\",\n        activeUrl: \"\",\n        previewUrl: \"\",\n        language: \"english\",\n        isDirty: false,\n        editorData: {}\n    }\n};\nvar store = createStore(florence, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nmodule.exports = store;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9hcHAvc2hhcmVkL3N0YXRlL3N0YXRlLmpzPzQ4ZDEiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgUmVkdXggPSByZXF1aXJlKCdyZWR1eCcpO1xuXG4vKiBSZWR1Y2VyICovXG5mdW5jdGlvbiBmbG9yZW5jZShzdGF0ZSA9IGluaXRpYWxTdGF0ZSwgYWN0aW9uKSB7XG4gICAgLy8gUGFyc2UgdG8gc3RyaW5nLCBjbG9uZSBhbmQgcGFyc2UgYmFjayB0byBvYmplY3QgdG8ga2VlcCBvcmlnaW5hbCBzdGF0ZSBpbW11dGFibGVcbiAgICBsZXQgbmV3U3RhdGUgPSBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KHN0YXRlKSk7XG5cbiAgICAvLyBSZWR1Y2VyIHN3aXRjaCBmdW5jdGlvbiwgdXBkYXRlcyB0aGUgc3RhdGUgYXMgbmVjZXNzYXJ5XG4gICAgc3dpdGNoIChhY3Rpb24udHlwZSkge1xuICAgICAgICBjYXNlIChcIlVQREFURV9CQVNFX1VSTFwiKToge1xuICAgICAgICAgICAgbmV3U3RhdGUuYmFzZVVybCA9IGFjdGlvbi5iYXNlVXJsO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgICAgY2FzZSAoXCJVUERBVEVfQlJPV1NFX1RSRUVfREFUQVwiKToge1xuICAgICAgICAgICAgbmV3U3RhdGUud29ya3NwYWNlLmJyb3dzZVRyZWVEYXRhID0gYWN0aW9uLmJyb3dzZVRyZWVEYXRhO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgICAgY2FzZSAoXCJSRVNFVF9XT1JLU1BBQ0VcIik6IHtcbiAgICAgICAgICAgIG5ld1N0YXRlLndvcmtzcGFjZSA9IGluaXRpYWxTdGF0ZS53b3Jrc3BhY2U7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgICBjYXNlIChcIlVQREFURV9BQ1RJVkVfV09SS1NQQUNFX1NDUkVFTlwiKToge1xuICAgICAgICAgICAgbmV3U3RhdGUud29ya3NwYWNlLmFjdGl2ZVNjcmVlbiA9IGFjdGlvbi5hY3RpdmVTY3JlZW47XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgICBjYXNlIChcIlVQREFURV9XT1JLU1BBQ0VfQUNUSVZFX1VSTFwiKToge1xuICAgICAgICAgICAgbmV3U3RhdGUud29ya3NwYWNlLmFjdGl2ZVVybCA9IGFjdGlvbi5hY3RpdmVVcmw7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgICBjYXNlIChcIlVQREFURV9XT1JLU1BBQ0VfUFJFVklFV19VUkxcIik6IHtcbiAgICAgICAgICAgIG5ld1N0YXRlLndvcmtzcGFjZS5hY3RpdmVVcmwgPSBhY3Rpb24ucHJldmlld1VybDtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICAgIGNhc2UgKFwiVVBEQVRFX0NPTExFQ1RJT05fREFUQVwiKToge1xuICAgICAgICAgICAgbmV3U3RhdGUud29ya3NwYWNlLmNvbGxlY3Rpb25EYXRhID0gYWN0aW9uLmNvbGxlY3Rpb25EYXRhO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgICAgY2FzZSAoXCJVUERBVEVfVVNFUl9FTUFJTFwiKToge1xuICAgICAgICAgICAgbmV3U3RhdGUudXNlci5lbWFpbCA9IGFjdGlvbi51c2VyRW1haWw7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgICBjYXNlIChcIlVQREFURV9VU0VSX1RZUEVcIik6IHtcbiAgICAgICAgICAgIG5ld1N0YXRlLnVzZXIudHlwZSA9IGFjdGlvbi51c2VyVHlwZTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICAgIGNhc2UgKFwiVVBEQVRFX0lTX0RJUlRZXCIpOiB7XG4gICAgICAgICAgICBuZXdTdGF0ZS53b3Jrc3BhY2UuaXNEaXJ0eSA9IGFjdGlvbi5pc0RpcnR5O1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgICAgY2FzZSAoXCJVUERBVEVfRURJVE9SX0RBVEFcIik6IHtcbiAgICAgICAgICAgIG5ld1N0YXRlLndvcmtzcGFjZS5lZGl0b3JEYXRhID0gYWN0aW9uLmVkaXRvckRhdGE7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgICBkZWZhdWx0OiB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcIlN0YXRlIGFjdGlvbiAnJXMnIG5vdCByZWNvZ25pc2VkXCIsIGFjdGlvbi50eXBlKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBuZXdTdGF0ZVxufVxuXG4vKiBDcmVhdGUgc3RvcmUgKi9cbmNvbnN0IGNyZWF0ZVN0b3JlID0gUmVkdXguY3JlYXRlU3RvcmU7XG5jb25zdCBpbml0aWFsU3RhdGUgPSB7XG4gICAgICAgIGJhc2VVcmw6IFwiXCIsXG4gICAgICAgIHVzZXI6IHtcbiAgICAgICAgICAgIGVtYWlsOiBcIlwiLFxuICAgICAgICAgICAgaGFzU2Vzc2lvbjogZmFsc2UsXG4gICAgICAgICAgICBzZXNzb25FeHBpcnlEYXRlOiBcIlwiLFxuICAgICAgICAgICAgdHlwZTogXCJcIlxuICAgICAgICB9LFxuICAgICAgICBhY3RpdmVWaWV3OiB7XG4gICAgICAgICAgICBuYW1lOiBcImVkaXRvclwiXG4gICAgICAgIH0sXG4gICAgICAgIHdvcmtzcGFjZToge1xuICAgICAgICAgICAgY29sbGVjdGlvbkRhdGE6IHt9LFxuICAgICAgICAgICAgYnJvd3NlVHJlZURhdGE6IHt9LFxuICAgICAgICAgICAgYWN0aXZlU2NyZWVuOiBcIlwiLFxuICAgICAgICAgICAgYWN0aXZlVXJsOiBcIlwiLFxuICAgICAgICAgICAgcHJldmlld1VybDogXCJcIixcbiAgICAgICAgICAgIGxhbmd1YWdlOiBcImVuZ2xpc2hcIixcbiAgICAgICAgICAgIGlzRGlydHk6IGZhbHNlLFxuICAgICAgICAgICAgZWRpdG9yRGF0YToge31cbiAgICAgICAgfVxuICAgIH07XG5jb25zdCBzdG9yZSA9IGNyZWF0ZVN0b3JlKGZsb3JlbmNlLCB3aW5kb3cuX19SRURVWF9ERVZUT09MU19FWFRFTlNJT05fXyAmJiB3aW5kb3cuX19SRURVWF9ERVZUT09MU19FWFRFTlNJT05fXygpKTtcblxubW9kdWxlLmV4cG9ydHMgPSBzdG9yZTtcblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gYXBwL3NoYXJlZC9zdGF0ZS9zdGF0ZS5qcyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBL0NBO0FBQ0E7QUFpREE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSkE7QUFNQTtBQUNBO0FBREE7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFSQTtBQVhBO0FBc0JBO0FBQ0E7OyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ },
/* 10 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(process) {'use strict';\n\nexports.__esModule = true;\nexports.compose = exports.applyMiddleware = exports.bindActionCreators = exports.combineReducers = exports.createStore = undefined;\n\nvar _createStore = __webpack_require__(11);\n\nvar _createStore2 = _interopRequireDefault(_createStore);\n\nvar _combineReducers = __webpack_require__(19);\n\nvar _combineReducers2 = _interopRequireDefault(_combineReducers);\n\nvar _bindActionCreators = __webpack_require__(21);\n\nvar _bindActionCreators2 = _interopRequireDefault(_bindActionCreators);\n\nvar _applyMiddleware = __webpack_require__(22);\n\nvar _applyMiddleware2 = _interopRequireDefault(_applyMiddleware);\n\nvar _compose = __webpack_require__(23);\n\nvar _compose2 = _interopRequireDefault(_compose);\n\nvar _warning = __webpack_require__(20);\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\n/*\n* This is a dummy function to check if the function name has been altered by minification.\n* If the function has been minified and NODE_ENV !== 'production', warn the user.\n*/\nfunction isCrushed() {}\n\nif (process.env.NODE_ENV !== 'production' && typeof isCrushed.name === 'string' && isCrushed.name !== 'isCrushed') {\n  (0, _warning2['default'])('You are currently using minified code outside of NODE_ENV === \\'production\\'. ' + 'This means that you are running a slower development build of Redux. ' + 'You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify ' + 'or DefinePlugin for webpack (http://stackoverflow.com/questions/30030031) ' + 'to ensure you have the correct code for your production build.');\n}\n\nexports.createStore = _createStore2['default'];\nexports.combineReducers = _combineReducers2['default'];\nexports.bindActionCreators = _bindActionCreators2['default'];\nexports.applyMiddleware = _applyMiddleware2['default'];\nexports.compose = _compose2['default'];\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTAuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3JlZHV4L2xpYi9pbmRleC5qcz81ZjE5Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcbmV4cG9ydHMuY29tcG9zZSA9IGV4cG9ydHMuYXBwbHlNaWRkbGV3YXJlID0gZXhwb3J0cy5iaW5kQWN0aW9uQ3JlYXRvcnMgPSBleHBvcnRzLmNvbWJpbmVSZWR1Y2VycyA9IGV4cG9ydHMuY3JlYXRlU3RvcmUgPSB1bmRlZmluZWQ7XG5cbnZhciBfY3JlYXRlU3RvcmUgPSByZXF1aXJlKCcuL2NyZWF0ZVN0b3JlJyk7XG5cbnZhciBfY3JlYXRlU3RvcmUyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfY3JlYXRlU3RvcmUpO1xuXG52YXIgX2NvbWJpbmVSZWR1Y2VycyA9IHJlcXVpcmUoJy4vY29tYmluZVJlZHVjZXJzJyk7XG5cbnZhciBfY29tYmluZVJlZHVjZXJzMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2NvbWJpbmVSZWR1Y2Vycyk7XG5cbnZhciBfYmluZEFjdGlvbkNyZWF0b3JzID0gcmVxdWlyZSgnLi9iaW5kQWN0aW9uQ3JlYXRvcnMnKTtcblxudmFyIF9iaW5kQWN0aW9uQ3JlYXRvcnMyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfYmluZEFjdGlvbkNyZWF0b3JzKTtcblxudmFyIF9hcHBseU1pZGRsZXdhcmUgPSByZXF1aXJlKCcuL2FwcGx5TWlkZGxld2FyZScpO1xuXG52YXIgX2FwcGx5TWlkZGxld2FyZTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9hcHBseU1pZGRsZXdhcmUpO1xuXG52YXIgX2NvbXBvc2UgPSByZXF1aXJlKCcuL2NvbXBvc2UnKTtcblxudmFyIF9jb21wb3NlMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2NvbXBvc2UpO1xuXG52YXIgX3dhcm5pbmcgPSByZXF1aXJlKCcuL3V0aWxzL3dhcm5pbmcnKTtcblxudmFyIF93YXJuaW5nMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3dhcm5pbmcpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyAnZGVmYXVsdCc6IG9iaiB9OyB9XG5cbi8qXG4qIFRoaXMgaXMgYSBkdW1teSBmdW5jdGlvbiB0byBjaGVjayBpZiB0aGUgZnVuY3Rpb24gbmFtZSBoYXMgYmVlbiBhbHRlcmVkIGJ5IG1pbmlmaWNhdGlvbi5cbiogSWYgdGhlIGZ1bmN0aW9uIGhhcyBiZWVuIG1pbmlmaWVkIGFuZCBOT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nLCB3YXJuIHRoZSB1c2VyLlxuKi9cbmZ1bmN0aW9uIGlzQ3J1c2hlZCgpIHt9XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmIHR5cGVvZiBpc0NydXNoZWQubmFtZSA9PT0gJ3N0cmluZycgJiYgaXNDcnVzaGVkLm5hbWUgIT09ICdpc0NydXNoZWQnKSB7XG4gICgwLCBfd2FybmluZzJbJ2RlZmF1bHQnXSkoJ1lvdSBhcmUgY3VycmVudGx5IHVzaW5nIG1pbmlmaWVkIGNvZGUgb3V0c2lkZSBvZiBOT0RFX0VOViA9PT0gXFwncHJvZHVjdGlvblxcJy4gJyArICdUaGlzIG1lYW5zIHRoYXQgeW91IGFyZSBydW5uaW5nIGEgc2xvd2VyIGRldmVsb3BtZW50IGJ1aWxkIG9mIFJlZHV4LiAnICsgJ1lvdSBjYW4gdXNlIGxvb3NlLWVudmlmeSAoaHR0cHM6Ly9naXRodWIuY29tL3plcnRvc2gvbG9vc2UtZW52aWZ5KSBmb3IgYnJvd3NlcmlmeSAnICsgJ29yIERlZmluZVBsdWdpbiBmb3Igd2VicGFjayAoaHR0cDovL3N0YWNrb3ZlcmZsb3cuY29tL3F1ZXN0aW9ucy8zMDAzMDAzMSkgJyArICd0byBlbnN1cmUgeW91IGhhdmUgdGhlIGNvcnJlY3QgY29kZSBmb3IgeW91ciBwcm9kdWN0aW9uIGJ1aWxkLicpO1xufVxuXG5leHBvcnRzLmNyZWF0ZVN0b3JlID0gX2NyZWF0ZVN0b3JlMlsnZGVmYXVsdCddO1xuZXhwb3J0cy5jb21iaW5lUmVkdWNlcnMgPSBfY29tYmluZVJlZHVjZXJzMlsnZGVmYXVsdCddO1xuZXhwb3J0cy5iaW5kQWN0aW9uQ3JlYXRvcnMgPSBfYmluZEFjdGlvbkNyZWF0b3JzMlsnZGVmYXVsdCddO1xuZXhwb3J0cy5hcHBseU1pZGRsZXdhcmUgPSBfYXBwbHlNaWRkbGV3YXJlMlsnZGVmYXVsdCddO1xuZXhwb3J0cy5jb21wb3NlID0gX2NvbXBvc2UyWydkZWZhdWx0J107XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L3JlZHV4L2xpYi9pbmRleC5qc1xuLy8gbW9kdWxlIGlkID0gMTBcbi8vIG1vZHVsZSBjaHVua3MgPSAxIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9");

/***/ },
/* 11 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nexports.__esModule = true;\nexports.ActionTypes = undefined;\nexports['default'] = createStore;\n\nvar _isPlainObject = __webpack_require__(12);\n\nvar _isPlainObject2 = _interopRequireDefault(_isPlainObject);\n\nvar _symbolObservable = __webpack_require__(16);\n\nvar _symbolObservable2 = _interopRequireDefault(_symbolObservable);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\n/**\n * These are private action types reserved by Redux.\n * For any unknown actions, you must return the current state.\n * If the current state is undefined, you must return the initial state.\n * Do not reference these action types directly in your code.\n */\nvar ActionTypes = exports.ActionTypes = {\n  INIT: '@@redux/INIT'\n};\n\n/**\n * Creates a Redux store that holds the state tree.\n * The only way to change the data in the store is to call `dispatch()` on it.\n *\n * There should only be a single store in your app. To specify how different\n * parts of the state tree respond to actions, you may combine several reducers\n * into a single reducer function by using `combineReducers`.\n *\n * @param {Function} reducer A function that returns the next state tree, given\n * the current state tree and the action to handle.\n *\n * @param {any} [preloadedState] The initial state. You may optionally specify it\n * to hydrate the state from the server in universal apps, or to restore a\n * previously serialized user session.\n * If you use `combineReducers` to produce the root reducer function, this must be\n * an object with the same shape as `combineReducers` keys.\n *\n * @param {Function} enhancer The store enhancer. You may optionally specify it\n * to enhance the store with third-party capabilities such as middleware,\n * time travel, persistence, etc. The only store enhancer that ships with Redux\n * is `applyMiddleware()`.\n *\n * @returns {Store} A Redux store that lets you read the state, dispatch actions\n * and subscribe to changes.\n */\nfunction createStore(reducer, preloadedState, enhancer) {\n  var _ref2;\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {\n    enhancer = preloadedState;\n    preloadedState = undefined;\n  }\n\n  if (typeof enhancer !== 'undefined') {\n    if (typeof enhancer !== 'function') {\n      throw new Error('Expected the enhancer to be a function.');\n    }\n\n    return enhancer(createStore)(reducer, preloadedState);\n  }\n\n  if (typeof reducer !== 'function') {\n    throw new Error('Expected the reducer to be a function.');\n  }\n\n  var currentReducer = reducer;\n  var currentState = preloadedState;\n  var currentListeners = [];\n  var nextListeners = currentListeners;\n  var isDispatching = false;\n\n  function ensureCanMutateNextListeners() {\n    if (nextListeners === currentListeners) {\n      nextListeners = currentListeners.slice();\n    }\n  }\n\n  /**\n   * Reads the state tree managed by the store.\n   *\n   * @returns {any} The current state tree of your application.\n   */\n  function getState() {\n    return currentState;\n  }\n\n  /**\n   * Adds a change listener. It will be called any time an action is dispatched,\n   * and some part of the state tree may potentially have changed. You may then\n   * call `getState()` to read the current state tree inside the callback.\n   *\n   * You may call `dispatch()` from a change listener, with the following\n   * caveats:\n   *\n   * 1. The subscriptions are snapshotted just before every `dispatch()` call.\n   * If you subscribe or unsubscribe while the listeners are being invoked, this\n   * will not have any effect on the `dispatch()` that is currently in progress.\n   * However, the next `dispatch()` call, whether nested or not, will use a more\n   * recent snapshot of the subscription list.\n   *\n   * 2. The listener should not expect to see all state changes, as the state\n   * might have been updated multiple times during a nested `dispatch()` before\n   * the listener is called. It is, however, guaranteed that all subscribers\n   * registered before the `dispatch()` started will be called with the latest\n   * state by the time it exits.\n   *\n   * @param {Function} listener A callback to be invoked on every dispatch.\n   * @returns {Function} A function to remove this change listener.\n   */\n  function subscribe(listener) {\n    if (typeof listener !== 'function') {\n      throw new Error('Expected listener to be a function.');\n    }\n\n    var isSubscribed = true;\n\n    ensureCanMutateNextListeners();\n    nextListeners.push(listener);\n\n    return function unsubscribe() {\n      if (!isSubscribed) {\n        return;\n      }\n\n      isSubscribed = false;\n\n      ensureCanMutateNextListeners();\n      var index = nextListeners.indexOf(listener);\n      nextListeners.splice(index, 1);\n    };\n  }\n\n  /**\n   * Dispatches an action. It is the only way to trigger a state change.\n   *\n   * The `reducer` function, used to create the store, will be called with the\n   * current state tree and the given `action`. Its return value will\n   * be considered the **next** state of the tree, and the change listeners\n   * will be notified.\n   *\n   * The base implementation only supports plain object actions. If you want to\n   * dispatch a Promise, an Observable, a thunk, or something else, you need to\n   * wrap your store creating function into the corresponding middleware. For\n   * example, see the documentation for the `redux-thunk` package. Even the\n   * middleware will eventually dispatch plain object actions using this method.\n   *\n   * @param {Object} action A plain object representing “what changed”. It is\n   * a good idea to keep actions serializable so you can record and replay user\n   * sessions, or use the time travelling `redux-devtools`. An action must have\n   * a `type` property which may not be `undefined`. It is a good idea to use\n   * string constants for action types.\n   *\n   * @returns {Object} For convenience, the same action object you dispatched.\n   *\n   * Note that, if you use a custom middleware, it may wrap `dispatch()` to\n   * return something else (for example, a Promise you can await).\n   */\n  function dispatch(action) {\n    if (!(0, _isPlainObject2['default'])(action)) {\n      throw new Error('Actions must be plain objects. ' + 'Use custom middleware for async actions.');\n    }\n\n    if (typeof action.type === 'undefined') {\n      throw new Error('Actions may not have an undefined \"type\" property. ' + 'Have you misspelled a constant?');\n    }\n\n    if (isDispatching) {\n      throw new Error('Reducers may not dispatch actions.');\n    }\n\n    try {\n      isDispatching = true;\n      currentState = currentReducer(currentState, action);\n    } finally {\n      isDispatching = false;\n    }\n\n    var listeners = currentListeners = nextListeners;\n    for (var i = 0; i < listeners.length; i++) {\n      listeners[i]();\n    }\n\n    return action;\n  }\n\n  /**\n   * Replaces the reducer currently used by the store to calculate the state.\n   *\n   * You might need this if your app implements code splitting and you want to\n   * load some of the reducers dynamically. You might also need this if you\n   * implement a hot reloading mechanism for Redux.\n   *\n   * @param {Function} nextReducer The reducer for the store to use instead.\n   * @returns {void}\n   */\n  function replaceReducer(nextReducer) {\n    if (typeof nextReducer !== 'function') {\n      throw new Error('Expected the nextReducer to be a function.');\n    }\n\n    currentReducer = nextReducer;\n    dispatch({ type: ActionTypes.INIT });\n  }\n\n  /**\n   * Interoperability point for observable/reactive libraries.\n   * @returns {observable} A minimal observable of state changes.\n   * For more information, see the observable proposal:\n   * https://github.com/zenparsing/es-observable\n   */\n  function observable() {\n    var _ref;\n\n    var outerSubscribe = subscribe;\n    return _ref = {\n      /**\n       * The minimal observable subscription method.\n       * @param {Object} observer Any object that can be used as an observer.\n       * The observer object should have a `next` method.\n       * @returns {subscription} An object with an `unsubscribe` method that can\n       * be used to unsubscribe the observable from the store, and prevent further\n       * emission of values from the observable.\n       */\n      subscribe: function subscribe(observer) {\n        if (typeof observer !== 'object') {\n          throw new TypeError('Expected the observer to be an object.');\n        }\n\n        function observeState() {\n          if (observer.next) {\n            observer.next(getState());\n          }\n        }\n\n        observeState();\n        var unsubscribe = outerSubscribe(observeState);\n        return { unsubscribe: unsubscribe };\n      }\n    }, _ref[_symbolObservable2['default']] = function () {\n      return this;\n    }, _ref;\n  }\n\n  // When a store is created, an \"INIT\" action is dispatched so that every\n  // reducer returns their initial state. This effectively populates\n  // the initial state tree.\n  dispatch({ type: ActionTypes.INIT });\n\n  return _ref2 = {\n    dispatch: dispatch,\n    subscribe: subscribe,\n    getState: getState,\n    replaceReducer: replaceReducer\n  }, _ref2[_symbolObservable2['default']] = observable, _ref2;\n}//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ },
/* 12 */
/***/ function(module, exports, __webpack_require__) {

	eval("var getPrototype = __webpack_require__(13),\n    isHostObject = __webpack_require__(14),\n    isObjectLike = __webpack_require__(15);\n\n/** `Object#toString` result references. */\nvar objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = Function.prototype.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object,\n *  else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) ||\n      objectToString.call(value) != objectTag || isHostObject(value)) {\n    return false;\n  }\n  var proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return (typeof Ctor == 'function' &&\n    Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString);\n}\n\nmodule.exports = isPlainObject;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTIuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2xvZGFzaC9pc1BsYWluT2JqZWN0LmpzPzQzNDIiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGdldFByb3RvdHlwZSA9IHJlcXVpcmUoJy4vX2dldFByb3RvdHlwZScpLFxuICAgIGlzSG9zdE9iamVjdCA9IHJlcXVpcmUoJy4vX2lzSG9zdE9iamVjdCcpLFxuICAgIGlzT2JqZWN0TGlrZSA9IHJlcXVpcmUoJy4vaXNPYmplY3RMaWtlJyk7XG5cbi8qKiBgT2JqZWN0I3RvU3RyaW5nYCByZXN1bHQgcmVmZXJlbmNlcy4gKi9cbnZhciBvYmplY3RUYWcgPSAnW29iamVjdCBPYmplY3RdJztcblxuLyoqIFVzZWQgZm9yIGJ1aWx0LWluIG1ldGhvZCByZWZlcmVuY2VzLiAqL1xudmFyIG9iamVjdFByb3RvID0gT2JqZWN0LnByb3RvdHlwZTtcblxuLyoqIFVzZWQgdG8gcmVzb2x2ZSB0aGUgZGVjb21waWxlZCBzb3VyY2Ugb2YgZnVuY3Rpb25zLiAqL1xudmFyIGZ1bmNUb1N0cmluZyA9IEZ1bmN0aW9uLnByb3RvdHlwZS50b1N0cmluZztcblxuLyoqIFVzZWQgdG8gY2hlY2sgb2JqZWN0cyBmb3Igb3duIHByb3BlcnRpZXMuICovXG52YXIgaGFzT3duUHJvcGVydHkgPSBvYmplY3RQcm90by5oYXNPd25Qcm9wZXJ0eTtcblxuLyoqIFVzZWQgdG8gaW5mZXIgdGhlIGBPYmplY3RgIGNvbnN0cnVjdG9yLiAqL1xudmFyIG9iamVjdEN0b3JTdHJpbmcgPSBmdW5jVG9TdHJpbmcuY2FsbChPYmplY3QpO1xuXG4vKipcbiAqIFVzZWQgdG8gcmVzb2x2ZSB0aGVcbiAqIFtgdG9TdHJpbmdUYWdgXShodHRwOi8vZWNtYS1pbnRlcm5hdGlvbmFsLm9yZy9lY21hLTI2Mi82LjAvI3NlYy1vYmplY3QucHJvdG90eXBlLnRvc3RyaW5nKVxuICogb2YgdmFsdWVzLlxuICovXG52YXIgb2JqZWN0VG9TdHJpbmcgPSBvYmplY3RQcm90by50b1N0cmluZztcblxuLyoqXG4gKiBDaGVja3MgaWYgYHZhbHVlYCBpcyBhIHBsYWluIG9iamVjdCwgdGhhdCBpcywgYW4gb2JqZWN0IGNyZWF0ZWQgYnkgdGhlXG4gKiBgT2JqZWN0YCBjb25zdHJ1Y3RvciBvciBvbmUgd2l0aCBhIGBbW1Byb3RvdHlwZV1dYCBvZiBgbnVsbGAuXG4gKlxuICogQHN0YXRpY1xuICogQG1lbWJlck9mIF9cbiAqIEBzaW5jZSAwLjguMFxuICogQGNhdGVnb3J5IExhbmdcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNoZWNrLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGB2YWx1ZWAgaXMgYSBwbGFpbiBvYmplY3QsXG4gKiAgZWxzZSBgZmFsc2VgLlxuICogQGV4YW1wbGVcbiAqXG4gKiBmdW5jdGlvbiBGb28oKSB7XG4gKiAgIHRoaXMuYSA9IDE7XG4gKiB9XG4gKlxuICogXy5pc1BsYWluT2JqZWN0KG5ldyBGb28pO1xuICogLy8gPT4gZmFsc2VcbiAqXG4gKiBfLmlzUGxhaW5PYmplY3QoWzEsIDIsIDNdKTtcbiAqIC8vID0+IGZhbHNlXG4gKlxuICogXy5pc1BsYWluT2JqZWN0KHsgJ3gnOiAwLCAneSc6IDAgfSk7XG4gKiAvLyA9PiB0cnVlXG4gKlxuICogXy5pc1BsYWluT2JqZWN0KE9iamVjdC5jcmVhdGUobnVsbCkpO1xuICogLy8gPT4gdHJ1ZVxuICovXG5mdW5jdGlvbiBpc1BsYWluT2JqZWN0KHZhbHVlKSB7XG4gIGlmICghaXNPYmplY3RMaWtlKHZhbHVlKSB8fFxuICAgICAgb2JqZWN0VG9TdHJpbmcuY2FsbCh2YWx1ZSkgIT0gb2JqZWN0VGFnIHx8IGlzSG9zdE9iamVjdCh2YWx1ZSkpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgdmFyIHByb3RvID0gZ2V0UHJvdG90eXBlKHZhbHVlKTtcbiAgaWYgKHByb3RvID09PSBudWxsKSB7XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cbiAgdmFyIEN0b3IgPSBoYXNPd25Qcm9wZXJ0eS5jYWxsKHByb3RvLCAnY29uc3RydWN0b3InKSAmJiBwcm90by5jb25zdHJ1Y3RvcjtcbiAgcmV0dXJuICh0eXBlb2YgQ3RvciA9PSAnZnVuY3Rpb24nICYmXG4gICAgQ3RvciBpbnN0YW5jZW9mIEN0b3IgJiYgZnVuY1RvU3RyaW5nLmNhbGwoQ3RvcikgPT0gb2JqZWN0Q3RvclN0cmluZyk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaXNQbGFpbk9iamVjdDtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9sb2Rhc2gvaXNQbGFpbk9iamVjdC5qc1xuLy8gbW9kdWxlIGlkID0gMTJcbi8vIG1vZHVsZSBjaHVua3MgPSAxIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ },
/* 13 */
/***/ function(module, exports) {

	eval("/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetPrototype = Object.getPrototypeOf;\n\n/**\n * Gets the `[[Prototype]]` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {null|Object} Returns the `[[Prototype]]`.\n */\nfunction getPrototype(value) {\n  return nativeGetPrototype(Object(value));\n}\n\nmodule.exports = getPrototype;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2xvZGFzaC9fZ2V0UHJvdG90eXBlLmpzPzEwNzUiXSwic291cmNlc0NvbnRlbnQiOlsiLyogQnVpbHQtaW4gbWV0aG9kIHJlZmVyZW5jZXMgZm9yIHRob3NlIHdpdGggdGhlIHNhbWUgbmFtZSBhcyBvdGhlciBgbG9kYXNoYCBtZXRob2RzLiAqL1xudmFyIG5hdGl2ZUdldFByb3RvdHlwZSA9IE9iamVjdC5nZXRQcm90b3R5cGVPZjtcblxuLyoqXG4gKiBHZXRzIHRoZSBgW1tQcm90b3R5cGVdXWAgb2YgYHZhbHVlYC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gcXVlcnkuXG4gKiBAcmV0dXJucyB7bnVsbHxPYmplY3R9IFJldHVybnMgdGhlIGBbW1Byb3RvdHlwZV1dYC5cbiAqL1xuZnVuY3Rpb24gZ2V0UHJvdG90eXBlKHZhbHVlKSB7XG4gIHJldHVybiBuYXRpdmVHZXRQcm90b3R5cGUoT2JqZWN0KHZhbHVlKSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZ2V0UHJvdG90eXBlO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2xvZGFzaC9fZ2V0UHJvdG90eXBlLmpzXG4vLyBtb2R1bGUgaWQgPSAxM1xuLy8gbW9kdWxlIGNodW5rcyA9IDEiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ },
/* 14 */
/***/ function(module, exports) {

	eval("/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\nmodule.exports = isHostObject;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTQuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2xvZGFzaC9faXNIb3N0T2JqZWN0LmpzP2FiMTciXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDaGVja3MgaWYgYHZhbHVlYCBpcyBhIGhvc3Qgb2JqZWN0IGluIElFIDwgOS5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY2hlY2suXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHZhbHVlYCBpcyBhIGhvc3Qgb2JqZWN0LCBlbHNlIGBmYWxzZWAuXG4gKi9cbmZ1bmN0aW9uIGlzSG9zdE9iamVjdCh2YWx1ZSkge1xuICAvLyBNYW55IGhvc3Qgb2JqZWN0cyBhcmUgYE9iamVjdGAgb2JqZWN0cyB0aGF0IGNhbiBjb2VyY2UgdG8gc3RyaW5nc1xuICAvLyBkZXNwaXRlIGhhdmluZyBpbXByb3Blcmx5IGRlZmluZWQgYHRvU3RyaW5nYCBtZXRob2RzLlxuICB2YXIgcmVzdWx0ID0gZmFsc2U7XG4gIGlmICh2YWx1ZSAhPSBudWxsICYmIHR5cGVvZiB2YWx1ZS50b1N0cmluZyAhPSAnZnVuY3Rpb24nKSB7XG4gICAgdHJ5IHtcbiAgICAgIHJlc3VsdCA9ICEhKHZhbHVlICsgJycpO1xuICAgIH0gY2F0Y2ggKGUpIHt9XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpc0hvc3RPYmplY3Q7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vbG9kYXNoL19pc0hvc3RPYmplY3QuanNcbi8vIG1vZHVsZSBpZCA9IDE0XG4vLyBtb2R1bGUgY2h1bmtzID0gMSJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ },
/* 15 */
/***/ function(module, exports) {

	eval("/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTUuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2xvZGFzaC9pc09iamVjdExpa2UuanM/MzZiZSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENoZWNrcyBpZiBgdmFsdWVgIGlzIG9iamVjdC1saWtlLiBBIHZhbHVlIGlzIG9iamVjdC1saWtlIGlmIGl0J3Mgbm90IGBudWxsYFxuICogYW5kIGhhcyBhIGB0eXBlb2ZgIHJlc3VsdCBvZiBcIm9iamVjdFwiLlxuICpcbiAqIEBzdGF0aWNcbiAqIEBtZW1iZXJPZiBfXG4gKiBAc2luY2UgNC4wLjBcbiAqIEBjYXRlZ29yeSBMYW5nXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjaGVjay5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBgdmFsdWVgIGlzIG9iamVjdC1saWtlLCBlbHNlIGBmYWxzZWAuXG4gKiBAZXhhbXBsZVxuICpcbiAqIF8uaXNPYmplY3RMaWtlKHt9KTtcbiAqIC8vID0+IHRydWVcbiAqXG4gKiBfLmlzT2JqZWN0TGlrZShbMSwgMiwgM10pO1xuICogLy8gPT4gdHJ1ZVxuICpcbiAqIF8uaXNPYmplY3RMaWtlKF8ubm9vcCk7XG4gKiAvLyA9PiBmYWxzZVxuICpcbiAqIF8uaXNPYmplY3RMaWtlKG51bGwpO1xuICogLy8gPT4gZmFsc2VcbiAqL1xuZnVuY3Rpb24gaXNPYmplY3RMaWtlKHZhbHVlKSB7XG4gIHJldHVybiAhIXZhbHVlICYmIHR5cGVvZiB2YWx1ZSA9PSAnb2JqZWN0Jztcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpc09iamVjdExpa2U7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vbG9kYXNoL2lzT2JqZWN0TGlrZS5qc1xuLy8gbW9kdWxlIGlkID0gMTVcbi8vIG1vZHVsZSBjaHVua3MgPSAxIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ },
/* 16 */
/***/ function(module, exports, __webpack_require__) {

	eval("module.exports = __webpack_require__(17);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTYuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3N5bWJvbC1vYnNlcnZhYmxlL2luZGV4LmpzPzY5ODIiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2xpYi9pbmRleCcpO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L3N5bWJvbC1vYnNlcnZhYmxlL2luZGV4LmpzXG4vLyBtb2R1bGUgaWQgPSAxNlxuLy8gbW9kdWxlIGNodW5rcyA9IDEiXSwibWFwcGluZ3MiOiJBQUFBOyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ },
/* 17 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(global) {'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _ponyfill = __webpack_require__(18);\n\nvar _ponyfill2 = _interopRequireDefault(_ponyfill);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar root = undefined; /* global window */\n\nif (typeof global !== 'undefined') {\n\troot = global;\n} else if (typeof window !== 'undefined') {\n\troot = window;\n}\n\nvar result = (0, _ponyfill2['default'])(root);\nexports['default'] = result;\n/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTcuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3N5bWJvbC1vYnNlcnZhYmxlL2xpYi9pbmRleC5qcz82MzFmIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG5cdHZhbHVlOiB0cnVlXG59KTtcblxudmFyIF9wb255ZmlsbCA9IHJlcXVpcmUoJy4vcG9ueWZpbGwnKTtcblxudmFyIF9wb255ZmlsbDIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9wb255ZmlsbCk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7ICdkZWZhdWx0Jzogb2JqIH07IH1cblxudmFyIHJvb3QgPSB1bmRlZmluZWQ7IC8qIGdsb2JhbCB3aW5kb3cgKi9cblxuaWYgKHR5cGVvZiBnbG9iYWwgIT09ICd1bmRlZmluZWQnKSB7XG5cdHJvb3QgPSBnbG9iYWw7XG59IGVsc2UgaWYgKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnKSB7XG5cdHJvb3QgPSB3aW5kb3c7XG59XG5cbnZhciByZXN1bHQgPSAoMCwgX3BvbnlmaWxsMlsnZGVmYXVsdCddKShyb290KTtcbmV4cG9ydHNbJ2RlZmF1bHQnXSA9IHJlc3VsdDtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vc3ltYm9sLW9ic2VydmFibGUvbGliL2luZGV4LmpzXG4vLyBtb2R1bGUgaWQgPSAxN1xuLy8gbW9kdWxlIGNodW5rcyA9IDEiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ },
/* 18 */
/***/ function(module, exports) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports['default'] = symbolObservablePonyfill;\nfunction symbolObservablePonyfill(root) {\n\tvar result;\n\tvar _Symbol = root.Symbol;\n\n\tif (typeof _Symbol === 'function') {\n\t\tif (_Symbol.observable) {\n\t\t\tresult = _Symbol.observable;\n\t\t} else {\n\t\t\tresult = _Symbol('observable');\n\t\t\t_Symbol.observable = result;\n\t\t}\n\t} else {\n\t\tresult = '@@observable';\n\t}\n\n\treturn result;\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTguanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3N5bWJvbC1vYnNlcnZhYmxlL2xpYi9wb255ZmlsbC5qcz81MDVkIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG5cdHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHNbJ2RlZmF1bHQnXSA9IHN5bWJvbE9ic2VydmFibGVQb255ZmlsbDtcbmZ1bmN0aW9uIHN5bWJvbE9ic2VydmFibGVQb255ZmlsbChyb290KSB7XG5cdHZhciByZXN1bHQ7XG5cdHZhciBfU3ltYm9sID0gcm9vdC5TeW1ib2w7XG5cblx0aWYgKHR5cGVvZiBfU3ltYm9sID09PSAnZnVuY3Rpb24nKSB7XG5cdFx0aWYgKF9TeW1ib2wub2JzZXJ2YWJsZSkge1xuXHRcdFx0cmVzdWx0ID0gX1N5bWJvbC5vYnNlcnZhYmxlO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRyZXN1bHQgPSBfU3ltYm9sKCdvYnNlcnZhYmxlJyk7XG5cdFx0XHRfU3ltYm9sLm9ic2VydmFibGUgPSByZXN1bHQ7XG5cdFx0fVxuXHR9IGVsc2Uge1xuXHRcdHJlc3VsdCA9ICdAQG9ic2VydmFibGUnO1xuXHR9XG5cblx0cmV0dXJuIHJlc3VsdDtcbn07XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L3N5bWJvbC1vYnNlcnZhYmxlL2xpYi9wb255ZmlsbC5qc1xuLy8gbW9kdWxlIGlkID0gMThcbi8vIG1vZHVsZSBjaHVua3MgPSAxIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9");

/***/ },
/* 19 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(process) {'use strict';\n\nexports.__esModule = true;\nexports['default'] = combineReducers;\n\nvar _createStore = __webpack_require__(11);\n\nvar _isPlainObject = __webpack_require__(12);\n\nvar _isPlainObject2 = _interopRequireDefault(_isPlainObject);\n\nvar _warning = __webpack_require__(20);\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction getUndefinedStateErrorMessage(key, action) {\n  var actionType = action && action.type;\n  var actionName = actionType && '\"' + actionType.toString() + '\"' || 'an action';\n\n  return 'Given action ' + actionName + ', reducer \"' + key + '\" returned undefined. ' + 'To ignore an action, you must explicitly return the previous state.';\n}\n\nfunction getUnexpectedStateShapeWarningMessage(inputState, reducers, action, unexpectedKeyCache) {\n  var reducerKeys = Object.keys(reducers);\n  var argumentName = action && action.type === _createStore.ActionTypes.INIT ? 'preloadedState argument passed to createStore' : 'previous state received by the reducer';\n\n  if (reducerKeys.length === 0) {\n    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';\n  }\n\n  if (!(0, _isPlainObject2['default'])(inputState)) {\n    return 'The ' + argumentName + ' has unexpected type of \"' + {}.toString.call(inputState).match(/\\s([a-z|A-Z]+)/)[1] + '\". Expected argument to be an object with the following ' + ('keys: \"' + reducerKeys.join('\", \"') + '\"');\n  }\n\n  var unexpectedKeys = Object.keys(inputState).filter(function (key) {\n    return !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key];\n  });\n\n  unexpectedKeys.forEach(function (key) {\n    unexpectedKeyCache[key] = true;\n  });\n\n  if (unexpectedKeys.length > 0) {\n    return 'Unexpected ' + (unexpectedKeys.length > 1 ? 'keys' : 'key') + ' ' + ('\"' + unexpectedKeys.join('\", \"') + '\" found in ' + argumentName + '. ') + 'Expected to find one of the known reducer keys instead: ' + ('\"' + reducerKeys.join('\", \"') + '\". Unexpected keys will be ignored.');\n  }\n}\n\nfunction assertReducerSanity(reducers) {\n  Object.keys(reducers).forEach(function (key) {\n    var reducer = reducers[key];\n    var initialState = reducer(undefined, { type: _createStore.ActionTypes.INIT });\n\n    if (typeof initialState === 'undefined') {\n      throw new Error('Reducer \"' + key + '\" returned undefined during initialization. ' + 'If the state passed to the reducer is undefined, you must ' + 'explicitly return the initial state. The initial state may ' + 'not be undefined.');\n    }\n\n    var type = '@@redux/PROBE_UNKNOWN_ACTION_' + Math.random().toString(36).substring(7).split('').join('.');\n    if (typeof reducer(undefined, { type: type }) === 'undefined') {\n      throw new Error('Reducer \"' + key + '\" returned undefined when probed with a random type. ' + ('Don\\'t try to handle ' + _createStore.ActionTypes.INIT + ' or other actions in \"redux/*\" ') + 'namespace. They are considered private. Instead, you must return the ' + 'current state for any unknown actions, unless it is undefined, ' + 'in which case you must return the initial state, regardless of the ' + 'action type. The initial state may not be undefined.');\n    }\n  });\n}\n\n/**\n * Turns an object whose values are different reducer functions, into a single\n * reducer function. It will call every child reducer, and gather their results\n * into a single state object, whose keys correspond to the keys of the passed\n * reducer functions.\n *\n * @param {Object} reducers An object whose values correspond to different\n * reducer functions that need to be combined into one. One handy way to obtain\n * it is to use ES6 `import * as reducers` syntax. The reducers may never return\n * undefined for any action. Instead, they should return their initial state\n * if the state passed to them was undefined, and the current state for any\n * unrecognized action.\n *\n * @returns {Function} A reducer function that invokes every reducer inside the\n * passed object, and builds a state object with the same shape.\n */\nfunction combineReducers(reducers) {\n  var reducerKeys = Object.keys(reducers);\n  var finalReducers = {};\n  for (var i = 0; i < reducerKeys.length; i++) {\n    var key = reducerKeys[i];\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof reducers[key] === 'undefined') {\n        (0, _warning2['default'])('No reducer provided for key \"' + key + '\"');\n      }\n    }\n\n    if (typeof reducers[key] === 'function') {\n      finalReducers[key] = reducers[key];\n    }\n  }\n  var finalReducerKeys = Object.keys(finalReducers);\n\n  if (process.env.NODE_ENV !== 'production') {\n    var unexpectedKeyCache = {};\n  }\n\n  var sanityError;\n  try {\n    assertReducerSanity(finalReducers);\n  } catch (e) {\n    sanityError = e;\n  }\n\n  return function combination() {\n    var state = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n    var action = arguments[1];\n\n    if (sanityError) {\n      throw sanityError;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      var warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action, unexpectedKeyCache);\n      if (warningMessage) {\n        (0, _warning2['default'])(warningMessage);\n      }\n    }\n\n    var hasChanged = false;\n    var nextState = {};\n    for (var i = 0; i < finalReducerKeys.length; i++) {\n      var key = finalReducerKeys[i];\n      var reducer = finalReducers[key];\n      var previousStateForKey = state[key];\n      var nextStateForKey = reducer(previousStateForKey, action);\n      if (typeof nextStateForKey === 'undefined') {\n        var errorMessage = getUndefinedStateErrorMessage(key, action);\n        throw new Error(errorMessage);\n      }\n      nextState[key] = nextStateForKey;\n      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n    }\n    return hasChanged ? nextState : state;\n  };\n}\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ },
/* 20 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(console) {'use strict';\n\nexports.__esModule = true;\nexports['default'] = warning;\n/**\n * Prints a warning in the console if it exists.\n *\n * @param {String} message The warning message.\n * @returns {void}\n */\nfunction warning(message) {\n  /* eslint-disable no-console */\n  if (typeof console !== 'undefined' && typeof console.error === 'function') {\n    console.error(message);\n  }\n  /* eslint-enable no-console */\n  try {\n    // This error was thrown as a convenience so that if you enable\n    // \"break on all exceptions\" in your console,\n    // it would pause the execution at this line.\n    throw new Error(message);\n    /* eslint-disable no-empty */\n  } catch (e) {}\n  /* eslint-enable no-empty */\n}\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjAuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3JlZHV4L2xpYi91dGlscy93YXJuaW5nLmpzPzA3YzMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlO1xuZXhwb3J0c1snZGVmYXVsdCddID0gd2FybmluZztcbi8qKlxuICogUHJpbnRzIGEgd2FybmluZyBpbiB0aGUgY29uc29sZSBpZiBpdCBleGlzdHMuXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IG1lc3NhZ2UgVGhlIHdhcm5pbmcgbWVzc2FnZS5cbiAqIEByZXR1cm5zIHt2b2lkfVxuICovXG5mdW5jdGlvbiB3YXJuaW5nKG1lc3NhZ2UpIHtcbiAgLyogZXNsaW50LWRpc2FibGUgbm8tY29uc29sZSAqL1xuICBpZiAodHlwZW9mIGNvbnNvbGUgIT09ICd1bmRlZmluZWQnICYmIHR5cGVvZiBjb25zb2xlLmVycm9yID09PSAnZnVuY3Rpb24nKSB7XG4gICAgY29uc29sZS5lcnJvcihtZXNzYWdlKTtcbiAgfVxuICAvKiBlc2xpbnQtZW5hYmxlIG5vLWNvbnNvbGUgKi9cbiAgdHJ5IHtcbiAgICAvLyBUaGlzIGVycm9yIHdhcyB0aHJvd24gYXMgYSBjb252ZW5pZW5jZSBzbyB0aGF0IGlmIHlvdSBlbmFibGVcbiAgICAvLyBcImJyZWFrIG9uIGFsbCBleGNlcHRpb25zXCIgaW4geW91ciBjb25zb2xlLFxuICAgIC8vIGl0IHdvdWxkIHBhdXNlIHRoZSBleGVjdXRpb24gYXQgdGhpcyBsaW5lLlxuICAgIHRocm93IG5ldyBFcnJvcihtZXNzYWdlKTtcbiAgICAvKiBlc2xpbnQtZGlzYWJsZSBuby1lbXB0eSAqL1xuICB9IGNhdGNoIChlKSB7fVxuICAvKiBlc2xpbnQtZW5hYmxlIG5vLWVtcHR5ICovXG59XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L3JlZHV4L2xpYi91dGlscy93YXJuaW5nLmpzXG4vLyBtb2R1bGUgaWQgPSAyMFxuLy8gbW9kdWxlIGNodW5rcyA9IDEiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ },
/* 21 */
/***/ function(module, exports) {

	eval("'use strict';\n\nexports.__esModule = true;\nexports['default'] = bindActionCreators;\nfunction bindActionCreator(actionCreator, dispatch) {\n  return function () {\n    return dispatch(actionCreator.apply(undefined, arguments));\n  };\n}\n\n/**\n * Turns an object whose values are action creators, into an object with the\n * same keys, but with every function wrapped into a `dispatch` call so they\n * may be invoked directly. This is just a convenience method, as you can call\n * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.\n *\n * For convenience, you can also pass a single function as the first argument,\n * and get a function in return.\n *\n * @param {Function|Object} actionCreators An object whose values are action\n * creator functions. One handy way to obtain it is to use ES6 `import * as`\n * syntax. You may also pass a single function.\n *\n * @param {Function} dispatch The `dispatch` function available on your Redux\n * store.\n *\n * @returns {Function|Object} The object mimicking the original object, but with\n * every action creator wrapped into the `dispatch` call. If you passed a\n * function as `actionCreators`, the return value will also be a single\n * function.\n */\nfunction bindActionCreators(actionCreators, dispatch) {\n  if (typeof actionCreators === 'function') {\n    return bindActionCreator(actionCreators, dispatch);\n  }\n\n  if (typeof actionCreators !== 'object' || actionCreators === null) {\n    throw new Error('bindActionCreators expected an object or a function, instead received ' + (actionCreators === null ? 'null' : typeof actionCreators) + '. ' + 'Did you write \"import ActionCreators from\" instead of \"import * as ActionCreators from\"?');\n  }\n\n  var keys = Object.keys(actionCreators);\n  var boundActionCreators = {};\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    var actionCreator = actionCreators[key];\n    if (typeof actionCreator === 'function') {\n      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);\n    }\n  }\n  return boundActionCreators;\n}//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjEuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3JlZHV4L2xpYi9iaW5kQWN0aW9uQ3JlYXRvcnMuanM/OTFkOSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5leHBvcnRzWydkZWZhdWx0J10gPSBiaW5kQWN0aW9uQ3JlYXRvcnM7XG5mdW5jdGlvbiBiaW5kQWN0aW9uQ3JlYXRvcihhY3Rpb25DcmVhdG9yLCBkaXNwYXRjaCkge1xuICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBkaXNwYXRjaChhY3Rpb25DcmVhdG9yLmFwcGx5KHVuZGVmaW5lZCwgYXJndW1lbnRzKSk7XG4gIH07XG59XG5cbi8qKlxuICogVHVybnMgYW4gb2JqZWN0IHdob3NlIHZhbHVlcyBhcmUgYWN0aW9uIGNyZWF0b3JzLCBpbnRvIGFuIG9iamVjdCB3aXRoIHRoZVxuICogc2FtZSBrZXlzLCBidXQgd2l0aCBldmVyeSBmdW5jdGlvbiB3cmFwcGVkIGludG8gYSBgZGlzcGF0Y2hgIGNhbGwgc28gdGhleVxuICogbWF5IGJlIGludm9rZWQgZGlyZWN0bHkuIFRoaXMgaXMganVzdCBhIGNvbnZlbmllbmNlIG1ldGhvZCwgYXMgeW91IGNhbiBjYWxsXG4gKiBgc3RvcmUuZGlzcGF0Y2goTXlBY3Rpb25DcmVhdG9ycy5kb1NvbWV0aGluZygpKWAgeW91cnNlbGYganVzdCBmaW5lLlxuICpcbiAqIEZvciBjb252ZW5pZW5jZSwgeW91IGNhbiBhbHNvIHBhc3MgYSBzaW5nbGUgZnVuY3Rpb24gYXMgdGhlIGZpcnN0IGFyZ3VtZW50LFxuICogYW5kIGdldCBhIGZ1bmN0aW9uIGluIHJldHVybi5cbiAqXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufE9iamVjdH0gYWN0aW9uQ3JlYXRvcnMgQW4gb2JqZWN0IHdob3NlIHZhbHVlcyBhcmUgYWN0aW9uXG4gKiBjcmVhdG9yIGZ1bmN0aW9ucy4gT25lIGhhbmR5IHdheSB0byBvYnRhaW4gaXQgaXMgdG8gdXNlIEVTNiBgaW1wb3J0ICogYXNgXG4gKiBzeW50YXguIFlvdSBtYXkgYWxzbyBwYXNzIGEgc2luZ2xlIGZ1bmN0aW9uLlxuICpcbiAqIEBwYXJhbSB7RnVuY3Rpb259IGRpc3BhdGNoIFRoZSBgZGlzcGF0Y2hgIGZ1bmN0aW9uIGF2YWlsYWJsZSBvbiB5b3VyIFJlZHV4XG4gKiBzdG9yZS5cbiAqXG4gKiBAcmV0dXJucyB7RnVuY3Rpb258T2JqZWN0fSBUaGUgb2JqZWN0IG1pbWlja2luZyB0aGUgb3JpZ2luYWwgb2JqZWN0LCBidXQgd2l0aFxuICogZXZlcnkgYWN0aW9uIGNyZWF0b3Igd3JhcHBlZCBpbnRvIHRoZSBgZGlzcGF0Y2hgIGNhbGwuIElmIHlvdSBwYXNzZWQgYVxuICogZnVuY3Rpb24gYXMgYGFjdGlvbkNyZWF0b3JzYCwgdGhlIHJldHVybiB2YWx1ZSB3aWxsIGFsc28gYmUgYSBzaW5nbGVcbiAqIGZ1bmN0aW9uLlxuICovXG5mdW5jdGlvbiBiaW5kQWN0aW9uQ3JlYXRvcnMoYWN0aW9uQ3JlYXRvcnMsIGRpc3BhdGNoKSB7XG4gIGlmICh0eXBlb2YgYWN0aW9uQ3JlYXRvcnMgPT09ICdmdW5jdGlvbicpIHtcbiAgICByZXR1cm4gYmluZEFjdGlvbkNyZWF0b3IoYWN0aW9uQ3JlYXRvcnMsIGRpc3BhdGNoKTtcbiAgfVxuXG4gIGlmICh0eXBlb2YgYWN0aW9uQ3JlYXRvcnMgIT09ICdvYmplY3QnIHx8IGFjdGlvbkNyZWF0b3JzID09PSBudWxsKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdiaW5kQWN0aW9uQ3JlYXRvcnMgZXhwZWN0ZWQgYW4gb2JqZWN0IG9yIGEgZnVuY3Rpb24sIGluc3RlYWQgcmVjZWl2ZWQgJyArIChhY3Rpb25DcmVhdG9ycyA9PT0gbnVsbCA/ICdudWxsJyA6IHR5cGVvZiBhY3Rpb25DcmVhdG9ycykgKyAnLiAnICsgJ0RpZCB5b3Ugd3JpdGUgXCJpbXBvcnQgQWN0aW9uQ3JlYXRvcnMgZnJvbVwiIGluc3RlYWQgb2YgXCJpbXBvcnQgKiBhcyBBY3Rpb25DcmVhdG9ycyBmcm9tXCI/Jyk7XG4gIH1cblxuICB2YXIga2V5cyA9IE9iamVjdC5rZXlzKGFjdGlvbkNyZWF0b3JzKTtcbiAgdmFyIGJvdW5kQWN0aW9uQ3JlYXRvcnMgPSB7fTtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBrZXlzLmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIGtleSA9IGtleXNbaV07XG4gICAgdmFyIGFjdGlvbkNyZWF0b3IgPSBhY3Rpb25DcmVhdG9yc1trZXldO1xuICAgIGlmICh0eXBlb2YgYWN0aW9uQ3JlYXRvciA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgYm91bmRBY3Rpb25DcmVhdG9yc1trZXldID0gYmluZEFjdGlvbkNyZWF0b3IoYWN0aW9uQ3JlYXRvciwgZGlzcGF0Y2gpO1xuICAgIH1cbiAgfVxuICByZXR1cm4gYm91bmRBY3Rpb25DcmVhdG9ycztcbn1cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vcmVkdXgvbGliL2JpbmRBY3Rpb25DcmVhdG9ycy5qc1xuLy8gbW9kdWxlIGlkID0gMjFcbi8vIG1vZHVsZSBjaHVua3MgPSAxIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ },
/* 22 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports['default'] = applyMiddleware;\n\nvar _compose = __webpack_require__(23);\n\nvar _compose2 = _interopRequireDefault(_compose);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\n/**\n * Creates a store enhancer that applies middleware to the dispatch method\n * of the Redux store. This is handy for a variety of tasks, such as expressing\n * asynchronous actions in a concise manner, or logging every action payload.\n *\n * See `redux-thunk` package as an example of the Redux middleware.\n *\n * Because middleware is potentially asynchronous, this should be the first\n * store enhancer in the composition chain.\n *\n * Note that each middleware will be given the `dispatch` and `getState` functions\n * as named arguments.\n *\n * @param {...Function} middlewares The middleware chain to be applied.\n * @returns {Function} A store enhancer applying the middleware.\n */\nfunction applyMiddleware() {\n  for (var _len = arguments.length, middlewares = Array(_len), _key = 0; _key < _len; _key++) {\n    middlewares[_key] = arguments[_key];\n  }\n\n  return function (createStore) {\n    return function (reducer, preloadedState, enhancer) {\n      var store = createStore(reducer, preloadedState, enhancer);\n      var _dispatch = store.dispatch;\n      var chain = [];\n\n      var middlewareAPI = {\n        getState: store.getState,\n        dispatch: function dispatch(action) {\n          return _dispatch(action);\n        }\n      };\n      chain = middlewares.map(function (middleware) {\n        return middleware(middlewareAPI);\n      });\n      _dispatch = _compose2['default'].apply(undefined, chain)(store.dispatch);\n\n      return _extends({}, store, {\n        dispatch: _dispatch\n      });\n    };\n  };\n}//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjIuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3JlZHV4L2xpYi9hcHBseU1pZGRsZXdhcmUuanM/ZWUxNSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5cbnZhciBfZXh0ZW5kcyA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24gKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldOyBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7IGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpKSB7IHRhcmdldFtrZXldID0gc291cmNlW2tleV07IH0gfSB9IHJldHVybiB0YXJnZXQ7IH07XG5cbmV4cG9ydHNbJ2RlZmF1bHQnXSA9IGFwcGx5TWlkZGxld2FyZTtcblxudmFyIF9jb21wb3NlID0gcmVxdWlyZSgnLi9jb21wb3NlJyk7XG5cbnZhciBfY29tcG9zZTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9jb21wb3NlKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgJ2RlZmF1bHQnOiBvYmogfTsgfVxuXG4vKipcbiAqIENyZWF0ZXMgYSBzdG9yZSBlbmhhbmNlciB0aGF0IGFwcGxpZXMgbWlkZGxld2FyZSB0byB0aGUgZGlzcGF0Y2ggbWV0aG9kXG4gKiBvZiB0aGUgUmVkdXggc3RvcmUuIFRoaXMgaXMgaGFuZHkgZm9yIGEgdmFyaWV0eSBvZiB0YXNrcywgc3VjaCBhcyBleHByZXNzaW5nXG4gKiBhc3luY2hyb25vdXMgYWN0aW9ucyBpbiBhIGNvbmNpc2UgbWFubmVyLCBvciBsb2dnaW5nIGV2ZXJ5IGFjdGlvbiBwYXlsb2FkLlxuICpcbiAqIFNlZSBgcmVkdXgtdGh1bmtgIHBhY2thZ2UgYXMgYW4gZXhhbXBsZSBvZiB0aGUgUmVkdXggbWlkZGxld2FyZS5cbiAqXG4gKiBCZWNhdXNlIG1pZGRsZXdhcmUgaXMgcG90ZW50aWFsbHkgYXN5bmNocm9ub3VzLCB0aGlzIHNob3VsZCBiZSB0aGUgZmlyc3RcbiAqIHN0b3JlIGVuaGFuY2VyIGluIHRoZSBjb21wb3NpdGlvbiBjaGFpbi5cbiAqXG4gKiBOb3RlIHRoYXQgZWFjaCBtaWRkbGV3YXJlIHdpbGwgYmUgZ2l2ZW4gdGhlIGBkaXNwYXRjaGAgYW5kIGBnZXRTdGF0ZWAgZnVuY3Rpb25zXG4gKiBhcyBuYW1lZCBhcmd1bWVudHMuXG4gKlxuICogQHBhcmFtIHsuLi5GdW5jdGlvbn0gbWlkZGxld2FyZXMgVGhlIG1pZGRsZXdhcmUgY2hhaW4gdG8gYmUgYXBwbGllZC5cbiAqIEByZXR1cm5zIHtGdW5jdGlvbn0gQSBzdG9yZSBlbmhhbmNlciBhcHBseWluZyB0aGUgbWlkZGxld2FyZS5cbiAqL1xuZnVuY3Rpb24gYXBwbHlNaWRkbGV3YXJlKCkge1xuICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgbWlkZGxld2FyZXMgPSBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICBtaWRkbGV3YXJlc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgfVxuXG4gIHJldHVybiBmdW5jdGlvbiAoY3JlYXRlU3RvcmUpIHtcbiAgICByZXR1cm4gZnVuY3Rpb24gKHJlZHVjZXIsIHByZWxvYWRlZFN0YXRlLCBlbmhhbmNlcikge1xuICAgICAgdmFyIHN0b3JlID0gY3JlYXRlU3RvcmUocmVkdWNlciwgcHJlbG9hZGVkU3RhdGUsIGVuaGFuY2VyKTtcbiAgICAgIHZhciBfZGlzcGF0Y2ggPSBzdG9yZS5kaXNwYXRjaDtcbiAgICAgIHZhciBjaGFpbiA9IFtdO1xuXG4gICAgICB2YXIgbWlkZGxld2FyZUFQSSA9IHtcbiAgICAgICAgZ2V0U3RhdGU6IHN0b3JlLmdldFN0YXRlLFxuICAgICAgICBkaXNwYXRjaDogZnVuY3Rpb24gZGlzcGF0Y2goYWN0aW9uKSB7XG4gICAgICAgICAgcmV0dXJuIF9kaXNwYXRjaChhY3Rpb24pO1xuICAgICAgICB9XG4gICAgICB9O1xuICAgICAgY2hhaW4gPSBtaWRkbGV3YXJlcy5tYXAoZnVuY3Rpb24gKG1pZGRsZXdhcmUpIHtcbiAgICAgICAgcmV0dXJuIG1pZGRsZXdhcmUobWlkZGxld2FyZUFQSSk7XG4gICAgICB9KTtcbiAgICAgIF9kaXNwYXRjaCA9IF9jb21wb3NlMlsnZGVmYXVsdCddLmFwcGx5KHVuZGVmaW5lZCwgY2hhaW4pKHN0b3JlLmRpc3BhdGNoKTtcblxuICAgICAgcmV0dXJuIF9leHRlbmRzKHt9LCBzdG9yZSwge1xuICAgICAgICBkaXNwYXRjaDogX2Rpc3BhdGNoXG4gICAgICB9KTtcbiAgICB9O1xuICB9O1xufVxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9yZWR1eC9saWIvYXBwbHlNaWRkbGV3YXJlLmpzXG4vLyBtb2R1bGUgaWQgPSAyMlxuLy8gbW9kdWxlIGNodW5rcyA9IDEiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9");

/***/ },
/* 23 */
/***/ function(module, exports) {

	eval("\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = compose;\n/**\n * Composes single-argument functions from right to left. The rightmost\n * function can take multiple arguments as it provides the signature for\n * the resulting composite function.\n *\n * @param {...Function} funcs The functions to compose.\n * @returns {Function} A function obtained by composing the argument functions\n * from right to left. For example, compose(f, g, h) is identical to doing\n * (...args) => f(g(h(...args))).\n */\n\nfunction compose() {\n  for (var _len = arguments.length, funcs = Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  if (funcs.length === 0) {\n    return function (arg) {\n      return arg;\n    };\n  }\n\n  if (funcs.length === 1) {\n    return funcs[0];\n  }\n\n  var last = funcs[funcs.length - 1];\n  var rest = funcs.slice(0, -1);\n  return function () {\n    return rest.reduceRight(function (composed, f) {\n      return f(composed);\n    }, last.apply(undefined, arguments));\n  };\n}//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3JlZHV4L2xpYi9jb21wb3NlLmpzP2E4YzciXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5leHBvcnRzW1wiZGVmYXVsdFwiXSA9IGNvbXBvc2U7XG4vKipcbiAqIENvbXBvc2VzIHNpbmdsZS1hcmd1bWVudCBmdW5jdGlvbnMgZnJvbSByaWdodCB0byBsZWZ0LiBUaGUgcmlnaHRtb3N0XG4gKiBmdW5jdGlvbiBjYW4gdGFrZSBtdWx0aXBsZSBhcmd1bWVudHMgYXMgaXQgcHJvdmlkZXMgdGhlIHNpZ25hdHVyZSBmb3JcbiAqIHRoZSByZXN1bHRpbmcgY29tcG9zaXRlIGZ1bmN0aW9uLlxuICpcbiAqIEBwYXJhbSB7Li4uRnVuY3Rpb259IGZ1bmNzIFRoZSBmdW5jdGlvbnMgdG8gY29tcG9zZS5cbiAqIEByZXR1cm5zIHtGdW5jdGlvbn0gQSBmdW5jdGlvbiBvYnRhaW5lZCBieSBjb21wb3NpbmcgdGhlIGFyZ3VtZW50IGZ1bmN0aW9uc1xuICogZnJvbSByaWdodCB0byBsZWZ0LiBGb3IgZXhhbXBsZSwgY29tcG9zZShmLCBnLCBoKSBpcyBpZGVudGljYWwgdG8gZG9pbmdcbiAqICguLi5hcmdzKSA9PiBmKGcoaCguLi5hcmdzKSkpLlxuICovXG5cbmZ1bmN0aW9uIGNvbXBvc2UoKSB7XG4gIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBmdW5jcyA9IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgIGZ1bmNzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICB9XG5cbiAgaWYgKGZ1bmNzLmxlbmd0aCA9PT0gMCkge1xuICAgIHJldHVybiBmdW5jdGlvbiAoYXJnKSB7XG4gICAgICByZXR1cm4gYXJnO1xuICAgIH07XG4gIH1cblxuICBpZiAoZnVuY3MubGVuZ3RoID09PSAxKSB7XG4gICAgcmV0dXJuIGZ1bmNzWzBdO1xuICB9XG5cbiAgdmFyIGxhc3QgPSBmdW5jc1tmdW5jcy5sZW5ndGggLSAxXTtcbiAgdmFyIHJlc3QgPSBmdW5jcy5zbGljZSgwLCAtMSk7XG4gIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIHJlc3QucmVkdWNlUmlnaHQoZnVuY3Rpb24gKGNvbXBvc2VkLCBmKSB7XG4gICAgICByZXR1cm4gZihjb21wb3NlZCk7XG4gICAgfSwgbGFzdC5hcHBseSh1bmRlZmluZWQsIGFyZ3VtZW50cykpO1xuICB9O1xufVxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9yZWR1eC9saWIvY29tcG9zZS5qc1xuLy8gbW9kdWxlIGlkID0gMjNcbi8vIG1vZHVsZSBjaHVua3MgPSAxIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9");

/***/ },
/* 24 */
/***/ function(module, exports, __webpack_require__) {

	eval("\"use strict\";\n\nvar store = __webpack_require__(9);\n\nvar userState = {\n\n    type: {\n\n        get: function get() {\n            // TODO this is only set on login, if user doesn't login because they have an active session already then it isn't set. We probably need this information from the server (it was stored in localStorage before, which doesn't seem ideal)\n            return store.getState().user.type;\n        },\n\n        set: function set(userType) {\n            store.dispatch({\n                type: \"UPDATE_USER_TYPE\",\n                userType: userType\n            });\n        },\n\n        isDataVis: function isDataVis() {\n            return userState.type.get() === \"DATA_VISUALISATION\";\n        },\n\n        isPublisher: function isPublisher() {\n            return userState.type.get() === \"PUBLISHING_SUPPORT\";\n        }\n    },\n\n    email: {\n\n        get: function get() {\n            return store.getState().user.email;\n        },\n\n        set: function set(userEmail) {\n            store.dispatch({\n                type: \"UPDATE_USER_EMAIL\",\n                userEmail: userEmail\n            });\n        }\n    }\n};\n\nmodule.exports = userState;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjQuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vYXBwL3NoYXJlZC9zdGF0ZS91c2VyU3RhdGUuanM/MWQzNSJdLCJzb3VyY2VzQ29udGVudCI6WyJcbnZhciBzdG9yZSA9IHJlcXVpcmUoJ3NoYXJlZC9zdGF0ZS9zdGF0ZS5qcycpO1xuXG52YXIgdXNlclN0YXRlID0ge1xuXG4gICAgdHlwZToge1xuXG4gICAgICAgIGdldDogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAvLyBUT0RPIHRoaXMgaXMgb25seSBzZXQgb24gbG9naW4sIGlmIHVzZXIgZG9lc24ndCBsb2dpbiBiZWNhdXNlIHRoZXkgaGF2ZSBhbiBhY3RpdmUgc2Vzc2lvbiBhbHJlYWR5IHRoZW4gaXQgaXNuJ3Qgc2V0LiBXZSBwcm9iYWJseSBuZWVkIHRoaXMgaW5mb3JtYXRpb24gZnJvbSB0aGUgc2VydmVyIChpdCB3YXMgc3RvcmVkIGluIGxvY2FsU3RvcmFnZSBiZWZvcmUsIHdoaWNoIGRvZXNuJ3Qgc2VlbSBpZGVhbClcbiAgICAgICAgICAgIHJldHVybiBzdG9yZS5nZXRTdGF0ZSgpLnVzZXIudHlwZTtcbiAgICAgICAgfSxcblxuICAgICAgICBzZXQ6IGZ1bmN0aW9uKHVzZXJUeXBlKSB7XG4gICAgICAgICAgICBzdG9yZS5kaXNwYXRjaCh7XG4gICAgICAgICAgICAgICAgdHlwZTogXCJVUERBVEVfVVNFUl9UWVBFXCIsXG4gICAgICAgICAgICAgICAgdXNlclR5cGU6IHVzZXJUeXBlXG4gICAgICAgICAgICB9KVxuICAgICAgICB9LFxuXG4gICAgICAgIGlzRGF0YVZpczogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICByZXR1cm4gdXNlclN0YXRlLnR5cGUuZ2V0KCkgPT09IFwiREFUQV9WSVNVQUxJU0FUSU9OXCI7XG4gICAgICAgIH0sXG5cbiAgICAgICAgaXNQdWJsaXNoZXI6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgcmV0dXJuIHVzZXJTdGF0ZS50eXBlLmdldCgpID09PSBcIlBVQkxJU0hJTkdfU1VQUE9SVFwiO1xuICAgICAgICB9XG4gICAgfSxcblxuICAgIGVtYWlsOiB7XG5cbiAgICAgICAgZ2V0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHJldHVybiBzdG9yZS5nZXRTdGF0ZSgpLnVzZXIuZW1haWw7XG4gICAgICAgIH0sXG5cbiAgICAgICAgc2V0OiBmdW5jdGlvbih1c2VyRW1haWwpIHtcbiAgICAgICAgICAgIHN0b3JlLmRpc3BhdGNoKHtcbiAgICAgICAgICAgICAgICB0eXBlOiBcIlVQREFURV9VU0VSX0VNQUlMXCIsXG4gICAgICAgICAgICAgICAgdXNlckVtYWlsOiB1c2VyRW1haWxcbiAgICAgICAgICAgIH0pXG4gICAgICAgIH1cbiAgICB9XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IHVzZXJTdGF0ZTtcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyBhcHAvc2hhcmVkL3N0YXRlL3VzZXJTdGF0ZS5qcyJdLCJtYXBwaW5ncyI6Ijs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFGQTtBQUlBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQXBCQTtBQUNBO0FBc0JBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRkE7QUFJQTtBQVhBO0FBekJBO0FBQ0E7QUF1Q0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ },
/* 25 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nvar store = __webpack_require__(9),\n    watchState = __webpack_require__(26);\n\nvar workspaceState = {\n\n    reset: function reset() {\n        store.dispatch({\n            type: \"RESET_WORKSPACE\"\n        });\n    },\n\n    browseTreeData: {\n\n        get: function get() {\n            return store.getState().workspace.browseTreeData;\n        },\n\n        set: function set(browseTreeData) {\n            store.dispatch({\n                type: \"UPDATE_BROWSE_TREE_DATA\",\n                browseTreeData: browseTreeData\n            });\n        }\n\n    },\n\n    activeScreen: {\n\n        get: function get() {\n            return store.getState().workspace.activeScreen;\n        },\n\n        set: function set(activeScreen) {\n            store.dispatch({\n                type: \"UPDATE_ACTIVE_WORKSPACE_SCREEN\",\n                activeScreen: activeScreen\n            });\n        },\n\n        watch: function watch(onChange) {\n            return watchState('workspace.activeScreen', onChange);\n        }\n    },\n\n    activeUrl: {\n\n        get: function get() {\n            return store.getState().workspace.activeUrl;\n        },\n\n        set: function set(activeUrl) {\n            store.dispatch({\n                type: \"UPDATE_WORKSPACE_ACTIVE_URL\",\n                activeUrl: activeUrl\n            });\n        },\n\n        watch: function watch(onChange) {\n            return watchState('workspace.activeUrl', onChange);\n        }\n    },\n\n    previewUrl: {\n\n        get: function get() {\n            return store.getState().workspace.previewUrl;\n        },\n\n        set: function set(previewUrl) {\n            store.dispatch({\n                type: \"UPDATE_WORKSPACE_PREVIEW_URL\",\n                previewUrl: previewUrl\n            });\n        },\n\n        watch: function watch(onChange) {\n            return watchState('workspace.previewUrl', onChange);\n        }\n    },\n\n    isDirty: {\n\n        get: function get() {\n            return store.getState().workspace.isDirty;\n        },\n\n        set: function set(bool) {\n            store.dispatch({\n                type: \"UPDATE_IS_DIRTY\",\n                isDirty: bool\n            });\n        }\n    },\n\n    editorData: {\n\n        get: function get() {\n            return store.getState().workspace.editorData;\n        },\n\n        set: function set(editorData) {\n            store.dispatch({\n                type: \"UPDATE_EDITOR_DATA\",\n                editorData: editorData\n            });\n        }\n\n    }\n\n};\n\nmodule.exports = workspaceState;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjUuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vYXBwL3NoYXJlZC9zdGF0ZS93b3Jrc3BhY2VTdGF0ZS5qcz8yMTkwIl0sInNvdXJjZXNDb250ZW50IjpbIlxudmFyIHN0b3JlID0gcmVxdWlyZSgnc2hhcmVkL3N0YXRlL3N0YXRlLmpzJyksXG4gICAgd2F0Y2hTdGF0ZSA9IHJlcXVpcmUoJ3NoYXJlZC9zdGF0ZS93YXRjaFN0YXRlJyk7XG5cbnZhciB3b3Jrc3BhY2VTdGF0ZSA9IHtcblxuICAgIHJlc2V0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgc3RvcmUuZGlzcGF0Y2goe1xuICAgICAgICAgICAgdHlwZTogXCJSRVNFVF9XT1JLU1BBQ0VcIlxuICAgICAgICB9KTtcbiAgICB9LFxuXG4gICAgYnJvd3NlVHJlZURhdGE6IHtcblxuICAgICAgICBnZXQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgcmV0dXJuIHN0b3JlLmdldFN0YXRlKCkud29ya3NwYWNlLmJyb3dzZVRyZWVEYXRhO1xuICAgICAgICB9LFxuXG4gICAgICAgIHNldDogZnVuY3Rpb24oYnJvd3NlVHJlZURhdGEpIHtcbiAgICAgICAgICAgIHN0b3JlLmRpc3BhdGNoKHtcbiAgICAgICAgICAgICAgICB0eXBlOiBcIlVQREFURV9CUk9XU0VfVFJFRV9EQVRBXCIsXG4gICAgICAgICAgICAgICAgYnJvd3NlVHJlZURhdGE6IGJyb3dzZVRyZWVEYXRhXG4gICAgICAgICAgICB9KVxuICAgICAgICB9XG5cbiAgICB9LFxuXG4gICAgYWN0aXZlU2NyZWVuOiB7XG5cbiAgICAgICAgZ2V0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHJldHVybiBzdG9yZS5nZXRTdGF0ZSgpLndvcmtzcGFjZS5hY3RpdmVTY3JlZW47XG4gICAgICAgIH0sXG5cbiAgICAgICAgc2V0OiBmdW5jdGlvbihhY3RpdmVTY3JlZW4pIHtcbiAgICAgICAgICAgIHN0b3JlLmRpc3BhdGNoKHtcbiAgICAgICAgICAgICAgICB0eXBlOiBcIlVQREFURV9BQ1RJVkVfV09SS1NQQUNFX1NDUkVFTlwiLFxuICAgICAgICAgICAgICAgIGFjdGl2ZVNjcmVlbjogYWN0aXZlU2NyZWVuXG4gICAgICAgICAgICB9KVxuICAgICAgICB9LFxuXG4gICAgICAgIHdhdGNoOiBmdW5jdGlvbihvbkNoYW5nZSkge1xuICAgICAgICAgICAgcmV0dXJuIHdhdGNoU3RhdGUoJ3dvcmtzcGFjZS5hY3RpdmVTY3JlZW4nLCBvbkNoYW5nZSk7XG4gICAgICAgIH1cbiAgICB9LFxuXG4gICAgYWN0aXZlVXJsOiB7XG5cbiAgICAgICAgZ2V0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHJldHVybiBzdG9yZS5nZXRTdGF0ZSgpLndvcmtzcGFjZS5hY3RpdmVVcmw7XG4gICAgICAgIH0sXG5cbiAgICAgICAgc2V0OiBmdW5jdGlvbihhY3RpdmVVcmwpIHtcbiAgICAgICAgICAgIHN0b3JlLmRpc3BhdGNoKHtcbiAgICAgICAgICAgICAgICB0eXBlOiBcIlVQREFURV9XT1JLU1BBQ0VfQUNUSVZFX1VSTFwiLFxuICAgICAgICAgICAgICAgIGFjdGl2ZVVybDogYWN0aXZlVXJsXG4gICAgICAgICAgICB9KVxuICAgICAgICB9LFxuXG4gICAgICAgIHdhdGNoOiBmdW5jdGlvbihvbkNoYW5nZSkge1xuICAgICAgICAgICAgcmV0dXJuIHdhdGNoU3RhdGUoJ3dvcmtzcGFjZS5hY3RpdmVVcmwnLCBvbkNoYW5nZSk7XG4gICAgICAgIH1cbiAgICB9LFxuXG4gICAgcHJldmlld1VybDoge1xuXG4gICAgICAgIGdldDogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICByZXR1cm4gc3RvcmUuZ2V0U3RhdGUoKS53b3Jrc3BhY2UucHJldmlld1VybDtcbiAgICAgICAgfSxcblxuICAgICAgICBzZXQ6IGZ1bmN0aW9uKHByZXZpZXdVcmwpIHtcbiAgICAgICAgICAgIHN0b3JlLmRpc3BhdGNoKHtcbiAgICAgICAgICAgICAgICB0eXBlOiBcIlVQREFURV9XT1JLU1BBQ0VfUFJFVklFV19VUkxcIixcbiAgICAgICAgICAgICAgICBwcmV2aWV3VXJsOiBwcmV2aWV3VXJsXG4gICAgICAgICAgICB9KVxuICAgICAgICB9LFxuXG4gICAgICAgIHdhdGNoOiBmdW5jdGlvbihvbkNoYW5nZSkge1xuICAgICAgICAgICAgcmV0dXJuIHdhdGNoU3RhdGUoJ3dvcmtzcGFjZS5wcmV2aWV3VXJsJywgb25DaGFuZ2UpO1xuICAgICAgICB9XG4gICAgfSxcblxuICAgIGlzRGlydHk6IHtcblxuICAgICAgICBnZXQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgcmV0dXJuIHN0b3JlLmdldFN0YXRlKCkud29ya3NwYWNlLmlzRGlydHk7XG4gICAgICAgIH0sXG5cbiAgICAgICAgc2V0OiBmdW5jdGlvbihib29sKSB7XG4gICAgICAgICAgICBzdG9yZS5kaXNwYXRjaCh7XG4gICAgICAgICAgICAgICAgdHlwZTogXCJVUERBVEVfSVNfRElSVFlcIixcbiAgICAgICAgICAgICAgICBpc0RpcnR5OiBib29sXG4gICAgICAgICAgICB9KVxuICAgICAgICB9XG4gICAgfSxcblxuICAgIGVkaXRvckRhdGE6IHtcblxuICAgICAgICBnZXQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgcmV0dXJuIHN0b3JlLmdldFN0YXRlKCkud29ya3NwYWNlLmVkaXRvckRhdGE7XG4gICAgICAgIH0sXG5cbiAgICAgICAgc2V0OiBmdW5jdGlvbihlZGl0b3JEYXRhKSB7XG4gICAgICAgICAgICBzdG9yZS5kaXNwYXRjaCh7XG4gICAgICAgICAgICAgICAgdHlwZTogXCJVUERBVEVfRURJVE9SX0RBVEFcIixcbiAgICAgICAgICAgICAgICBlZGl0b3JEYXRhOiBlZGl0b3JEYXRhXG4gICAgICAgICAgICB9KVxuICAgICAgICB9XG5cbiAgICB9XG5cbn07XG5cbm1vZHVsZS5leHBvcnRzID0gd29ya3NwYWNlU3RhdGU7XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gYXBwL3NoYXJlZC9zdGF0ZS93b3Jrc3BhY2VTdGF0ZS5qcyJdLCJtYXBwaW5ncyI6Ijs7QUFDQTtBQUFBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBREE7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFGQTtBQUlBO0FBQ0E7QUFaQTtBQUNBO0FBY0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFGQTtBQUlBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFmQTtBQUNBO0FBaUJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRkE7QUFJQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBZkE7QUFDQTtBQWlCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUZBO0FBSUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQWZBO0FBQ0E7QUFpQkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFGQTtBQUlBO0FBWEE7QUFDQTtBQWFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRkE7QUFJQTtBQUNBO0FBWkE7QUFDQTtBQTVGQTtBQUNBO0FBMkdBIiwic291cmNlUm9vdCI6IiJ9");

/***/ },
/* 26 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(console) {'use strict';\n\n/**\n * Observes state and runs function when specific part of state in updated\n *\n * @param statePropert - a string of the selector for the property being observed in stave (eg 'workspace.editorData')\n * @param onChange - a function that is run when selected property in state in updated to new value (which is passed back as an argument in onChange)\n *\n * @returns unsubscribe function - stops this observation of the state\n */\n\nvar store = __webpack_require__(9),\n    getValue = __webpack_require__(27).get;\n\nvar watchStore = function watchStore(stateProperty, onChange) {\n\n    console.log(\"Registered state observation for '\" + stateProperty + \"'\");\n\n    var currentValue;\n\n    function handleChange() {\n        var previousValue = currentValue;\n        currentValue = getValue(store.getState(), stateProperty);\n\n        if (previousValue !== currentValue) {\n            onChange(currentValue, previousValue);\n            console.log(stateProperty + ' changed from \"', previousValue, '\" to \"', currentValue, '\"');\n        }\n    }\n\n    return store.subscribe(handleChange);\n};\n\nmodule.exports = watchStore;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjYuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vYXBwL3NoYXJlZC9zdGF0ZS93YXRjaFN0YXRlLmpzPzdiMzUiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBPYnNlcnZlcyBzdGF0ZSBhbmQgcnVucyBmdW5jdGlvbiB3aGVuIHNwZWNpZmljIHBhcnQgb2Ygc3RhdGUgaW4gdXBkYXRlZFxuICpcbiAqIEBwYXJhbSBzdGF0ZVByb3BlcnQgLSBhIHN0cmluZyBvZiB0aGUgc2VsZWN0b3IgZm9yIHRoZSBwcm9wZXJ0eSBiZWluZyBvYnNlcnZlZCBpbiBzdGF2ZSAoZWcgJ3dvcmtzcGFjZS5lZGl0b3JEYXRhJylcbiAqIEBwYXJhbSBvbkNoYW5nZSAtIGEgZnVuY3Rpb24gdGhhdCBpcyBydW4gd2hlbiBzZWxlY3RlZCBwcm9wZXJ0eSBpbiBzdGF0ZSBpbiB1cGRhdGVkIHRvIG5ldyB2YWx1ZSAod2hpY2ggaXMgcGFzc2VkIGJhY2sgYXMgYW4gYXJndW1lbnQgaW4gb25DaGFuZ2UpXG4gKlxuICogQHJldHVybnMgdW5zdWJzY3JpYmUgZnVuY3Rpb24gLSBzdG9wcyB0aGlzIG9ic2VydmF0aW9uIG9mIHRoZSBzdGF0ZVxuICovXG5cbnZhciBzdG9yZSA9IHJlcXVpcmUoJ3NoYXJlZC9zdGF0ZS9zdGF0ZScpLFxuICAgIGdldFZhbHVlID0gcmVxdWlyZSgnb2JqZWN0LXBhdGgnKS5nZXQ7XG5cbnZhciB3YXRjaFN0b3JlID0gZnVuY3Rpb24oc3RhdGVQcm9wZXJ0eSwgb25DaGFuZ2UpIHtcblxuICAgIGNvbnNvbGUubG9nKFwiUmVnaXN0ZXJlZCBzdGF0ZSBvYnNlcnZhdGlvbiBmb3IgJ1wiICsgc3RhdGVQcm9wZXJ0eSArIFwiJ1wiKTtcblxuICAgIHZhciBjdXJyZW50VmFsdWU7XG5cbiAgICBmdW5jdGlvbiBoYW5kbGVDaGFuZ2UoKSB7XG4gICAgICAgIHZhciBwcmV2aW91c1ZhbHVlID0gY3VycmVudFZhbHVlO1xuICAgICAgICBjdXJyZW50VmFsdWUgPSBnZXRWYWx1ZShzdG9yZS5nZXRTdGF0ZSgpLCBzdGF0ZVByb3BlcnR5KTtcblxuICAgICAgICBpZiAocHJldmlvdXNWYWx1ZSAhPT0gY3VycmVudFZhbHVlKSB7XG4gICAgICAgICAgICBvbkNoYW5nZShjdXJyZW50VmFsdWUsIHByZXZpb3VzVmFsdWUpO1xuICAgICAgICAgICAgY29uc29sZS5sb2coc3RhdGVQcm9wZXJ0eSArICcgY2hhbmdlZCBmcm9tIFwiJyxwcmV2aW91c1ZhbHVlLCdcIiB0byBcIicsY3VycmVudFZhbHVlLCdcIicpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIHN0b3JlLnN1YnNjcmliZShoYW5kbGVDaGFuZ2UpO1xuXG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IHdhdGNoU3RvcmU7XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gYXBwL3NoYXJlZC9zdGF0ZS93YXRjaFN0YXRlLmpzIl0sIm1hcHBpbmdzIjoiOztBQUFBOzs7Ozs7Ozs7QUFTQTtBQUFBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTs7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ },
/* 27 */
/***/ function(module, exports, __webpack_require__) {

	eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (root, factory){\n  'use strict';\n\n  /*istanbul ignore next:cant test*/\n  if (typeof module === 'object' && typeof module.exports === 'object') {\n    module.exports = factory();\n  } else if (true) {\n    // AMD. Register as an anonymous module.\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else {\n    // Browser globals\n    root.objectPath = factory();\n  }\n})(this, function(){\n  'use strict';\n\n  var toStr = Object.prototype.toString;\n  function hasOwnProperty(obj, prop) {\n    if(obj == null) {\n      return false\n    }\n    //to handle objects with null prototypes (too edge case?)\n    return Object.prototype.hasOwnProperty.call(obj, prop)\n  }\n\n  function isEmpty(value){\n    if (!value) {\n      return true;\n    }\n    if (isArray(value) && value.length === 0) {\n        return true;\n    } else if (typeof value !== 'string') {\n        for (var i in value) {\n            if (hasOwnProperty(value, i)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    return false;\n  }\n\n  function toString(type){\n    return toStr.call(type);\n  }\n\n  function isObject(obj){\n    return typeof obj === 'object' && toString(obj) === \"[object Object]\";\n  }\n\n  var isArray = Array.isArray || function(obj){\n    /*istanbul ignore next:cant test*/\n    return toStr.call(obj) === '[object Array]';\n  }\n\n  function isBoolean(obj){\n    return typeof obj === 'boolean' || toString(obj) === '[object Boolean]';\n  }\n\n  function getKey(key){\n    var intKey = parseInt(key);\n    if (intKey.toString() === key) {\n      return intKey;\n    }\n    return key;\n  }\n\n  function factory(options) {\n    options = options || {}\n\n    var objectPath = function(obj) {\n      return Object.keys(objectPath).reduce(function(proxy, prop) {\n        if(prop === 'create') {\n          return proxy;\n        }\n\n        /*istanbul ignore else*/\n        if (typeof objectPath[prop] === 'function') {\n          proxy[prop] = objectPath[prop].bind(objectPath, obj);\n        }\n\n        return proxy;\n      }, {});\n    };\n\n    function getShallowProperty(obj, prop) {\n      if (options.includeInheritedProps || (typeof prop === 'number' && Array.isArray(obj)) || hasOwnProperty(obj, prop)) {\n        return obj[prop];\n      }\n    }\n\n    function set(obj, path, value, doNotReplace){\n      if (typeof path === 'number') {\n        path = [path];\n      }\n      if (!path || path.length === 0) {\n        return obj;\n      }\n      if (typeof path === 'string') {\n        return set(obj, path.split('.').map(getKey), value, doNotReplace);\n      }\n      var currentPath = path[0];\n      var currentValue = getShallowProperty(obj, currentPath);\n      if (path.length === 1) {\n        if (currentValue === void 0 || !doNotReplace) {\n          obj[currentPath] = value;\n        }\n        return currentValue;\n      }\n\n      if (currentValue === void 0) {\n        //check if we assume an array\n        if(typeof path[1] === 'number') {\n          obj[currentPath] = [];\n        } else {\n          obj[currentPath] = {};\n        }\n      }\n\n      return set(obj[currentPath], path.slice(1), value, doNotReplace);\n    }\n\n    objectPath.has = function (obj, path) {\n      if (typeof path === 'number') {\n        path = [path];\n      } else if (typeof path === 'string') {\n        path = path.split('.');\n      }\n\n      if (!path || path.length === 0) {\n        return !!obj;\n      }\n\n      for (var i = 0; i < path.length; i++) {\n        var j = getKey(path[i]);\n\n        if((typeof j === 'number' && isArray(obj) && j < obj.length) ||\n          (options.includeInheritedProps ? (j in Object(obj)) : hasOwnProperty(obj, j))) {\n          obj = obj[j];\n        } else {\n          return false;\n        }\n      }\n\n      return true;\n    };\n\n    objectPath.ensureExists = function (obj, path, value){\n      return set(obj, path, value, true);\n    };\n\n    objectPath.set = function (obj, path, value, doNotReplace){\n      return set(obj, path, value, doNotReplace);\n    };\n\n    objectPath.insert = function (obj, path, value, at){\n      var arr = objectPath.get(obj, path);\n      at = ~~at;\n      if (!isArray(arr)) {\n        arr = [];\n        objectPath.set(obj, path, arr);\n      }\n      arr.splice(at, 0, value);\n    };\n\n    objectPath.empty = function(obj, path) {\n      if (isEmpty(path)) {\n        return void 0;\n      }\n      if (obj == null) {\n        return void 0;\n      }\n\n      var value, i;\n      if (!(value = objectPath.get(obj, path))) {\n        return void 0;\n      }\n\n      if (typeof value === 'string') {\n        return objectPath.set(obj, path, '');\n      } else if (isBoolean(value)) {\n        return objectPath.set(obj, path, false);\n      } else if (typeof value === 'number') {\n        return objectPath.set(obj, path, 0);\n      } else if (isArray(value)) {\n        value.length = 0;\n      } else if (isObject(value)) {\n        for (i in value) {\n          if (hasOwnProperty(value, i)) {\n            delete value[i];\n          }\n        }\n      } else {\n        return objectPath.set(obj, path, null);\n      }\n    };\n\n    objectPath.push = function (obj, path /*, values */){\n      var arr = objectPath.get(obj, path);\n      if (!isArray(arr)) {\n        arr = [];\n        objectPath.set(obj, path, arr);\n      }\n\n      arr.push.apply(arr, Array.prototype.slice.call(arguments, 2));\n    };\n\n    objectPath.coalesce = function (obj, paths, defaultValue) {\n      var value;\n\n      for (var i = 0, len = paths.length; i < len; i++) {\n        if ((value = objectPath.get(obj, paths[i])) !== void 0) {\n          return value;\n        }\n      }\n\n      return defaultValue;\n    };\n\n    objectPath.get = function (obj, path, defaultValue){\n      if (typeof path === 'number') {\n        path = [path];\n      }\n      if (!path || path.length === 0) {\n        return obj;\n      }\n      if (obj == null) {\n        return defaultValue;\n      }\n      if (typeof path === 'string') {\n        return objectPath.get(obj, path.split('.'), defaultValue);\n      }\n\n      var currentPath = getKey(path[0]);\n      var nextObj = getShallowProperty(obj, currentPath)\n      if (nextObj === void 0) {\n        return defaultValue;\n      }\n\n      if (path.length === 1) {\n        return nextObj;\n      }\n\n      return objectPath.get(obj[currentPath], path.slice(1), defaultValue);\n    };\n\n    objectPath.del = function del(obj, path) {\n      if (typeof path === 'number') {\n        path = [path];\n      }\n\n      if (obj == null) {\n        return obj;\n      }\n\n      if (isEmpty(path)) {\n        return obj;\n      }\n      if(typeof path === 'string') {\n        return objectPath.del(obj, path.split('.'));\n      }\n\n      var currentPath = getKey(path[0]);\n      var currentVal = getShallowProperty(obj, currentPath);\n      if(currentVal == null) {\n        return currentVal;\n      }\n\n      if(path.length === 1) {\n        if (isArray(obj)) {\n          obj.splice(currentPath, 1);\n        } else {\n          delete obj[currentPath];\n        }\n      } else {\n        if (obj[currentPath] !== void 0) {\n          return objectPath.del(obj[currentPath], path.slice(1));\n        }\n      }\n\n      return obj;\n    }\n\n    return objectPath;\n  }\n\n  var mod = factory();\n  mod.create = factory;\n  mod.withInheritedProps = factory({includeInheritedProps: true})\n  return mod;\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ },
/* 28 */
/***/ function(module, exports, __webpack_require__) {

	eval("\"use strict\";\n\nvar store = __webpack_require__(9);\n\nvar collectionState = {\n\n    get: function get() {\n        return store.getState().workspace.collectionData;\n    },\n\n    set: function set(collectionData) {\n        store.dispatch({\n            type: \"UPDATE_COLLECTION_DATA\",\n            collectionData: collectionData\n        });\n    }\n};\n\nmodule.exports = collectionState;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjguanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vYXBwL3NoYXJlZC9zdGF0ZS9jb2xsZWN0aW9uU3RhdGUuanM/YjRjZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcbnZhciBzdG9yZSA9IHJlcXVpcmUoJ3NoYXJlZC9zdGF0ZS9zdGF0ZS5qcycpO1xuXG52YXIgY29sbGVjdGlvblN0YXRlID0ge1xuXG4gICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiBzdG9yZS5nZXRTdGF0ZSgpLndvcmtzcGFjZS5jb2xsZWN0aW9uRGF0YTtcbiAgICB9LFxuXG4gICAgc2V0OiBmdW5jdGlvbiAoY29sbGVjdGlvbkRhdGEpIHtcbiAgICAgICAgc3RvcmUuZGlzcGF0Y2goe1xuICAgICAgICAgICAgdHlwZTogXCJVUERBVEVfQ09MTEVDVElPTl9EQVRBXCIsXG4gICAgICAgICAgICBjb2xsZWN0aW9uRGF0YTogY29sbGVjdGlvbkRhdGFcbiAgICAgICAgfSk7XG4gICAgfVxufTtcblxubW9kdWxlLmV4cG9ydHMgPSBjb2xsZWN0aW9uU3RhdGU7XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gYXBwL3NoYXJlZC9zdGF0ZS9jb2xsZWN0aW9uU3RhdGUuanMiXSwibWFwcGluZ3MiOiI7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRkE7QUFJQTtBQVhBO0FBQ0E7QUFhQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ },
/* 29 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(console) {'use strict';\n\nvar workspaceView = __webpack_require__(30),\n    navigationController = __webpack_require__(41),\n    browseController = __webpack_require__(44),\n    editController = __webpack_require__(52),\n    createController = __webpack_require__(58),\n    workspaceState = __webpack_require__(25),\n    previewController = __webpack_require__(66);\n\nvar workspaceController = {\n\n    init: function init() {\n        workspaceView.render();\n        navigationController.init();\n        this.updateWorkspace.onActiveScreenStateUpdate();\n        this.updateWorkspace.onActiveUrlStateUpdate();\n        this.bindWorkspaceExit();\n        previewController.init();\n\n        if (workspaceState.activeScreen.get().length <= 0) {\n            workspaceState.activeScreen.set('browse');\n        }\n    },\n\n    // Array of all state observations for the workspace so that they can be cancelled when leaving the workspace (or else it's end up being observed multiple times)\n    stateSubscriptions: [],\n\n    cancelStateSubscriptions: function cancelStateSubscriptions() {\n        var i,\n            unsubscriptions = this.stateSubscriptions,\n            unsubscriptionsLength = unsubscriptions.length;\n\n        for (i = 0; i < unsubscriptionsLength; i++) {\n            unsubscriptions[i]();\n        }\n    },\n\n    bindWorkspaceExit: function bindWorkspaceExit() {\n        //TODO this should be controlled by state, not DOM click\n        $('.js-nav-item').off().click(function () {\n            workspaceController.cancelStateSubscriptions();\n        });\n    },\n\n    updateWorkspace: {\n\n        onActiveScreenStateUpdate: function onActiveScreenStateUpdate() {\n            function updateWorkspace(newScreen) {\n                workspaceController.renderActiveScreen(newScreen);\n            }\n\n            var unsubscribe = workspaceState.activeScreen.watch(updateWorkspace);\n\n            workspaceController.stateSubscriptions.push(unsubscribe);\n        },\n\n        onActiveUrlStateUpdate: function onActiveUrlStateUpdate() {\n\n            function updateWorkspace(newUrl) {\n                // Switch to browse screen if active url changes on creator or editor\n                if (workspaceState.activeScreen.get() === \"create\" || workspaceState.activeScreen.get() === \"edit\") {\n                    workspaceState.activeScreen.set('browse');\n                    return;\n                }\n\n                // Browse already displayed, update preview (if necessary) and tree\n                if (newUrl !== previewController.getPreviewUri()) {\n                    previewController.updatePreview(newUrl);\n                }\n                browseController.selectBrowseNodeByUrl(newUrl);\n            }\n\n            var unsubscribe = workspaceState.activeUrl.watch(updateWorkspace);\n\n            workspaceController.stateSubscriptions.push(unsubscribe);\n        }\n\n    },\n\n    renderActiveScreen: function renderActiveScreen(activeScreen) {\n        switch (activeScreen) {\n            case 'browse':\n                {\n                    // console.log('Render browse workspace');\n                    navigationController.changeActiveItem(activeScreen);\n                    browseController.init();\n                    break;\n                }\n            case 'create':\n                {\n                    // console.log('Render create workspace');\n                    navigationController.changeActiveItem(activeScreen);\n                    createController.init();\n                    break;\n                }\n            case 'edit':\n                {\n                    // console.log('Render edit workspace');\n                    navigationController.changeActiveItem(activeScreen);\n                    editController.init();\n                    break;\n                }\n            default:\n                {\n                    console.log('Screen name \"%s\" is not recognised', activeScreen);\n                    break;\n                }\n        }\n    }\n\n};\n\nmodule.exports = workspaceController;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjkuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vYXBwL3dvcmtzcGFjZS93b3Jrc3BhY2VDb250cm9sbGVyLmpzP2FlOWEiXSwic291cmNlc0NvbnRlbnQiOlsiXG52YXIgd29ya3NwYWNlVmlldyA9IHJlcXVpcmUoJ3dvcmtzcGFjZS93b3Jrc3BhY2VWaWV3JyksXG4gICAgbmF2aWdhdGlvbkNvbnRyb2xsZXIgPSByZXF1aXJlKCd3b3Jrc3BhY2UvbmF2aWdhdGlvbi9uYXZpZ2F0aW9uQ29udHJvbGxlcicpLFxuICAgIGJyb3dzZUNvbnRyb2xsZXIgPSByZXF1aXJlKCd3b3Jrc3BhY2UvYnJvd3NlL2Jyb3dzZUNvbnRyb2xsZXInKSxcbiAgICBlZGl0Q29udHJvbGxlciA9IHJlcXVpcmUoJ3dvcmtzcGFjZS9lZGl0L2VkaXRDb250cm9sbGVyJyksXG4gICAgY3JlYXRlQ29udHJvbGxlciA9IHJlcXVpcmUoJ3dvcmtzcGFjZS9jcmVhdGUvY3JlYXRlQ29udHJvbGxlcicpLFxuICAgIHdvcmtzcGFjZVN0YXRlID0gcmVxdWlyZSgnc2hhcmVkL3N0YXRlL3dvcmtzcGFjZVN0YXRlJyksXG4gICAgcHJldmlld0NvbnRyb2xsZXIgPSByZXF1aXJlKCd3b3Jrc3BhY2UvcHJldmlldy9wcmV2aWV3Q29udHJvbGxlcicpO1xuXG52YXIgd29ya3NwYWNlQ29udHJvbGxlciA9IHtcblxuICAgIGluaXQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICB3b3Jrc3BhY2VWaWV3LnJlbmRlcigpO1xuICAgICAgICBuYXZpZ2F0aW9uQ29udHJvbGxlci5pbml0KCk7XG4gICAgICAgIHRoaXMudXBkYXRlV29ya3NwYWNlLm9uQWN0aXZlU2NyZWVuU3RhdGVVcGRhdGUoKTtcbiAgICAgICAgdGhpcy51cGRhdGVXb3Jrc3BhY2Uub25BY3RpdmVVcmxTdGF0ZVVwZGF0ZSgpO1xuICAgICAgICB0aGlzLmJpbmRXb3Jrc3BhY2VFeGl0KCk7XG4gICAgICAgIHByZXZpZXdDb250cm9sbGVyLmluaXQoKTtcblxuICAgICAgICBpZiAod29ya3NwYWNlU3RhdGUuYWN0aXZlU2NyZWVuLmdldCgpLmxlbmd0aCA8PSAwKSB7XG4gICAgICAgICAgICB3b3Jrc3BhY2VTdGF0ZS5hY3RpdmVTY3JlZW4uc2V0KCdicm93c2UnKTtcbiAgICAgICAgfVxuICAgIH0sXG5cbiAgICAvLyBBcnJheSBvZiBhbGwgc3RhdGUgb2JzZXJ2YXRpb25zIGZvciB0aGUgd29ya3NwYWNlIHNvIHRoYXQgdGhleSBjYW4gYmUgY2FuY2VsbGVkIHdoZW4gbGVhdmluZyB0aGUgd29ya3NwYWNlIChvciBlbHNlIGl0J3MgZW5kIHVwIGJlaW5nIG9ic2VydmVkIG11bHRpcGxlIHRpbWVzKVxuICAgIHN0YXRlU3Vic2NyaXB0aW9uczogW10sXG5cbiAgICBjYW5jZWxTdGF0ZVN1YnNjcmlwdGlvbnM6IGZ1bmN0aW9uKCkge1xuICAgICAgICB2YXIgaSxcbiAgICAgICAgICAgIHVuc3Vic2NyaXB0aW9ucyA9IHRoaXMuc3RhdGVTdWJzY3JpcHRpb25zLFxuICAgICAgICAgICAgdW5zdWJzY3JpcHRpb25zTGVuZ3RoID0gdW5zdWJzY3JpcHRpb25zLmxlbmd0aDtcblxuICAgICAgICBmb3IgKGkgPSAwOyBpIDwgdW5zdWJzY3JpcHRpb25zTGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIHVuc3Vic2NyaXB0aW9uc1tpXSgpO1xuICAgICAgICB9XG4gICAgfSxcblxuICAgIGJpbmRXb3Jrc3BhY2VFeGl0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgLy9UT0RPIHRoaXMgc2hvdWxkIGJlIGNvbnRyb2xsZWQgYnkgc3RhdGUsIG5vdCBET00gY2xpY2tcbiAgICAgICAgJCgnLmpzLW5hdi1pdGVtJykub2ZmKCkuY2xpY2soZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICB3b3Jrc3BhY2VDb250cm9sbGVyLmNhbmNlbFN0YXRlU3Vic2NyaXB0aW9ucygpO1xuICAgICAgICB9KTtcbiAgICB9LFxuXG4gICAgdXBkYXRlV29ya3NwYWNlOiB7XG5cbiAgICAgICAgb25BY3RpdmVTY3JlZW5TdGF0ZVVwZGF0ZTogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICBmdW5jdGlvbiB1cGRhdGVXb3Jrc3BhY2UobmV3U2NyZWVuKSB7XG4gICAgICAgICAgICAgICAgd29ya3NwYWNlQ29udHJvbGxlci5yZW5kZXJBY3RpdmVTY3JlZW4obmV3U2NyZWVuKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgdmFyIHVuc3Vic2NyaWJlID0gd29ya3NwYWNlU3RhdGUuYWN0aXZlU2NyZWVuLndhdGNoKHVwZGF0ZVdvcmtzcGFjZSk7XG5cbiAgICAgICAgICAgIHdvcmtzcGFjZUNvbnRyb2xsZXIuc3RhdGVTdWJzY3JpcHRpb25zLnB1c2godW5zdWJzY3JpYmUpO1xuICAgICAgICB9LFxuXG4gICAgICAgIG9uQWN0aXZlVXJsU3RhdGVVcGRhdGU6IGZ1bmN0aW9uKCkge1xuXG4gICAgICAgICAgICBmdW5jdGlvbiB1cGRhdGVXb3Jrc3BhY2UobmV3VXJsKSB7XG4gICAgICAgICAgICAgICAgLy8gU3dpdGNoIHRvIGJyb3dzZSBzY3JlZW4gaWYgYWN0aXZlIHVybCBjaGFuZ2VzIG9uIGNyZWF0b3Igb3IgZWRpdG9yXG4gICAgICAgICAgICAgICAgaWYgKHdvcmtzcGFjZVN0YXRlLmFjdGl2ZVNjcmVlbi5nZXQoKSA9PT0gXCJjcmVhdGVcIiB8fCB3b3Jrc3BhY2VTdGF0ZS5hY3RpdmVTY3JlZW4uZ2V0KCkgPT09IFwiZWRpdFwiKSB7XG4gICAgICAgICAgICAgICAgICAgIHdvcmtzcGFjZVN0YXRlLmFjdGl2ZVNjcmVlbi5zZXQoJ2Jyb3dzZScpO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgLy8gQnJvd3NlIGFscmVhZHkgZGlzcGxheWVkLCB1cGRhdGUgcHJldmlldyAoaWYgbmVjZXNzYXJ5KSBhbmQgdHJlZVxuICAgICAgICAgICAgICAgIGlmIChuZXdVcmwgIT09IHByZXZpZXdDb250cm9sbGVyLmdldFByZXZpZXdVcmkoKSkge1xuICAgICAgICAgICAgICAgICAgICBwcmV2aWV3Q29udHJvbGxlci51cGRhdGVQcmV2aWV3KG5ld1VybCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGJyb3dzZUNvbnRyb2xsZXIuc2VsZWN0QnJvd3NlTm9kZUJ5VXJsKG5ld1VybCk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHZhciB1bnN1YnNjcmliZSA9IHdvcmtzcGFjZVN0YXRlLmFjdGl2ZVVybC53YXRjaCh1cGRhdGVXb3Jrc3BhY2UpO1xuXG4gICAgICAgICAgICB3b3Jrc3BhY2VDb250cm9sbGVyLnN0YXRlU3Vic2NyaXB0aW9ucy5wdXNoKHVuc3Vic2NyaWJlKTtcblxuICAgICAgICB9XG5cbiAgICB9LFxuXG4gICAgcmVuZGVyQWN0aXZlU2NyZWVuOiBmdW5jdGlvbihhY3RpdmVTY3JlZW4pIHtcbiAgICAgICAgc3dpdGNoIChhY3RpdmVTY3JlZW4pIHtcbiAgICAgICAgICAgIGNhc2UgKCdicm93c2UnKToge1xuICAgICAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKCdSZW5kZXIgYnJvd3NlIHdvcmtzcGFjZScpO1xuICAgICAgICAgICAgICAgIG5hdmlnYXRpb25Db250cm9sbGVyLmNoYW5nZUFjdGl2ZUl0ZW0oYWN0aXZlU2NyZWVuKTtcbiAgICAgICAgICAgICAgICBicm93c2VDb250cm9sbGVyLmluaXQoKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNhc2UgKCdjcmVhdGUnKToge1xuICAgICAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKCdSZW5kZXIgY3JlYXRlIHdvcmtzcGFjZScpO1xuICAgICAgICAgICAgICAgIG5hdmlnYXRpb25Db250cm9sbGVyLmNoYW5nZUFjdGl2ZUl0ZW0oYWN0aXZlU2NyZWVuKTtcbiAgICAgICAgICAgICAgICBjcmVhdGVDb250cm9sbGVyLmluaXQoKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNhc2UgKCdlZGl0Jyk6IHtcbiAgICAgICAgICAgICAgICAvLyBjb25zb2xlLmxvZygnUmVuZGVyIGVkaXQgd29ya3NwYWNlJyk7XG4gICAgICAgICAgICAgICAgbmF2aWdhdGlvbkNvbnRyb2xsZXIuY2hhbmdlQWN0aXZlSXRlbShhY3RpdmVTY3JlZW4pO1xuICAgICAgICAgICAgICAgIGVkaXRDb250cm9sbGVyLmluaXQoKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGRlZmF1bHQ6IHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnU2NyZWVuIG5hbWUgXCIlc1wiIGlzIG5vdCByZWNvZ25pc2VkJywgYWN0aXZlU2NyZWVuKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxufTtcblxubW9kdWxlLmV4cG9ydHMgPSB3b3Jrc3BhY2VDb250cm9sbGVyO1xuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyBhcHAvd29ya3NwYWNlL3dvcmtzcGFjZUNvbnRyb2xsZXIuanMiXSwibWFwcGluZ3MiOiI7O0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQU9BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFqQ0E7QUFDQTtBQW1DQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQXRCQTtBQXdCQTtBQUNBO0FBakdBO0FBQ0E7QUFtR0E7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ },
/* 30 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nvar template = __webpack_require__(31);\n\nvar workspaceView = {\n    render: function render() {\n        document.getElementById('main').innerHTML = template();\n    }\n};\n\nmodule.exports = workspaceView;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzAuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vYXBwL3dvcmtzcGFjZS93b3Jrc3BhY2VWaWV3LmpzP2IzNmEiXSwic291cmNlc0NvbnRlbnQiOlsiXG52YXIgdGVtcGxhdGUgPSByZXF1aXJlKCcuL3dvcmtzcGFjZS5oYW5kbGViYXJzJyk7XG5cbnZhciB3b3Jrc3BhY2VWaWV3ID0ge1xuICAgIHJlbmRlcjogZnVuY3Rpb24oKSB7XG4gICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdtYWluJykuaW5uZXJIVE1MID0gdGVtcGxhdGUoKTtcbiAgICB9XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IHdvcmtzcGFjZVZpZXc7XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gYXBwL3dvcmtzcGFjZS93b3Jrc3BhY2VWaWV3LmpzIl0sIm1hcHBpbmdzIjoiOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUhBO0FBQ0E7QUFLQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ },
/* 31 */
/***/ function(module, exports, __webpack_require__) {

	eval("var Handlebars = __webpack_require__(32);\nfunction __default(obj) { return obj && (obj.__esModule ? obj[\"default\"] : obj); }\nmodule.exports = (Handlebars[\"default\"] || Handlebars).template({\"compiler\":[6,\">= 2.0.0-beta.1\"],\"main\":function(depth0,helpers,partials,data) {\n    var stack1;\n\n  return \"<nav class=\\\"panel col col--1 nav nav--workspace js-workspace-nav\\\" id=\\\"workspace-navigation\\\">\\n</nav>\\n<div class=\\\"panel col col--4 workspace-menu\\\" id=\\\"workspace-browse\\\">\\n    <!--<div class=\\\"margin-top--3\\\">\"\n    + ((stack1 = this.invokePartial(__webpack_require__(40),depth0,{\"name\":\"../shared/templatePartials/loadingAnimation\",\"hash\":{\"dark\":true,\"large\":true},\"data\":data,\"helpers\":helpers,\"partials\":partials})) != null ? stack1 : \"\")\n    + \"</div>-->\\n</div>\\n<section class=\\\"panel col col--7 workspace-browser\\\" id=\\\"workspace-preview\\\">\\n    <!--<div class=\\\"margin-top--3\\\">\"\n    + ((stack1 = this.invokePartial(__webpack_require__(40),depth0,{\"name\":\"../shared/templatePartials/loadingAnimation\",\"hash\":{\"dark\":true,\"large\":true},\"data\":data,\"helpers\":helpers,\"partials\":partials})) != null ? stack1 : \"\")\n    + \"</div>-->\\n</section>\\n\";\n},\"usePartial\":true,\"useData\":true});//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzEuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvd29ya3NwYWNlL3dvcmtzcGFjZS5oYW5kbGViYXJzP2Q2ZjEiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIEhhbmRsZWJhcnMgPSByZXF1aXJlKFwiL1VzZXJzL2NyaXNwaW5tZXJyaW1hbi9HaXQvb25zZGlnaXRhbC9mbG9yZW5jZS9zcmMvbm9kZV9tb2R1bGVzL2hhbmRsZWJhcnMvcnVudGltZS5qc1wiKTtcbmZ1bmN0aW9uIF9fZGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiAob2JqLl9fZXNNb2R1bGUgPyBvYmpbXCJkZWZhdWx0XCJdIDogb2JqKTsgfVxubW9kdWxlLmV4cG9ydHMgPSAoSGFuZGxlYmFyc1tcImRlZmF1bHRcIl0gfHwgSGFuZGxlYmFycykudGVtcGxhdGUoe1wiY29tcGlsZXJcIjpbNixcIj49IDIuMC4wLWJldGEuMVwiXSxcIm1haW5cIjpmdW5jdGlvbihkZXB0aDAsaGVscGVycyxwYXJ0aWFscyxkYXRhKSB7XG4gICAgdmFyIHN0YWNrMTtcblxuICByZXR1cm4gXCI8bmF2IGNsYXNzPVxcXCJwYW5lbCBjb2wgY29sLS0xIG5hdiBuYXYtLXdvcmtzcGFjZSBqcy13b3Jrc3BhY2UtbmF2XFxcIiBpZD1cXFwid29ya3NwYWNlLW5hdmlnYXRpb25cXFwiPlxcbjwvbmF2PlxcbjxkaXYgY2xhc3M9XFxcInBhbmVsIGNvbCBjb2wtLTQgd29ya3NwYWNlLW1lbnVcXFwiIGlkPVxcXCJ3b3Jrc3BhY2UtYnJvd3NlXFxcIj5cXG4gICAgPCEtLTxkaXYgY2xhc3M9XFxcIm1hcmdpbi10b3AtLTNcXFwiPlwiXG4gICAgKyAoKHN0YWNrMSA9IHRoaXMuaW52b2tlUGFydGlhbChyZXF1aXJlKFwiL1VzZXJzL2NyaXNwaW5tZXJyaW1hbi9HaXQvb25zZGlnaXRhbC9mbG9yZW5jZS9zcmMvYXBwL3NoYXJlZC90ZW1wbGF0ZVBhcnRpYWxzL2xvYWRpbmdBbmltYXRpb24uaGFuZGxlYmFyc1wiKSxkZXB0aDAse1wibmFtZVwiOlwiLi4vc2hhcmVkL3RlbXBsYXRlUGFydGlhbHMvbG9hZGluZ0FuaW1hdGlvblwiLFwiaGFzaFwiOntcImRhcmtcIjp0cnVlLFwibGFyZ2VcIjp0cnVlfSxcImRhdGFcIjpkYXRhLFwiaGVscGVyc1wiOmhlbHBlcnMsXCJwYXJ0aWFsc1wiOnBhcnRpYWxzfSkpICE9IG51bGwgPyBzdGFjazEgOiBcIlwiKVxuICAgICsgXCI8L2Rpdj4tLT5cXG48L2Rpdj5cXG48c2VjdGlvbiBjbGFzcz1cXFwicGFuZWwgY29sIGNvbC0tNyB3b3Jrc3BhY2UtYnJvd3NlclxcXCIgaWQ9XFxcIndvcmtzcGFjZS1wcmV2aWV3XFxcIj5cXG4gICAgPCEtLTxkaXYgY2xhc3M9XFxcIm1hcmdpbi10b3AtLTNcXFwiPlwiXG4gICAgKyAoKHN0YWNrMSA9IHRoaXMuaW52b2tlUGFydGlhbChyZXF1aXJlKFwiL1VzZXJzL2NyaXNwaW5tZXJyaW1hbi9HaXQvb25zZGlnaXRhbC9mbG9yZW5jZS9zcmMvYXBwL3NoYXJlZC90ZW1wbGF0ZVBhcnRpYWxzL2xvYWRpbmdBbmltYXRpb24uaGFuZGxlYmFyc1wiKSxkZXB0aDAse1wibmFtZVwiOlwiLi4vc2hhcmVkL3RlbXBsYXRlUGFydGlhbHMvbG9hZGluZ0FuaW1hdGlvblwiLFwiaGFzaFwiOntcImRhcmtcIjp0cnVlLFwibGFyZ2VcIjp0cnVlfSxcImRhdGFcIjpkYXRhLFwiaGVscGVyc1wiOmhlbHBlcnMsXCJwYXJ0aWFsc1wiOnBhcnRpYWxzfSkpICE9IG51bGwgPyBzdGFjazEgOiBcIlwiKVxuICAgICsgXCI8L2Rpdj4tLT5cXG48L3NlY3Rpb24+XFxuXCI7XG59LFwidXNlUGFydGlhbFwiOnRydWUsXCJ1c2VEYXRhXCI6dHJ1ZX0pO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vYXBwL3dvcmtzcGFjZS93b3Jrc3BhY2UuaGFuZGxlYmFyc1xuLy8gbW9kdWxlIGlkID0gMzFcbi8vIG1vZHVsZSBjaHVua3MgPSAxIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9");

/***/ },
/* 32 */
/***/ function(module, exports, __webpack_require__) {

	eval("// Create a simple path alias to allow browserify to resolve\n// the runtime on a supported path.\nmodule.exports = __webpack_require__(33)['default'];\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzIuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2hhbmRsZWJhcnMvcnVudGltZS5qcz81MjVkIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENyZWF0ZSBhIHNpbXBsZSBwYXRoIGFsaWFzIHRvIGFsbG93IGJyb3dzZXJpZnkgdG8gcmVzb2x2ZVxuLy8gdGhlIHJ1bnRpbWUgb24gYSBzdXBwb3J0ZWQgcGF0aC5cbm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9kaXN0L2Nqcy9oYW5kbGViYXJzLnJ1bnRpbWUnKVsnZGVmYXVsdCddO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2hhbmRsZWJhcnMvcnVudGltZS5qc1xuLy8gbW9kdWxlIGlkID0gMzJcbi8vIG1vZHVsZSBjaHVua3MgPSAxIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ },
/* 33 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nvar _interopRequireWildcard = function (obj) { return obj && obj.__esModule ? obj : { 'default': obj }; };\n\nexports.__esModule = true;\n\nvar _import = __webpack_require__(34);\n\nvar base = _interopRequireWildcard(_import);\n\n// Each of these augment the Handlebars object. No need to setup here.\n// (This is done to easily share code between commonjs and browse envs)\n\nvar _SafeString = __webpack_require__(37);\n\nvar _SafeString2 = _interopRequireWildcard(_SafeString);\n\nvar _Exception = __webpack_require__(36);\n\nvar _Exception2 = _interopRequireWildcard(_Exception);\n\nvar _import2 = __webpack_require__(35);\n\nvar Utils = _interopRequireWildcard(_import2);\n\nvar _import3 = __webpack_require__(38);\n\nvar runtime = _interopRequireWildcard(_import3);\n\nvar _noConflict = __webpack_require__(39);\n\nvar _noConflict2 = _interopRequireWildcard(_noConflict);\n\n// For compatibility and usage outside of module systems, make the Handlebars object a namespace\nfunction create() {\n  var hb = new base.HandlebarsEnvironment();\n\n  Utils.extend(hb, base);\n  hb.SafeString = _SafeString2['default'];\n  hb.Exception = _Exception2['default'];\n  hb.Utils = Utils;\n  hb.escapeExpression = Utils.escapeExpression;\n\n  hb.VM = runtime;\n  hb.template = function (spec) {\n    return runtime.template(spec, hb);\n  };\n\n  return hb;\n}\n\nvar inst = create();\ninst.create = create;\n\n_noConflict2['default'](inst);\n\ninst['default'] = inst;\n\nexports['default'] = inst;\nmodule.exports = exports['default'];//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2hhbmRsZWJhcnMvZGlzdC9janMvaGFuZGxlYmFycy5ydW50aW1lLmpzP2M5OTEiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQgPSBmdW5jdGlvbiAob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7ICdkZWZhdWx0Jzogb2JqIH07IH07XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5cbnZhciBfaW1wb3J0ID0gcmVxdWlyZSgnLi9oYW5kbGViYXJzL2Jhc2UnKTtcblxudmFyIGJhc2UgPSBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZChfaW1wb3J0KTtcblxuLy8gRWFjaCBvZiB0aGVzZSBhdWdtZW50IHRoZSBIYW5kbGViYXJzIG9iamVjdC4gTm8gbmVlZCB0byBzZXR1cCBoZXJlLlxuLy8gKFRoaXMgaXMgZG9uZSB0byBlYXNpbHkgc2hhcmUgY29kZSBiZXR3ZWVuIGNvbW1vbmpzIGFuZCBicm93c2UgZW52cylcblxudmFyIF9TYWZlU3RyaW5nID0gcmVxdWlyZSgnLi9oYW5kbGViYXJzL3NhZmUtc3RyaW5nJyk7XG5cbnZhciBfU2FmZVN0cmluZzIgPSBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZChfU2FmZVN0cmluZyk7XG5cbnZhciBfRXhjZXB0aW9uID0gcmVxdWlyZSgnLi9oYW5kbGViYXJzL2V4Y2VwdGlvbicpO1xuXG52YXIgX0V4Y2VwdGlvbjIgPSBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZChfRXhjZXB0aW9uKTtcblxudmFyIF9pbXBvcnQyID0gcmVxdWlyZSgnLi9oYW5kbGViYXJzL3V0aWxzJyk7XG5cbnZhciBVdGlscyA9IF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkKF9pbXBvcnQyKTtcblxudmFyIF9pbXBvcnQzID0gcmVxdWlyZSgnLi9oYW5kbGViYXJzL3J1bnRpbWUnKTtcblxudmFyIHJ1bnRpbWUgPSBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZChfaW1wb3J0Myk7XG5cbnZhciBfbm9Db25mbGljdCA9IHJlcXVpcmUoJy4vaGFuZGxlYmFycy9uby1jb25mbGljdCcpO1xuXG52YXIgX25vQ29uZmxpY3QyID0gX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQoX25vQ29uZmxpY3QpO1xuXG4vLyBGb3IgY29tcGF0aWJpbGl0eSBhbmQgdXNhZ2Ugb3V0c2lkZSBvZiBtb2R1bGUgc3lzdGVtcywgbWFrZSB0aGUgSGFuZGxlYmFycyBvYmplY3QgYSBuYW1lc3BhY2VcbmZ1bmN0aW9uIGNyZWF0ZSgpIHtcbiAgdmFyIGhiID0gbmV3IGJhc2UuSGFuZGxlYmFyc0Vudmlyb25tZW50KCk7XG5cbiAgVXRpbHMuZXh0ZW5kKGhiLCBiYXNlKTtcbiAgaGIuU2FmZVN0cmluZyA9IF9TYWZlU3RyaW5nMlsnZGVmYXVsdCddO1xuICBoYi5FeGNlcHRpb24gPSBfRXhjZXB0aW9uMlsnZGVmYXVsdCddO1xuICBoYi5VdGlscyA9IFV0aWxzO1xuICBoYi5lc2NhcGVFeHByZXNzaW9uID0gVXRpbHMuZXNjYXBlRXhwcmVzc2lvbjtcblxuICBoYi5WTSA9IHJ1bnRpbWU7XG4gIGhiLnRlbXBsYXRlID0gZnVuY3Rpb24gKHNwZWMpIHtcbiAgICByZXR1cm4gcnVudGltZS50ZW1wbGF0ZShzcGVjLCBoYik7XG4gIH07XG5cbiAgcmV0dXJuIGhiO1xufVxuXG52YXIgaW5zdCA9IGNyZWF0ZSgpO1xuaW5zdC5jcmVhdGUgPSBjcmVhdGU7XG5cbl9ub0NvbmZsaWN0MlsnZGVmYXVsdCddKGluc3QpO1xuXG5pbnN0WydkZWZhdWx0J10gPSBpbnN0O1xuXG5leHBvcnRzWydkZWZhdWx0J10gPSBpbnN0O1xubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzWydkZWZhdWx0J107XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2hhbmRsZWJhcnMvZGlzdC9janMvaGFuZGxlYmFycy5ydW50aW1lLmpzXG4vLyBtb2R1bGUgaWQgPSAzM1xuLy8gbW9kdWxlIGNodW5rcyA9IDEiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ },
/* 34 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(console) {'use strict';\n\nvar _interopRequireWildcard = function (obj) { return obj && obj.__esModule ? obj : { 'default': obj }; };\n\nexports.__esModule = true;\nexports.HandlebarsEnvironment = HandlebarsEnvironment;\nexports.createFrame = createFrame;\n\nvar _import = __webpack_require__(35);\n\nvar Utils = _interopRequireWildcard(_import);\n\nvar _Exception = __webpack_require__(36);\n\nvar _Exception2 = _interopRequireWildcard(_Exception);\n\nvar VERSION = '3.0.1';\nexports.VERSION = VERSION;\nvar COMPILER_REVISION = 6;\n\nexports.COMPILER_REVISION = COMPILER_REVISION;\nvar REVISION_CHANGES = {\n  1: '<= 1.0.rc.2', // 1.0.rc.2 is actually rev2 but doesn't report it\n  2: '== 1.0.0-rc.3',\n  3: '== 1.0.0-rc.4',\n  4: '== 1.x.x',\n  5: '== 2.0.0-alpha.x',\n  6: '>= 2.0.0-beta.1'\n};\n\nexports.REVISION_CHANGES = REVISION_CHANGES;\nvar isArray = Utils.isArray,\n    isFunction = Utils.isFunction,\n    toString = Utils.toString,\n    objectType = '[object Object]';\n\nfunction HandlebarsEnvironment(helpers, partials) {\n  this.helpers = helpers || {};\n  this.partials = partials || {};\n\n  registerDefaultHelpers(this);\n}\n\nHandlebarsEnvironment.prototype = {\n  constructor: HandlebarsEnvironment,\n\n  logger: logger,\n  log: log,\n\n  registerHelper: function registerHelper(name, fn) {\n    if (toString.call(name) === objectType) {\n      if (fn) {\n        throw new _Exception2['default']('Arg not supported with multiple helpers');\n      }\n      Utils.extend(this.helpers, name);\n    } else {\n      this.helpers[name] = fn;\n    }\n  },\n  unregisterHelper: function unregisterHelper(name) {\n    delete this.helpers[name];\n  },\n\n  registerPartial: function registerPartial(name, partial) {\n    if (toString.call(name) === objectType) {\n      Utils.extend(this.partials, name);\n    } else {\n      if (typeof partial === 'undefined') {\n        throw new _Exception2['default']('Attempting to register a partial as undefined');\n      }\n      this.partials[name] = partial;\n    }\n  },\n  unregisterPartial: function unregisterPartial(name) {\n    delete this.partials[name];\n  }\n};\n\nfunction registerDefaultHelpers(instance) {\n  instance.registerHelper('helperMissing', function () {\n    if (arguments.length === 1) {\n      // A missing field in a {{foo}} constuct.\n      return undefined;\n    } else {\n      // Someone is actually trying to call something, blow up.\n      throw new _Exception2['default']('Missing helper: \"' + arguments[arguments.length - 1].name + '\"');\n    }\n  });\n\n  instance.registerHelper('blockHelperMissing', function (context, options) {\n    var inverse = options.inverse,\n        fn = options.fn;\n\n    if (context === true) {\n      return fn(this);\n    } else if (context === false || context == null) {\n      return inverse(this);\n    } else if (isArray(context)) {\n      if (context.length > 0) {\n        if (options.ids) {\n          options.ids = [options.name];\n        }\n\n        return instance.helpers.each(context, options);\n      } else {\n        return inverse(this);\n      }\n    } else {\n      if (options.data && options.ids) {\n        var data = createFrame(options.data);\n        data.contextPath = Utils.appendContextPath(options.data.contextPath, options.name);\n        options = { data: data };\n      }\n\n      return fn(context, options);\n    }\n  });\n\n  instance.registerHelper('each', function (context, options) {\n    if (!options) {\n      throw new _Exception2['default']('Must pass iterator to #each');\n    }\n\n    var fn = options.fn,\n        inverse = options.inverse,\n        i = 0,\n        ret = '',\n        data = undefined,\n        contextPath = undefined;\n\n    if (options.data && options.ids) {\n      contextPath = Utils.appendContextPath(options.data.contextPath, options.ids[0]) + '.';\n    }\n\n    if (isFunction(context)) {\n      context = context.call(this);\n    }\n\n    if (options.data) {\n      data = createFrame(options.data);\n    }\n\n    function execIteration(field, index, last) {\n      if (data) {\n        data.key = field;\n        data.index = index;\n        data.first = index === 0;\n        data.last = !!last;\n\n        if (contextPath) {\n          data.contextPath = contextPath + field;\n        }\n      }\n\n      ret = ret + fn(context[field], {\n        data: data,\n        blockParams: Utils.blockParams([context[field], field], [contextPath + field, null])\n      });\n    }\n\n    if (context && typeof context === 'object') {\n      if (isArray(context)) {\n        for (var j = context.length; i < j; i++) {\n          execIteration(i, i, i === context.length - 1);\n        }\n      } else {\n        var priorKey = undefined;\n\n        for (var key in context) {\n          if (context.hasOwnProperty(key)) {\n            // We're running the iterations one step out of sync so we can detect\n            // the last iteration without have to scan the object twice and create\n            // an itermediate keys array.\n            if (priorKey) {\n              execIteration(priorKey, i - 1);\n            }\n            priorKey = key;\n            i++;\n          }\n        }\n        if (priorKey) {\n          execIteration(priorKey, i - 1, true);\n        }\n      }\n    }\n\n    if (i === 0) {\n      ret = inverse(this);\n    }\n\n    return ret;\n  });\n\n  instance.registerHelper('if', function (conditional, options) {\n    if (isFunction(conditional)) {\n      conditional = conditional.call(this);\n    }\n\n    // Default behavior is to render the positive path if the value is truthy and not empty.\n    // The `includeZero` option may be set to treat the condtional as purely not empty based on the\n    // behavior of isEmpty. Effectively this determines if 0 is handled by the positive path or negative.\n    if (!options.hash.includeZero && !conditional || Utils.isEmpty(conditional)) {\n      return options.inverse(this);\n    } else {\n      return options.fn(this);\n    }\n  });\n\n  instance.registerHelper('unless', function (conditional, options) {\n    return instance.helpers['if'].call(this, conditional, { fn: options.inverse, inverse: options.fn, hash: options.hash });\n  });\n\n  instance.registerHelper('with', function (context, options) {\n    if (isFunction(context)) {\n      context = context.call(this);\n    }\n\n    var fn = options.fn;\n\n    if (!Utils.isEmpty(context)) {\n      if (options.data && options.ids) {\n        var data = createFrame(options.data);\n        data.contextPath = Utils.appendContextPath(options.data.contextPath, options.ids[0]);\n        options = { data: data };\n      }\n\n      return fn(context, options);\n    } else {\n      return options.inverse(this);\n    }\n  });\n\n  instance.registerHelper('log', function (message, options) {\n    var level = options.data && options.data.level != null ? parseInt(options.data.level, 10) : 1;\n    instance.log(level, message);\n  });\n\n  instance.registerHelper('lookup', function (obj, field) {\n    return obj && obj[field];\n  });\n}\n\nvar logger = {\n  methodMap: { 0: 'debug', 1: 'info', 2: 'warn', 3: 'error' },\n\n  // State enum\n  DEBUG: 0,\n  INFO: 1,\n  WARN: 2,\n  ERROR: 3,\n  level: 1,\n\n  // Can be overridden in the host environment\n  log: function log(level, message) {\n    if (typeof console !== 'undefined' && logger.level <= level) {\n      var method = logger.methodMap[level];\n      (console[method] || console.log).call(console, message); // eslint-disable-line no-console\n    }\n  }\n};\n\nexports.logger = logger;\nvar log = logger.log;\n\nexports.log = log;\n\nfunction createFrame(object) {\n  var frame = Utils.extend({}, object);\n  frame._parent = object;\n  return frame;\n}\n\n/* [args, ]options */\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzQuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2hhbmRsZWJhcnMvZGlzdC9janMvaGFuZGxlYmFycy9iYXNlLmpzPzc4ZWYiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQgPSBmdW5jdGlvbiAob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7ICdkZWZhdWx0Jzogb2JqIH07IH07XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5leHBvcnRzLkhhbmRsZWJhcnNFbnZpcm9ubWVudCA9IEhhbmRsZWJhcnNFbnZpcm9ubWVudDtcbmV4cG9ydHMuY3JlYXRlRnJhbWUgPSBjcmVhdGVGcmFtZTtcblxudmFyIF9pbXBvcnQgPSByZXF1aXJlKCcuL3V0aWxzJyk7XG5cbnZhciBVdGlscyA9IF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkKF9pbXBvcnQpO1xuXG52YXIgX0V4Y2VwdGlvbiA9IHJlcXVpcmUoJy4vZXhjZXB0aW9uJyk7XG5cbnZhciBfRXhjZXB0aW9uMiA9IF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkKF9FeGNlcHRpb24pO1xuXG52YXIgVkVSU0lPTiA9ICczLjAuMSc7XG5leHBvcnRzLlZFUlNJT04gPSBWRVJTSU9OO1xudmFyIENPTVBJTEVSX1JFVklTSU9OID0gNjtcblxuZXhwb3J0cy5DT01QSUxFUl9SRVZJU0lPTiA9IENPTVBJTEVSX1JFVklTSU9OO1xudmFyIFJFVklTSU9OX0NIQU5HRVMgPSB7XG4gIDE6ICc8PSAxLjAucmMuMicsIC8vIDEuMC5yYy4yIGlzIGFjdHVhbGx5IHJldjIgYnV0IGRvZXNuJ3QgcmVwb3J0IGl0XG4gIDI6ICc9PSAxLjAuMC1yYy4zJyxcbiAgMzogJz09IDEuMC4wLXJjLjQnLFxuICA0OiAnPT0gMS54LngnLFxuICA1OiAnPT0gMi4wLjAtYWxwaGEueCcsXG4gIDY6ICc+PSAyLjAuMC1iZXRhLjEnXG59O1xuXG5leHBvcnRzLlJFVklTSU9OX0NIQU5HRVMgPSBSRVZJU0lPTl9DSEFOR0VTO1xudmFyIGlzQXJyYXkgPSBVdGlscy5pc0FycmF5LFxuICAgIGlzRnVuY3Rpb24gPSBVdGlscy5pc0Z1bmN0aW9uLFxuICAgIHRvU3RyaW5nID0gVXRpbHMudG9TdHJpbmcsXG4gICAgb2JqZWN0VHlwZSA9ICdbb2JqZWN0IE9iamVjdF0nO1xuXG5mdW5jdGlvbiBIYW5kbGViYXJzRW52aXJvbm1lbnQoaGVscGVycywgcGFydGlhbHMpIHtcbiAgdGhpcy5oZWxwZXJzID0gaGVscGVycyB8fCB7fTtcbiAgdGhpcy5wYXJ0aWFscyA9IHBhcnRpYWxzIHx8IHt9O1xuXG4gIHJlZ2lzdGVyRGVmYXVsdEhlbHBlcnModGhpcyk7XG59XG5cbkhhbmRsZWJhcnNFbnZpcm9ubWVudC5wcm90b3R5cGUgPSB7XG4gIGNvbnN0cnVjdG9yOiBIYW5kbGViYXJzRW52aXJvbm1lbnQsXG5cbiAgbG9nZ2VyOiBsb2dnZXIsXG4gIGxvZzogbG9nLFxuXG4gIHJlZ2lzdGVySGVscGVyOiBmdW5jdGlvbiByZWdpc3RlckhlbHBlcihuYW1lLCBmbikge1xuICAgIGlmICh0b1N0cmluZy5jYWxsKG5hbWUpID09PSBvYmplY3RUeXBlKSB7XG4gICAgICBpZiAoZm4pIHtcbiAgICAgICAgdGhyb3cgbmV3IF9FeGNlcHRpb24yWydkZWZhdWx0J10oJ0FyZyBub3Qgc3VwcG9ydGVkIHdpdGggbXVsdGlwbGUgaGVscGVycycpO1xuICAgICAgfVxuICAgICAgVXRpbHMuZXh0ZW5kKHRoaXMuaGVscGVycywgbmFtZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuaGVscGVyc1tuYW1lXSA9IGZuO1xuICAgIH1cbiAgfSxcbiAgdW5yZWdpc3RlckhlbHBlcjogZnVuY3Rpb24gdW5yZWdpc3RlckhlbHBlcihuYW1lKSB7XG4gICAgZGVsZXRlIHRoaXMuaGVscGVyc1tuYW1lXTtcbiAgfSxcblxuICByZWdpc3RlclBhcnRpYWw6IGZ1bmN0aW9uIHJlZ2lzdGVyUGFydGlhbChuYW1lLCBwYXJ0aWFsKSB7XG4gICAgaWYgKHRvU3RyaW5nLmNhbGwobmFtZSkgPT09IG9iamVjdFR5cGUpIHtcbiAgICAgIFV0aWxzLmV4dGVuZCh0aGlzLnBhcnRpYWxzLCBuYW1lKTtcbiAgICB9IGVsc2Uge1xuICAgICAgaWYgKHR5cGVvZiBwYXJ0aWFsID09PSAndW5kZWZpbmVkJykge1xuICAgICAgICB0aHJvdyBuZXcgX0V4Y2VwdGlvbjJbJ2RlZmF1bHQnXSgnQXR0ZW1wdGluZyB0byByZWdpc3RlciBhIHBhcnRpYWwgYXMgdW5kZWZpbmVkJyk7XG4gICAgICB9XG4gICAgICB0aGlzLnBhcnRpYWxzW25hbWVdID0gcGFydGlhbDtcbiAgICB9XG4gIH0sXG4gIHVucmVnaXN0ZXJQYXJ0aWFsOiBmdW5jdGlvbiB1bnJlZ2lzdGVyUGFydGlhbChuYW1lKSB7XG4gICAgZGVsZXRlIHRoaXMucGFydGlhbHNbbmFtZV07XG4gIH1cbn07XG5cbmZ1bmN0aW9uIHJlZ2lzdGVyRGVmYXVsdEhlbHBlcnMoaW5zdGFuY2UpIHtcbiAgaW5zdGFuY2UucmVnaXN0ZXJIZWxwZXIoJ2hlbHBlck1pc3NpbmcnLCBmdW5jdGlvbiAoKSB7XG4gICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPT09IDEpIHtcbiAgICAgIC8vIEEgbWlzc2luZyBmaWVsZCBpbiBhIHt7Zm9vfX0gY29uc3R1Y3QuXG4gICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH0gZWxzZSB7XG4gICAgICAvLyBTb21lb25lIGlzIGFjdHVhbGx5IHRyeWluZyB0byBjYWxsIHNvbWV0aGluZywgYmxvdyB1cC5cbiAgICAgIHRocm93IG5ldyBfRXhjZXB0aW9uMlsnZGVmYXVsdCddKCdNaXNzaW5nIGhlbHBlcjogXCInICsgYXJndW1lbnRzW2FyZ3VtZW50cy5sZW5ndGggLSAxXS5uYW1lICsgJ1wiJyk7XG4gICAgfVxuICB9KTtcblxuICBpbnN0YW5jZS5yZWdpc3RlckhlbHBlcignYmxvY2tIZWxwZXJNaXNzaW5nJywgZnVuY3Rpb24gKGNvbnRleHQsIG9wdGlvbnMpIHtcbiAgICB2YXIgaW52ZXJzZSA9IG9wdGlvbnMuaW52ZXJzZSxcbiAgICAgICAgZm4gPSBvcHRpb25zLmZuO1xuXG4gICAgaWYgKGNvbnRleHQgPT09IHRydWUpIHtcbiAgICAgIHJldHVybiBmbih0aGlzKTtcbiAgICB9IGVsc2UgaWYgKGNvbnRleHQgPT09IGZhbHNlIHx8IGNvbnRleHQgPT0gbnVsbCkge1xuICAgICAgcmV0dXJuIGludmVyc2UodGhpcyk7XG4gICAgfSBlbHNlIGlmIChpc0FycmF5KGNvbnRleHQpKSB7XG4gICAgICBpZiAoY29udGV4dC5sZW5ndGggPiAwKSB7XG4gICAgICAgIGlmIChvcHRpb25zLmlkcykge1xuICAgICAgICAgIG9wdGlvbnMuaWRzID0gW29wdGlvbnMubmFtZV07XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gaW5zdGFuY2UuaGVscGVycy5lYWNoKGNvbnRleHQsIG9wdGlvbnMpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIGludmVyc2UodGhpcyk7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIGlmIChvcHRpb25zLmRhdGEgJiYgb3B0aW9ucy5pZHMpIHtcbiAgICAgICAgdmFyIGRhdGEgPSBjcmVhdGVGcmFtZShvcHRpb25zLmRhdGEpO1xuICAgICAgICBkYXRhLmNvbnRleHRQYXRoID0gVXRpbHMuYXBwZW5kQ29udGV4dFBhdGgob3B0aW9ucy5kYXRhLmNvbnRleHRQYXRoLCBvcHRpb25zLm5hbWUpO1xuICAgICAgICBvcHRpb25zID0geyBkYXRhOiBkYXRhIH07XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBmbihjb250ZXh0LCBvcHRpb25zKTtcbiAgICB9XG4gIH0pO1xuXG4gIGluc3RhbmNlLnJlZ2lzdGVySGVscGVyKCdlYWNoJywgZnVuY3Rpb24gKGNvbnRleHQsIG9wdGlvbnMpIHtcbiAgICBpZiAoIW9wdGlvbnMpIHtcbiAgICAgIHRocm93IG5ldyBfRXhjZXB0aW9uMlsnZGVmYXVsdCddKCdNdXN0IHBhc3MgaXRlcmF0b3IgdG8gI2VhY2gnKTtcbiAgICB9XG5cbiAgICB2YXIgZm4gPSBvcHRpb25zLmZuLFxuICAgICAgICBpbnZlcnNlID0gb3B0aW9ucy5pbnZlcnNlLFxuICAgICAgICBpID0gMCxcbiAgICAgICAgcmV0ID0gJycsXG4gICAgICAgIGRhdGEgPSB1bmRlZmluZWQsXG4gICAgICAgIGNvbnRleHRQYXRoID0gdW5kZWZpbmVkO1xuXG4gICAgaWYgKG9wdGlvbnMuZGF0YSAmJiBvcHRpb25zLmlkcykge1xuICAgICAgY29udGV4dFBhdGggPSBVdGlscy5hcHBlbmRDb250ZXh0UGF0aChvcHRpb25zLmRhdGEuY29udGV4dFBhdGgsIG9wdGlvbnMuaWRzWzBdKSArICcuJztcbiAgICB9XG5cbiAgICBpZiAoaXNGdW5jdGlvbihjb250ZXh0KSkge1xuICAgICAgY29udGV4dCA9IGNvbnRleHQuY2FsbCh0aGlzKTtcbiAgICB9XG5cbiAgICBpZiAob3B0aW9ucy5kYXRhKSB7XG4gICAgICBkYXRhID0gY3JlYXRlRnJhbWUob3B0aW9ucy5kYXRhKTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBleGVjSXRlcmF0aW9uKGZpZWxkLCBpbmRleCwgbGFzdCkge1xuICAgICAgaWYgKGRhdGEpIHtcbiAgICAgICAgZGF0YS5rZXkgPSBmaWVsZDtcbiAgICAgICAgZGF0YS5pbmRleCA9IGluZGV4O1xuICAgICAgICBkYXRhLmZpcnN0ID0gaW5kZXggPT09IDA7XG4gICAgICAgIGRhdGEubGFzdCA9ICEhbGFzdDtcblxuICAgICAgICBpZiAoY29udGV4dFBhdGgpIHtcbiAgICAgICAgICBkYXRhLmNvbnRleHRQYXRoID0gY29udGV4dFBhdGggKyBmaWVsZDtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICByZXQgPSByZXQgKyBmbihjb250ZXh0W2ZpZWxkXSwge1xuICAgICAgICBkYXRhOiBkYXRhLFxuICAgICAgICBibG9ja1BhcmFtczogVXRpbHMuYmxvY2tQYXJhbXMoW2NvbnRleHRbZmllbGRdLCBmaWVsZF0sIFtjb250ZXh0UGF0aCArIGZpZWxkLCBudWxsXSlcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIGlmIChjb250ZXh0ICYmIHR5cGVvZiBjb250ZXh0ID09PSAnb2JqZWN0Jykge1xuICAgICAgaWYgKGlzQXJyYXkoY29udGV4dCkpIHtcbiAgICAgICAgZm9yICh2YXIgaiA9IGNvbnRleHQubGVuZ3RoOyBpIDwgajsgaSsrKSB7XG4gICAgICAgICAgZXhlY0l0ZXJhdGlvbihpLCBpLCBpID09PSBjb250ZXh0Lmxlbmd0aCAtIDEpO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB2YXIgcHJpb3JLZXkgPSB1bmRlZmluZWQ7XG5cbiAgICAgICAgZm9yICh2YXIga2V5IGluIGNvbnRleHQpIHtcbiAgICAgICAgICBpZiAoY29udGV4dC5oYXNPd25Qcm9wZXJ0eShrZXkpKSB7XG4gICAgICAgICAgICAvLyBXZSdyZSBydW5uaW5nIHRoZSBpdGVyYXRpb25zIG9uZSBzdGVwIG91dCBvZiBzeW5jIHNvIHdlIGNhbiBkZXRlY3RcbiAgICAgICAgICAgIC8vIHRoZSBsYXN0IGl0ZXJhdGlvbiB3aXRob3V0IGhhdmUgdG8gc2NhbiB0aGUgb2JqZWN0IHR3aWNlIGFuZCBjcmVhdGVcbiAgICAgICAgICAgIC8vIGFuIGl0ZXJtZWRpYXRlIGtleXMgYXJyYXkuXG4gICAgICAgICAgICBpZiAocHJpb3JLZXkpIHtcbiAgICAgICAgICAgICAgZXhlY0l0ZXJhdGlvbihwcmlvcktleSwgaSAtIDEpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcHJpb3JLZXkgPSBrZXk7XG4gICAgICAgICAgICBpKys7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlmIChwcmlvcktleSkge1xuICAgICAgICAgIGV4ZWNJdGVyYXRpb24ocHJpb3JLZXksIGkgLSAxLCB0cnVlKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIGlmIChpID09PSAwKSB7XG4gICAgICByZXQgPSBpbnZlcnNlKHRoaXMpO1xuICAgIH1cblxuICAgIHJldHVybiByZXQ7XG4gIH0pO1xuXG4gIGluc3RhbmNlLnJlZ2lzdGVySGVscGVyKCdpZicsIGZ1bmN0aW9uIChjb25kaXRpb25hbCwgb3B0aW9ucykge1xuICAgIGlmIChpc0Z1bmN0aW9uKGNvbmRpdGlvbmFsKSkge1xuICAgICAgY29uZGl0aW9uYWwgPSBjb25kaXRpb25hbC5jYWxsKHRoaXMpO1xuICAgIH1cblxuICAgIC8vIERlZmF1bHQgYmVoYXZpb3IgaXMgdG8gcmVuZGVyIHRoZSBwb3NpdGl2ZSBwYXRoIGlmIHRoZSB2YWx1ZSBpcyB0cnV0aHkgYW5kIG5vdCBlbXB0eS5cbiAgICAvLyBUaGUgYGluY2x1ZGVaZXJvYCBvcHRpb24gbWF5IGJlIHNldCB0byB0cmVhdCB0aGUgY29uZHRpb25hbCBhcyBwdXJlbHkgbm90IGVtcHR5IGJhc2VkIG9uIHRoZVxuICAgIC8vIGJlaGF2aW9yIG9mIGlzRW1wdHkuIEVmZmVjdGl2ZWx5IHRoaXMgZGV0ZXJtaW5lcyBpZiAwIGlzIGhhbmRsZWQgYnkgdGhlIHBvc2l0aXZlIHBhdGggb3IgbmVnYXRpdmUuXG4gICAgaWYgKCFvcHRpb25zLmhhc2guaW5jbHVkZVplcm8gJiYgIWNvbmRpdGlvbmFsIHx8IFV0aWxzLmlzRW1wdHkoY29uZGl0aW9uYWwpKSB7XG4gICAgICByZXR1cm4gb3B0aW9ucy5pbnZlcnNlKHRoaXMpO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gb3B0aW9ucy5mbih0aGlzKTtcbiAgICB9XG4gIH0pO1xuXG4gIGluc3RhbmNlLnJlZ2lzdGVySGVscGVyKCd1bmxlc3MnLCBmdW5jdGlvbiAoY29uZGl0aW9uYWwsIG9wdGlvbnMpIHtcbiAgICByZXR1cm4gaW5zdGFuY2UuaGVscGVyc1snaWYnXS5jYWxsKHRoaXMsIGNvbmRpdGlvbmFsLCB7IGZuOiBvcHRpb25zLmludmVyc2UsIGludmVyc2U6IG9wdGlvbnMuZm4sIGhhc2g6IG9wdGlvbnMuaGFzaCB9KTtcbiAgfSk7XG5cbiAgaW5zdGFuY2UucmVnaXN0ZXJIZWxwZXIoJ3dpdGgnLCBmdW5jdGlvbiAoY29udGV4dCwgb3B0aW9ucykge1xuICAgIGlmIChpc0Z1bmN0aW9uKGNvbnRleHQpKSB7XG4gICAgICBjb250ZXh0ID0gY29udGV4dC5jYWxsKHRoaXMpO1xuICAgIH1cblxuICAgIHZhciBmbiA9IG9wdGlvbnMuZm47XG5cbiAgICBpZiAoIVV0aWxzLmlzRW1wdHkoY29udGV4dCkpIHtcbiAgICAgIGlmIChvcHRpb25zLmRhdGEgJiYgb3B0aW9ucy5pZHMpIHtcbiAgICAgICAgdmFyIGRhdGEgPSBjcmVhdGVGcmFtZShvcHRpb25zLmRhdGEpO1xuICAgICAgICBkYXRhLmNvbnRleHRQYXRoID0gVXRpbHMuYXBwZW5kQ29udGV4dFBhdGgob3B0aW9ucy5kYXRhLmNvbnRleHRQYXRoLCBvcHRpb25zLmlkc1swXSk7XG4gICAgICAgIG9wdGlvbnMgPSB7IGRhdGE6IGRhdGEgfTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGZuKGNvbnRleHQsIG9wdGlvbnMpO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gb3B0aW9ucy5pbnZlcnNlKHRoaXMpO1xuICAgIH1cbiAgfSk7XG5cbiAgaW5zdGFuY2UucmVnaXN0ZXJIZWxwZXIoJ2xvZycsIGZ1bmN0aW9uIChtZXNzYWdlLCBvcHRpb25zKSB7XG4gICAgdmFyIGxldmVsID0gb3B0aW9ucy5kYXRhICYmIG9wdGlvbnMuZGF0YS5sZXZlbCAhPSBudWxsID8gcGFyc2VJbnQob3B0aW9ucy5kYXRhLmxldmVsLCAxMCkgOiAxO1xuICAgIGluc3RhbmNlLmxvZyhsZXZlbCwgbWVzc2FnZSk7XG4gIH0pO1xuXG4gIGluc3RhbmNlLnJlZ2lzdGVySGVscGVyKCdsb29rdXAnLCBmdW5jdGlvbiAob2JqLCBmaWVsZCkge1xuICAgIHJldHVybiBvYmogJiYgb2JqW2ZpZWxkXTtcbiAgfSk7XG59XG5cbnZhciBsb2dnZXIgPSB7XG4gIG1ldGhvZE1hcDogeyAwOiAnZGVidWcnLCAxOiAnaW5mbycsIDI6ICd3YXJuJywgMzogJ2Vycm9yJyB9LFxuXG4gIC8vIFN0YXRlIGVudW1cbiAgREVCVUc6IDAsXG4gIElORk86IDEsXG4gIFdBUk46IDIsXG4gIEVSUk9SOiAzLFxuICBsZXZlbDogMSxcblxuICAvLyBDYW4gYmUgb3ZlcnJpZGRlbiBpbiB0aGUgaG9zdCBlbnZpcm9ubWVudFxuICBsb2c6IGZ1bmN0aW9uIGxvZyhsZXZlbCwgbWVzc2FnZSkge1xuICAgIGlmICh0eXBlb2YgY29uc29sZSAhPT0gJ3VuZGVmaW5lZCcgJiYgbG9nZ2VyLmxldmVsIDw9IGxldmVsKSB7XG4gICAgICB2YXIgbWV0aG9kID0gbG9nZ2VyLm1ldGhvZE1hcFtsZXZlbF07XG4gICAgICAoY29uc29sZVttZXRob2RdIHx8IGNvbnNvbGUubG9nKS5jYWxsKGNvbnNvbGUsIG1lc3NhZ2UpOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLWNvbnNvbGVcbiAgICB9XG4gIH1cbn07XG5cbmV4cG9ydHMubG9nZ2VyID0gbG9nZ2VyO1xudmFyIGxvZyA9IGxvZ2dlci5sb2c7XG5cbmV4cG9ydHMubG9nID0gbG9nO1xuXG5mdW5jdGlvbiBjcmVhdGVGcmFtZShvYmplY3QpIHtcbiAgdmFyIGZyYW1lID0gVXRpbHMuZXh0ZW5kKHt9LCBvYmplY3QpO1xuICBmcmFtZS5fcGFyZW50ID0gb2JqZWN0O1xuICByZXR1cm4gZnJhbWU7XG59XG5cbi8qIFthcmdzLCBdb3B0aW9ucyAqL1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9oYW5kbGViYXJzL2Rpc3QvY2pzL2hhbmRsZWJhcnMvYmFzZS5qc1xuLy8gbW9kdWxlIGlkID0gMzRcbi8vIG1vZHVsZSBjaHVua3MgPSAxIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ },
/* 35 */
/***/ function(module, exports) {

	eval("'use strict';\n\nexports.__esModule = true;\nexports.extend = extend;\n\n// Older IE versions do not directly support indexOf so we must implement our own, sadly.\nexports.indexOf = indexOf;\nexports.escapeExpression = escapeExpression;\nexports.isEmpty = isEmpty;\nexports.blockParams = blockParams;\nexports.appendContextPath = appendContextPath;\nvar escape = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  '\\'': '&#x27;',\n  '`': '&#x60;'\n};\n\nvar badChars = /[&<>\"'`]/g,\n    possible = /[&<>\"'`]/;\n\nfunction escapeChar(chr) {\n  return escape[chr];\n}\n\nfunction extend(obj /* , ...source */) {\n  for (var i = 1; i < arguments.length; i++) {\n    for (var key in arguments[i]) {\n      if (Object.prototype.hasOwnProperty.call(arguments[i], key)) {\n        obj[key] = arguments[i][key];\n      }\n    }\n  }\n\n  return obj;\n}\n\nvar toString = Object.prototype.toString;\n\nexports.toString = toString;\n// Sourced from lodash\n// https://github.com/bestiejs/lodash/blob/master/LICENSE.txt\n/*eslint-disable func-style, no-var */\nvar isFunction = function isFunction(value) {\n  return typeof value === 'function';\n};\n// fallback for older versions of Chrome and Safari\n/* istanbul ignore next */\nif (isFunction(/x/)) {\n  exports.isFunction = isFunction = function (value) {\n    return typeof value === 'function' && toString.call(value) === '[object Function]';\n  };\n}\nvar isFunction;\nexports.isFunction = isFunction;\n/*eslint-enable func-style, no-var */\n\n/* istanbul ignore next */\nvar isArray = Array.isArray || function (value) {\n  return value && typeof value === 'object' ? toString.call(value) === '[object Array]' : false;\n};exports.isArray = isArray;\n\nfunction indexOf(array, value) {\n  for (var i = 0, len = array.length; i < len; i++) {\n    if (array[i] === value) {\n      return i;\n    }\n  }\n  return -1;\n}\n\nfunction escapeExpression(string) {\n  if (typeof string !== 'string') {\n    // don't escape SafeStrings, since they're already safe\n    if (string && string.toHTML) {\n      return string.toHTML();\n    } else if (string == null) {\n      return '';\n    } else if (!string) {\n      return string + '';\n    }\n\n    // Force a string conversion as this will be done by the append regardless and\n    // the regex test will do this transparently behind the scenes, causing issues if\n    // an object's to string has escaped characters in it.\n    string = '' + string;\n  }\n\n  if (!possible.test(string)) {\n    return string;\n  }\n  return string.replace(badChars, escapeChar);\n}\n\nfunction isEmpty(value) {\n  if (!value && value !== 0) {\n    return true;\n  } else if (isArray(value) && value.length === 0) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction blockParams(params, ids) {\n  params.path = ids;\n  return params;\n}\n\nfunction appendContextPath(contextPath, id) {\n  return (contextPath ? contextPath + '.' : '') + id;\n}//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzUuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2hhbmRsZWJhcnMvZGlzdC9janMvaGFuZGxlYmFycy91dGlscy5qcz8yMzQ5Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcbmV4cG9ydHMuZXh0ZW5kID0gZXh0ZW5kO1xuXG4vLyBPbGRlciBJRSB2ZXJzaW9ucyBkbyBub3QgZGlyZWN0bHkgc3VwcG9ydCBpbmRleE9mIHNvIHdlIG11c3QgaW1wbGVtZW50IG91ciBvd24sIHNhZGx5LlxuZXhwb3J0cy5pbmRleE9mID0gaW5kZXhPZjtcbmV4cG9ydHMuZXNjYXBlRXhwcmVzc2lvbiA9IGVzY2FwZUV4cHJlc3Npb247XG5leHBvcnRzLmlzRW1wdHkgPSBpc0VtcHR5O1xuZXhwb3J0cy5ibG9ja1BhcmFtcyA9IGJsb2NrUGFyYW1zO1xuZXhwb3J0cy5hcHBlbmRDb250ZXh0UGF0aCA9IGFwcGVuZENvbnRleHRQYXRoO1xudmFyIGVzY2FwZSA9IHtcbiAgJyYnOiAnJmFtcDsnLFxuICAnPCc6ICcmbHQ7JyxcbiAgJz4nOiAnJmd0OycsXG4gICdcIic6ICcmcXVvdDsnLFxuICAnXFwnJzogJyYjeDI3OycsXG4gICdgJzogJyYjeDYwOydcbn07XG5cbnZhciBiYWRDaGFycyA9IC9bJjw+XCInYF0vZyxcbiAgICBwb3NzaWJsZSA9IC9bJjw+XCInYF0vO1xuXG5mdW5jdGlvbiBlc2NhcGVDaGFyKGNocikge1xuICByZXR1cm4gZXNjYXBlW2Nocl07XG59XG5cbmZ1bmN0aW9uIGV4dGVuZChvYmogLyogLCAuLi5zb3VyY2UgKi8pIHtcbiAgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHtcbiAgICBmb3IgKHZhciBrZXkgaW4gYXJndW1lbnRzW2ldKSB7XG4gICAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGFyZ3VtZW50c1tpXSwga2V5KSkge1xuICAgICAgICBvYmpba2V5XSA9IGFyZ3VtZW50c1tpXVtrZXldO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBvYmo7XG59XG5cbnZhciB0b1N0cmluZyA9IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmc7XG5cbmV4cG9ydHMudG9TdHJpbmcgPSB0b1N0cmluZztcbi8vIFNvdXJjZWQgZnJvbSBsb2Rhc2hcbi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9iZXN0aWVqcy9sb2Rhc2gvYmxvYi9tYXN0ZXIvTElDRU5TRS50eHRcbi8qZXNsaW50LWRpc2FibGUgZnVuYy1zdHlsZSwgbm8tdmFyICovXG52YXIgaXNGdW5jdGlvbiA9IGZ1bmN0aW9uIGlzRnVuY3Rpb24odmFsdWUpIHtcbiAgcmV0dXJuIHR5cGVvZiB2YWx1ZSA9PT0gJ2Z1bmN0aW9uJztcbn07XG4vLyBmYWxsYmFjayBmb3Igb2xkZXIgdmVyc2lvbnMgb2YgQ2hyb21lIGFuZCBTYWZhcmlcbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovXG5pZiAoaXNGdW5jdGlvbigveC8pKSB7XG4gIGV4cG9ydHMuaXNGdW5jdGlvbiA9IGlzRnVuY3Rpb24gPSBmdW5jdGlvbiAodmFsdWUpIHtcbiAgICByZXR1cm4gdHlwZW9mIHZhbHVlID09PSAnZnVuY3Rpb24nICYmIHRvU3RyaW5nLmNhbGwodmFsdWUpID09PSAnW29iamVjdCBGdW5jdGlvbl0nO1xuICB9O1xufVxudmFyIGlzRnVuY3Rpb247XG5leHBvcnRzLmlzRnVuY3Rpb24gPSBpc0Z1bmN0aW9uO1xuLyplc2xpbnQtZW5hYmxlIGZ1bmMtc3R5bGUsIG5vLXZhciAqL1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL1xudmFyIGlzQXJyYXkgPSBBcnJheS5pc0FycmF5IHx8IGZ1bmN0aW9uICh2YWx1ZSkge1xuICByZXR1cm4gdmFsdWUgJiYgdHlwZW9mIHZhbHVlID09PSAnb2JqZWN0JyA/IHRvU3RyaW5nLmNhbGwodmFsdWUpID09PSAnW29iamVjdCBBcnJheV0nIDogZmFsc2U7XG59O2V4cG9ydHMuaXNBcnJheSA9IGlzQXJyYXk7XG5cbmZ1bmN0aW9uIGluZGV4T2YoYXJyYXksIHZhbHVlKSB7XG4gIGZvciAodmFyIGkgPSAwLCBsZW4gPSBhcnJheS5sZW5ndGg7IGkgPCBsZW47IGkrKykge1xuICAgIGlmIChhcnJheVtpXSA9PT0gdmFsdWUpIHtcbiAgICAgIHJldHVybiBpO1xuICAgIH1cbiAgfVxuICByZXR1cm4gLTE7XG59XG5cbmZ1bmN0aW9uIGVzY2FwZUV4cHJlc3Npb24oc3RyaW5nKSB7XG4gIGlmICh0eXBlb2Ygc3RyaW5nICE9PSAnc3RyaW5nJykge1xuICAgIC8vIGRvbid0IGVzY2FwZSBTYWZlU3RyaW5ncywgc2luY2UgdGhleSdyZSBhbHJlYWR5IHNhZmVcbiAgICBpZiAoc3RyaW5nICYmIHN0cmluZy50b0hUTUwpIHtcbiAgICAgIHJldHVybiBzdHJpbmcudG9IVE1MKCk7XG4gICAgfSBlbHNlIGlmIChzdHJpbmcgPT0gbnVsbCkge1xuICAgICAgcmV0dXJuICcnO1xuICAgIH0gZWxzZSBpZiAoIXN0cmluZykge1xuICAgICAgcmV0dXJuIHN0cmluZyArICcnO1xuICAgIH1cblxuICAgIC8vIEZvcmNlIGEgc3RyaW5nIGNvbnZlcnNpb24gYXMgdGhpcyB3aWxsIGJlIGRvbmUgYnkgdGhlIGFwcGVuZCByZWdhcmRsZXNzIGFuZFxuICAgIC8vIHRoZSByZWdleCB0ZXN0IHdpbGwgZG8gdGhpcyB0cmFuc3BhcmVudGx5IGJlaGluZCB0aGUgc2NlbmVzLCBjYXVzaW5nIGlzc3VlcyBpZlxuICAgIC8vIGFuIG9iamVjdCdzIHRvIHN0cmluZyBoYXMgZXNjYXBlZCBjaGFyYWN0ZXJzIGluIGl0LlxuICAgIHN0cmluZyA9ICcnICsgc3RyaW5nO1xuICB9XG5cbiAgaWYgKCFwb3NzaWJsZS50ZXN0KHN0cmluZykpIHtcbiAgICByZXR1cm4gc3RyaW5nO1xuICB9XG4gIHJldHVybiBzdHJpbmcucmVwbGFjZShiYWRDaGFycywgZXNjYXBlQ2hhcik7XG59XG5cbmZ1bmN0aW9uIGlzRW1wdHkodmFsdWUpIHtcbiAgaWYgKCF2YWx1ZSAmJiB2YWx1ZSAhPT0gMCkge1xuICAgIHJldHVybiB0cnVlO1xuICB9IGVsc2UgaWYgKGlzQXJyYXkodmFsdWUpICYmIHZhbHVlLmxlbmd0aCA9PT0gMCkge1xuICAgIHJldHVybiB0cnVlO1xuICB9IGVsc2Uge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxufVxuXG5mdW5jdGlvbiBibG9ja1BhcmFtcyhwYXJhbXMsIGlkcykge1xuICBwYXJhbXMucGF0aCA9IGlkcztcbiAgcmV0dXJuIHBhcmFtcztcbn1cblxuZnVuY3Rpb24gYXBwZW5kQ29udGV4dFBhdGgoY29udGV4dFBhdGgsIGlkKSB7XG4gIHJldHVybiAoY29udGV4dFBhdGggPyBjb250ZXh0UGF0aCArICcuJyA6ICcnKSArIGlkO1xufVxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9oYW5kbGViYXJzL2Rpc3QvY2pzL2hhbmRsZWJhcnMvdXRpbHMuanNcbi8vIG1vZHVsZSBpZCA9IDM1XG4vLyBtb2R1bGUgY2h1bmtzID0gMSJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9");

/***/ },
/* 36 */
/***/ function(module, exports) {

	eval("'use strict';\n\nexports.__esModule = true;\n\nvar errorProps = ['description', 'fileName', 'lineNumber', 'message', 'name', 'number', 'stack'];\n\nfunction Exception(message, node) {\n  var loc = node && node.loc,\n      line = undefined,\n      column = undefined;\n  if (loc) {\n    line = loc.start.line;\n    column = loc.start.column;\n\n    message += ' - ' + line + ':' + column;\n  }\n\n  var tmp = Error.prototype.constructor.call(this, message);\n\n  // Unfortunately errors are not enumerable in Chrome (at least), so `for prop in tmp` doesn't work.\n  for (var idx = 0; idx < errorProps.length; idx++) {\n    this[errorProps[idx]] = tmp[errorProps[idx]];\n  }\n\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, Exception);\n  }\n\n  if (loc) {\n    this.lineNumber = line;\n    this.column = column;\n  }\n}\n\nException.prototype = new Error();\n\nexports['default'] = Exception;\nmodule.exports = exports['default'];//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzYuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2hhbmRsZWJhcnMvZGlzdC9janMvaGFuZGxlYmFycy9leGNlcHRpb24uanM/YmRkNSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5cbnZhciBlcnJvclByb3BzID0gWydkZXNjcmlwdGlvbicsICdmaWxlTmFtZScsICdsaW5lTnVtYmVyJywgJ21lc3NhZ2UnLCAnbmFtZScsICdudW1iZXInLCAnc3RhY2snXTtcblxuZnVuY3Rpb24gRXhjZXB0aW9uKG1lc3NhZ2UsIG5vZGUpIHtcbiAgdmFyIGxvYyA9IG5vZGUgJiYgbm9kZS5sb2MsXG4gICAgICBsaW5lID0gdW5kZWZpbmVkLFxuICAgICAgY29sdW1uID0gdW5kZWZpbmVkO1xuICBpZiAobG9jKSB7XG4gICAgbGluZSA9IGxvYy5zdGFydC5saW5lO1xuICAgIGNvbHVtbiA9IGxvYy5zdGFydC5jb2x1bW47XG5cbiAgICBtZXNzYWdlICs9ICcgLSAnICsgbGluZSArICc6JyArIGNvbHVtbjtcbiAgfVxuXG4gIHZhciB0bXAgPSBFcnJvci5wcm90b3R5cGUuY29uc3RydWN0b3IuY2FsbCh0aGlzLCBtZXNzYWdlKTtcblxuICAvLyBVbmZvcnR1bmF0ZWx5IGVycm9ycyBhcmUgbm90IGVudW1lcmFibGUgaW4gQ2hyb21lIChhdCBsZWFzdCksIHNvIGBmb3IgcHJvcCBpbiB0bXBgIGRvZXNuJ3Qgd29yay5cbiAgZm9yICh2YXIgaWR4ID0gMDsgaWR4IDwgZXJyb3JQcm9wcy5sZW5ndGg7IGlkeCsrKSB7XG4gICAgdGhpc1tlcnJvclByb3BzW2lkeF1dID0gdG1wW2Vycm9yUHJvcHNbaWR4XV07XG4gIH1cblxuICBpZiAoRXJyb3IuY2FwdHVyZVN0YWNrVHJhY2UpIHtcbiAgICBFcnJvci5jYXB0dXJlU3RhY2tUcmFjZSh0aGlzLCBFeGNlcHRpb24pO1xuICB9XG5cbiAgaWYgKGxvYykge1xuICAgIHRoaXMubGluZU51bWJlciA9IGxpbmU7XG4gICAgdGhpcy5jb2x1bW4gPSBjb2x1bW47XG4gIH1cbn1cblxuRXhjZXB0aW9uLnByb3RvdHlwZSA9IG5ldyBFcnJvcigpO1xuXG5leHBvcnRzWydkZWZhdWx0J10gPSBFeGNlcHRpb247XG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHNbJ2RlZmF1bHQnXTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vaGFuZGxlYmFycy9kaXN0L2Nqcy9oYW5kbGViYXJzL2V4Y2VwdGlvbi5qc1xuLy8gbW9kdWxlIGlkID0gMzZcbi8vIG1vZHVsZSBjaHVua3MgPSAxIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9");

/***/ },
/* 37 */
/***/ function(module, exports) {

	eval("'use strict';\n\nexports.__esModule = true;\n// Build out our basic SafeString type\nfunction SafeString(string) {\n  this.string = string;\n}\n\nSafeString.prototype.toString = SafeString.prototype.toHTML = function () {\n  return '' + this.string;\n};\n\nexports['default'] = SafeString;\nmodule.exports = exports['default'];//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzcuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2hhbmRsZWJhcnMvZGlzdC9janMvaGFuZGxlYmFycy9zYWZlLXN0cmluZy5qcz9kNjY3Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcbi8vIEJ1aWxkIG91dCBvdXIgYmFzaWMgU2FmZVN0cmluZyB0eXBlXG5mdW5jdGlvbiBTYWZlU3RyaW5nKHN0cmluZykge1xuICB0aGlzLnN0cmluZyA9IHN0cmluZztcbn1cblxuU2FmZVN0cmluZy5wcm90b3R5cGUudG9TdHJpbmcgPSBTYWZlU3RyaW5nLnByb3RvdHlwZS50b0hUTUwgPSBmdW5jdGlvbiAoKSB7XG4gIHJldHVybiAnJyArIHRoaXMuc3RyaW5nO1xufTtcblxuZXhwb3J0c1snZGVmYXVsdCddID0gU2FmZVN0cmluZztcbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1snZGVmYXVsdCddO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9oYW5kbGViYXJzL2Rpc3QvY2pzL2hhbmRsZWJhcnMvc2FmZS1zdHJpbmcuanNcbi8vIG1vZHVsZSBpZCA9IDM3XG4vLyBtb2R1bGUgY2h1bmtzID0gMSJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ },
/* 38 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nvar _interopRequireWildcard = function (obj) { return obj && obj.__esModule ? obj : { 'default': obj }; };\n\nexports.__esModule = true;\nexports.checkRevision = checkRevision;\n\n// TODO: Remove this line and break up compilePartial\n\nexports.template = template;\nexports.wrapProgram = wrapProgram;\nexports.resolvePartial = resolvePartial;\nexports.invokePartial = invokePartial;\nexports.noop = noop;\n\nvar _import = __webpack_require__(35);\n\nvar Utils = _interopRequireWildcard(_import);\n\nvar _Exception = __webpack_require__(36);\n\nvar _Exception2 = _interopRequireWildcard(_Exception);\n\nvar _COMPILER_REVISION$REVISION_CHANGES$createFrame = __webpack_require__(34);\n\nfunction checkRevision(compilerInfo) {\n  var compilerRevision = compilerInfo && compilerInfo[0] || 1,\n      currentRevision = _COMPILER_REVISION$REVISION_CHANGES$createFrame.COMPILER_REVISION;\n\n  if (compilerRevision !== currentRevision) {\n    if (compilerRevision < currentRevision) {\n      var runtimeVersions = _COMPILER_REVISION$REVISION_CHANGES$createFrame.REVISION_CHANGES[currentRevision],\n          compilerVersions = _COMPILER_REVISION$REVISION_CHANGES$createFrame.REVISION_CHANGES[compilerRevision];\n      throw new _Exception2['default']('Template was precompiled with an older version of Handlebars than the current runtime. ' + 'Please update your precompiler to a newer version (' + runtimeVersions + ') or downgrade your runtime to an older version (' + compilerVersions + ').');\n    } else {\n      // Use the embedded version info since the runtime doesn't know about this revision yet\n      throw new _Exception2['default']('Template was precompiled with a newer version of Handlebars than the current runtime. ' + 'Please update your runtime to a newer version (' + compilerInfo[1] + ').');\n    }\n  }\n}\n\nfunction template(templateSpec, env) {\n  /* istanbul ignore next */\n  if (!env) {\n    throw new _Exception2['default']('No environment passed to template');\n  }\n  if (!templateSpec || !templateSpec.main) {\n    throw new _Exception2['default']('Unknown template object: ' + typeof templateSpec);\n  }\n\n  // Note: Using env.VM references rather than local var references throughout this section to allow\n  // for external users to override these as psuedo-supported APIs.\n  env.VM.checkRevision(templateSpec.compiler);\n\n  function invokePartialWrapper(partial, context, options) {\n    if (options.hash) {\n      context = Utils.extend({}, context, options.hash);\n    }\n\n    partial = env.VM.resolvePartial.call(this, partial, context, options);\n    var result = env.VM.invokePartial.call(this, partial, context, options);\n\n    if (result == null && env.compile) {\n      options.partials[options.name] = env.compile(partial, templateSpec.compilerOptions, env);\n      result = options.partials[options.name](context, options);\n    }\n    if (result != null) {\n      if (options.indent) {\n        var lines = result.split('\\n');\n        for (var i = 0, l = lines.length; i < l; i++) {\n          if (!lines[i] && i + 1 === l) {\n            break;\n          }\n\n          lines[i] = options.indent + lines[i];\n        }\n        result = lines.join('\\n');\n      }\n      return result;\n    } else {\n      throw new _Exception2['default']('The partial ' + options.name + ' could not be compiled when running in runtime-only mode');\n    }\n  }\n\n  // Just add water\n  var container = {\n    strict: function strict(obj, name) {\n      if (!(name in obj)) {\n        throw new _Exception2['default']('\"' + name + '\" not defined in ' + obj);\n      }\n      return obj[name];\n    },\n    lookup: function lookup(depths, name) {\n      var len = depths.length;\n      for (var i = 0; i < len; i++) {\n        if (depths[i] && depths[i][name] != null) {\n          return depths[i][name];\n        }\n      }\n    },\n    lambda: function lambda(current, context) {\n      return typeof current === 'function' ? current.call(context) : current;\n    },\n\n    escapeExpression: Utils.escapeExpression,\n    invokePartial: invokePartialWrapper,\n\n    fn: function fn(i) {\n      return templateSpec[i];\n    },\n\n    programs: [],\n    program: function program(i, data, declaredBlockParams, blockParams, depths) {\n      var programWrapper = this.programs[i],\n          fn = this.fn(i);\n      if (data || depths || blockParams || declaredBlockParams) {\n        programWrapper = wrapProgram(this, i, fn, data, declaredBlockParams, blockParams, depths);\n      } else if (!programWrapper) {\n        programWrapper = this.programs[i] = wrapProgram(this, i, fn);\n      }\n      return programWrapper;\n    },\n\n    data: function data(value, depth) {\n      while (value && depth--) {\n        value = value._parent;\n      }\n      return value;\n    },\n    merge: function merge(param, common) {\n      var obj = param || common;\n\n      if (param && common && param !== common) {\n        obj = Utils.extend({}, common, param);\n      }\n\n      return obj;\n    },\n\n    noop: env.VM.noop,\n    compilerInfo: templateSpec.compiler\n  };\n\n  function ret(context) {\n    var options = arguments[1] === undefined ? {} : arguments[1];\n\n    var data = options.data;\n\n    ret._setup(options);\n    if (!options.partial && templateSpec.useData) {\n      data = initData(context, data);\n    }\n    var depths = undefined,\n        blockParams = templateSpec.useBlockParams ? [] : undefined;\n    if (templateSpec.useDepths) {\n      depths = options.depths ? [context].concat(options.depths) : [context];\n    }\n\n    return templateSpec.main.call(container, context, container.helpers, container.partials, data, blockParams, depths);\n  }\n  ret.isTop = true;\n\n  ret._setup = function (options) {\n    if (!options.partial) {\n      container.helpers = container.merge(options.helpers, env.helpers);\n\n      if (templateSpec.usePartial) {\n        container.partials = container.merge(options.partials, env.partials);\n      }\n    } else {\n      container.helpers = options.helpers;\n      container.partials = options.partials;\n    }\n  };\n\n  ret._child = function (i, data, blockParams, depths) {\n    if (templateSpec.useBlockParams && !blockParams) {\n      throw new _Exception2['default']('must pass block params');\n    }\n    if (templateSpec.useDepths && !depths) {\n      throw new _Exception2['default']('must pass parent depths');\n    }\n\n    return wrapProgram(container, i, templateSpec[i], data, 0, blockParams, depths);\n  };\n  return ret;\n}\n\nfunction wrapProgram(container, i, fn, data, declaredBlockParams, blockParams, depths) {\n  function prog(context) {\n    var options = arguments[1] === undefined ? {} : arguments[1];\n\n    return fn.call(container, context, container.helpers, container.partials, options.data || data, blockParams && [options.blockParams].concat(blockParams), depths && [context].concat(depths));\n  }\n  prog.program = i;\n  prog.depth = depths ? depths.length : 0;\n  prog.blockParams = declaredBlockParams || 0;\n  return prog;\n}\n\nfunction resolvePartial(partial, context, options) {\n  if (!partial) {\n    partial = options.partials[options.name];\n  } else if (!partial.call && !options.name) {\n    // This is a dynamic partial that returned a string\n    options.name = partial;\n    partial = options.partials[partial];\n  }\n  return partial;\n}\n\nfunction invokePartial(partial, context, options) {\n  options.partial = true;\n\n  if (partial === undefined) {\n    throw new _Exception2['default']('The partial ' + options.name + ' could not be found');\n  } else if (partial instanceof Function) {\n    return partial(context, options);\n  }\n}\n\nfunction noop() {\n  return '';\n}\n\nfunction initData(context, data) {\n  if (!data || !('root' in data)) {\n    data = data ? _COMPILER_REVISION$REVISION_CHANGES$createFrame.createFrame(data) : {};\n    data.root = context;\n  }\n  return data;\n}//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ },
/* 39 */
/***/ function(module, exports) {

	eval("/* WEBPACK VAR INJECTION */(function(global) {'use strict';\n\nexports.__esModule = true;\n/*global window */\n\nexports['default'] = function (Handlebars) {\n  /* istanbul ignore next */\n  var root = typeof global !== 'undefined' ? global : window,\n      $Handlebars = root.Handlebars;\n  /* istanbul ignore next */\n  Handlebars.noConflict = function () {\n    if (root.Handlebars === Handlebars) {\n      root.Handlebars = $Handlebars;\n    }\n  };\n};\n\nmodule.exports = exports['default'];\n/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzkuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2hhbmRsZWJhcnMvZGlzdC9janMvaGFuZGxlYmFycy9uby1jb25mbGljdC5qcz8yNjk1Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcbi8qZ2xvYmFsIHdpbmRvdyAqL1xuXG5leHBvcnRzWydkZWZhdWx0J10gPSBmdW5jdGlvbiAoSGFuZGxlYmFycykge1xuICAvKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL1xuICB2YXIgcm9vdCA9IHR5cGVvZiBnbG9iYWwgIT09ICd1bmRlZmluZWQnID8gZ2xvYmFsIDogd2luZG93LFxuICAgICAgJEhhbmRsZWJhcnMgPSByb290LkhhbmRsZWJhcnM7XG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovXG4gIEhhbmRsZWJhcnMubm9Db25mbGljdCA9IGZ1bmN0aW9uICgpIHtcbiAgICBpZiAocm9vdC5IYW5kbGViYXJzID09PSBIYW5kbGViYXJzKSB7XG4gICAgICByb290LkhhbmRsZWJhcnMgPSAkSGFuZGxlYmFycztcbiAgICB9XG4gIH07XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHNbJ2RlZmF1bHQnXTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vaGFuZGxlYmFycy9kaXN0L2Nqcy9oYW5kbGViYXJzL25vLWNvbmZsaWN0LmpzXG4vLyBtb2R1bGUgaWQgPSAzOVxuLy8gbW9kdWxlIGNodW5rcyA9IDEiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9");

/***/ },
/* 40 */
/***/ function(module, exports, __webpack_require__) {

	eval("var Handlebars = __webpack_require__(32);\nfunction __default(obj) { return obj && (obj.__esModule ? obj[\"default\"] : obj); }\nmodule.exports = (Handlebars[\"default\"] || Handlebars).template({\"1\":function(depth0,helpers,partials,data) {\n    return \"loader--large\";\n},\"3\":function(depth0,helpers,partials,data) {\n    return \"loader--dark\";\n},\"compiler\":[6,\">= 2.0.0-beta.1\"],\"main\":function(depth0,helpers,partials,data) {\n    var stack1;\n\n  return \"<div class=\\\"loader \"\n    + ((stack1 = helpers['if'].call(depth0,(depth0 != null ? depth0.large : depth0),{\"name\":\"if\",\"hash\":{},\"fn\":this.program(1, data, 0),\"inverse\":this.noop,\"data\":data})) != null ? stack1 : \"\")\n    + \" \"\n    + ((stack1 = helpers['if'].call(depth0,(depth0 != null ? depth0.dark : depth0),{\"name\":\"if\",\"hash\":{},\"fn\":this.program(3, data, 0),\"inverse\":this.noop,\"data\":data})) != null ? stack1 : \"\")\n    + \"\\\"></div>\";\n},\"useData\":true});//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDAuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvc2hhcmVkL3RlbXBsYXRlUGFydGlhbHMvbG9hZGluZ0FuaW1hdGlvbi5oYW5kbGViYXJzPzczYzYiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIEhhbmRsZWJhcnMgPSByZXF1aXJlKFwiL1VzZXJzL2NyaXNwaW5tZXJyaW1hbi9HaXQvb25zZGlnaXRhbC9mbG9yZW5jZS9zcmMvbm9kZV9tb2R1bGVzL2hhbmRsZWJhcnMvcnVudGltZS5qc1wiKTtcbmZ1bmN0aW9uIF9fZGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiAob2JqLl9fZXNNb2R1bGUgPyBvYmpbXCJkZWZhdWx0XCJdIDogb2JqKTsgfVxubW9kdWxlLmV4cG9ydHMgPSAoSGFuZGxlYmFyc1tcImRlZmF1bHRcIl0gfHwgSGFuZGxlYmFycykudGVtcGxhdGUoe1wiMVwiOmZ1bmN0aW9uKGRlcHRoMCxoZWxwZXJzLHBhcnRpYWxzLGRhdGEpIHtcbiAgICByZXR1cm4gXCJsb2FkZXItLWxhcmdlXCI7XG59LFwiM1wiOmZ1bmN0aW9uKGRlcHRoMCxoZWxwZXJzLHBhcnRpYWxzLGRhdGEpIHtcbiAgICByZXR1cm4gXCJsb2FkZXItLWRhcmtcIjtcbn0sXCJjb21waWxlclwiOls2LFwiPj0gMi4wLjAtYmV0YS4xXCJdLFwibWFpblwiOmZ1bmN0aW9uKGRlcHRoMCxoZWxwZXJzLHBhcnRpYWxzLGRhdGEpIHtcbiAgICB2YXIgc3RhY2sxO1xuXG4gIHJldHVybiBcIjxkaXYgY2xhc3M9XFxcImxvYWRlciBcIlxuICAgICsgKChzdGFjazEgPSBoZWxwZXJzWydpZiddLmNhbGwoZGVwdGgwLChkZXB0aDAgIT0gbnVsbCA/IGRlcHRoMC5sYXJnZSA6IGRlcHRoMCkse1wibmFtZVwiOlwiaWZcIixcImhhc2hcIjp7fSxcImZuXCI6dGhpcy5wcm9ncmFtKDEsIGRhdGEsIDApLFwiaW52ZXJzZVwiOnRoaXMubm9vcCxcImRhdGFcIjpkYXRhfSkpICE9IG51bGwgPyBzdGFjazEgOiBcIlwiKVxuICAgICsgXCIgXCJcbiAgICArICgoc3RhY2sxID0gaGVscGVyc1snaWYnXS5jYWxsKGRlcHRoMCwoZGVwdGgwICE9IG51bGwgPyBkZXB0aDAuZGFyayA6IGRlcHRoMCkse1wibmFtZVwiOlwiaWZcIixcImhhc2hcIjp7fSxcImZuXCI6dGhpcy5wcm9ncmFtKDMsIGRhdGEsIDApLFwiaW52ZXJzZVwiOnRoaXMubm9vcCxcImRhdGFcIjpkYXRhfSkpICE9IG51bGwgPyBzdGFjazEgOiBcIlwiKVxuICAgICsgXCJcXFwiPjwvZGl2PlwiO1xufSxcInVzZURhdGFcIjp0cnVlfSk7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9hcHAvc2hhcmVkL3RlbXBsYXRlUGFydGlhbHMvbG9hZGluZ0FuaW1hdGlvbi5oYW5kbGViYXJzXG4vLyBtb2R1bGUgaWQgPSA0MFxuLy8gbW9kdWxlIGNodW5rcyA9IDEiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ },
/* 41 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nvar navigationView = __webpack_require__(42),\n    workspaceState = __webpack_require__(25);\n\nvar navigationController = {\n\n    init: function init() {\n        navigationView.render();\n        this.bindClicks();\n        // workspaceState.activeScreen.set('browse');\n    },\n\n    bindClicks: function bindClicks() {\n        $('.js-workspace-nav__item').click(function () {\n            var item = $(this).attr('id');\n            workspaceState.activeScreen.set(item);\n        });\n    },\n\n    changeActiveItem: function changeActiveItem(item) {\n        navigationView.renderActiveItem(item);\n    }\n};\n\nmodule.exports = navigationController;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDEuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vYXBwL3dvcmtzcGFjZS9uYXZpZ2F0aW9uL25hdmlnYXRpb25Db250cm9sbGVyLmpzPzk1ZmUiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIG5hdmlnYXRpb25WaWV3ID0gcmVxdWlyZSgnd29ya3NwYWNlL25hdmlnYXRpb24vbmF2aWdhdGlvblZpZXcnKSxcbiAgICB3b3Jrc3BhY2VTdGF0ZSA9IHJlcXVpcmUoJ3NoYXJlZC9zdGF0ZS93b3Jrc3BhY2VTdGF0ZScpO1xuXG52YXIgbmF2aWdhdGlvbkNvbnRyb2xsZXIgPSB7XG5cbiAgICBpbml0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgbmF2aWdhdGlvblZpZXcucmVuZGVyKCk7XG4gICAgICAgIHRoaXMuYmluZENsaWNrcygpO1xuICAgICAgICAvLyB3b3Jrc3BhY2VTdGF0ZS5hY3RpdmVTY3JlZW4uc2V0KCdicm93c2UnKTtcbiAgICB9LFxuXG4gICAgYmluZENsaWNrczogZnVuY3Rpb24gKCkge1xuICAgICAgICAkKCcuanMtd29ya3NwYWNlLW5hdl9faXRlbScpLmNsaWNrKGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgdmFyIGl0ZW0gPSAkKHRoaXMpLmF0dHIoJ2lkJyk7XG4gICAgICAgICAgICB3b3Jrc3BhY2VTdGF0ZS5hY3RpdmVTY3JlZW4uc2V0KGl0ZW0pO1xuICAgICAgICB9KTtcbiAgICB9LFxuXG4gICAgY2hhbmdlQWN0aXZlSXRlbTogZnVuY3Rpb24oaXRlbSkge1xuICAgICAgICBuYXZpZ2F0aW9uVmlldy5yZW5kZXJBY3RpdmVJdGVtKGl0ZW0pO1xuICAgIH1cbn07XG5cbm1vZHVsZS5leHBvcnRzID0gbmF2aWdhdGlvbkNvbnRyb2xsZXI7XG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIGFwcC93b3Jrc3BhY2UvbmF2aWdhdGlvbi9uYXZpZ2F0aW9uQ29udHJvbGxlci5qcyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTtBQUFBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFqQkE7QUFDQTtBQW1CQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ },
/* 42 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nvar template = __webpack_require__(43);\n\nvar navigationView = {\n\n    render: function render() {\n        document.getElementById('workspace-navigation').innerHTML = template();\n    },\n\n    renderActiveItem: function renderActiveItem(item) {\n        $('.js-workspace-nav__item').removeClass('selected');\n        $('#' + item).addClass('selected');\n    }\n};\n\nmodule.exports = navigationView;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDIuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vYXBwL3dvcmtzcGFjZS9uYXZpZ2F0aW9uL25hdmlnYXRpb25WaWV3LmpzPzk0NGMiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIHRlbXBsYXRlID0gcmVxdWlyZSgnLi9uYXZpZ2F0aW9uLmhhbmRsZWJhcnMnKTtcblxudmFyIG5hdmlnYXRpb25WaWV3ID0ge1xuXG4gICAgcmVuZGVyOiBmdW5jdGlvbigpIHtcbiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3dvcmtzcGFjZS1uYXZpZ2F0aW9uJykuaW5uZXJIVE1MID0gdGVtcGxhdGUoKTtcbiAgICB9LFxuXG4gICAgcmVuZGVyQWN0aXZlSXRlbTogZnVuY3Rpb24oaXRlbSkge1xuICAgICAgICAkKCcuanMtd29ya3NwYWNlLW5hdl9faXRlbScpLnJlbW92ZUNsYXNzKCdzZWxlY3RlZCcpO1xuICAgICAgICAkKCcjJyArIGl0ZW0pLmFkZENsYXNzKCdzZWxlY3RlZCcpO1xuICAgIH1cbn07XG5cbm1vZHVsZS5leHBvcnRzID0gbmF2aWdhdGlvblZpZXc7XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gYXBwL3dvcmtzcGFjZS9uYXZpZ2F0aW9uL25hdmlnYXRpb25WaWV3LmpzIl0sIm1hcHBpbmdzIjoiOztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQVRBO0FBQ0E7QUFXQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ },
/* 43 */
/***/ function(module, exports, __webpack_require__) {

	eval("var Handlebars = __webpack_require__(32);\nfunction __default(obj) { return obj && (obj.__esModule ? obj[\"default\"] : obj); }\nmodule.exports = (Handlebars[\"default\"] || Handlebars).template({\"compiler\":[6,\">= 2.0.0-beta.1\"],\"main\":function(depth0,helpers,partials,data) {\n    return \"\\n<ul class=\\\"nav__list nav__list--workspace\\\">\\n     <li class=\\\"nav__item nav__item--workspace nav__item--lang js-workspace-nav__item\\\" id=\\\"nav--workspace__welsh\\\"></li>\\n\\n     <li class=\\\"nav__item nav__item--workspace nav__item--browse js-workspace-nav__item selected\\\" id=\\\"browse\\\">\\n         <a class=\\\"nav__link\\\" href=\\\"javascript:void(0)\\\">Browse</a>\\n     </li>\\n     <li class=\\\"nav__item nav__item--workspace nav__item--create js-workspace-nav__item\\\" id=\\\"create\\\">\\n         <a class=\\\"nav__link\\\" href=\\\"javascript:void(0)\\\">Create</a>\\n     </li>\\n     <li class=\\\"nav__item nav__item--workspace nav__item--edit js-workspace-nav__item\\\" id=\\\"edit\\\">\\n         <a class=\\\"nav__link\\\" href=\\\"javascript:void(0)\\\">Edit</a>\\n     </li>\\n     <li class=\\\"nav__item nav__item--workspace nav__item--import nav--workspace__import js-workspace-nav__item\\\" id=\\\"import\\\">\\n         <a class=\\\"nav__link\\\" href=\\\"javascript:void(0)\\\">Import</a>\\n     </li>\\n </ul>\";\n},\"useData\":true});//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvd29ya3NwYWNlL25hdmlnYXRpb24vbmF2aWdhdGlvbi5oYW5kbGViYXJzP2MxYzciXSwic291cmNlc0NvbnRlbnQiOlsidmFyIEhhbmRsZWJhcnMgPSByZXF1aXJlKFwiL1VzZXJzL2NyaXNwaW5tZXJyaW1hbi9HaXQvb25zZGlnaXRhbC9mbG9yZW5jZS9zcmMvbm9kZV9tb2R1bGVzL2hhbmRsZWJhcnMvcnVudGltZS5qc1wiKTtcbmZ1bmN0aW9uIF9fZGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiAob2JqLl9fZXNNb2R1bGUgPyBvYmpbXCJkZWZhdWx0XCJdIDogb2JqKTsgfVxubW9kdWxlLmV4cG9ydHMgPSAoSGFuZGxlYmFyc1tcImRlZmF1bHRcIl0gfHwgSGFuZGxlYmFycykudGVtcGxhdGUoe1wiY29tcGlsZXJcIjpbNixcIj49IDIuMC4wLWJldGEuMVwiXSxcIm1haW5cIjpmdW5jdGlvbihkZXB0aDAsaGVscGVycyxwYXJ0aWFscyxkYXRhKSB7XG4gICAgcmV0dXJuIFwiXFxuPHVsIGNsYXNzPVxcXCJuYXZfX2xpc3QgbmF2X19saXN0LS13b3Jrc3BhY2VcXFwiPlxcbiAgICAgPGxpIGNsYXNzPVxcXCJuYXZfX2l0ZW0gbmF2X19pdGVtLS13b3Jrc3BhY2UgbmF2X19pdGVtLS1sYW5nIGpzLXdvcmtzcGFjZS1uYXZfX2l0ZW1cXFwiIGlkPVxcXCJuYXYtLXdvcmtzcGFjZV9fd2Vsc2hcXFwiPjwvbGk+XFxuXFxuICAgICA8bGkgY2xhc3M9XFxcIm5hdl9faXRlbSBuYXZfX2l0ZW0tLXdvcmtzcGFjZSBuYXZfX2l0ZW0tLWJyb3dzZSBqcy13b3Jrc3BhY2UtbmF2X19pdGVtIHNlbGVjdGVkXFxcIiBpZD1cXFwiYnJvd3NlXFxcIj5cXG4gICAgICAgICA8YSBjbGFzcz1cXFwibmF2X19saW5rXFxcIiBocmVmPVxcXCJqYXZhc2NyaXB0OnZvaWQoMClcXFwiPkJyb3dzZTwvYT5cXG4gICAgIDwvbGk+XFxuICAgICA8bGkgY2xhc3M9XFxcIm5hdl9faXRlbSBuYXZfX2l0ZW0tLXdvcmtzcGFjZSBuYXZfX2l0ZW0tLWNyZWF0ZSBqcy13b3Jrc3BhY2UtbmF2X19pdGVtXFxcIiBpZD1cXFwiY3JlYXRlXFxcIj5cXG4gICAgICAgICA8YSBjbGFzcz1cXFwibmF2X19saW5rXFxcIiBocmVmPVxcXCJqYXZhc2NyaXB0OnZvaWQoMClcXFwiPkNyZWF0ZTwvYT5cXG4gICAgIDwvbGk+XFxuICAgICA8bGkgY2xhc3M9XFxcIm5hdl9faXRlbSBuYXZfX2l0ZW0tLXdvcmtzcGFjZSBuYXZfX2l0ZW0tLWVkaXQganMtd29ya3NwYWNlLW5hdl9faXRlbVxcXCIgaWQ9XFxcImVkaXRcXFwiPlxcbiAgICAgICAgIDxhIGNsYXNzPVxcXCJuYXZfX2xpbmtcXFwiIGhyZWY9XFxcImphdmFzY3JpcHQ6dm9pZCgwKVxcXCI+RWRpdDwvYT5cXG4gICAgIDwvbGk+XFxuICAgICA8bGkgY2xhc3M9XFxcIm5hdl9faXRlbSBuYXZfX2l0ZW0tLXdvcmtzcGFjZSBuYXZfX2l0ZW0tLWltcG9ydCBuYXYtLXdvcmtzcGFjZV9faW1wb3J0IGpzLXdvcmtzcGFjZS1uYXZfX2l0ZW1cXFwiIGlkPVxcXCJpbXBvcnRcXFwiPlxcbiAgICAgICAgIDxhIGNsYXNzPVxcXCJuYXZfX2xpbmtcXFwiIGhyZWY9XFxcImphdmFzY3JpcHQ6dm9pZCgwKVxcXCI+SW1wb3J0PC9hPlxcbiAgICAgPC9saT5cXG4gPC91bD5cIjtcbn0sXCJ1c2VEYXRhXCI6dHJ1ZX0pO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vYXBwL3dvcmtzcGFjZS9uYXZpZ2F0aW9uL25hdmlnYXRpb24uaGFuZGxlYmFyc1xuLy8gbW9kdWxlIGlkID0gNDNcbi8vIG1vZHVsZSBjaHVua3MgPSAxIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9");

/***/ },
/* 44 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(console) {'use strict';\n\nvar browseView = __webpack_require__(45),\n    getBrowseTree = __webpack_require__(50),\n    userState = __webpack_require__(24),\n    workspaceState = __webpack_require__(25),\n    collectionState = __webpack_require__(28);\n\nvar browseController = {\n\n    init: function init() {\n        browseView.render.loader();\n\n        getBrowseTree().then(function (browseTreeData) {\n            workspaceState.browseTreeData.set(browseTreeData);\n            browseController.addDeleteMarkersToData(browseTreeData);\n            browseView.render.tree(browseTreeData);\n            browseController.bindPageButtonsClick();\n            browseController.bindNodeClick();\n\n            if (workspaceState.activeUrl.get().length > 0) {\n                browseController.selectBrowseNodeByUrl(workspaceState.activeUrl.get());\n            }\n        }).catch(function (error) {\n            console.log(error);\n        });\n    },\n\n    addDeleteMarkersToData: function addDeleteMarkersToData(browseTreeData) {\n        // recursively add isDeletable and deleteIsInCollection flags to all browse tree nodes\n        browseTreeData['isDeletable'] = isDeletable(browseTreeData.type);\n        browseTreeData['deleteIsInCollection'] = deleteIsInCollection(browseTreeData.contentPath, collectionState.get());\n\n        $.each(browseTreeData.children, function (key, browseTreeNode) {\n            if (browseTreeNode.children) {\n                browseController.addDeleteMarkersToData(browseTreeNode, collectionState.get());\n            }\n        });\n\n        // set deletable flag to false for certain page types\n        function isDeletable(type) {\n            return !(type == 'home_page' || type == 'taxonomy_landing_page' || type == 'product_page');\n        }\n\n        // check if given uri is marked for deletion in current collection\n        function deleteIsInCollection(uri, collectionData) {\n            var bool = false;\n            if (collectionData.pendingDeletes) {\n                $.each(collectionData.pendingDeletes, function (key, deleteMarker) {\n                    if (uri == deleteMarker.root.uri) {\n                        bool = true;\n                        return false;\n                    } else {\n                        bool = false;\n                    }\n                });\n            }\n            return bool;\n        }\n    },\n\n    bindNodeClick: function bindNodeClick() {\n        $('.js-browse__item-title').click(function () {\n            var url = $(this).closest('.js-browse__item').attr('data-url');\n\n            if (url) {\n                workspaceState.activeUrl.set(url);\n            } else {\n                // Has no url so must be a directory\n                var $this = $(this);\n                browseView.displayChildren($this);\n                browseView.selectDirectories($this);\n                browseView.scrollSelectedItemIntoView($this);\n            }\n        });\n    },\n\n    bindPageButtonsClick: function bindPageButtonsClick() {\n        var $browseTreeItems = $('.js-browse__item');\n\n        $browseTreeItems.find('.js-browse__edit').click(function () {\n            workspaceState.activeScreen.set('edit');\n        });\n\n        $browseTreeItems.find('.js-browse__create').click(function () {\n            workspaceState.activeScreen.set('create');\n        });\n\n        $browseTreeItems.find('.js-browse__menu').click(function () {\n            var $selectedItem = $(this).closest('.js-browse__item');\n            if (!$selectedItem.find('.js-browse__menu').hasClass('active')) {\n                browseView.pageMenu.show($selectedItem);\n            } else {\n                browseView.pageMenu.hide($selectedItem);\n            }\n        });\n    },\n\n    selectBrowseNodeByUrl: function selectBrowseNodeByUrl(url) {\n        // console.log('Node selected');\n        var $this = $('[data-url=\"' + url + '\"]');\n\n        // Hide secondary buttons for currently selected item (will gracefully fail if there's no selected item with displayed secondary buttons)\n        browseView.pageMenu.hide($('.js-browse__item.selected'));\n\n        browseView.selectPage(url);\n        browseView.displayChildren($this);\n        browseView.selectDirectories($this);\n        browseView.scrollSelectedItemIntoView($this);\n    }\n\n};\n\nmodule.exports = browseController;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDQuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vYXBwL3dvcmtzcGFjZS9icm93c2UvYnJvd3NlQ29udHJvbGxlci5qcz8xMDM4Il0sInNvdXJjZXNDb250ZW50IjpbInZhciBicm93c2VWaWV3ID0gcmVxdWlyZSgnd29ya3NwYWNlL2Jyb3dzZS9icm93c2VWaWV3JyksXG4gICAgZ2V0QnJvd3NlVHJlZSA9IHJlcXVpcmUoJ3NoYXJlZC9hcGkvZ2V0QnJvd3NlVHJlZScpLFxuICAgIHVzZXJTdGF0ZSA9IHJlcXVpcmUoJ3NoYXJlZC9zdGF0ZS91c2VyU3RhdGUnKSxcbiAgICB3b3Jrc3BhY2VTdGF0ZSA9IHJlcXVpcmUoJ3NoYXJlZC9zdGF0ZS93b3Jrc3BhY2VTdGF0ZScpLFxuICAgIGNvbGxlY3Rpb25TdGF0ZSA9IHJlcXVpcmUoJ3NoYXJlZC9zdGF0ZS9jb2xsZWN0aW9uU3RhdGUnKTtcblxudmFyIGJyb3dzZUNvbnRyb2xsZXIgPSB7XG5cbiAgICBpbml0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGJyb3dzZVZpZXcucmVuZGVyLmxvYWRlcigpO1xuXG4gICAgICAgIGdldEJyb3dzZVRyZWUoKS50aGVuKGZ1bmN0aW9uKGJyb3dzZVRyZWVEYXRhKXtcbiAgICAgICAgICAgIHdvcmtzcGFjZVN0YXRlLmJyb3dzZVRyZWVEYXRhLnNldChicm93c2VUcmVlRGF0YSk7XG4gICAgICAgICAgICBicm93c2VDb250cm9sbGVyLmFkZERlbGV0ZU1hcmtlcnNUb0RhdGEoYnJvd3NlVHJlZURhdGEpO1xuICAgICAgICAgICAgYnJvd3NlVmlldy5yZW5kZXIudHJlZShicm93c2VUcmVlRGF0YSk7XG4gICAgICAgICAgICBicm93c2VDb250cm9sbGVyLmJpbmRQYWdlQnV0dG9uc0NsaWNrKCk7XG4gICAgICAgICAgICBicm93c2VDb250cm9sbGVyLmJpbmROb2RlQ2xpY2soKTtcblxuICAgICAgICAgICAgaWYgKHdvcmtzcGFjZVN0YXRlLmFjdGl2ZVVybC5nZXQoKS5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICAgICAgYnJvd3NlQ29udHJvbGxlci5zZWxlY3RCcm93c2VOb2RlQnlVcmwod29ya3NwYWNlU3RhdGUuYWN0aXZlVXJsLmdldCgpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSkuY2F0Y2goZnVuY3Rpb24oZXJyb3IpIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycm9yKTtcbiAgICAgICAgfSk7XG4gICAgfSxcblxuICAgIGFkZERlbGV0ZU1hcmtlcnNUb0RhdGE6IGZ1bmN0aW9uKGJyb3dzZVRyZWVEYXRhKSB7XG4gICAgICAgIC8vIHJlY3Vyc2l2ZWx5IGFkZCBpc0RlbGV0YWJsZSBhbmQgZGVsZXRlSXNJbkNvbGxlY3Rpb24gZmxhZ3MgdG8gYWxsIGJyb3dzZSB0cmVlIG5vZGVzXG4gICAgICAgIGJyb3dzZVRyZWVEYXRhWydpc0RlbGV0YWJsZSddID0gaXNEZWxldGFibGUoYnJvd3NlVHJlZURhdGEudHlwZSk7XG4gICAgICAgIGJyb3dzZVRyZWVEYXRhWydkZWxldGVJc0luQ29sbGVjdGlvbiddID0gZGVsZXRlSXNJbkNvbGxlY3Rpb24oYnJvd3NlVHJlZURhdGEuY29udGVudFBhdGgsIGNvbGxlY3Rpb25TdGF0ZS5nZXQoKSk7XG5cbiAgICAgICAgJC5lYWNoKGJyb3dzZVRyZWVEYXRhLmNoaWxkcmVuLCBmdW5jdGlvbigga2V5LCBicm93c2VUcmVlTm9kZSApIHtcbiAgICAgICAgICAgIGlmIChicm93c2VUcmVlTm9kZS5jaGlsZHJlbikge1xuICAgICAgICAgICAgICAgIGJyb3dzZUNvbnRyb2xsZXIuYWRkRGVsZXRlTWFya2Vyc1RvRGF0YShicm93c2VUcmVlTm9kZSwgY29sbGVjdGlvblN0YXRlLmdldCgpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG5cbiAgICAgICAgLy8gc2V0IGRlbGV0YWJsZSBmbGFnIHRvIGZhbHNlIGZvciBjZXJ0YWluIHBhZ2UgdHlwZXNcbiAgICAgICAgZnVuY3Rpb24gaXNEZWxldGFibGUodHlwZSkge1xuICAgICAgICAgICAgcmV0dXJuICEodHlwZSA9PSAnaG9tZV9wYWdlJyB8fCB0eXBlID09ICd0YXhvbm9teV9sYW5kaW5nX3BhZ2UnIHx8IHR5cGUgPT0gJ3Byb2R1Y3RfcGFnZScpO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gY2hlY2sgaWYgZ2l2ZW4gdXJpIGlzIG1hcmtlZCBmb3IgZGVsZXRpb24gaW4gY3VycmVudCBjb2xsZWN0aW9uXG4gICAgICAgIGZ1bmN0aW9uIGRlbGV0ZUlzSW5Db2xsZWN0aW9uKHVyaSwgY29sbGVjdGlvbkRhdGEpIHtcbiAgICAgICAgICAgIHZhciBib29sID0gZmFsc2U7XG4gICAgICAgICAgICBpZiAoY29sbGVjdGlvbkRhdGEucGVuZGluZ0RlbGV0ZXMpIHtcbiAgICAgICAgICAgICAgICAkLmVhY2goY29sbGVjdGlvbkRhdGEucGVuZGluZ0RlbGV0ZXMsIGZ1bmN0aW9uIChrZXksIGRlbGV0ZU1hcmtlcikge1xuICAgICAgICAgICAgICAgICAgICBpZiAodXJpID09IGRlbGV0ZU1hcmtlci5yb290LnVyaSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgYm9vbCA9IHRydWU7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBib29sID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBib29sO1xuICAgICAgICB9XG4gICAgfSxcblxuICAgIGJpbmROb2RlQ2xpY2s6IGZ1bmN0aW9uKCkge1xuICAgICAgICAkKCcuanMtYnJvd3NlX19pdGVtLXRpdGxlJykuY2xpY2soZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICB2YXIgdXJsID0gJCh0aGlzKS5jbG9zZXN0KCcuanMtYnJvd3NlX19pdGVtJykuYXR0cignZGF0YS11cmwnKTtcblxuICAgICAgICAgICAgaWYgKHVybCkge1xuICAgICAgICAgICAgICAgIHdvcmtzcGFjZVN0YXRlLmFjdGl2ZVVybC5zZXQodXJsKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgLy8gSGFzIG5vIHVybCBzbyBtdXN0IGJlIGEgZGlyZWN0b3J5XG4gICAgICAgICAgICAgICAgdmFyICR0aGlzID0gJCh0aGlzKTtcbiAgICAgICAgICAgICAgICBicm93c2VWaWV3LmRpc3BsYXlDaGlsZHJlbigkdGhpcyk7XG4gICAgICAgICAgICAgICAgYnJvd3NlVmlldy5zZWxlY3REaXJlY3RvcmllcygkdGhpcyk7XG4gICAgICAgICAgICAgICAgYnJvd3NlVmlldy5zY3JvbGxTZWxlY3RlZEl0ZW1JbnRvVmlldygkdGhpcyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH0sXG5cbiAgICBiaW5kUGFnZUJ1dHRvbnNDbGljazogZnVuY3Rpb24oKSB7XG4gICAgICAgIHZhciAkYnJvd3NlVHJlZUl0ZW1zID0gJCgnLmpzLWJyb3dzZV9faXRlbScpO1xuXG4gICAgICAgICRicm93c2VUcmVlSXRlbXMuZmluZCgnLmpzLWJyb3dzZV9fZWRpdCcpLmNsaWNrKGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgd29ya3NwYWNlU3RhdGUuYWN0aXZlU2NyZWVuLnNldCgnZWRpdCcpO1xuICAgICAgICB9KTtcblxuICAgICAgICAkYnJvd3NlVHJlZUl0ZW1zLmZpbmQoJy5qcy1icm93c2VfX2NyZWF0ZScpLmNsaWNrKGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgd29ya3NwYWNlU3RhdGUuYWN0aXZlU2NyZWVuLnNldCgnY3JlYXRlJyk7XG4gICAgICAgIH0pO1xuXG4gICAgICAgICRicm93c2VUcmVlSXRlbXMuZmluZCgnLmpzLWJyb3dzZV9fbWVudScpLmNsaWNrKGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgdmFyICRzZWxlY3RlZEl0ZW0gPSAkKHRoaXMpLmNsb3Nlc3QoJy5qcy1icm93c2VfX2l0ZW0nKTtcbiAgICAgICAgICAgIGlmICghJHNlbGVjdGVkSXRlbS5maW5kKCcuanMtYnJvd3NlX19tZW51JykuaGFzQ2xhc3MoJ2FjdGl2ZScpKSB7XG4gICAgICAgICAgICAgICAgYnJvd3NlVmlldy5wYWdlTWVudS5zaG93KCRzZWxlY3RlZEl0ZW0pO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBicm93c2VWaWV3LnBhZ2VNZW51LmhpZGUoJHNlbGVjdGVkSXRlbSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH0sXG5cbiAgICBzZWxlY3RCcm93c2VOb2RlQnlVcmw6IGZ1bmN0aW9uKHVybCkge1xuICAgICAgICAvLyBjb25zb2xlLmxvZygnTm9kZSBzZWxlY3RlZCcpO1xuICAgICAgICB2YXIgJHRoaXMgPSAkKCdbZGF0YS11cmw9XCInICsgdXJsICsgJ1wiXScpO1xuXG4gICAgICAgIC8vIEhpZGUgc2Vjb25kYXJ5IGJ1dHRvbnMgZm9yIGN1cnJlbnRseSBzZWxlY3RlZCBpdGVtICh3aWxsIGdyYWNlZnVsbHkgZmFpbCBpZiB0aGVyZSdzIG5vIHNlbGVjdGVkIGl0ZW0gd2l0aCBkaXNwbGF5ZWQgc2Vjb25kYXJ5IGJ1dHRvbnMpXG4gICAgICAgIGJyb3dzZVZpZXcucGFnZU1lbnUuaGlkZSgkKCcuanMtYnJvd3NlX19pdGVtLnNlbGVjdGVkJykpO1xuXG4gICAgICAgIGJyb3dzZVZpZXcuc2VsZWN0UGFnZSh1cmwpO1xuICAgICAgICBicm93c2VWaWV3LmRpc3BsYXlDaGlsZHJlbigkdGhpcyk7XG4gICAgICAgIGJyb3dzZVZpZXcuc2VsZWN0RGlyZWN0b3JpZXMoJHRoaXMpO1xuICAgICAgICBicm93c2VWaWV3LnNjcm9sbFNlbGVjdGVkSXRlbUludG9WaWV3KCR0aGlzKTtcbiAgICB9XG5cbn07XG5cbm1vZHVsZS5leHBvcnRzID0gYnJvd3NlQ29udHJvbGxlcjtcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyBhcHAvd29ya3NwYWNlL2Jyb3dzZS9icm93c2VDb250cm9sbGVyLmpzIl0sIm1hcHBpbmdzIjoiOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUtBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBdEdBO0FBQ0E7QUF3R0E7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ },
/* 45 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(console) {'use strict';\n\nvar treeTemplate = __webpack_require__(46),\n    loaderTemplate = __webpack_require__(40);\n\nvar browseView = {\n\n    render: {\n\n        loader: function loader() {\n            document.getElementById('workspace-browse').innerHTML = '<div class=\"margin-top--3\">' + loaderTemplate({ large: true, dark: true }) + '</div>';\n        },\n\n        tree: function tree(browseTreeData) {\n            document.getElementById('workspace-browse').innerHTML = treeTemplate(browseTreeData);\n        }\n    },\n\n    selectDirectories: function selectDirectories($this) {\n        $('.page__item--directory.selected').removeClass('selected'); // remove previous selections\n        $this.parents('.js-browse__item--directory').find('.page__item--directory:first').addClass('selected'); // select directories along parent path\n    },\n\n    selectPage: function selectPage(url) {\n        var $selectedListItem = $('[data-url=\"' + url + '\"]'),\n            $previouslySelectedItem = $('.js-browse__item.selected');\n\n        // Remove selected styling from previously selected item\n        $previouslySelectedItem.removeClass('selected');\n\n        // Add selected styling to new item\n        $selectedListItem.addClass('selected');\n\n        // Hide container for item and buttons for previous and show selected one\n        $('.page__container.selected').removeClass('selected');\n        $selectedListItem.find('.page__container:first').addClass('selected');\n\n        // Hide previously displayed page buttons and show selected one\n        if ($selectedListItem.find('.page__buttons:first')) {\n            $('.page__buttons.selected').removeClass('selected');\n            $selectedListItem.find('.page__buttons:first').addClass('selected');\n        }\n    },\n\n    displayChildren: function displayChildren($this) {\n        $('.js-browse__children.active').removeClass('active');\n        $this.parents('ul').addClass('active');\n        $this.closest('li').children('ul').addClass('active');\n    },\n\n    scrollSelectedItemIntoView: function scrollSelectedItemIntoView($this) {\n        var $browseTree = $('#workspace-browse'),\n            $selectedItem = $this ? $this : $browseTree.find('li.selected .page__container.selected');\n\n        if ($selectedItem.length) {\n            var selectedTop = $selectedItem.offset().top,\n                selectedBottom = selectedTop + $selectedItem.height(),\n                browseTop = $browseTree.offset().top,\n                browseBottom = browseTop + $browseTree.height(),\n                navHeight = $('.nav').height();\n\n            if (selectedTop < browseTop) {\n                console.log('Item was above of viewable browse tree');\n                $browseTree.scrollTop($browseTree.scrollTop() + selectedTop - navHeight / 2);\n            } else if (selectedBottom > browseBottom) {\n                console.log('Item was below viewable browse tree');\n                $browseTree.scrollTop(selectedBottom - navHeight / 2 - $selectedItem.height());\n            }\n        }\n    },\n\n    pageMenu: {\n\n        show: function show($selectedItem) {\n            var $menuButton = $selectedItem.find('.js-browse__menu');\n\n            $selectedItem.find('.js-browse__buttons--primary').addClass('active');\n            $menuButton.addClass('active').children('.hamburger-icon__span').addClass('active');\n            $menuButton.next('.page__menu').addClass('active');\n        },\n\n        hide: function hide($selectedItem) {\n            var $menuButton = $selectedItem.find('.js-browse__menu');\n\n            $selectedItem.find('.js-browse__buttons--primary').removeClass('active');\n            $menuButton.removeClass('active').children('.hamburger-icon__span').removeClass('active');\n            $menuButton.next('.page__menu').removeClass('active');\n        }\n    }\n};\n\nmodule.exports = browseView;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDUuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vYXBwL3dvcmtzcGFjZS9icm93c2UvYnJvd3NlVmlldy5qcz8zNTBiIl0sInNvdXJjZXNDb250ZW50IjpbIlxudmFyIHRyZWVUZW1wbGF0ZSA9IHJlcXVpcmUoJy4vYnJvd3NlLmhhbmRsZWJhcnMnKSxcbiAgICBsb2FkZXJUZW1wbGF0ZSA9IHJlcXVpcmUoJy4uLy4uL3NoYXJlZC90ZW1wbGF0ZVBhcnRpYWxzL2xvYWRpbmdBbmltYXRpb24uaGFuZGxlYmFycycpO1xuXG52YXIgYnJvd3NlVmlldyA9IHtcblxuICAgIHJlbmRlcjoge1xuXG4gICAgICAgIGxvYWRlcjogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnd29ya3NwYWNlLWJyb3dzZScpLmlubmVySFRNTCA9ICc8ZGl2IGNsYXNzPVwibWFyZ2luLXRvcC0tM1wiPicgKyBsb2FkZXJUZW1wbGF0ZSh7bGFyZ2U6IHRydWUsIGRhcms6IHRydWV9KSArICc8L2Rpdj4nO1xuICAgICAgICB9LFxuXG4gICAgICAgIHRyZWU6IGZ1bmN0aW9uKGJyb3dzZVRyZWVEYXRhKSB7XG4gICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnd29ya3NwYWNlLWJyb3dzZScpLmlubmVySFRNTCA9IHRyZWVUZW1wbGF0ZShicm93c2VUcmVlRGF0YSk7XG4gICAgICAgIH1cbiAgICB9LFxuXG4gICAgc2VsZWN0RGlyZWN0b3JpZXM6IGZ1bmN0aW9uKCR0aGlzKSB7XG4gICAgICAgICQoJy5wYWdlX19pdGVtLS1kaXJlY3Rvcnkuc2VsZWN0ZWQnKS5yZW1vdmVDbGFzcygnc2VsZWN0ZWQnKTsgLy8gcmVtb3ZlIHByZXZpb3VzIHNlbGVjdGlvbnNcbiAgICAgICAgJHRoaXMucGFyZW50cygnLmpzLWJyb3dzZV9faXRlbS0tZGlyZWN0b3J5JykuZmluZCgnLnBhZ2VfX2l0ZW0tLWRpcmVjdG9yeTpmaXJzdCcpLmFkZENsYXNzKCdzZWxlY3RlZCcpOyAvLyBzZWxlY3QgZGlyZWN0b3JpZXMgYWxvbmcgcGFyZW50IHBhdGhcbiAgICB9LFxuXG4gICAgc2VsZWN0UGFnZTogZnVuY3Rpb24odXJsKSB7XG4gICAgICAgIHZhciAkc2VsZWN0ZWRMaXN0SXRlbSA9ICQoJ1tkYXRhLXVybD1cIicgKyB1cmwgKyAnXCJdJyksXG4gICAgICAgICAgICAkcHJldmlvdXNseVNlbGVjdGVkSXRlbSA9ICQoJy5qcy1icm93c2VfX2l0ZW0uc2VsZWN0ZWQnKTtcblxuICAgICAgICAvLyBSZW1vdmUgc2VsZWN0ZWQgc3R5bGluZyBmcm9tIHByZXZpb3VzbHkgc2VsZWN0ZWQgaXRlbVxuICAgICAgICAkcHJldmlvdXNseVNlbGVjdGVkSXRlbS5yZW1vdmVDbGFzcygnc2VsZWN0ZWQnKTtcblxuICAgICAgICAvLyBBZGQgc2VsZWN0ZWQgc3R5bGluZyB0byBuZXcgaXRlbVxuICAgICAgICAkc2VsZWN0ZWRMaXN0SXRlbS5hZGRDbGFzcygnc2VsZWN0ZWQnKTtcblxuICAgICAgICAvLyBIaWRlIGNvbnRhaW5lciBmb3IgaXRlbSBhbmQgYnV0dG9ucyBmb3IgcHJldmlvdXMgYW5kIHNob3cgc2VsZWN0ZWQgb25lXG4gICAgICAgICQoJy5wYWdlX19jb250YWluZXIuc2VsZWN0ZWQnKS5yZW1vdmVDbGFzcygnc2VsZWN0ZWQnKTtcbiAgICAgICAgJHNlbGVjdGVkTGlzdEl0ZW0uZmluZCgnLnBhZ2VfX2NvbnRhaW5lcjpmaXJzdCcpLmFkZENsYXNzKCdzZWxlY3RlZCcpO1xuXG4gICAgICAgIC8vIEhpZGUgcHJldmlvdXNseSBkaXNwbGF5ZWQgcGFnZSBidXR0b25zIGFuZCBzaG93IHNlbGVjdGVkIG9uZVxuICAgICAgICBpZiAoJHNlbGVjdGVkTGlzdEl0ZW0uZmluZCgnLnBhZ2VfX2J1dHRvbnM6Zmlyc3QnKSkge1xuICAgICAgICAgICAgJCgnLnBhZ2VfX2J1dHRvbnMuc2VsZWN0ZWQnKS5yZW1vdmVDbGFzcygnc2VsZWN0ZWQnKTtcbiAgICAgICAgICAgICRzZWxlY3RlZExpc3RJdGVtLmZpbmQoJy5wYWdlX19idXR0b25zOmZpcnN0JykuYWRkQ2xhc3MoJ3NlbGVjdGVkJyk7XG4gICAgICAgIH1cbiAgICB9LFxuXG4gICAgZGlzcGxheUNoaWxkcmVuOiBmdW5jdGlvbigkdGhpcykge1xuICAgICAgICAkKCcuanMtYnJvd3NlX19jaGlsZHJlbi5hY3RpdmUnKS5yZW1vdmVDbGFzcygnYWN0aXZlJyk7XG4gICAgICAgICR0aGlzLnBhcmVudHMoJ3VsJykuYWRkQ2xhc3MoJ2FjdGl2ZScpO1xuICAgICAgICAkdGhpcy5jbG9zZXN0KCdsaScpLmNoaWxkcmVuKCd1bCcpLmFkZENsYXNzKCdhY3RpdmUnKTtcbiAgICB9LFxuXG4gICAgc2Nyb2xsU2VsZWN0ZWRJdGVtSW50b1ZpZXc6IGZ1bmN0aW9uKCR0aGlzKSB7XG4gICAgICAgIHZhciAkYnJvd3NlVHJlZSA9ICQoJyN3b3Jrc3BhY2UtYnJvd3NlJyksXG4gICAgICAgICRzZWxlY3RlZEl0ZW0gPSAkdGhpcyA/ICR0aGlzIDogJGJyb3dzZVRyZWUuZmluZCgnbGkuc2VsZWN0ZWQgLnBhZ2VfX2NvbnRhaW5lci5zZWxlY3RlZCcpO1xuXG4gICAgICAgIGlmICgkc2VsZWN0ZWRJdGVtLmxlbmd0aCkge1xuICAgICAgICAgICAgdmFyIHNlbGVjdGVkVG9wID0gJHNlbGVjdGVkSXRlbS5vZmZzZXQoKS50b3AsXG4gICAgICAgICAgICAgICAgc2VsZWN0ZWRCb3R0b20gPSBzZWxlY3RlZFRvcCArICRzZWxlY3RlZEl0ZW0uaGVpZ2h0KCksXG4gICAgICAgICAgICAgICAgYnJvd3NlVG9wID0gJGJyb3dzZVRyZWUub2Zmc2V0KCkudG9wLFxuICAgICAgICAgICAgICAgIGJyb3dzZUJvdHRvbSA9IGJyb3dzZVRvcCArICRicm93c2VUcmVlLmhlaWdodCgpLFxuICAgICAgICAgICAgICAgIG5hdkhlaWdodCA9ICQoJy5uYXYnKS5oZWlnaHQoKTtcblxuICAgICAgICAgICAgaWYgKHNlbGVjdGVkVG9wIDwgYnJvd3NlVG9wKSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ0l0ZW0gd2FzIGFib3ZlIG9mIHZpZXdhYmxlIGJyb3dzZSB0cmVlJyk7XG4gICAgICAgICAgICAgICAgJGJyb3dzZVRyZWUuc2Nyb2xsVG9wKCRicm93c2VUcmVlLnNjcm9sbFRvcCgpICsgKHNlbGVjdGVkVG9wKSAtIChuYXZIZWlnaHQgLyAyKSk7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKHNlbGVjdGVkQm90dG9tID4gYnJvd3NlQm90dG9tKSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ0l0ZW0gd2FzIGJlbG93IHZpZXdhYmxlIGJyb3dzZSB0cmVlJyk7XG4gICAgICAgICAgICAgICAgJGJyb3dzZVRyZWUuc2Nyb2xsVG9wKHNlbGVjdGVkQm90dG9tIC0gKG5hdkhlaWdodCAvIDIpIC0gJHNlbGVjdGVkSXRlbS5oZWlnaHQoKSlcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH0sXG5cbiAgICBwYWdlTWVudToge1xuXG4gICAgICAgIHNob3c6IGZ1bmN0aW9uKCRzZWxlY3RlZEl0ZW0pIHtcbiAgICAgICAgICAgIHZhciAkbWVudUJ1dHRvbiA9ICRzZWxlY3RlZEl0ZW0uZmluZCgnLmpzLWJyb3dzZV9fbWVudScpO1xuXG4gICAgICAgICAgICAkc2VsZWN0ZWRJdGVtLmZpbmQoJy5qcy1icm93c2VfX2J1dHRvbnMtLXByaW1hcnknKS5hZGRDbGFzcygnYWN0aXZlJyk7XG4gICAgICAgICAgICAkbWVudUJ1dHRvbi5hZGRDbGFzcygnYWN0aXZlJykuY2hpbGRyZW4oJy5oYW1idXJnZXItaWNvbl9fc3BhbicpLmFkZENsYXNzKCdhY3RpdmUnKTtcbiAgICAgICAgICAgICRtZW51QnV0dG9uLm5leHQoJy5wYWdlX19tZW51JykuYWRkQ2xhc3MoJ2FjdGl2ZScpO1xuICAgICAgICB9LFxuXG4gICAgICAgIGhpZGU6IGZ1bmN0aW9uKCRzZWxlY3RlZEl0ZW0pIHtcbiAgICAgICAgICAgIHZhciAkbWVudUJ1dHRvbiA9ICRzZWxlY3RlZEl0ZW0uZmluZCgnLmpzLWJyb3dzZV9fbWVudScpO1xuXG4gICAgICAgICAgICAkc2VsZWN0ZWRJdGVtLmZpbmQoJy5qcy1icm93c2VfX2J1dHRvbnMtLXByaW1hcnknKS5yZW1vdmVDbGFzcygnYWN0aXZlJyk7XG4gICAgICAgICAgICAkbWVudUJ1dHRvbi5yZW1vdmVDbGFzcygnYWN0aXZlJykuY2hpbGRyZW4oJy5oYW1idXJnZXItaWNvbl9fc3BhbicpLnJlbW92ZUNsYXNzKCdhY3RpdmUnKTtcbiAgICAgICAgICAgICRtZW51QnV0dG9uLm5leHQoJy5wYWdlX19tZW51JykucmVtb3ZlQ2xhc3MoJ2FjdGl2ZScpO1xuICAgICAgICB9XG4gICAgfVxufTtcblxubW9kdWxlLmV4cG9ydHMgPSBicm93c2VWaWV3O1xuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIGFwcC93b3Jrc3BhY2UvYnJvd3NlL2Jyb3dzZVZpZXcuanMiXSwibWFwcGluZ3MiOiI7O0FBQ0E7QUFBQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQVJBO0FBQ0E7QUFVQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFFQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUtBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQWhCQTtBQWxFQTtBQUNBO0FBcUZBOyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ },
/* 46 */
/***/ function(module, exports, __webpack_require__) {

	eval("var Handlebars = __webpack_require__(32);\nfunction __default(obj) { return obj && (obj.__esModule ? obj[\"default\"] : obj); }\nmodule.exports = (Handlebars[\"default\"] || Handlebars).template({\"1\":function(depth0,helpers,partials,data) {\n    return \" page__item--directory\";\n},\"3\":function(depth0,helpers,partials,data) {\n    return \" page__item--\"\n    + this.escapeExpression(this.lambda((depth0 != null ? depth0.type : depth0), depth0));\n},\"5\":function(depth0,helpers,partials,data) {\n    return \"<button class=\\\"btn btn--warning js-browse__delete\\\">Delete</button>\";\n},\"7\":function(depth0,helpers,partials,data) {\n    var stack1;\n\n  return \"-->\\n                        <!--<div class=\\\"page__buttons page__buttons--list selected\\\">-->\\n                            <!--<button class=\\\"btn btn--primary btn-browse-edit\\\">Edit</button>-->\\n                            <!--<button class=\\\"btn btn--positive btn-browse-create\\\">Create</button>-->\\n                            <!--\"\n    + ((stack1 = helpers['if'].call(depth0,(depth0 != null ? depth0.isDeletable : depth0),{\"name\":\"if\",\"hash\":{},\"fn\":this.program(8, data, 0),\"inverse\":this.noop,\"data\":data})) != null ? stack1 : \"\")\n    + \"-->\\n                        <!--</div>-->\\n                    <!--\";\n},\"8\":function(depth0,helpers,partials,data) {\n    return \"<button class=\\\"btn btn--warning btn-browse-delete\\\">Delete</button>\";\n},\"10\":function(depth0,helpers,partials,data) {\n    var stack1;\n\n  return \" \\n                    <ul class=\\\"js-browse__children active\\\">\\n                        \"\n    + ((stack1 = this.invokePartial(__webpack_require__(47),depth0,{\"name\":\"browseNode\",\"data\":data,\"helpers\":helpers,\"partials\":partials})) != null ? stack1 : \"\")\n    + \" \\n                        <!--\"\n    + ((stack1 = __default(__webpack_require__(48)).call(depth0,(depth0 != null ? depth0.collectionOwner : depth0),\"===\",\"PUBLISHING_SUPPORT\",{\"name\":\"ifCond\",\"hash\":{},\"fn\":this.program(11, data, 0),\"inverse\":this.noop,\"data\":data})) != null ? stack1 : \"\")\n    + \"-->\\n                        <!--\"\n    + ((stack1 = __default(__webpack_require__(48)).call(depth0,(depth0 != null ? depth0.collectionOwner : depth0),\"===\",\"DATA_VISUALISATION\",{\"name\":\"ifCond\",\"hash\":{},\"fn\":this.program(13, data, 0),\"inverse\":this.noop,\"data\":data})) != null ? stack1 : \"\")\n    + \"-->\\n                    </ul>\\n\";\n},\"11\":function(depth0,helpers,partials,data) {\n    var stack1;\n\n  return \"-->\\n                            <!--\"\n    + ((stack1 = this.invokePartial(__webpack_require__(47),depth0,{\"name\":\"browseNode\",\"data\":data,\"helpers\":helpers,\"partials\":partials})) != null ? stack1 : \"\")\n    + \" -->\\n                        <!--\";\n},\"13\":function(depth0,helpers,partials,data) {\n    var stack1;\n\n  return \"-->\\n                            <!--\"\n    + ((stack1 = this.invokePartial(__webpack_require__(49),depth0,{\"name\":\"browseVisNode\",\"data\":data,\"helpers\":helpers,\"partials\":partials})) != null ? stack1 : \"\")\n    + \" -->\\n                        <!--\";\n},\"compiler\":[6,\">= 2.0.0-beta.1\"],\"main\":function(depth0,helpers,partials,data) {\n    var stack1, alias1=this.lambda, alias2=this.escapeExpression;\n\n  return \"<section class=\\\"panel panel--scrollable workspace-browse\\\">\\n    <nav class=\\\"tree-nav-holder js-browse\\\">\\n        <ul class=\\\"page-list page-list--tree active\\\">\\n            <li class=\\\"js-browse__item selected\\\" data-url=\\\"\"\n    + alias2(alias1((depth0 != null ? depth0.uri : depth0), depth0))\n    + \"\\\">\\n                <div class=\\\"page__container selected\\\">\\n                    <span class=\\\"js-browse__item-title page__item\"\n    + ((stack1 = helpers.unless.call(depth0,(depth0 != null ? depth0.uri : depth0),{\"name\":\"unless\",\"hash\":{},\"fn\":this.program(1, data, 0),\"inverse\":this.program(3, data, 0),\"data\":data})) != null ? stack1 : \"\")\n    + \"\\\">\"\n    + alias2(alias1(((stack1 = (depth0 != null ? depth0.description : depth0)) != null ? stack1.title : stack1), depth0))\n    + \"</span>\\n                    <div class=\\\"page__buttons page__buttons--list selected\\\">\\n                        <button class=\\\"btn btn--primary js-browse__edit\\\">Edit</button>\\n                        <button class=\\\"btn btn--positive js-browse__create\\\">Create</button>\\n                        \"\n    + ((stack1 = helpers['if'].call(depth0,(depth0 != null ? depth0.isDeletable : depth0),{\"name\":\"if\",\"hash\":{},\"fn\":this.program(5, data, 0),\"inverse\":this.noop,\"data\":data})) != null ? stack1 : \"\")\n    + \"\\n                    </div>\\n                    <!--\"\n    + ((stack1 = __default(__webpack_require__(48)).call(depth0,(depth0 != null ? depth0.collectionOwner : depth0),\"===\",\"PUBLISHING_SUPPORT\",{\"name\":\"ifCond\",\"hash\":{},\"fn\":this.program(7, data, 0),\"inverse\":this.noop,\"data\":data})) != null ? stack1 : \"\")\n    + \"-->\\n                </div>\\n                \"\n    + ((stack1 = helpers['if'].call(depth0,(depth0 != null ? depth0.children : depth0),{\"name\":\"if\",\"hash\":{},\"fn\":this.program(10, data, 0),\"inverse\":this.noop,\"data\":data})) != null ? stack1 : \"\")\n    + \"            </li>\\n        </ul>\\n    </nav>\\n</section>\";\n},\"usePartial\":true,\"useData\":true});//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ },
/* 47 */
/***/ function(module, exports, __webpack_require__) {

	eval("var Handlebars = __webpack_require__(32);\nfunction __default(obj) { return obj && (obj.__esModule ? obj[\"default\"] : obj); }\nmodule.exports = (Handlebars[\"default\"] || Handlebars).template({\"1\":function(depth0,helpers,partials,data) {\n    var stack1, alias1=this.lambda, alias2=this.escapeExpression;\n\n  return \" \\n    <li class=\\\"js-browse__item \"\n    + ((stack1 = helpers.unless.call(depth0,(depth0 != null ? depth0.uri : depth0),{\"name\":\"unless\",\"hash\":{},\"fn\":this.program(2, data, 0),\"inverse\":this.noop,\"data\":data})) != null ? stack1 : \"\")\n    + \"\\\" data-url=\\\"\"\n    + alias2(alias1((depth0 != null ? depth0.uri : depth0), depth0))\n    + \"\\\">\\n        <span class=\\\"page__container \"\n    + ((stack1 = helpers['if'].call(depth0,(depth0 != null ? depth0.deleteMarker : depth0),{\"name\":\"if\",\"hash\":{},\"fn\":this.program(4, data, 0),\"inverse\":this.noop,\"data\":data})) != null ? stack1 : \"\")\n    + \"\\\">\\n            <span class=\\\"js-browse__item-title page__item\"\n    + ((stack1 = helpers.unless.call(depth0,(depth0 != null ? depth0.uri : depth0),{\"name\":\"unless\",\"hash\":{},\"fn\":this.program(6, data, 0),\"inverse\":this.program(8, data, 0),\"data\":data})) != null ? stack1 : \"\")\n    + \"\\\">\"\n    + alias2(alias1(((stack1 = (depth0 != null ? depth0.description : depth0)) != null ? stack1.title : stack1), depth0))\n    + ((stack1 = helpers['if'].call(depth0,((stack1 = (depth0 != null ? depth0.description : depth0)) != null ? stack1.edition : stack1),{\"name\":\"if\",\"hash\":{},\"fn\":this.program(10, data, 0),\"inverse\":this.noop,\"data\":data})) != null ? stack1 : \"\")\n    + \"</span>\\n            <span class=\\\"page__buttons page__buttons--list\\\">\\n\\n                <span class=\\\"page__primary-buttons js-browse__buttons--primary \"\n    + ((stack1 = helpers['if'].call(depth0,(depth0 != null ? depth0.deleteMarker : depth0),{\"name\":\"if\",\"hash\":{},\"fn\":this.program(12, data, 0),\"inverse\":this.noop,\"data\":data})) != null ? stack1 : \"\")\n    + \"\\\">\\n                    <button class=\\\"btn btn--primary js-browse__edit\\\">Edit</button>\\n                    <button class=\\\"btn btn--positive js-browse__create\\\">Create</button>\\n                </span>\\n\\n\\n                <button class=\\\"btn btn--primary js-browse__delete-revert \"\n    + ((stack1 = __default(__webpack_require__(48)).call(depth0,(depth0 != null ? depth0.deleteIsInCollection : depth0),\"&&\",(depth0 != null ? depth0.deleteMarker : depth0),{\"name\":\"ifCond\",\"hash\":{},\"fn\":this.program(14, data, 0),\"inverse\":this.program(12, data, 0),\"data\":data})) != null ? stack1 : \"\")\n    + \"\\\">Revert deletion</button>\\n\"\n    + ((stack1 = helpers['if'].call(depth0,(depth0 != null ? depth0.deleteMarker : depth0),{\"name\":\"if\",\"hash\":{},\"fn\":this.program(16, data, 0),\"inverse\":this.noop,\"data\":data})) != null ? stack1 : \"\")\n    + \"\\n\"\n    + ((stack1 = helpers['if'].call(depth0,(depth0 != null ? depth0.isDeletable : depth0),{\"name\":\"if\",\"hash\":{},\"fn\":this.program(19, data, 0),\"inverse\":this.noop,\"data\":data})) != null ? stack1 : \"\")\n    + \"            </span>\\n        </span>\\n        \"\n    + ((stack1 = helpers['if'].call(depth0,(depth0 != null ? depth0.children : depth0),{\"name\":\"if\",\"hash\":{},\"fn\":this.program(24, data, 0),\"inverse\":this.noop,\"data\":data})) != null ? stack1 : \"\")\n    + \"    </li>\\n\";\n},\"2\":function(depth0,helpers,partials,data) {\n    return \"js-browse__item--directory\";\n},\"4\":function(depth0,helpers,partials,data) {\n    return \"deleted\";\n},\"6\":function(depth0,helpers,partials,data) {\n    return \" page__item--directory\";\n},\"8\":function(depth0,helpers,partials,data) {\n    return \" page__item--\"\n    + this.escapeExpression(this.lambda((depth0 != null ? depth0.type : depth0), depth0));\n},\"10\":function(depth0,helpers,partials,data) {\n    var stack1;\n\n  return \"\\n                : \"\n    + this.escapeExpression(this.lambda(((stack1 = (depth0 != null ? depth0.description : depth0)) != null ? stack1.edition : stack1), depth0));\n},\"12\":function(depth0,helpers,partials,data) {\n    return \"hidden\";\n},\"14\":function(depth0,helpers,partials,data) {\n    return \"\";\n},\"16\":function(depth0,helpers,partials,data) {\n    var stack1;\n\n  return \"                    \"\n    + ((stack1 = helpers.unless.call(depth0,(depth0 != null ? depth0.deleteIsInCollection : depth0),{\"name\":\"unless\",\"hash\":{},\"fn\":this.program(17, data, 0),\"inverse\":this.noop,\"data\":data})) != null ? stack1 : \"\")\n    + \"\\n\";\n},\"17\":function(depth0,helpers,partials,data) {\n    return \"* this file has been delete in another collection\";\n},\"19\":function(depth0,helpers,partials,data) {\n    var stack1;\n\n  return \"                    <span class=\\\"js-browse__buttons--secondary \"\n    + ((stack1 = helpers['if'].call(depth0,(depth0 != null ? depth0.deleteMarker : depth0),{\"name\":\"if\",\"hash\":{},\"fn\":this.program(12, data, 0),\"inverse\":this.noop,\"data\":data})) != null ? stack1 : \"\")\n    + \"\\\">\\n                        <button class=\\\"js-browse__menu hamburger-icon hamburger-icon--page-item\\\">\\n                            <span class=\\\"hamburger-icon__span\\\">toggle menu</span>\\n                        </button>\\n\\n                        <span class=\\\"page__menu\\\">\\n\"\n    + ((stack1 = helpers['if'].call(depth0,(depth0 != null ? depth0.isMoveable : depth0),{\"name\":\"if\",\"hash\":{},\"fn\":this.program(20, data, 0),\"inverse\":this.noop,\"data\":data})) != null ? stack1 : \"\")\n    + \"\\n\"\n    + ((stack1 = helpers['if'].call(depth0,(depth0 != null ? depth0.isDeletable : depth0),{\"name\":\"if\",\"hash\":{},\"fn\":this.program(22, data, 0),\"inverse\":this.noop,\"data\":data})) != null ? stack1 : \"\")\n    + \"\\n                        </span>\\n                    </span>\\n\";\n},\"20\":function(depth0,helpers,partials,data) {\n    return \"                                <button class=\\\"btn btn--primary js-browse__move\\\">Move</button>\";\n},\"22\":function(depth0,helpers,partials,data) {\n    return \"                                <button class=\\\"btn btn--warning js-browse__delete\\\">Delete</button>\";\n},\"24\":function(depth0,helpers,partials,data) {\n    var stack1;\n\n  return \" \\n            <ul class=\\\"js-browse__children\\\">\\n                \"\n    + ((stack1 = this.invokePartial(__webpack_require__(47),depth0,{\"name\":\"browseNode\",\"data\":data,\"helpers\":helpers,\"partials\":partials})) != null ? stack1 : \"\")\n    + \" \\n            </ul>\\n\";\n},\"compiler\":[6,\">= 2.0.0-beta.1\"],\"main\":function(depth0,helpers,partials,data) {\n    var stack1;\n\n  return ((stack1 = helpers.each.call(depth0,(depth0 != null ? depth0.children : depth0),{\"name\":\"each\",\"hash\":{},\"fn\":this.program(1, data, 0),\"inverse\":this.noop,\"data\":data})) != null ? stack1 : \"\");\n},\"usePartial\":true,\"useData\":true});//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ },
/* 48 */
/***/ function(module, exports) {

	eval("'use strict';\n\nmodule.exports = function (v1, operator, v2, options) {\n\n    switch (operator) {\n        case '==':\n            return v1 == v2 ? options.fn(this) : options.inverse(this);\n        case '===':\n            return v1 === v2 ? options.fn(this) : options.inverse(this);\n        case '<':\n            return v1 < v2 ? options.fn(this) : options.inverse(this);\n        case '<=':\n            return v1 <= v2 ? options.fn(this) : options.inverse(this);\n        case '>':\n            return v1 > v2 ? options.fn(this) : options.inverse(this);\n        case '>=':\n            return v1 >= v2 ? options.fn(this) : options.inverse(this);\n        case '&&':\n            return v1 && v2 ? options.fn(this) : options.inverse(this);\n        case '||':\n            return v1 || v2 ? options.fn(this) : options.inverse(this);\n        default:\n            return options.inverse(this);\n    }\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDguanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vYXBwL3NoYXJlZC90ZW1wbGF0ZUhlbHBlcnMvaWZDb25kLmpzPzZiNmQiXSwic291cmNlc0NvbnRlbnQiOlsiXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICh2MSwgb3BlcmF0b3IsIHYyLCBvcHRpb25zKSB7XG5cbiAgICBzd2l0Y2ggKG9wZXJhdG9yKSB7XG4gICAgICAgIGNhc2UgJz09JzpcbiAgICAgICAgICAgIHJldHVybiAodjEgPT0gdjIpID8gb3B0aW9ucy5mbih0aGlzKSA6IG9wdGlvbnMuaW52ZXJzZSh0aGlzKTtcbiAgICAgICAgY2FzZSAnPT09JzpcbiAgICAgICAgICAgIHJldHVybiAodjEgPT09IHYyKSA/IG9wdGlvbnMuZm4odGhpcykgOiBvcHRpb25zLmludmVyc2UodGhpcyk7XG4gICAgICAgIGNhc2UgJzwnOlxuICAgICAgICAgICAgcmV0dXJuICh2MSA8IHYyKSA/IG9wdGlvbnMuZm4odGhpcykgOiBvcHRpb25zLmludmVyc2UodGhpcyk7XG4gICAgICAgIGNhc2UgJzw9JzpcbiAgICAgICAgICAgIHJldHVybiAodjEgPD0gdjIpID8gb3B0aW9ucy5mbih0aGlzKSA6IG9wdGlvbnMuaW52ZXJzZSh0aGlzKTtcbiAgICAgICAgY2FzZSAnPic6XG4gICAgICAgICAgICByZXR1cm4gKHYxID4gdjIpID8gb3B0aW9ucy5mbih0aGlzKSA6IG9wdGlvbnMuaW52ZXJzZSh0aGlzKTtcbiAgICAgICAgY2FzZSAnPj0nOlxuICAgICAgICAgICAgcmV0dXJuICh2MSA+PSB2MikgPyBvcHRpb25zLmZuKHRoaXMpIDogb3B0aW9ucy5pbnZlcnNlKHRoaXMpO1xuICAgICAgICBjYXNlICcmJic6XG4gICAgICAgICAgICByZXR1cm4gKHYxICYmIHYyKSA/IG9wdGlvbnMuZm4odGhpcykgOiBvcHRpb25zLmludmVyc2UodGhpcyk7XG4gICAgICAgIGNhc2UgJ3x8JzpcbiAgICAgICAgICAgIHJldHVybiAodjEgfHwgdjIpID8gb3B0aW9ucy5mbih0aGlzKSA6IG9wdGlvbnMuaW52ZXJzZSh0aGlzKTtcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIHJldHVybiBvcHRpb25zLmludmVyc2UodGhpcyk7XG4gICAgfVxufTtcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyBhcHAvc2hhcmVkL3RlbXBsYXRlSGVscGVycy9pZkNvbmQuanMiXSwibWFwcGluZ3MiOiI7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBbEJBO0FBb0JBIiwic291cmNlUm9vdCI6IiJ9");

/***/ },
/* 49 */
/***/ function(module, exports, __webpack_require__) {

	eval("var Handlebars = __webpack_require__(32);\nfunction __default(obj) { return obj && (obj.__esModule ? obj[\"default\"] : obj); }\nmodule.exports = (Handlebars[\"default\"] || Handlebars).template({\"1\":function(depth0,helpers,partials,data) {\n    var stack1;\n\n  return \" \\n    <li class=\\\"js-browse__item\\\" data-url=\\\"\"\n    + ((stack1 = helpers['if'].call(depth0,(depth0 != null ? depth0.uri : depth0),{\"name\":\"if\",\"hash\":{},\"fn\":this.program(2, data, 0),\"inverse\":this.program(4, data, 0),\"data\":data})) != null ? stack1 : \"\")\n    + \"\\\" >\\n        <span class=\\\"page__container\\\">\\n            <span class=\\\"js-browse__item-title page__item\"\n    + ((stack1 = helpers.unless.call(depth0,(depth0 != null ? depth0.uri : depth0),{\"name\":\"unless\",\"hash\":{},\"fn\":this.program(6, data, 0),\"inverse\":this.program(8, data, 0),\"data\":data})) != null ? stack1 : \"\")\n    + \" \"\n    + ((stack1 = __default(__webpack_require__(48)).call(depth0,((stack1 = (depth0 != null ? depth0.description : depth0)) != null ? stack1.title : stack1),\"===\",\"visualisations\",{\"name\":\"ifCond\",\"hash\":{},\"fn\":this.program(10, data, 0),\"inverse\":this.noop,\"data\":data})) != null ? stack1 : \"\")\n    + \"\\\">\"\n    + this.escapeExpression(this.lambda(((stack1 = (depth0 != null ? depth0.description : depth0)) != null ? stack1.title : stack1), depth0))\n    + \"</span>\\n            <div class=\\\"page__buttons page__buttons--list\\\">\\n                \"\n    + ((stack1 = helpers.unless.call(depth0,(depth0 != null ? depth0.uri : depth0),{\"name\":\"unless\",\"hash\":{},\"fn\":this.program(12, data, 0),\"inverse\":this.noop,\"data\":data})) != null ? stack1 : \"\")\n    + \"\\n\"\n    + ((stack1 = helpers['if'].call(depth0,(depth0 != null ? depth0.uri : depth0),{\"name\":\"if\",\"hash\":{},\"fn\":this.program(14, data, 0),\"inverse\":this.noop,\"data\":data})) != null ? stack1 : \"\")\n    + \"            </div>\\n        </span>\\n        \"\n    + ((stack1 = helpers['if'].call(depth0,(depth0 != null ? depth0.children : depth0),{\"name\":\"if\",\"hash\":{},\"fn\":this.program(16, data, 0),\"inverse\":this.noop,\"data\":data})) != null ? stack1 : \"\")\n    + \"    </li>\\n\";\n},\"2\":function(depth0,helpers,partials,data) {\n    return this.escapeExpression(this.lambda((depth0 != null ? depth0.uri : depth0), depth0));\n},\"4\":function(depth0,helpers,partials,data) {\n    var stack1;\n\n  return \"/\"\n    + this.escapeExpression(this.lambda(((stack1 = (depth0 != null ? depth0.description : depth0)) != null ? stack1.title : stack1), depth0));\n},\"6\":function(depth0,helpers,partials,data) {\n    return \" page__item--directory\";\n},\"8\":function(depth0,helpers,partials,data) {\n    return \" page__item--\"\n    + this.escapeExpression(this.lambda((depth0 != null ? depth0.type : depth0), depth0));\n},\"10\":function(depth0,helpers,partials,data) {\n    return \"datavis-directory\";\n},\"12\":function(depth0,helpers,partials,data) {\n    return \"<button class=\\\"btn btn--positive btn-browse-create-datavis\\\">Upload visualisation</button>\";\n},\"14\":function(depth0,helpers,partials,data) {\n    return \"                    <button class=\\\"btn btn--primary btn-browse-edit\\\">Edit</button>\\n\";\n},\"16\":function(depth0,helpers,partials,data) {\n    var stack1;\n\n  return \" \\n            <ul class=\\\"js-browse__children\\\">\\n                \"\n    + ((stack1 = this.invokePartial(__webpack_require__(49),depth0,{\"name\":\"browseVisNode\",\"data\":data,\"helpers\":helpers,\"partials\":partials})) != null ? stack1 : \"\")\n    + \" \\n            </ul>\\n\";\n},\"compiler\":[6,\">= 2.0.0-beta.1\"],\"main\":function(depth0,helpers,partials,data) {\n    var stack1;\n\n  return ((stack1 = helpers.each.call(depth0,(depth0 != null ? depth0.children : depth0),{\"name\":\"each\",\"hash\":{},\"fn\":this.program(1, data, 0),\"inverse\":this.noop,\"data\":data})) != null ? stack1 : \"\");\n},\"usePartial\":true,\"useData\":true});//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDkuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvd29ya3NwYWNlL2Jyb3dzZS9icm93c2VWaXNOb2RlLmhhbmRsZWJhcnM/MDdlNCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgSGFuZGxlYmFycyA9IHJlcXVpcmUoXCIvVXNlcnMvY3Jpc3Bpbm1lcnJpbWFuL0dpdC9vbnNkaWdpdGFsL2Zsb3JlbmNlL3NyYy9ub2RlX21vZHVsZXMvaGFuZGxlYmFycy9ydW50aW1lLmpzXCIpO1xuZnVuY3Rpb24gX19kZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIChvYmouX19lc01vZHVsZSA/IG9ialtcImRlZmF1bHRcIl0gOiBvYmopOyB9XG5tb2R1bGUuZXhwb3J0cyA9IChIYW5kbGViYXJzW1wiZGVmYXVsdFwiXSB8fCBIYW5kbGViYXJzKS50ZW1wbGF0ZSh7XCIxXCI6ZnVuY3Rpb24oZGVwdGgwLGhlbHBlcnMscGFydGlhbHMsZGF0YSkge1xuICAgIHZhciBzdGFjazE7XG5cbiAgcmV0dXJuIFwiIFxcbiAgICA8bGkgY2xhc3M9XFxcImpzLWJyb3dzZV9faXRlbVxcXCIgZGF0YS11cmw9XFxcIlwiXG4gICAgKyAoKHN0YWNrMSA9IGhlbHBlcnNbJ2lmJ10uY2FsbChkZXB0aDAsKGRlcHRoMCAhPSBudWxsID8gZGVwdGgwLnVyaSA6IGRlcHRoMCkse1wibmFtZVwiOlwiaWZcIixcImhhc2hcIjp7fSxcImZuXCI6dGhpcy5wcm9ncmFtKDIsIGRhdGEsIDApLFwiaW52ZXJzZVwiOnRoaXMucHJvZ3JhbSg0LCBkYXRhLCAwKSxcImRhdGFcIjpkYXRhfSkpICE9IG51bGwgPyBzdGFjazEgOiBcIlwiKVxuICAgICsgXCJcXFwiID5cXG4gICAgICAgIDxzcGFuIGNsYXNzPVxcXCJwYWdlX19jb250YWluZXJcXFwiPlxcbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPVxcXCJqcy1icm93c2VfX2l0ZW0tdGl0bGUgcGFnZV9faXRlbVwiXG4gICAgKyAoKHN0YWNrMSA9IGhlbHBlcnMudW5sZXNzLmNhbGwoZGVwdGgwLChkZXB0aDAgIT0gbnVsbCA/IGRlcHRoMC51cmkgOiBkZXB0aDApLHtcIm5hbWVcIjpcInVubGVzc1wiLFwiaGFzaFwiOnt9LFwiZm5cIjp0aGlzLnByb2dyYW0oNiwgZGF0YSwgMCksXCJpbnZlcnNlXCI6dGhpcy5wcm9ncmFtKDgsIGRhdGEsIDApLFwiZGF0YVwiOmRhdGF9KSkgIT0gbnVsbCA/IHN0YWNrMSA6IFwiXCIpXG4gICAgKyBcIiBcIlxuICAgICsgKChzdGFjazEgPSBfX2RlZmF1bHQocmVxdWlyZShcIi9Vc2Vycy9jcmlzcGlubWVycmltYW4vR2l0L29uc2RpZ2l0YWwvZmxvcmVuY2Uvc3JjL2FwcC9zaGFyZWQvdGVtcGxhdGVIZWxwZXJzL2lmQ29uZC5qc1wiKSkuY2FsbChkZXB0aDAsKChzdGFjazEgPSAoZGVwdGgwICE9IG51bGwgPyBkZXB0aDAuZGVzY3JpcHRpb24gOiBkZXB0aDApKSAhPSBudWxsID8gc3RhY2sxLnRpdGxlIDogc3RhY2sxKSxcIj09PVwiLFwidmlzdWFsaXNhdGlvbnNcIix7XCJuYW1lXCI6XCJpZkNvbmRcIixcImhhc2hcIjp7fSxcImZuXCI6dGhpcy5wcm9ncmFtKDEwLCBkYXRhLCAwKSxcImludmVyc2VcIjp0aGlzLm5vb3AsXCJkYXRhXCI6ZGF0YX0pKSAhPSBudWxsID8gc3RhY2sxIDogXCJcIilcbiAgICArIFwiXFxcIj5cIlxuICAgICsgdGhpcy5lc2NhcGVFeHByZXNzaW9uKHRoaXMubGFtYmRhKCgoc3RhY2sxID0gKGRlcHRoMCAhPSBudWxsID8gZGVwdGgwLmRlc2NyaXB0aW9uIDogZGVwdGgwKSkgIT0gbnVsbCA/IHN0YWNrMS50aXRsZSA6IHN0YWNrMSksIGRlcHRoMCkpXG4gICAgKyBcIjwvc3Bhbj5cXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVxcXCJwYWdlX19idXR0b25zIHBhZ2VfX2J1dHRvbnMtLWxpc3RcXFwiPlxcbiAgICAgICAgICAgICAgICBcIlxuICAgICsgKChzdGFjazEgPSBoZWxwZXJzLnVubGVzcy5jYWxsKGRlcHRoMCwoZGVwdGgwICE9IG51bGwgPyBkZXB0aDAudXJpIDogZGVwdGgwKSx7XCJuYW1lXCI6XCJ1bmxlc3NcIixcImhhc2hcIjp7fSxcImZuXCI6dGhpcy5wcm9ncmFtKDEyLCBkYXRhLCAwKSxcImludmVyc2VcIjp0aGlzLm5vb3AsXCJkYXRhXCI6ZGF0YX0pKSAhPSBudWxsID8gc3RhY2sxIDogXCJcIilcbiAgICArIFwiXFxuXCJcbiAgICArICgoc3RhY2sxID0gaGVscGVyc1snaWYnXS5jYWxsKGRlcHRoMCwoZGVwdGgwICE9IG51bGwgPyBkZXB0aDAudXJpIDogZGVwdGgwKSx7XCJuYW1lXCI6XCJpZlwiLFwiaGFzaFwiOnt9LFwiZm5cIjp0aGlzLnByb2dyYW0oMTQsIGRhdGEsIDApLFwiaW52ZXJzZVwiOnRoaXMubm9vcCxcImRhdGFcIjpkYXRhfSkpICE9IG51bGwgPyBzdGFjazEgOiBcIlwiKVxuICAgICsgXCIgICAgICAgICAgICA8L2Rpdj5cXG4gICAgICAgIDwvc3Bhbj5cXG4gICAgICAgIFwiXG4gICAgKyAoKHN0YWNrMSA9IGhlbHBlcnNbJ2lmJ10uY2FsbChkZXB0aDAsKGRlcHRoMCAhPSBudWxsID8gZGVwdGgwLmNoaWxkcmVuIDogZGVwdGgwKSx7XCJuYW1lXCI6XCJpZlwiLFwiaGFzaFwiOnt9LFwiZm5cIjp0aGlzLnByb2dyYW0oMTYsIGRhdGEsIDApLFwiaW52ZXJzZVwiOnRoaXMubm9vcCxcImRhdGFcIjpkYXRhfSkpICE9IG51bGwgPyBzdGFjazEgOiBcIlwiKVxuICAgICsgXCIgICAgPC9saT5cXG5cIjtcbn0sXCIyXCI6ZnVuY3Rpb24oZGVwdGgwLGhlbHBlcnMscGFydGlhbHMsZGF0YSkge1xuICAgIHJldHVybiB0aGlzLmVzY2FwZUV4cHJlc3Npb24odGhpcy5sYW1iZGEoKGRlcHRoMCAhPSBudWxsID8gZGVwdGgwLnVyaSA6IGRlcHRoMCksIGRlcHRoMCkpO1xufSxcIjRcIjpmdW5jdGlvbihkZXB0aDAsaGVscGVycyxwYXJ0aWFscyxkYXRhKSB7XG4gICAgdmFyIHN0YWNrMTtcblxuICByZXR1cm4gXCIvXCJcbiAgICArIHRoaXMuZXNjYXBlRXhwcmVzc2lvbih0aGlzLmxhbWJkYSgoKHN0YWNrMSA9IChkZXB0aDAgIT0gbnVsbCA/IGRlcHRoMC5kZXNjcmlwdGlvbiA6IGRlcHRoMCkpICE9IG51bGwgPyBzdGFjazEudGl0bGUgOiBzdGFjazEpLCBkZXB0aDApKTtcbn0sXCI2XCI6ZnVuY3Rpb24oZGVwdGgwLGhlbHBlcnMscGFydGlhbHMsZGF0YSkge1xuICAgIHJldHVybiBcIiBwYWdlX19pdGVtLS1kaXJlY3RvcnlcIjtcbn0sXCI4XCI6ZnVuY3Rpb24oZGVwdGgwLGhlbHBlcnMscGFydGlhbHMsZGF0YSkge1xuICAgIHJldHVybiBcIiBwYWdlX19pdGVtLS1cIlxuICAgICsgdGhpcy5lc2NhcGVFeHByZXNzaW9uKHRoaXMubGFtYmRhKChkZXB0aDAgIT0gbnVsbCA/IGRlcHRoMC50eXBlIDogZGVwdGgwKSwgZGVwdGgwKSk7XG59LFwiMTBcIjpmdW5jdGlvbihkZXB0aDAsaGVscGVycyxwYXJ0aWFscyxkYXRhKSB7XG4gICAgcmV0dXJuIFwiZGF0YXZpcy1kaXJlY3RvcnlcIjtcbn0sXCIxMlwiOmZ1bmN0aW9uKGRlcHRoMCxoZWxwZXJzLHBhcnRpYWxzLGRhdGEpIHtcbiAgICByZXR1cm4gXCI8YnV0dG9uIGNsYXNzPVxcXCJidG4gYnRuLS1wb3NpdGl2ZSBidG4tYnJvd3NlLWNyZWF0ZS1kYXRhdmlzXFxcIj5VcGxvYWQgdmlzdWFsaXNhdGlvbjwvYnV0dG9uPlwiO1xufSxcIjE0XCI6ZnVuY3Rpb24oZGVwdGgwLGhlbHBlcnMscGFydGlhbHMsZGF0YSkge1xuICAgIHJldHVybiBcIiAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz1cXFwiYnRuIGJ0bi0tcHJpbWFyeSBidG4tYnJvd3NlLWVkaXRcXFwiPkVkaXQ8L2J1dHRvbj5cXG5cIjtcbn0sXCIxNlwiOmZ1bmN0aW9uKGRlcHRoMCxoZWxwZXJzLHBhcnRpYWxzLGRhdGEpIHtcbiAgICB2YXIgc3RhY2sxO1xuXG4gIHJldHVybiBcIiBcXG4gICAgICAgICAgICA8dWwgY2xhc3M9XFxcImpzLWJyb3dzZV9fY2hpbGRyZW5cXFwiPlxcbiAgICAgICAgICAgICAgICBcIlxuICAgICsgKChzdGFjazEgPSB0aGlzLmludm9rZVBhcnRpYWwocmVxdWlyZShcIi9Vc2Vycy9jcmlzcGlubWVycmltYW4vR2l0L29uc2RpZ2l0YWwvZmxvcmVuY2Uvc3JjL2FwcC93b3Jrc3BhY2UvYnJvd3NlL2Jyb3dzZVZpc05vZGUuaGFuZGxlYmFyc1wiKSxkZXB0aDAse1wibmFtZVwiOlwiYnJvd3NlVmlzTm9kZVwiLFwiZGF0YVwiOmRhdGEsXCJoZWxwZXJzXCI6aGVscGVycyxcInBhcnRpYWxzXCI6cGFydGlhbHN9KSkgIT0gbnVsbCA/IHN0YWNrMSA6IFwiXCIpXG4gICAgKyBcIiBcXG4gICAgICAgICAgICA8L3VsPlxcblwiO1xufSxcImNvbXBpbGVyXCI6WzYsXCI+PSAyLjAuMC1iZXRhLjFcIl0sXCJtYWluXCI6ZnVuY3Rpb24oZGVwdGgwLGhlbHBlcnMscGFydGlhbHMsZGF0YSkge1xuICAgIHZhciBzdGFjazE7XG5cbiAgcmV0dXJuICgoc3RhY2sxID0gaGVscGVycy5lYWNoLmNhbGwoZGVwdGgwLChkZXB0aDAgIT0gbnVsbCA/IGRlcHRoMC5jaGlsZHJlbiA6IGRlcHRoMCkse1wibmFtZVwiOlwiZWFjaFwiLFwiaGFzaFwiOnt9LFwiZm5cIjp0aGlzLnByb2dyYW0oMSwgZGF0YSwgMCksXCJpbnZlcnNlXCI6dGhpcy5ub29wLFwiZGF0YVwiOmRhdGF9KSkgIT0gbnVsbCA/IHN0YWNrMSA6IFwiXCIpO1xufSxcInVzZVBhcnRpYWxcIjp0cnVlLFwidXNlRGF0YVwiOnRydWV9KTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL2FwcC93b3Jrc3BhY2UvYnJvd3NlL2Jyb3dzZVZpc05vZGUuaGFuZGxlYmFyc1xuLy8gbW9kdWxlIGlkID0gNDlcbi8vIG1vZHVsZSBjaHVua3MgPSAxIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ },
/* 50 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nvar collectionState = __webpack_require__(28),\n    get = __webpack_require__(51);\n\nvar getBrowseTree = function getBrowseTree() {\n    return get(\"/zebedee/collectionBrowseTree/\" + collectionState.get().id);\n};\n\nmodule.exports = getBrowseTree;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTAuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vYXBwL3NoYXJlZC9hcGkvZ2V0QnJvd3NlVHJlZS5qcz8yZWM0Il0sInNvdXJjZXNDb250ZW50IjpbIlxudmFyIGNvbGxlY3Rpb25TdGF0ZSA9IHJlcXVpcmUoJ3NoYXJlZC9zdGF0ZS9jb2xsZWN0aW9uU3RhdGUnKSxcbiAgICBnZXQgPSByZXF1aXJlKCdzaGFyZWQvdXRpbGl0aWVzL2dldCcpO1xuXG52YXIgZ2V0QnJvd3NlVHJlZSA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBnZXQoXCIvemViZWRlZS9jb2xsZWN0aW9uQnJvd3NlVHJlZS9cIiArIGNvbGxlY3Rpb25TdGF0ZS5nZXQoKS5pZCk7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IGdldEJyb3dzZVRyZWU7XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gYXBwL3NoYXJlZC9hcGkvZ2V0QnJvd3NlVHJlZS5qcyJdLCJtYXBwaW5ncyI6Ijs7QUFDQTtBQUFBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ },
/* 51 */
/***/ function(module, exports) {

	eval("\"use strict\";\n\n/**\n * High-level wrapper for the Fetch API (see this post for explanation - https://medium.com/@shahata/why-i-wont-be-using-fetch-api-in-my-apps-6900e6c6fe78#.o6k6ai5fj)\n *\n * @param uri - URI that the GET request is being sent to\n * @returns {Promise}\n */\n\nvar get = function get(uri) {\n\n    return new Promise(function (resolve, reject) {\n        fetch(uri, {\n            credentials: \"include\"\n        }).then(function (response) {\n            return response.json().then(function (data) {\n                if (response.ok) {\n                    return data;\n                } else {\n                    reject({ status: response.status, message: data.message });\n                }\n            });\n        }).then(function (responseJSON) {\n            resolve(responseJSON);\n        }).catch(function (fetchError) {\n            reject(fetchError);\n        });\n    });\n};\n\nmodule.exports = get;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTEuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vYXBwL3NoYXJlZC91dGlsaXRpZXMvZ2V0LmpzP2M5ZGQiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBIaWdoLWxldmVsIHdyYXBwZXIgZm9yIHRoZSBGZXRjaCBBUEkgKHNlZSB0aGlzIHBvc3QgZm9yIGV4cGxhbmF0aW9uIC0gaHR0cHM6Ly9tZWRpdW0uY29tL0BzaGFoYXRhL3doeS1pLXdvbnQtYmUtdXNpbmctZmV0Y2gtYXBpLWluLW15LWFwcHMtNjkwMGU2YzZmZTc4Iy5vNms2YWk1ZmopXG4gKlxuICogQHBhcmFtIHVyaSAtIFVSSSB0aGF0IHRoZSBHRVQgcmVxdWVzdCBpcyBiZWluZyBzZW50IHRvXG4gKiBAcmV0dXJucyB7UHJvbWlzZX1cbiAqL1xuXG5cbnZhciBnZXQgPSBmdW5jdGlvbih1cmkpIHtcblxuICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbihyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgICAgZmV0Y2godXJpLCB7XG4gICAgICAgICAgICBjcmVkZW50aWFsczogXCJpbmNsdWRlXCJcbiAgICAgICAgfSkudGhlbihmdW5jdGlvbihyZXNwb25zZSkge1xuICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmpzb24oKS50aGVuKGZ1bmN0aW9uKGRhdGEpIHtcbiAgICAgICAgICAgICAgICBpZiAocmVzcG9uc2Uub2spIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGRhdGFcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICByZWplY3Qoe3N0YXR1czogcmVzcG9uc2Uuc3RhdHVzLCBtZXNzYWdlOiBkYXRhLm1lc3NhZ2V9KVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KS50aGVuKGZ1bmN0aW9uKHJlc3BvbnNlSlNPTikge1xuICAgICAgICAgICAgcmVzb2x2ZShyZXNwb25zZUpTT04pO1xuICAgICAgICB9KS5jYXRjaChmdW5jdGlvbihmZXRjaEVycm9yKSB7XG4gICAgICAgICAgICByZWplY3QoZmV0Y2hFcnJvcik7XG4gICAgICAgIH0pO1xuICAgIH0pO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBnZXQ7XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gYXBwL3NoYXJlZC91dGlsaXRpZXMvZ2V0LmpzIl0sIm1hcHBpbmdzIjoiOztBQUFBOzs7Ozs7O0FBUUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQURBO0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ },
/* 52 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(console) {'use strict';\n\nvar editView = __webpack_require__(53),\n    workspaceState = __webpack_require__(25),\n    getActivePage = __webpack_require__(56),\n    i,\n    velocity = __webpack_require__(57);\n\nvar editController = {\n\n    init: function init() {\n\n        if ($.isEmptyObject(workspaceState.editorData.get())) {\n            // No current editorData, get data for activeURL from API and re-run this initialisation\n            editView.render.loader();\n            getActivePage().then(function (pageData) {\n                workspaceState.editorData.set(pageData);\n                editController.init();\n            }).catch(function (error) {\n                console.log(error);\n            });\n\n            return false;\n        }\n\n        editView.render.accordions(editController.build.accordions());\n        this.bind.accordions();\n        console.log(\"Render from state, no request to Zebedee required\");\n    },\n\n    build: {\n\n        accordions: function accordions() {\n            var HTML = [];\n\n            if (workspaceState.editorData.get().sections) {\n                HTML.push(editController.build.sections());\n            }\n\n            return HTML.join('');\n        },\n\n        sections: function sections() {\n            var templateData = {\n                id: \"sections\",\n                heading: \"Sections\",\n                itemName: \"section\",\n                items: []\n            },\n                editorData = workspaceState.editorData.get(),\n                sectionsLength = editorData.sections.length;\n\n            // Map editorData sections to accordion template data\n            for (i = 0; i < sectionsLength; i++) {\n                templateData.items.push({ title: editorData.sections[i].title, value: editorData.sections[i].markdown });\n            }\n\n            return editView.accordionHTML(templateData);\n        }\n    },\n\n    bind: {\n\n        accordions: function accordions() {\n            var $headings = $('.js-editor-accordion__heading'),\n                $bodys = $('.js-editor-accordion__body'),\n                $this;\n\n            // Display hidden body and set negative margin in preparation for being animated later\n            $bodys.each(function () {\n                $this = $(this);\n                $this.css('display', 'block');\n                $this.css('margin-top', -$this.outerHeight());\n            });\n\n            // If a heading has 'active' class then open it (unanimated)\n            $headings.each(function () {\n                $this = $(this);\n                if ($this.hasClass('active')) {\n                    var $thisBody = $this.next('.js-editor-accordion__body');\n                    $thisBody.css({ display: 'block', marginTop: 0 }).addClass('active');\n                    return true;\n                }\n            });\n\n            // Toggle accordions on click\n            $headings.click(function () {\n                var $this = $(this),\n                    $thisBody = $this.next('.js-editor-accordion__body'),\n                    $previousHeading = $('.js-editor-accordion__heading.active'),\n                    $previousBody = $('.js-editor-accordion__body.active');\n\n                if ($thisBody.hasClass('active')) {\n                    $thisBody.velocity({ marginTop: -$thisBody.outerHeight() }, { duration: 350 });\n                    $this.removeClass('active');\n                    $thisBody.removeClass('active');\n                    return;\n                }\n\n                $previousHeading.removeClass('active');\n                $previousBody.removeClass('active').velocity({ marginTop: -$previousBody.outerHeight() }, { duration: 350 });\n\n                $thisBody.velocity({ marginTop: 0 }, { duration: 350 });\n                $this.addClass('active');\n                $thisBody.addClass('active');\n            });\n        }\n\n    }\n\n};\n\nmodule.exports = editController;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTIuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vYXBwL3dvcmtzcGFjZS9lZGl0L2VkaXRDb250cm9sbGVyLmpzPzU5OWIiXSwic291cmNlc0NvbnRlbnQiOlsiXG52YXIgZWRpdFZpZXcgPSByZXF1aXJlKCd3b3Jrc3BhY2UvZWRpdC9lZGl0Vmlldy5qcycpLFxuICAgIHdvcmtzcGFjZVN0YXRlID0gcmVxdWlyZSgnc2hhcmVkL3N0YXRlL3dvcmtzcGFjZVN0YXRlJyksXG4gICAgZ2V0QWN0aXZlUGFnZSA9IHJlcXVpcmUoJ3NoYXJlZC9hcGkvZ2V0QWN0aXZlUGFnZScpLFxuICAgIGksXG4gICAgdmVsb2NpdHkgPSByZXF1aXJlKCd2ZWxvY2l0eS1hbmltYXRlJyk7XG5cbnZhciBlZGl0Q29udHJvbGxlciA9IHtcblxuICAgIGluaXQ6IGZ1bmN0aW9uKCkge1xuXG4gICAgICAgIGlmICgkLmlzRW1wdHlPYmplY3Qod29ya3NwYWNlU3RhdGUuZWRpdG9yRGF0YS5nZXQoKSkpIHtcbiAgICAgICAgICAgIC8vIE5vIGN1cnJlbnQgZWRpdG9yRGF0YSwgZ2V0IGRhdGEgZm9yIGFjdGl2ZVVSTCBmcm9tIEFQSSBhbmQgcmUtcnVuIHRoaXMgaW5pdGlhbGlzYXRpb25cbiAgICAgICAgICAgIGVkaXRWaWV3LnJlbmRlci5sb2FkZXIoKTtcbiAgICAgICAgICAgIGdldEFjdGl2ZVBhZ2UoKS50aGVuKGZ1bmN0aW9uKHBhZ2VEYXRhKSB7XG4gICAgICAgICAgICAgICAgd29ya3NwYWNlU3RhdGUuZWRpdG9yRGF0YS5zZXQocGFnZURhdGEpO1xuICAgICAgICAgICAgICAgIGVkaXRDb250cm9sbGVyLmluaXQoKTtcbiAgICAgICAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uKGVycm9yKSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coZXJyb3IpO1xuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuXG4gICAgICAgIGVkaXRWaWV3LnJlbmRlci5hY2NvcmRpb25zKGVkaXRDb250cm9sbGVyLmJ1aWxkLmFjY29yZGlvbnMoKSk7XG4gICAgICAgIHRoaXMuYmluZC5hY2NvcmRpb25zKCk7XG4gICAgICAgIGNvbnNvbGUubG9nKFwiUmVuZGVyIGZyb20gc3RhdGUsIG5vIHJlcXVlc3QgdG8gWmViZWRlZSByZXF1aXJlZFwiKTtcbiAgICB9LFxuXG4gICAgYnVpbGQ6IHtcblxuICAgICAgICBhY2NvcmRpb25zOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHZhciBIVE1MID0gW107XG5cbiAgICAgICAgICAgIGlmICh3b3Jrc3BhY2VTdGF0ZS5lZGl0b3JEYXRhLmdldCgpLnNlY3Rpb25zKSB7XG4gICAgICAgICAgICAgICAgSFRNTC5wdXNoKGVkaXRDb250cm9sbGVyLmJ1aWxkLnNlY3Rpb25zKCkpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICByZXR1cm4gSFRNTC5qb2luKCcnKTtcbiAgICAgICAgfSxcblxuICAgICAgICBzZWN0aW9uczogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICB2YXIgdGVtcGxhdGVEYXRhID0ge1xuICAgICAgICAgICAgICAgIGlkOiBcInNlY3Rpb25zXCIsXG4gICAgICAgICAgICAgICAgaGVhZGluZzogXCJTZWN0aW9uc1wiLFxuICAgICAgICAgICAgICAgIGl0ZW1OYW1lOiBcInNlY3Rpb25cIixcbiAgICAgICAgICAgICAgICBpdGVtczogW11cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBlZGl0b3JEYXRhID0gd29ya3NwYWNlU3RhdGUuZWRpdG9yRGF0YS5nZXQoKSxcbiAgICAgICAgICAgIHNlY3Rpb25zTGVuZ3RoID0gZWRpdG9yRGF0YS5zZWN0aW9ucy5sZW5ndGg7XG5cbiAgICAgICAgICAgIC8vIE1hcCBlZGl0b3JEYXRhIHNlY3Rpb25zIHRvIGFjY29yZGlvbiB0ZW1wbGF0ZSBkYXRhXG4gICAgICAgICAgICBmb3IgKGkgPSAwOyBpIDwgc2VjdGlvbnNMZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgIHRlbXBsYXRlRGF0YS5pdGVtcy5wdXNoKHt0aXRsZTogZWRpdG9yRGF0YS5zZWN0aW9uc1tpXS50aXRsZSwgdmFsdWU6IGVkaXRvckRhdGEuc2VjdGlvbnNbaV0ubWFya2Rvd259KVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICByZXR1cm4gZWRpdFZpZXcuYWNjb3JkaW9uSFRNTCh0ZW1wbGF0ZURhdGEpO1xuICAgICAgICB9XG4gICAgfSxcblxuICAgIGJpbmQ6IHtcblxuICAgICAgICBhY2NvcmRpb25zOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHZhciAkaGVhZGluZ3MgPSAkKCcuanMtZWRpdG9yLWFjY29yZGlvbl9faGVhZGluZycpLFxuICAgICAgICAgICAgICAgICRib2R5cyA9ICQoJy5qcy1lZGl0b3ItYWNjb3JkaW9uX19ib2R5JyksXG4gICAgICAgICAgICAgICAgJHRoaXM7XG5cbiAgICAgICAgICAgIC8vIERpc3BsYXkgaGlkZGVuIGJvZHkgYW5kIHNldCBuZWdhdGl2ZSBtYXJnaW4gaW4gcHJlcGFyYXRpb24gZm9yIGJlaW5nIGFuaW1hdGVkIGxhdGVyXG4gICAgICAgICAgICAkYm9keXMuZWFjaChmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICAkdGhpcyA9ICQodGhpcyk7XG4gICAgICAgICAgICAgICAgJHRoaXMuY3NzKCdkaXNwbGF5JywgJ2Jsb2NrJyk7XG4gICAgICAgICAgICAgICAgJHRoaXMuY3NzKCdtYXJnaW4tdG9wJywgLSR0aGlzLm91dGVySGVpZ2h0KCkpO1xuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIC8vIElmIGEgaGVhZGluZyBoYXMgJ2FjdGl2ZScgY2xhc3MgdGhlbiBvcGVuIGl0ICh1bmFuaW1hdGVkKVxuICAgICAgICAgICAgJGhlYWRpbmdzLmVhY2goZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgJHRoaXMgPSAkKHRoaXMpO1xuICAgICAgICAgICAgICAgIGlmICgkdGhpcy5oYXNDbGFzcygnYWN0aXZlJykpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyICR0aGlzQm9keSA9ICR0aGlzLm5leHQoJy5qcy1lZGl0b3ItYWNjb3JkaW9uX19ib2R5Jyk7XG4gICAgICAgICAgICAgICAgICAgICR0aGlzQm9keS5jc3Moe2Rpc3BsYXk6ICdibG9jaycsIG1hcmdpblRvcDogMCB9KS5hZGRDbGFzcygnYWN0aXZlJyk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAvLyBUb2dnbGUgYWNjb3JkaW9ucyBvbiBjbGlja1xuICAgICAgICAgICAgJGhlYWRpbmdzLmNsaWNrKGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgIHZhciAkdGhpcyA9ICQodGhpcyksXG4gICAgICAgICAgICAgICAgICAgICR0aGlzQm9keSA9ICR0aGlzLm5leHQoJy5qcy1lZGl0b3ItYWNjb3JkaW9uX19ib2R5JyksXG4gICAgICAgICAgICAgICAgICAgICRwcmV2aW91c0hlYWRpbmcgPSAkKCcuanMtZWRpdG9yLWFjY29yZGlvbl9faGVhZGluZy5hY3RpdmUnKSxcbiAgICAgICAgICAgICAgICAgICAgJHByZXZpb3VzQm9keSA9ICQoJy5qcy1lZGl0b3ItYWNjb3JkaW9uX19ib2R5LmFjdGl2ZScpO1xuXG4gICAgICAgICAgICAgICAgaWYgKCR0aGlzQm9keS5oYXNDbGFzcygnYWN0aXZlJykpIHtcbiAgICAgICAgICAgICAgICAgICAgJHRoaXNCb2R5LnZlbG9jaXR5KHsgbWFyZ2luVG9wOiAtJHRoaXNCb2R5Lm91dGVySGVpZ2h0KCl9LCB7IGR1cmF0aW9uOiAzNTAgfSk7XG4gICAgICAgICAgICAgICAgICAgICR0aGlzLnJlbW92ZUNsYXNzKCdhY3RpdmUnKTtcbiAgICAgICAgICAgICAgICAgICAgJHRoaXNCb2R5LnJlbW92ZUNsYXNzKCdhY3RpdmUnKTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICRwcmV2aW91c0hlYWRpbmcucmVtb3ZlQ2xhc3MoJ2FjdGl2ZScpO1xuICAgICAgICAgICAgICAgICRwcmV2aW91c0JvZHkucmVtb3ZlQ2xhc3MoJ2FjdGl2ZScpLnZlbG9jaXR5KHsgbWFyZ2luVG9wOiAtJHByZXZpb3VzQm9keS5vdXRlckhlaWdodCgpfSwgeyBkdXJhdGlvbjogMzUwIH0pO1xuXG4gICAgICAgICAgICAgICAgJHRoaXNCb2R5LnZlbG9jaXR5KHsgbWFyZ2luVG9wOiAwfSwgeyBkdXJhdGlvbjogMzUwIH0pO1xuICAgICAgICAgICAgICAgICR0aGlzLmFkZENsYXNzKCdhY3RpdmUnKTtcbiAgICAgICAgICAgICAgICAkdGhpc0JvZHkuYWRkQ2xhc3MoJ2FjdGl2ZScpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cblxuICAgIH1cblxufTtcblxubW9kdWxlLmV4cG9ydHMgPSBlZGl0Q29udHJvbGxlcjtcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyBhcHAvd29ya3NwYWNlL2VkaXQvZWRpdENvbnRyb2xsZXIuanMiXSwibWFwcGluZ3MiOiI7O0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBS0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFKQTtBQUFBO0FBQUE7QUFDQTtBQVFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBNUJBO0FBQ0E7QUE4QkE7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFJQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQTlDQTtBQUNBO0FBdERBO0FBQ0E7QUF1R0E7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ },
/* 53 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nvar editTemplate = __webpack_require__(54),\n    accordionTemplate = __webpack_require__(55);\n\nvar editView = {\n\n    render: {\n\n        loader: function loader() {\n            document.getElementById('workspace-browse').innerHTML = editTemplate();\n        },\n\n        accordions: function accordions(HTML) {\n            document.getElementById('workspace-browse').innerHTML = HTML;\n        }\n    },\n\n    accordionHTML: function accordionHTML(templateData) {\n        /* templateData should follow structure of:\n        {\n            id: \"\",\n            heading: \"\",\n            items: [\n                {\n                    title: \"\"\n                }\n            ]\n        }\n        */\n        return accordionTemplate(templateData);\n    }\n\n};\n\nmodule.exports = editView;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vYXBwL3dvcmtzcGFjZS9lZGl0L2VkaXRWaWV3LmpzPzNkY2QiXSwic291cmNlc0NvbnRlbnQiOlsiXG52YXIgZWRpdFRlbXBsYXRlID0gcmVxdWlyZSgnLi9lZGl0LmhhbmRsZWJhcnMnKSxcbiAgICBhY2NvcmRpb25UZW1wbGF0ZSA9IHJlcXVpcmUoJy4vZWRpdEFjY29yZGlvbi5oYW5kbGViYXJzJyk7XG5cbnZhciBlZGl0VmlldyA9IHtcblxuICAgIHJlbmRlcjoge1xuXG4gICAgICAgIGxvYWRlcjogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3dvcmtzcGFjZS1icm93c2UnKS5pbm5lckhUTUwgPSBlZGl0VGVtcGxhdGUoKTtcbiAgICAgICAgfSxcblxuICAgICAgICBhY2NvcmRpb25zOiBmdW5jdGlvbihIVE1MKSB7XG4gICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnd29ya3NwYWNlLWJyb3dzZScpLmlubmVySFRNTCA9IEhUTUw7XG4gICAgICAgIH1cbiAgICB9LFxuXG4gICAgYWNjb3JkaW9uSFRNTDogZnVuY3Rpb24odGVtcGxhdGVEYXRhKSB7XG4gICAgICAgIC8qIHRlbXBsYXRlRGF0YSBzaG91bGQgZm9sbG93IHN0cnVjdHVyZSBvZjpcbiAgICAgICAge1xuICAgICAgICAgICAgaWQ6IFwiXCIsXG4gICAgICAgICAgICBoZWFkaW5nOiBcIlwiLFxuICAgICAgICAgICAgaXRlbXM6IFtcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIHRpdGxlOiBcIlwiXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgXVxuICAgICAgICB9XG4gICAgICAgICovXG4gICAgICAgIHJldHVybiBhY2NvcmRpb25UZW1wbGF0ZSh0ZW1wbGF0ZURhdGEpO1xuICAgIH1cblxufTtcblxubW9kdWxlLmV4cG9ydHMgPSBlZGl0VmlldztcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyBhcHAvd29ya3NwYWNlL2VkaXQvZWRpdFZpZXcuanMiXSwibWFwcGluZ3MiOiI7O0FBQ0E7QUFBQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQVJBO0FBQ0E7QUFVQTtBQUNBOzs7Ozs7Ozs7OztBQVdBO0FBQ0E7QUFDQTtBQTNCQTtBQUNBO0FBNkJBIiwic291cmNlUm9vdCI6IiJ9");

/***/ },
/* 54 */
/***/ function(module, exports, __webpack_require__) {

	eval("var Handlebars = __webpack_require__(32);\nfunction __default(obj) { return obj && (obj.__esModule ? obj[\"default\"] : obj); }\nmodule.exports = (Handlebars[\"default\"] || Handlebars).template({\"compiler\":[6,\">= 2.0.0-beta.1\"],\"main\":function(depth0,helpers,partials,data) {\n    var stack1;\n\n  return \"<div id=\\\"js-edit\\\">\\n    <div class=\\\"margin-top--3\\\">\"\n    + ((stack1 = this.invokePartial(__webpack_require__(40),depth0,{\"name\":\"../../shared/templatePartials/loadingAnimation\",\"hash\":{\"dark\":true,\"large\":true},\"data\":data,\"helpers\":helpers,\"partials\":partials})) != null ? stack1 : \"\")\n    + \"</div>\\n</div>\";\n},\"usePartial\":true,\"useData\":true});//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTQuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvd29ya3NwYWNlL2VkaXQvZWRpdC5oYW5kbGViYXJzPzQ4NDUiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIEhhbmRsZWJhcnMgPSByZXF1aXJlKFwiL1VzZXJzL2NyaXNwaW5tZXJyaW1hbi9HaXQvb25zZGlnaXRhbC9mbG9yZW5jZS9zcmMvbm9kZV9tb2R1bGVzL2hhbmRsZWJhcnMvcnVudGltZS5qc1wiKTtcbmZ1bmN0aW9uIF9fZGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiAob2JqLl9fZXNNb2R1bGUgPyBvYmpbXCJkZWZhdWx0XCJdIDogb2JqKTsgfVxubW9kdWxlLmV4cG9ydHMgPSAoSGFuZGxlYmFyc1tcImRlZmF1bHRcIl0gfHwgSGFuZGxlYmFycykudGVtcGxhdGUoe1wiY29tcGlsZXJcIjpbNixcIj49IDIuMC4wLWJldGEuMVwiXSxcIm1haW5cIjpmdW5jdGlvbihkZXB0aDAsaGVscGVycyxwYXJ0aWFscyxkYXRhKSB7XG4gICAgdmFyIHN0YWNrMTtcblxuICByZXR1cm4gXCI8ZGl2IGlkPVxcXCJqcy1lZGl0XFxcIj5cXG4gICAgPGRpdiBjbGFzcz1cXFwibWFyZ2luLXRvcC0tM1xcXCI+XCJcbiAgICArICgoc3RhY2sxID0gdGhpcy5pbnZva2VQYXJ0aWFsKHJlcXVpcmUoXCIvVXNlcnMvY3Jpc3Bpbm1lcnJpbWFuL0dpdC9vbnNkaWdpdGFsL2Zsb3JlbmNlL3NyYy9hcHAvc2hhcmVkL3RlbXBsYXRlUGFydGlhbHMvbG9hZGluZ0FuaW1hdGlvbi5oYW5kbGViYXJzXCIpLGRlcHRoMCx7XCJuYW1lXCI6XCIuLi8uLi9zaGFyZWQvdGVtcGxhdGVQYXJ0aWFscy9sb2FkaW5nQW5pbWF0aW9uXCIsXCJoYXNoXCI6e1wiZGFya1wiOnRydWUsXCJsYXJnZVwiOnRydWV9LFwiZGF0YVwiOmRhdGEsXCJoZWxwZXJzXCI6aGVscGVycyxcInBhcnRpYWxzXCI6cGFydGlhbHN9KSkgIT0gbnVsbCA/IHN0YWNrMSA6IFwiXCIpXG4gICAgKyBcIjwvZGl2PlxcbjwvZGl2PlwiO1xufSxcInVzZVBhcnRpYWxcIjp0cnVlLFwidXNlRGF0YVwiOnRydWV9KTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL2FwcC93b3Jrc3BhY2UvZWRpdC9lZGl0LmhhbmRsZWJhcnNcbi8vIG1vZHVsZSBpZCA9IDU0XG4vLyBtb2R1bGUgY2h1bmtzID0gMSJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9");

/***/ },
/* 55 */
/***/ function(module, exports, __webpack_require__) {

	eval("var Handlebars = __webpack_require__(32);\nfunction __default(obj) { return obj && (obj.__esModule ? obj[\"default\"] : obj); }\nmodule.exports = (Handlebars[\"default\"] || Handlebars).template({\"1\":function(depth0,helpers,partials,data) {\n    var helper;\n\n  return \"                <li class=\\\"editor-accordion__item\\\">\\n                    \"\n    + this.escapeExpression(((helper = (helper = helpers.itemHTML || (depth0 != null ? depth0.itemHTML : depth0)) != null ? helper : helpers.helperMissing),(typeof helper === \"function\" ? helper.call(depth0,{\"name\":\"itemHTML\",\"hash\":{},\"data\":data}) : helper)))\n    + \"\\n                </li>\\n\";\n},\"compiler\":[6,\">= 2.0.0-beta.1\"],\"main\":function(depth0,helpers,partials,data) {\n    var stack1, helper, alias1=helpers.helperMissing, alias2=\"function\", alias3=this.escapeExpression;\n\n  return \"<div class=\\\"editor-accordion\\\" id=\\\"\"\n    + alias3(((helper = (helper = helpers.id || (depth0 != null ? depth0.id : depth0)) != null ? helper : alias1),(typeof helper === alias2 ? helper.call(depth0,{\"name\":\"id\",\"hash\":{},\"data\":data}) : helper)))\n    + \"\\\">\\n    <h2 class=\\\"editor-accordion__heading js-editor-accordion__heading\\\">\"\n    + alias3(((helper = (helper = helpers.heading || (depth0 != null ? depth0.heading : depth0)) != null ? helper : alias1),(typeof helper === alias2 ? helper.call(depth0,{\"name\":\"heading\",\"hash\":{},\"data\":data}) : helper)))\n    + \"</h2>\\n    <div class=\\\"editor-accordion__body js-editor-accordion__body\\\">\\n        <ul class=\\\"list list--neutral\\\">\\n\"\n    + ((stack1 = helpers.each.call(depth0,(depth0 != null ? depth0.items : depth0),{\"name\":\"each\",\"hash\":{},\"fn\":this.program(1, data, 0),\"inverse\":this.noop,\"data\":data})) != null ? stack1 : \"\")\n    + \"        </ul>\\n        <div class=\\\"text-center\\\">\\n            <button class=\\\"btn btn--subtle\\\">New \"\n    + alias3(((helper = (helper = helpers.itemName || (depth0 != null ? depth0.itemName : depth0)) != null ? helper : alias1),(typeof helper === alias2 ? helper.call(depth0,{\"name\":\"itemName\",\"hash\":{},\"data\":data}) : helper)))\n    + \"</button>\\n        </div>\\n    </div>\\n</div>\";\n},\"useData\":true});//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTUuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvd29ya3NwYWNlL2VkaXQvZWRpdEFjY29yZGlvbi5oYW5kbGViYXJzP2RiMTAiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIEhhbmRsZWJhcnMgPSByZXF1aXJlKFwiL1VzZXJzL2NyaXNwaW5tZXJyaW1hbi9HaXQvb25zZGlnaXRhbC9mbG9yZW5jZS9zcmMvbm9kZV9tb2R1bGVzL2hhbmRsZWJhcnMvcnVudGltZS5qc1wiKTtcbmZ1bmN0aW9uIF9fZGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiAob2JqLl9fZXNNb2R1bGUgPyBvYmpbXCJkZWZhdWx0XCJdIDogb2JqKTsgfVxubW9kdWxlLmV4cG9ydHMgPSAoSGFuZGxlYmFyc1tcImRlZmF1bHRcIl0gfHwgSGFuZGxlYmFycykudGVtcGxhdGUoe1wiMVwiOmZ1bmN0aW9uKGRlcHRoMCxoZWxwZXJzLHBhcnRpYWxzLGRhdGEpIHtcbiAgICB2YXIgaGVscGVyO1xuXG4gIHJldHVybiBcIiAgICAgICAgICAgICAgICA8bGkgY2xhc3M9XFxcImVkaXRvci1hY2NvcmRpb25fX2l0ZW1cXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgXCJcbiAgICArIHRoaXMuZXNjYXBlRXhwcmVzc2lvbigoKGhlbHBlciA9IChoZWxwZXIgPSBoZWxwZXJzLml0ZW1IVE1MIHx8IChkZXB0aDAgIT0gbnVsbCA/IGRlcHRoMC5pdGVtSFRNTCA6IGRlcHRoMCkpICE9IG51bGwgPyBoZWxwZXIgOiBoZWxwZXJzLmhlbHBlck1pc3NpbmcpLCh0eXBlb2YgaGVscGVyID09PSBcImZ1bmN0aW9uXCIgPyBoZWxwZXIuY2FsbChkZXB0aDAse1wibmFtZVwiOlwiaXRlbUhUTUxcIixcImhhc2hcIjp7fSxcImRhdGFcIjpkYXRhfSkgOiBoZWxwZXIpKSlcbiAgICArIFwiXFxuICAgICAgICAgICAgICAgIDwvbGk+XFxuXCI7XG59LFwiY29tcGlsZXJcIjpbNixcIj49IDIuMC4wLWJldGEuMVwiXSxcIm1haW5cIjpmdW5jdGlvbihkZXB0aDAsaGVscGVycyxwYXJ0aWFscyxkYXRhKSB7XG4gICAgdmFyIHN0YWNrMSwgaGVscGVyLCBhbGlhczE9aGVscGVycy5oZWxwZXJNaXNzaW5nLCBhbGlhczI9XCJmdW5jdGlvblwiLCBhbGlhczM9dGhpcy5lc2NhcGVFeHByZXNzaW9uO1xuXG4gIHJldHVybiBcIjxkaXYgY2xhc3M9XFxcImVkaXRvci1hY2NvcmRpb25cXFwiIGlkPVxcXCJcIlxuICAgICsgYWxpYXMzKCgoaGVscGVyID0gKGhlbHBlciA9IGhlbHBlcnMuaWQgfHwgKGRlcHRoMCAhPSBudWxsID8gZGVwdGgwLmlkIDogZGVwdGgwKSkgIT0gbnVsbCA/IGhlbHBlciA6IGFsaWFzMSksKHR5cGVvZiBoZWxwZXIgPT09IGFsaWFzMiA/IGhlbHBlci5jYWxsKGRlcHRoMCx7XCJuYW1lXCI6XCJpZFwiLFwiaGFzaFwiOnt9LFwiZGF0YVwiOmRhdGF9KSA6IGhlbHBlcikpKVxuICAgICsgXCJcXFwiPlxcbiAgICA8aDIgY2xhc3M9XFxcImVkaXRvci1hY2NvcmRpb25fX2hlYWRpbmcganMtZWRpdG9yLWFjY29yZGlvbl9faGVhZGluZ1xcXCI+XCJcbiAgICArIGFsaWFzMygoKGhlbHBlciA9IChoZWxwZXIgPSBoZWxwZXJzLmhlYWRpbmcgfHwgKGRlcHRoMCAhPSBudWxsID8gZGVwdGgwLmhlYWRpbmcgOiBkZXB0aDApKSAhPSBudWxsID8gaGVscGVyIDogYWxpYXMxKSwodHlwZW9mIGhlbHBlciA9PT0gYWxpYXMyID8gaGVscGVyLmNhbGwoZGVwdGgwLHtcIm5hbWVcIjpcImhlYWRpbmdcIixcImhhc2hcIjp7fSxcImRhdGFcIjpkYXRhfSkgOiBoZWxwZXIpKSlcbiAgICArIFwiPC9oMj5cXG4gICAgPGRpdiBjbGFzcz1cXFwiZWRpdG9yLWFjY29yZGlvbl9fYm9keSBqcy1lZGl0b3ItYWNjb3JkaW9uX19ib2R5XFxcIj5cXG4gICAgICAgIDx1bCBjbGFzcz1cXFwibGlzdCBsaXN0LS1uZXV0cmFsXFxcIj5cXG5cIlxuICAgICsgKChzdGFjazEgPSBoZWxwZXJzLmVhY2guY2FsbChkZXB0aDAsKGRlcHRoMCAhPSBudWxsID8gZGVwdGgwLml0ZW1zIDogZGVwdGgwKSx7XCJuYW1lXCI6XCJlYWNoXCIsXCJoYXNoXCI6e30sXCJmblwiOnRoaXMucHJvZ3JhbSgxLCBkYXRhLCAwKSxcImludmVyc2VcIjp0aGlzLm5vb3AsXCJkYXRhXCI6ZGF0YX0pKSAhPSBudWxsID8gc3RhY2sxIDogXCJcIilcbiAgICArIFwiICAgICAgICA8L3VsPlxcbiAgICAgICAgPGRpdiBjbGFzcz1cXFwidGV4dC1jZW50ZXJcXFwiPlxcbiAgICAgICAgICAgIDxidXR0b24gY2xhc3M9XFxcImJ0biBidG4tLXN1YnRsZVxcXCI+TmV3IFwiXG4gICAgKyBhbGlhczMoKChoZWxwZXIgPSAoaGVscGVyID0gaGVscGVycy5pdGVtTmFtZSB8fCAoZGVwdGgwICE9IG51bGwgPyBkZXB0aDAuaXRlbU5hbWUgOiBkZXB0aDApKSAhPSBudWxsID8gaGVscGVyIDogYWxpYXMxKSwodHlwZW9mIGhlbHBlciA9PT0gYWxpYXMyID8gaGVscGVyLmNhbGwoZGVwdGgwLHtcIm5hbWVcIjpcIml0ZW1OYW1lXCIsXCJoYXNoXCI6e30sXCJkYXRhXCI6ZGF0YX0pIDogaGVscGVyKSkpXG4gICAgKyBcIjwvYnV0dG9uPlxcbiAgICAgICAgPC9kaXY+XFxuICAgIDwvZGl2PlxcbjwvZGl2PlwiO1xufSxcInVzZURhdGFcIjp0cnVlfSk7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9hcHAvd29ya3NwYWNlL2VkaXQvZWRpdEFjY29yZGlvbi5oYW5kbGViYXJzXG4vLyBtb2R1bGUgaWQgPSA1NVxuLy8gbW9kdWxlIGNodW5rcyA9IDEiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ },
/* 56 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nvar collectionState = __webpack_require__(28),\n    workspaceState = __webpack_require__(25),\n    get = __webpack_require__(51);\n\nvar getActivePage = function getActivePage() {\n    return get('/zebedee/data/' + collectionState.get().id + '?uri=' + workspaceState.activeUrl.get());\n};\n\nmodule.exports = getActivePage;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTYuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vYXBwL3NoYXJlZC9hcGkvZ2V0QWN0aXZlUGFnZS5qcz9lZjIyIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBjb2xsZWN0aW9uU3RhdGUgPSByZXF1aXJlKCdzaGFyZWQvc3RhdGUvY29sbGVjdGlvblN0YXRlJyksXG4gICAgd29ya3NwYWNlU3RhdGUgPSByZXF1aXJlKCdzaGFyZWQvc3RhdGUvd29ya3NwYWNlU3RhdGUnKSxcbiAgICBnZXQgPSByZXF1aXJlKCdzaGFyZWQvdXRpbGl0aWVzL2dldCcpO1xuXG52YXIgZ2V0QWN0aXZlUGFnZSA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBnZXQoJy96ZWJlZGVlL2RhdGEvJyArIGNvbGxlY3Rpb25TdGF0ZS5nZXQoKS5pZCArICc/dXJpPScgKyB3b3Jrc3BhY2VTdGF0ZS5hY3RpdmVVcmwuZ2V0KCkpO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBnZXRBY3RpdmVQYWdlO1xuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIGFwcC9zaGFyZWQvYXBpL2dldEFjdGl2ZVBhZ2UuanMiXSwibWFwcGluZ3MiOiI7O0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFHQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ },
/* 57 */
/***/ function(module, exports, __webpack_require__) {

	eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(console) {/*! VelocityJS.org (1.3.1). (C) 2014 Julian Shapiro. MIT @license: en.wikipedia.org/wiki/MIT_License */\n\n/*************************\n Velocity jQuery Shim\n *************************/\n\n/*! VelocityJS.org jQuery Shim (1.0.1). (C) 2014 The jQuery Foundation. MIT @license: en.wikipedia.org/wiki/MIT_License. */\n\n/* This file contains the jQuery functions that Velocity relies on, thereby removing Velocity's dependency on a full copy of jQuery, and allowing it to work in any environment. */\n/* These shimmed functions are only used if jQuery isn't present. If both this shim and jQuery are loaded, Velocity defaults to jQuery proper. */\n/* Browser support: Using this shim instead of jQuery proper removes support for IE8. */\n\n(function(window) {\n\t\"use strict\";\n\t/***************\n\t Setup\n\t ***************/\n\n\t/* If jQuery is already loaded, there's no point in loading this shim. */\n\tif (window.jQuery) {\n\t\treturn;\n\t}\n\n\t/* jQuery base. */\n\tvar $ = function(selector, context) {\n\t\treturn new $.fn.init(selector, context);\n\t};\n\n\t/********************\n\t Private Methods\n\t ********************/\n\n\t/* jQuery */\n\t$.isWindow = function(obj) {\n\t\t/* jshint eqeqeq: false */\n\t\treturn obj && obj === obj.window;\n\t};\n\n\t/* jQuery */\n\t$.type = function(obj) {\n\t\tif (!obj) {\n\t\t\treturn obj + \"\";\n\t\t}\n\n\t\treturn typeof obj === \"object\" || typeof obj === \"function\" ?\n\t\t\t\tclass2type[toString.call(obj)] || \"object\" :\n\t\t\t\ttypeof obj;\n\t};\n\n\t/* jQuery */\n\t$.isArray = Array.isArray || function(obj) {\n\t\treturn $.type(obj) === \"array\";\n\t};\n\n\t/* jQuery */\n\tfunction isArraylike(obj) {\n\t\tvar length = obj.length,\n\t\t\t\ttype = $.type(obj);\n\n\t\tif (type === \"function\" || $.isWindow(obj)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (obj.nodeType === 1 && length) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn type === \"array\" || length === 0 || typeof length === \"number\" && length > 0 && (length - 1) in obj;\n\t}\n\n\t/***************\n\t $ Methods\n\t ***************/\n\n\t/* jQuery: Support removed for IE<9. */\n\t$.isPlainObject = function(obj) {\n\t\tvar key;\n\n\t\tif (!obj || $.type(obj) !== \"object\" || obj.nodeType || $.isWindow(obj)) {\n\t\t\treturn false;\n\t\t}\n\n\t\ttry {\n\t\t\tif (obj.constructor &&\n\t\t\t\t\t!hasOwn.call(obj, \"constructor\") &&\n\t\t\t\t\t!hasOwn.call(obj.constructor.prototype, \"isPrototypeOf\")) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\n\t\tfor (key in obj) {\n\t\t}\n\n\t\treturn key === undefined || hasOwn.call(obj, key);\n\t};\n\n\t/* jQuery */\n\t$.each = function(obj, callback, args) {\n\t\tvar value,\n\t\t\t\ti = 0,\n\t\t\t\tlength = obj.length,\n\t\t\t\tisArray = isArraylike(obj);\n\n\t\tif (args) {\n\t\t\tif (isArray) {\n\t\t\t\tfor (; i < length; i++) {\n\t\t\t\t\tvalue = callback.apply(obj[i], args);\n\n\t\t\t\t\tif (value === false) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (i in obj) {\n\t\t\t\t\tif (!obj.hasOwnProperty(i)) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tvalue = callback.apply(obj[i], args);\n\n\t\t\t\t\tif (value === false) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t} else {\n\t\t\tif (isArray) {\n\t\t\t\tfor (; i < length; i++) {\n\t\t\t\t\tvalue = callback.call(obj[i], i, obj[i]);\n\n\t\t\t\t\tif (value === false) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (i in obj) {\n\t\t\t\t\tif (!obj.hasOwnProperty(i)) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tvalue = callback.call(obj[i], i, obj[i]);\n\n\t\t\t\t\tif (value === false) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn obj;\n\t};\n\n\t/* Custom */\n\t$.data = function(node, key, value) {\n\t\t/* $.getData() */\n\t\tif (value === undefined) {\n\t\t\tvar getId = node[$.expando],\n\t\t\t\t\tstore = getId && cache[getId];\n\n\t\t\tif (key === undefined) {\n\t\t\t\treturn store;\n\t\t\t} else if (store) {\n\t\t\t\tif (key in store) {\n\t\t\t\t\treturn store[key];\n\t\t\t\t}\n\t\t\t}\n\t\t\t/* $.setData() */\n\t\t} else if (key !== undefined) {\n\t\t\tvar setId = node[$.expando] || (node[$.expando] = ++$.uuid);\n\n\t\t\tcache[setId] = cache[setId] || {};\n\t\t\tcache[setId][key] = value;\n\n\t\t\treturn value;\n\t\t}\n\t};\n\n\t/* Custom */\n\t$.removeData = function(node, keys) {\n\t\tvar id = node[$.expando],\n\t\t\t\tstore = id && cache[id];\n\n\t\tif (store) {\n\t\t\t// Cleanup the entire store if no keys are provided.\n\t\t\tif (!keys) {\n\t\t\t\tdelete cache[id];\n\t\t\t} else {\n\t\t\t\t$.each(keys, function(_, key) {\n\t\t\t\t\tdelete store[key];\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t};\n\n\t/* jQuery */\n\t$.extend = function() {\n\t\tvar src, copyIsArray, copy, name, options, clone,\n\t\t\t\ttarget = arguments[0] || {},\n\t\t\t\ti = 1,\n\t\t\t\tlength = arguments.length,\n\t\t\t\tdeep = false;\n\n\t\tif (typeof target === \"boolean\") {\n\t\t\tdeep = target;\n\n\t\t\ttarget = arguments[i] || {};\n\t\t\ti++;\n\t\t}\n\n\t\tif (typeof target !== \"object\" && $.type(target) !== \"function\") {\n\t\t\ttarget = {};\n\t\t}\n\n\t\tif (i === length) {\n\t\t\ttarget = this;\n\t\t\ti--;\n\t\t}\n\n\t\tfor (; i < length; i++) {\n\t\t\tif ((options = arguments[i])) {\n\t\t\t\tfor (name in options) {\n\t\t\t\t\tif (!options.hasOwnProperty(name)) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tsrc = target[name];\n\t\t\t\t\tcopy = options[name];\n\n\t\t\t\t\tif (target === copy) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (deep && copy && ($.isPlainObject(copy) || (copyIsArray = $.isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && $.isArray(src) ? src : [];\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && $.isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttarget[name] = $.extend(deep, clone, copy);\n\n\t\t\t\t\t} else if (copy !== undefined) {\n\t\t\t\t\t\ttarget[name] = copy;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn target;\n\t};\n\n\t/* jQuery 1.4.3 */\n\t$.queue = function(elem, type, data) {\n\t\tfunction $makeArray(arr, results) {\n\t\t\tvar ret = results || [];\n\n\t\t\tif (arr) {\n\t\t\t\tif (isArraylike(Object(arr))) {\n\t\t\t\t\t/* $.merge */\n\t\t\t\t\t(function(first, second) {\n\t\t\t\t\t\tvar len = +second.length,\n\t\t\t\t\t\t\t\tj = 0,\n\t\t\t\t\t\t\t\ti = first.length;\n\n\t\t\t\t\t\twhile (j < len) {\n\t\t\t\t\t\t\tfirst[i++] = second[j++];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (len !== len) {\n\t\t\t\t\t\t\twhile (second[j] !== undefined) {\n\t\t\t\t\t\t\t\tfirst[i++] = second[j++];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfirst.length = i;\n\n\t\t\t\t\t\treturn first;\n\t\t\t\t\t})(ret, typeof arr === \"string\" ? [arr] : arr);\n\t\t\t\t} else {\n\t\t\t\t\t[].push.call(ret, arr);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn ret;\n\t\t}\n\n\t\tif (!elem) {\n\t\t\treturn;\n\t\t}\n\n\t\ttype = (type || \"fx\") + \"queue\";\n\n\t\tvar q = $.data(elem, type);\n\n\t\tif (!data) {\n\t\t\treturn q || [];\n\t\t}\n\n\t\tif (!q || $.isArray(data)) {\n\t\t\tq = $.data(elem, type, $makeArray(data));\n\t\t} else {\n\t\t\tq.push(data);\n\t\t}\n\n\t\treturn q;\n\t};\n\n\t/* jQuery 1.4.3 */\n\t$.dequeue = function(elems, type) {\n\t\t/* Custom: Embed element iteration. */\n\t\t$.each(elems.nodeType ? [elems] : elems, function(i, elem) {\n\t\t\ttype = type || \"fx\";\n\n\t\t\tvar queue = $.queue(elem, type),\n\t\t\t\t\tfn = queue.shift();\n\n\t\t\tif (fn === \"inprogress\") {\n\t\t\t\tfn = queue.shift();\n\t\t\t}\n\n\t\t\tif (fn) {\n\t\t\t\tif (type === \"fx\") {\n\t\t\t\t\tqueue.unshift(\"inprogress\");\n\t\t\t\t}\n\n\t\t\t\tfn.call(elem, function() {\n\t\t\t\t\t$.dequeue(elem, type);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t};\n\n\t/******************\n\t $.fn Methods\n\t ******************/\n\n\t/* jQuery */\n\t$.fn = $.prototype = {\n\t\tinit: function(selector) {\n\t\t\t/* Just return the element wrapped inside an array; don't proceed with the actual jQuery node wrapping process. */\n\t\t\tif (selector.nodeType) {\n\t\t\t\tthis[0] = selector;\n\n\t\t\t\treturn this;\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Not a DOM node.\");\n\t\t\t}\n\t\t},\n\t\toffset: function() {\n\t\t\t/* jQuery altered code: Dropped disconnected DOM node checking. */\n\t\t\tvar box = this[0].getBoundingClientRect ? this[0].getBoundingClientRect() : {top: 0, left: 0};\n\n\t\t\treturn {\n\t\t\t\ttop: box.top + (window.pageYOffset || document.scrollTop || 0) - (document.clientTop || 0),\n\t\t\t\tleft: box.left + (window.pageXOffset || document.scrollLeft || 0) - (document.clientLeft || 0)\n\t\t\t};\n\t\t},\n\t\tposition: function() {\n\t\t\t/* jQuery */\n\t\t\tfunction offsetParentFn(elem) {\n\t\t\t\tvar offsetParent = elem.offsetParent || document;\n\n\t\t\t\twhile (offsetParent && (offsetParent.nodeType.toLowerCase !== \"html\" && offsetParent.style.position === \"static\")) {\n\t\t\t\t\toffsetParent = offsetParent.offsetParent;\n\t\t\t\t}\n\n\t\t\t\treturn offsetParent || document;\n\t\t\t}\n\n\t\t\t/* Zepto */\n\t\t\tvar elem = this[0],\n\t\t\t\t\toffsetParent = offsetParentFn(elem),\n\t\t\t\t\toffset = this.offset(),\n\t\t\t\t\tparentOffset = /^(?:body|html)$/i.test(offsetParent.nodeName) ? {top: 0, left: 0} : $(offsetParent).offset();\n\n\t\t\toffset.top -= parseFloat(elem.style.marginTop) || 0;\n\t\t\toffset.left -= parseFloat(elem.style.marginLeft) || 0;\n\n\t\t\tif (offsetParent.style) {\n\t\t\t\tparentOffset.top += parseFloat(offsetParent.style.borderTopWidth) || 0;\n\t\t\t\tparentOffset.left += parseFloat(offsetParent.style.borderLeftWidth) || 0;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\ttop: offset.top - parentOffset.top,\n\t\t\t\tleft: offset.left - parentOffset.left\n\t\t\t};\n\t\t}\n\t};\n\n\t/**********************\n\t Private Variables\n\t **********************/\n\n\t/* For $.data() */\n\tvar cache = {};\n\t$.expando = \"velocity\" + (new Date().getTime());\n\t$.uuid = 0;\n\n\t/* For $.queue() */\n\tvar class2type = {},\n\t\t\thasOwn = class2type.hasOwnProperty,\n\t\t\ttoString = class2type.toString;\n\n\tvar types = \"Boolean Number String Function Array Date RegExp Object Error\".split(\" \");\n\tfor (var i = 0; i < types.length; i++) {\n\t\tclass2type[\"[object \" + types[i] + \"]\"] = types[i].toLowerCase();\n\t}\n\n\t/* Makes $(node) possible, without having to call init. */\n\t$.fn.init.prototype = $.fn;\n\n\t/* Globalize Velocity onto the window, and assign its Utilities property. */\n\twindow.Velocity = {Utilities: $};\n})(window);\n\n/******************\n Velocity.js\n ******************/\n\n(function(factory) {\n\t\"use strict\";\n\t/* CommonJS module. */\n\tif (typeof module === \"object\" && typeof module.exports === \"object\") {\n\t\tmodule.exports = factory();\n\t\t/* AMD module. */\n\t} else if (true) {\n\t\t!(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\t/* Browser globals. */\n\t} else {\n\t\tfactory();\n\t}\n}(function() {\n\t\"use strict\";\n\treturn function(global, window, document, undefined) {\n\n\t\t/***************\n\t\t Summary\n\t\t ***************/\n\n\t\t/*\n\t\t - CSS: CSS stack that works independently from the rest of Velocity.\n\t\t - animate(): Core animation method that iterates over the targeted elements and queues the incoming call onto each element individually.\n\t\t - Pre-Queueing: Prepare the element for animation by instantiating its data cache and processing the call's options.\n\t\t - Queueing: The logic that runs once the call has reached its point of execution in the element's $.queue() stack.\n\t\t Most logic is placed here to avoid risking it becoming stale (if the element's properties have changed).\n\t\t - Pushing: Consolidation of the tween data followed by its push onto the global in-progress calls container.\n\t\t - tick(): The single requestAnimationFrame loop responsible for tweening all in-progress calls.\n\t\t - completeCall(): Handles the cleanup process for each Velocity call.\n\t\t */\n\n\t\t/*********************\n\t\t Helper Functions\n\t\t *********************/\n\n\t\t/* IE detection. Gist: https://gist.github.com/julianshapiro/9098609 */\n\t\tvar IE = (function() {\n\t\t\tif (document.documentMode) {\n\t\t\t\treturn document.documentMode;\n\t\t\t} else {\n\t\t\t\tfor (var i = 7; i > 4; i--) {\n\t\t\t\t\tvar div = document.createElement(\"div\");\n\n\t\t\t\t\tdiv.innerHTML = \"<!--[if IE \" + i + \"]><span></span><![endif]-->\";\n\n\t\t\t\t\tif (div.getElementsByTagName(\"span\").length) {\n\t\t\t\t\t\tdiv = null;\n\n\t\t\t\t\t\treturn i;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn undefined;\n\t\t})();\n\n\t\t/* rAF shim. Gist: https://gist.github.com/julianshapiro/9497513 */\n\t\tvar rAFShim = (function() {\n\t\t\tvar timeLast = 0;\n\n\t\t\treturn window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || function(callback) {\n\t\t\t\tvar timeCurrent = (new Date()).getTime(),\n\t\t\t\t\t\ttimeDelta;\n\n\t\t\t\t/* Dynamically set delay on a per-tick basis to match 60fps. */\n\t\t\t\t/* Technique by Erik Moller. MIT license: https://gist.github.com/paulirish/1579671 */\n\t\t\t\ttimeDelta = Math.max(0, 16 - (timeCurrent - timeLast));\n\t\t\t\ttimeLast = timeCurrent + timeDelta;\n\n\t\t\t\treturn setTimeout(function() {\n\t\t\t\t\tcallback(timeCurrent + timeDelta);\n\t\t\t\t}, timeDelta);\n\t\t\t};\n\t\t})();\n\n\t\t/* Array compacting. Copyright Lo-Dash. MIT License: https://github.com/lodash/lodash/blob/master/LICENSE.txt */\n\t\tfunction compactSparseArray(array) {\n\t\t\tvar index = -1,\n\t\t\t\t\tlength = array ? array.length : 0,\n\t\t\t\t\tresult = [];\n\n\t\t\twhile (++index < length) {\n\t\t\t\tvar value = array[index];\n\n\t\t\t\tif (value) {\n\t\t\t\t\tresult.push(value);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\n\t\tfunction sanitizeElements(elements) {\n\t\t\t/* Unwrap jQuery/Zepto objects. */\n\t\t\tif (Type.isWrapped(elements)) {\n\t\t\t\telements = [].slice.call(elements);\n\t\t\t\t/* Wrap a single element in an array so that $.each() can iterate with the element instead of its node's children. */\n\t\t\t} else if (Type.isNode(elements)) {\n\t\t\t\telements = [elements];\n\t\t\t}\n\n\t\t\treturn elements;\n\t\t}\n\n\t\tvar Type = {\n\t\t\tisString: function(variable) {\n\t\t\t\treturn (typeof variable === \"string\");\n\t\t\t},\n\t\t\tisArray: Array.isArray || function(variable) {\n\t\t\t\treturn Object.prototype.toString.call(variable) === \"[object Array]\";\n\t\t\t},\n\t\t\tisFunction: function(variable) {\n\t\t\t\treturn Object.prototype.toString.call(variable) === \"[object Function]\";\n\t\t\t},\n\t\t\tisNode: function(variable) {\n\t\t\t\treturn variable && variable.nodeType;\n\t\t\t},\n\t\t\t/* Copyright Martin Bohm. MIT License: https://gist.github.com/Tomalak/818a78a226a0738eaade */\n\t\t\tisNodeList: function(variable) {\n\t\t\t\treturn typeof variable === \"object\" &&\n\t\t\t\t\t\t/^\\[object (HTMLCollection|NodeList|Object)\\]$/.test(Object.prototype.toString.call(variable)) &&\n\t\t\t\t\t\tvariable.length !== undefined &&\n\t\t\t\t\t\t(variable.length === 0 || (typeof variable[0] === \"object\" && variable[0].nodeType > 0));\n\t\t\t},\n\t\t\t/* Determine if variable is a wrapped jQuery or Zepto element. */\n\t\t\tisWrapped: function(variable) {\n\t\t\t\treturn variable && (variable.jquery || (window.Zepto && window.Zepto.zepto.isZ(variable)));\n\t\t\t},\n\t\t\tisSVG: function(variable) {\n\t\t\t\treturn window.SVGElement && (variable instanceof window.SVGElement);\n\t\t\t},\n\t\t\tisEmptyObject: function(variable) {\n\t\t\t\tfor (var name in variable) {\n\t\t\t\t\tif (variable.hasOwnProperty(name)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t}\n\t\t};\n\n\t\t/*****************\n\t\t Dependencies\n\t\t *****************/\n\n\t\tvar $,\n\t\t\t\tisJQuery = false;\n\n\t\tif (global.fn && global.fn.jquery) {\n\t\t\t$ = global;\n\t\t\tisJQuery = true;\n\t\t} else {\n\t\t\t$ = window.Velocity.Utilities;\n\t\t}\n\n\t\tif (IE <= 8 && !isJQuery) {\n\t\t\tthrow new Error(\"Velocity: IE8 and below require jQuery to be loaded before Velocity.\");\n\t\t} else if (IE <= 7) {\n\t\t\t/* Revert to jQuery's $.animate(), and lose Velocity's extra features. */\n\t\t\tjQuery.fn.velocity = jQuery.fn.animate;\n\n\t\t\t/* Now that $.fn.velocity is aliased, abort this Velocity declaration. */\n\t\t\treturn;\n\t\t}\n\n\t\t/*****************\n\t\t Constants\n\t\t *****************/\n\n\t\tvar DURATION_DEFAULT = 400,\n\t\t\t\tEASING_DEFAULT = \"swing\";\n\n\t\t/*************\n\t\t State\n\t\t *************/\n\n\t\tvar Velocity = {\n\t\t\t/* Container for page-wide Velocity state data. */\n\t\t\tState: {\n\t\t\t\t/* Detect mobile devices to determine if mobileHA should be turned on. */\n\t\t\t\tisMobile: /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent),\n\t\t\t\t/* The mobileHA option's behavior changes on older Android devices (Gingerbread, versions 2.3.3-2.3.7). */\n\t\t\t\tisAndroid: /Android/i.test(navigator.userAgent),\n\t\t\t\tisGingerbread: /Android 2\\.3\\.[3-7]/i.test(navigator.userAgent),\n\t\t\t\tisChrome: window.chrome,\n\t\t\t\tisFirefox: /Firefox/i.test(navigator.userAgent),\n\t\t\t\t/* Create a cached element for re-use when checking for CSS property prefixes. */\n\t\t\t\tprefixElement: document.createElement(\"div\"),\n\t\t\t\t/* Cache every prefix match to avoid repeating lookups. */\n\t\t\t\tprefixMatches: {},\n\t\t\t\t/* Cache the anchor used for animating window scrolling. */\n\t\t\t\tscrollAnchor: null,\n\t\t\t\t/* Cache the browser-specific property names associated with the scroll anchor. */\n\t\t\t\tscrollPropertyLeft: null,\n\t\t\t\tscrollPropertyTop: null,\n\t\t\t\t/* Keep track of whether our RAF tick is running. */\n\t\t\t\tisTicking: false,\n\t\t\t\t/* Container for every in-progress call to Velocity. */\n\t\t\t\tcalls: []\n\t\t\t},\n\t\t\t/* Velocity's custom CSS stack. Made global for unit testing. */\n\t\t\tCSS: { /* Defined below. */},\n\t\t\t/* A shim of the jQuery utility functions used by Velocity -- provided by Velocity's optional jQuery shim. */\n\t\t\tUtilities: $,\n\t\t\t/* Container for the user's custom animation redirects that are referenced by name in place of the properties map argument. */\n\t\t\tRedirects: { /* Manually registered by the user. */},\n\t\t\tEasings: { /* Defined below. */},\n\t\t\t/* Attempt to use ES6 Promises by default. Users can override this with a third-party promises library. */\n\t\t\tPromise: window.Promise,\n\t\t\t/* Velocity option defaults, which can be overriden by the user. */\n\t\t\tdefaults: {\n\t\t\t\tqueue: \"\",\n\t\t\t\tduration: DURATION_DEFAULT,\n\t\t\t\teasing: EASING_DEFAULT,\n\t\t\t\tbegin: undefined,\n\t\t\t\tcomplete: undefined,\n\t\t\t\tprogress: undefined,\n\t\t\t\tdisplay: undefined,\n\t\t\t\tvisibility: undefined,\n\t\t\t\tloop: false,\n\t\t\t\tdelay: false,\n\t\t\t\tmobileHA: true,\n\t\t\t\t/* Advanced: Set to false to prevent property values from being cached between consecutive Velocity-initiated chain calls. */\n\t\t\t\t_cacheValues: true\n\t\t\t},\n\t\t\t/* A design goal of Velocity is to cache data wherever possible in order to avoid DOM requerying. Accordingly, each element has a data cache. */\n\t\t\tinit: function(element) {\n\t\t\t\t$.data(element, \"velocity\", {\n\t\t\t\t\t/* Store whether this is an SVG element, since its properties are retrieved and updated differently than standard HTML elements. */\n\t\t\t\t\tisSVG: Type.isSVG(element),\n\t\t\t\t\t/* Keep track of whether the element is currently being animated by Velocity.\n\t\t\t\t\t This is used to ensure that property values are not transferred between non-consecutive (stale) calls. */\n\t\t\t\t\tisAnimating: false,\n\t\t\t\t\t/* A reference to the element's live computedStyle object. Learn more here: https://developer.mozilla.org/en/docs/Web/API/window.getComputedStyle */\n\t\t\t\t\tcomputedStyle: null,\n\t\t\t\t\t/* Tween data is cached for each animation on the element so that data can be passed across calls --\n\t\t\t\t\t in particular, end values are used as subsequent start values in consecutive Velocity calls. */\n\t\t\t\t\ttweensContainer: null,\n\t\t\t\t\t/* The full root property values of each CSS hook being animated on this element are cached so that:\n\t\t\t\t\t 1) Concurrently-animating hooks sharing the same root can have their root values' merged into one while tweening.\n\t\t\t\t\t 2) Post-hook-injection root values can be transferred over to consecutively chained Velocity calls as starting root values. */\n\t\t\t\t\trootPropertyValueCache: {},\n\t\t\t\t\t/* A cache for transform updates, which must be manually flushed via CSS.flushTransformCache(). */\n\t\t\t\t\ttransformCache: {}\n\t\t\t\t});\n\t\t\t},\n\t\t\t/* A parallel to jQuery's $.css(), used for getting/setting Velocity's hooked CSS properties. */\n\t\t\thook: null, /* Defined below. */\n\t\t\t/* Velocity-wide animation time remapping for testing purposes. */\n\t\t\tmock: false,\n\t\t\tversion: {major: 1, minor: 3, patch: 1},\n\t\t\t/* Set to 1 or 2 (most verbose) to output debug info to console. */\n\t\t\tdebug: false\n\t\t};\n\n\t\t/* Retrieve the appropriate scroll anchor and property name for the browser: https://developer.mozilla.org/en-US/docs/Web/API/Window.scrollY */\n\t\tif (window.pageYOffset !== undefined) {\n\t\t\tVelocity.State.scrollAnchor = window;\n\t\t\tVelocity.State.scrollPropertyLeft = \"pageXOffset\";\n\t\t\tVelocity.State.scrollPropertyTop = \"pageYOffset\";\n\t\t} else {\n\t\t\tVelocity.State.scrollAnchor = document.documentElement || document.body.parentNode || document.body;\n\t\t\tVelocity.State.scrollPropertyLeft = \"scrollLeft\";\n\t\t\tVelocity.State.scrollPropertyTop = \"scrollTop\";\n\t\t}\n\n\t\t/* Shorthand alias for jQuery's $.data() utility. */\n\t\tfunction Data(element) {\n\t\t\t/* Hardcode a reference to the plugin name. */\n\t\t\tvar response = $.data(element, \"velocity\");\n\n\t\t\t/* jQuery <=1.4.2 returns null instead of undefined when no match is found. We normalize this behavior. */\n\t\t\treturn response === null ? undefined : response;\n\t\t}\n\n\t\t/**************\n\t\t Easing\n\t\t **************/\n\n\t\t/* Step easing generator. */\n\t\tfunction generateStep(steps) {\n\t\t\treturn function(p) {\n\t\t\t\treturn Math.round(p * steps) * (1 / steps);\n\t\t\t};\n\t\t}\n\n\t\t/* Bezier curve function generator. Copyright Gaetan Renaudeau. MIT License: http://en.wikipedia.org/wiki/MIT_License */\n\t\tfunction generateBezier(mX1, mY1, mX2, mY2) {\n\t\t\tvar NEWTON_ITERATIONS = 4,\n\t\t\t\t\tNEWTON_MIN_SLOPE = 0.001,\n\t\t\t\t\tSUBDIVISION_PRECISION = 0.0000001,\n\t\t\t\t\tSUBDIVISION_MAX_ITERATIONS = 10,\n\t\t\t\t\tkSplineTableSize = 11,\n\t\t\t\t\tkSampleStepSize = 1.0 / (kSplineTableSize - 1.0),\n\t\t\t\t\tfloat32ArraySupported = \"Float32Array\" in window;\n\n\t\t\t/* Must contain four arguments. */\n\t\t\tif (arguments.length !== 4) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t/* Arguments must be numbers. */\n\t\t\tfor (var i = 0; i < 4; ++i) {\n\t\t\t\tif (typeof arguments[i] !== \"number\" || isNaN(arguments[i]) || !isFinite(arguments[i])) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/* X values must be in the [0, 1] range. */\n\t\t\tmX1 = Math.min(mX1, 1);\n\t\t\tmX2 = Math.min(mX2, 1);\n\t\t\tmX1 = Math.max(mX1, 0);\n\t\t\tmX2 = Math.max(mX2, 0);\n\n\t\t\tvar mSampleValues = float32ArraySupported ? new Float32Array(kSplineTableSize) : new Array(kSplineTableSize);\n\n\t\t\tfunction A(aA1, aA2) {\n\t\t\t\treturn 1.0 - 3.0 * aA2 + 3.0 * aA1;\n\t\t\t}\n\t\t\tfunction B(aA1, aA2) {\n\t\t\t\treturn 3.0 * aA2 - 6.0 * aA1;\n\t\t\t}\n\t\t\tfunction C(aA1) {\n\t\t\t\treturn 3.0 * aA1;\n\t\t\t}\n\n\t\t\tfunction calcBezier(aT, aA1, aA2) {\n\t\t\t\treturn ((A(aA1, aA2) * aT + B(aA1, aA2)) * aT + C(aA1)) * aT;\n\t\t\t}\n\n\t\t\tfunction getSlope(aT, aA1, aA2) {\n\t\t\t\treturn 3.0 * A(aA1, aA2) * aT * aT + 2.0 * B(aA1, aA2) * aT + C(aA1);\n\t\t\t}\n\n\t\t\tfunction newtonRaphsonIterate(aX, aGuessT) {\n\t\t\t\tfor (var i = 0; i < NEWTON_ITERATIONS; ++i) {\n\t\t\t\t\tvar currentSlope = getSlope(aGuessT, mX1, mX2);\n\n\t\t\t\t\tif (currentSlope === 0.0) {\n\t\t\t\t\t\treturn aGuessT;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar currentX = calcBezier(aGuessT, mX1, mX2) - aX;\n\t\t\t\t\taGuessT -= currentX / currentSlope;\n\t\t\t\t}\n\n\t\t\t\treturn aGuessT;\n\t\t\t}\n\n\t\t\tfunction calcSampleValues() {\n\t\t\t\tfor (var i = 0; i < kSplineTableSize; ++i) {\n\t\t\t\t\tmSampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction binarySubdivide(aX, aA, aB) {\n\t\t\t\tvar currentX, currentT, i = 0;\n\n\t\t\t\tdo {\n\t\t\t\t\tcurrentT = aA + (aB - aA) / 2.0;\n\t\t\t\t\tcurrentX = calcBezier(currentT, mX1, mX2) - aX;\n\t\t\t\t\tif (currentX > 0.0) {\n\t\t\t\t\t\taB = currentT;\n\t\t\t\t\t} else {\n\t\t\t\t\t\taA = currentT;\n\t\t\t\t\t}\n\t\t\t\t} while (Math.abs(currentX) > SUBDIVISION_PRECISION && ++i < SUBDIVISION_MAX_ITERATIONS);\n\n\t\t\t\treturn currentT;\n\t\t\t}\n\n\t\t\tfunction getTForX(aX) {\n\t\t\t\tvar intervalStart = 0.0,\n\t\t\t\t\t\tcurrentSample = 1,\n\t\t\t\t\t\tlastSample = kSplineTableSize - 1;\n\n\t\t\t\tfor (; currentSample !== lastSample && mSampleValues[currentSample] <= aX; ++currentSample) {\n\t\t\t\t\tintervalStart += kSampleStepSize;\n\t\t\t\t}\n\n\t\t\t\t--currentSample;\n\n\t\t\t\tvar dist = (aX - mSampleValues[currentSample]) / (mSampleValues[currentSample + 1] - mSampleValues[currentSample]),\n\t\t\t\t\t\tguessForT = intervalStart + dist * kSampleStepSize,\n\t\t\t\t\t\tinitialSlope = getSlope(guessForT, mX1, mX2);\n\n\t\t\t\tif (initialSlope >= NEWTON_MIN_SLOPE) {\n\t\t\t\t\treturn newtonRaphsonIterate(aX, guessForT);\n\t\t\t\t} else if (initialSlope === 0.0) {\n\t\t\t\t\treturn guessForT;\n\t\t\t\t} else {\n\t\t\t\t\treturn binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar _precomputed = false;\n\n\t\t\tfunction precompute() {\n\t\t\t\t_precomputed = true;\n\t\t\t\tif (mX1 !== mY1 || mX2 !== mY2) {\n\t\t\t\t\tcalcSampleValues();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar f = function(aX) {\n\t\t\t\tif (!_precomputed) {\n\t\t\t\t\tprecompute();\n\t\t\t\t}\n\t\t\t\tif (mX1 === mY1 && mX2 === mY2) {\n\t\t\t\t\treturn aX;\n\t\t\t\t}\n\t\t\t\tif (aX === 0) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t\tif (aX === 1) {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\n\t\t\t\treturn calcBezier(getTForX(aX), mY1, mY2);\n\t\t\t};\n\n\t\t\tf.getControlPoints = function() {\n\t\t\t\treturn [{x: mX1, y: mY1}, {x: mX2, y: mY2}];\n\t\t\t};\n\n\t\t\tvar str = \"generateBezier(\" + [mX1, mY1, mX2, mY2] + \")\";\n\t\t\tf.toString = function() {\n\t\t\t\treturn str;\n\t\t\t};\n\n\t\t\treturn f;\n\t\t}\n\n\t\t/* Runge-Kutta spring physics function generator. Adapted from Framer.js, copyright Koen Bok. MIT License: http://en.wikipedia.org/wiki/MIT_License */\n\t\t/* Given a tension, friction, and duration, a simulation at 60FPS will first run without a defined duration in order to calculate the full path. A second pass\n\t\t then adjusts the time delta -- using the relation between actual time and duration -- to calculate the path for the duration-constrained animation. */\n\t\tvar generateSpringRK4 = (function() {\n\t\t\tfunction springAccelerationForState(state) {\n\t\t\t\treturn (-state.tension * state.x) - (state.friction * state.v);\n\t\t\t}\n\n\t\t\tfunction springEvaluateStateWithDerivative(initialState, dt, derivative) {\n\t\t\t\tvar state = {\n\t\t\t\t\tx: initialState.x + derivative.dx * dt,\n\t\t\t\t\tv: initialState.v + derivative.dv * dt,\n\t\t\t\t\ttension: initialState.tension,\n\t\t\t\t\tfriction: initialState.friction\n\t\t\t\t};\n\n\t\t\t\treturn {dx: state.v, dv: springAccelerationForState(state)};\n\t\t\t}\n\n\t\t\tfunction springIntegrateState(state, dt) {\n\t\t\t\tvar a = {\n\t\t\t\t\tdx: state.v,\n\t\t\t\t\tdv: springAccelerationForState(state)\n\t\t\t\t},\n\t\t\t\tb = springEvaluateStateWithDerivative(state, dt * 0.5, a),\n\t\t\t\t\t\tc = springEvaluateStateWithDerivative(state, dt * 0.5, b),\n\t\t\t\t\t\td = springEvaluateStateWithDerivative(state, dt, c),\n\t\t\t\t\t\tdxdt = 1.0 / 6.0 * (a.dx + 2.0 * (b.dx + c.dx) + d.dx),\n\t\t\t\t\t\tdvdt = 1.0 / 6.0 * (a.dv + 2.0 * (b.dv + c.dv) + d.dv);\n\n\t\t\t\tstate.x = state.x + dxdt * dt;\n\t\t\t\tstate.v = state.v + dvdt * dt;\n\n\t\t\t\treturn state;\n\t\t\t}\n\n\t\t\treturn function springRK4Factory(tension, friction, duration) {\n\n\t\t\t\tvar initState = {\n\t\t\t\t\tx: -1,\n\t\t\t\t\tv: 0,\n\t\t\t\t\ttension: null,\n\t\t\t\t\tfriction: null\n\t\t\t\t},\n\t\t\t\tpath = [0],\n\t\t\t\t\t\ttime_lapsed = 0,\n\t\t\t\t\t\ttolerance = 1 / 10000,\n\t\t\t\t\t\tDT = 16 / 1000,\n\t\t\t\t\t\thave_duration, dt, last_state;\n\n\t\t\t\ttension = parseFloat(tension) || 500;\n\t\t\t\tfriction = parseFloat(friction) || 20;\n\t\t\t\tduration = duration || null;\n\n\t\t\t\tinitState.tension = tension;\n\t\t\t\tinitState.friction = friction;\n\n\t\t\t\thave_duration = duration !== null;\n\n\t\t\t\t/* Calculate the actual time it takes for this animation to complete with the provided conditions. */\n\t\t\t\tif (have_duration) {\n\t\t\t\t\t/* Run the simulation without a duration. */\n\t\t\t\t\ttime_lapsed = springRK4Factory(tension, friction);\n\t\t\t\t\t/* Compute the adjusted time delta. */\n\t\t\t\t\tdt = time_lapsed / duration * DT;\n\t\t\t\t} else {\n\t\t\t\t\tdt = DT;\n\t\t\t\t}\n\n\t\t\t\twhile (true) {\n\t\t\t\t\t/* Next/step function .*/\n\t\t\t\t\tlast_state = springIntegrateState(last_state || initState, dt);\n\t\t\t\t\t/* Store the position. */\n\t\t\t\t\tpath.push(1 + last_state.x);\n\t\t\t\t\ttime_lapsed += 16;\n\t\t\t\t\t/* If the change threshold is reached, break. */\n\t\t\t\t\tif (!(Math.abs(last_state.x) > tolerance && Math.abs(last_state.v) > tolerance)) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/* If duration is not defined, return the actual time required for completing this animation. Otherwise, return a closure that holds the\n\t\t\t\t computed path and returns a snapshot of the position according to a given percentComplete. */\n\t\t\t\treturn !have_duration ? time_lapsed : function(percentComplete) {\n\t\t\t\t\treturn path[ (percentComplete * (path.length - 1)) | 0 ];\n\t\t\t\t};\n\t\t\t};\n\t\t}());\n\n\t\t/* jQuery easings. */\n\t\tVelocity.Easings = {\n\t\t\tlinear: function(p) {\n\t\t\t\treturn p;\n\t\t\t},\n\t\t\tswing: function(p) {\n\t\t\t\treturn 0.5 - Math.cos(p * Math.PI) / 2;\n\t\t\t},\n\t\t\t/* Bonus \"spring\" easing, which is a less exaggerated version of easeInOutElastic. */\n\t\t\tspring: function(p) {\n\t\t\t\treturn 1 - (Math.cos(p * 4.5 * Math.PI) * Math.exp(-p * 6));\n\t\t\t}\n\t\t};\n\n\t\t/* CSS3 and Robert Penner easings. */\n\t\t$.each(\n\t\t\t\t[\n\t\t\t\t\t[\"ease\", [0.25, 0.1, 0.25, 1.0]],\n\t\t\t\t\t[\"ease-in\", [0.42, 0.0, 1.00, 1.0]],\n\t\t\t\t\t[\"ease-out\", [0.00, 0.0, 0.58, 1.0]],\n\t\t\t\t\t[\"ease-in-out\", [0.42, 0.0, 0.58, 1.0]],\n\t\t\t\t\t[\"easeInSine\", [0.47, 0, 0.745, 0.715]],\n\t\t\t\t\t[\"easeOutSine\", [0.39, 0.575, 0.565, 1]],\n\t\t\t\t\t[\"easeInOutSine\", [0.445, 0.05, 0.55, 0.95]],\n\t\t\t\t\t[\"easeInQuad\", [0.55, 0.085, 0.68, 0.53]],\n\t\t\t\t\t[\"easeOutQuad\", [0.25, 0.46, 0.45, 0.94]],\n\t\t\t\t\t[\"easeInOutQuad\", [0.455, 0.03, 0.515, 0.955]],\n\t\t\t\t\t[\"easeInCubic\", [0.55, 0.055, 0.675, 0.19]],\n\t\t\t\t\t[\"easeOutCubic\", [0.215, 0.61, 0.355, 1]],\n\t\t\t\t\t[\"easeInOutCubic\", [0.645, 0.045, 0.355, 1]],\n\t\t\t\t\t[\"easeInQuart\", [0.895, 0.03, 0.685, 0.22]],\n\t\t\t\t\t[\"easeOutQuart\", [0.165, 0.84, 0.44, 1]],\n\t\t\t\t\t[\"easeInOutQuart\", [0.77, 0, 0.175, 1]],\n\t\t\t\t\t[\"easeInQuint\", [0.755, 0.05, 0.855, 0.06]],\n\t\t\t\t\t[\"easeOutQuint\", [0.23, 1, 0.32, 1]],\n\t\t\t\t\t[\"easeInOutQuint\", [0.86, 0, 0.07, 1]],\n\t\t\t\t\t[\"easeInExpo\", [0.95, 0.05, 0.795, 0.035]],\n\t\t\t\t\t[\"easeOutExpo\", [0.19, 1, 0.22, 1]],\n\t\t\t\t\t[\"easeInOutExpo\", [1, 0, 0, 1]],\n\t\t\t\t\t[\"easeInCirc\", [0.6, 0.04, 0.98, 0.335]],\n\t\t\t\t\t[\"easeOutCirc\", [0.075, 0.82, 0.165, 1]],\n\t\t\t\t\t[\"easeInOutCirc\", [0.785, 0.135, 0.15, 0.86]]\n\t\t\t\t], function(i, easingArray) {\n\t\t\tVelocity.Easings[easingArray[0]] = generateBezier.apply(null, easingArray[1]);\n\t\t});\n\n\t\t/* Determine the appropriate easing type given an easing input. */\n\t\tfunction getEasing(value, duration) {\n\t\t\tvar easing = value;\n\n\t\t\t/* The easing option can either be a string that references a pre-registered easing,\n\t\t\t or it can be a two-/four-item array of integers to be converted into a bezier/spring function. */\n\t\t\tif (Type.isString(value)) {\n\t\t\t\t/* Ensure that the easing has been assigned to jQuery's Velocity.Easings object. */\n\t\t\t\tif (!Velocity.Easings[value]) {\n\t\t\t\t\teasing = false;\n\t\t\t\t}\n\t\t\t} else if (Type.isArray(value) && value.length === 1) {\n\t\t\t\teasing = generateStep.apply(null, value);\n\t\t\t} else if (Type.isArray(value) && value.length === 2) {\n\t\t\t\t/* springRK4 must be passed the animation's duration. */\n\t\t\t\t/* Note: If the springRK4 array contains non-numbers, generateSpringRK4() returns an easing\n\t\t\t\t function generated with default tension and friction values. */\n\t\t\t\teasing = generateSpringRK4.apply(null, value.concat([duration]));\n\t\t\t} else if (Type.isArray(value) && value.length === 4) {\n\t\t\t\t/* Note: If the bezier array contains non-numbers, generateBezier() returns false. */\n\t\t\t\teasing = generateBezier.apply(null, value);\n\t\t\t} else {\n\t\t\t\teasing = false;\n\t\t\t}\n\n\t\t\t/* Revert to the Velocity-wide default easing type, or fall back to \"swing\" (which is also jQuery's default)\n\t\t\t if the Velocity-wide default has been incorrectly modified. */\n\t\t\tif (easing === false) {\n\t\t\t\tif (Velocity.Easings[Velocity.defaults.easing]) {\n\t\t\t\t\teasing = Velocity.defaults.easing;\n\t\t\t\t} else {\n\t\t\t\t\teasing = EASING_DEFAULT;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn easing;\n\t\t}\n\n\t\t/*****************\n\t\t CSS Stack\n\t\t *****************/\n\n\t\t/* The CSS object is a highly condensed and performant CSS stack that fully replaces jQuery's.\n\t\t It handles the validation, getting, and setting of both standard CSS properties and CSS property hooks. */\n\t\t/* Note: A \"CSS\" shorthand is aliased so that our code is easier to read. */\n\t\tvar CSS = Velocity.CSS = {\n\t\t\t/*************\n\t\t\t RegEx\n\t\t\t *************/\n\n\t\t\tRegEx: {\n\t\t\t\tisHex: /^#([A-f\\d]{3}){1,2}$/i,\n\t\t\t\t/* Unwrap a property value's surrounding text, e.g. \"rgba(4, 3, 2, 1)\" ==> \"4, 3, 2, 1\" and \"rect(4px 3px 2px 1px)\" ==> \"4px 3px 2px 1px\". */\n\t\t\t\tvalueUnwrap: /^[A-z]+\\((.*)\\)$/i,\n\t\t\t\twrappedValueAlreadyExtracted: /[0-9.]+ [0-9.]+ [0-9.]+( [0-9.]+)?/,\n\t\t\t\t/* Split a multi-value property into an array of subvalues, e.g. \"rgba(4, 3, 2, 1) 4px 3px 2px 1px\" ==> [ \"rgba(4, 3, 2, 1)\", \"4px\", \"3px\", \"2px\", \"1px\" ]. */\n\t\t\t\tvalueSplit: /([A-z]+\\(.+\\))|(([A-z0-9#-.]+?)(?=\\s|$))/ig\n\t\t\t},\n\t\t\t/************\n\t\t\t Lists\n\t\t\t ************/\n\n\t\t\tLists: {\n\t\t\t\tcolors: [\"fill\", \"stroke\", \"stopColor\", \"color\", \"backgroundColor\", \"borderColor\", \"borderTopColor\", \"borderRightColor\", \"borderBottomColor\", \"borderLeftColor\", \"outlineColor\"],\n\t\t\t\ttransformsBase: [\"translateX\", \"translateY\", \"scale\", \"scaleX\", \"scaleY\", \"skewX\", \"skewY\", \"rotateZ\"],\n\t\t\t\ttransforms3D: [\"transformPerspective\", \"translateZ\", \"scaleZ\", \"rotateX\", \"rotateY\"]\n\t\t\t},\n\t\t\t/************\n\t\t\t Hooks\n\t\t\t ************/\n\n\t\t\t/* Hooks allow a subproperty (e.g. \"boxShadowBlur\") of a compound-value CSS property\n\t\t\t (e.g. \"boxShadow: X Y Blur Spread Color\") to be animated as if it were a discrete property. */\n\t\t\t/* Note: Beyond enabling fine-grained property animation, hooking is necessary since Velocity only\n\t\t\t tweens properties with single numeric values; unlike CSS transitions, Velocity does not interpolate compound-values. */\n\t\t\tHooks: {\n\t\t\t\t/********************\n\t\t\t\t Registration\n\t\t\t\t ********************/\n\n\t\t\t\t/* Templates are a concise way of indicating which subproperties must be individually registered for each compound-value CSS property. */\n\t\t\t\t/* Each template consists of the compound-value's base name, its constituent subproperty names, and those subproperties' default values. */\n\t\t\t\ttemplates: {\n\t\t\t\t\t\"textShadow\": [\"Color X Y Blur\", \"black 0px 0px 0px\"],\n\t\t\t\t\t\"boxShadow\": [\"Color X Y Blur Spread\", \"black 0px 0px 0px 0px\"],\n\t\t\t\t\t\"clip\": [\"Top Right Bottom Left\", \"0px 0px 0px 0px\"],\n\t\t\t\t\t\"backgroundPosition\": [\"X Y\", \"0% 0%\"],\n\t\t\t\t\t\"transformOrigin\": [\"X Y Z\", \"50% 50% 0px\"],\n\t\t\t\t\t\"perspectiveOrigin\": [\"X Y\", \"50% 50%\"]\n\t\t\t\t},\n\t\t\t\t/* A \"registered\" hook is one that has been converted from its template form into a live,\n\t\t\t\t tweenable property. It contains data to associate it with its root property. */\n\t\t\t\tregistered: {\n\t\t\t\t\t/* Note: A registered hook looks like this ==> textShadowBlur: [ \"textShadow\", 3 ],\n\t\t\t\t\t which consists of the subproperty's name, the associated root property's name,\n\t\t\t\t\t and the subproperty's position in the root's value. */\n\t\t\t\t},\n\t\t\t\t/* Convert the templates into individual hooks then append them to the registered object above. */\n\t\t\t\tregister: function() {\n\t\t\t\t\t/* Color hooks registration: Colors are defaulted to white -- as opposed to black -- since colors that are\n\t\t\t\t\t currently set to \"transparent\" default to their respective template below when color-animated,\n\t\t\t\t\t and white is typically a closer match to transparent than black is. An exception is made for text (\"color\"),\n\t\t\t\t\t which is almost always set closer to black than white. */\n\t\t\t\t\tfor (var i = 0; i < CSS.Lists.colors.length; i++) {\n\t\t\t\t\t\tvar rgbComponents = (CSS.Lists.colors[i] === \"color\") ? \"0 0 0 1\" : \"255 255 255 1\";\n\t\t\t\t\t\tCSS.Hooks.templates[CSS.Lists.colors[i]] = [\"Red Green Blue Alpha\", rgbComponents];\n\t\t\t\t\t}\n\n\t\t\t\t\tvar rootProperty,\n\t\t\t\t\t\t\thookTemplate,\n\t\t\t\t\t\t\thookNames;\n\n\t\t\t\t\t/* In IE, color values inside compound-value properties are positioned at the end the value instead of at the beginning.\n\t\t\t\t\t Thus, we re-arrange the templates accordingly. */\n\t\t\t\t\tif (IE) {\n\t\t\t\t\t\tfor (rootProperty in CSS.Hooks.templates) {\n\t\t\t\t\t\t\tif (!CSS.Hooks.templates.hasOwnProperty(rootProperty)) {\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\thookTemplate = CSS.Hooks.templates[rootProperty];\n\t\t\t\t\t\t\thookNames = hookTemplate[0].split(\" \");\n\n\t\t\t\t\t\t\tvar defaultValues = hookTemplate[1].match(CSS.RegEx.valueSplit);\n\n\t\t\t\t\t\t\tif (hookNames[0] === \"Color\") {\n\t\t\t\t\t\t\t\t/* Reposition both the hook's name and its default value to the end of their respective strings. */\n\t\t\t\t\t\t\t\thookNames.push(hookNames.shift());\n\t\t\t\t\t\t\t\tdefaultValues.push(defaultValues.shift());\n\n\t\t\t\t\t\t\t\t/* Replace the existing template for the hook's root property. */\n\t\t\t\t\t\t\t\tCSS.Hooks.templates[rootProperty] = [hookNames.join(\" \"), defaultValues.join(\" \")];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t/* Hook registration. */\n\t\t\t\t\tfor (rootProperty in CSS.Hooks.templates) {\n\t\t\t\t\t\tif (!CSS.Hooks.templates.hasOwnProperty(rootProperty)) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\thookTemplate = CSS.Hooks.templates[rootProperty];\n\t\t\t\t\t\thookNames = hookTemplate[0].split(\" \");\n\n\t\t\t\t\t\tfor (var j in hookNames) {\n\t\t\t\t\t\t\tif (!hookNames.hasOwnProperty(j)) {\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvar fullHookName = rootProperty + hookNames[j],\n\t\t\t\t\t\t\t\t\thookPosition = j;\n\n\t\t\t\t\t\t\t/* For each hook, register its full name (e.g. textShadowBlur) with its root property (e.g. textShadow)\n\t\t\t\t\t\t\t and the hook's position in its template's default value string. */\n\t\t\t\t\t\t\tCSS.Hooks.registered[fullHookName] = [rootProperty, hookPosition];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t/*****************************\n\t\t\t\t Injection and Extraction\n\t\t\t\t *****************************/\n\n\t\t\t\t/* Look up the root property associated with the hook (e.g. return \"textShadow\" for \"textShadowBlur\"). */\n\t\t\t\t/* Since a hook cannot be set directly (the browser won't recognize it), style updating for hooks is routed through the hook's root property. */\n\t\t\t\tgetRoot: function(property) {\n\t\t\t\t\tvar hookData = CSS.Hooks.registered[property];\n\n\t\t\t\t\tif (hookData) {\n\t\t\t\t\t\treturn hookData[0];\n\t\t\t\t\t} else {\n\t\t\t\t\t\t/* If there was no hook match, return the property name untouched. */\n\t\t\t\t\t\treturn property;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t/* Convert any rootPropertyValue, null or otherwise, into a space-delimited list of hook values so that\n\t\t\t\t the targeted hook can be injected or extracted at its standard position. */\n\t\t\t\tcleanRootPropertyValue: function(rootProperty, rootPropertyValue) {\n\t\t\t\t\t/* If the rootPropertyValue is wrapped with \"rgb()\", \"clip()\", etc., remove the wrapping to normalize the value before manipulation. */\n\t\t\t\t\tif (CSS.RegEx.valueUnwrap.test(rootPropertyValue)) {\n\t\t\t\t\t\trootPropertyValue = rootPropertyValue.match(CSS.RegEx.valueUnwrap)[1];\n\t\t\t\t\t}\n\n\t\t\t\t\t/* If rootPropertyValue is a CSS null-value (from which there's inherently no hook value to extract),\n\t\t\t\t\t default to the root's default value as defined in CSS.Hooks.templates. */\n\t\t\t\t\t/* Note: CSS null-values include \"none\", \"auto\", and \"transparent\". They must be converted into their\n\t\t\t\t\t zero-values (e.g. textShadow: \"none\" ==> textShadow: \"0px 0px 0px black\") for hook manipulation to proceed. */\n\t\t\t\t\tif (CSS.Values.isCSSNullValue(rootPropertyValue)) {\n\t\t\t\t\t\trootPropertyValue = CSS.Hooks.templates[rootProperty][1];\n\t\t\t\t\t}\n\n\t\t\t\t\treturn rootPropertyValue;\n\t\t\t\t},\n\t\t\t\t/* Extracted the hook's value from its root property's value. This is used to get the starting value of an animating hook. */\n\t\t\t\textractValue: function(fullHookName, rootPropertyValue) {\n\t\t\t\t\tvar hookData = CSS.Hooks.registered[fullHookName];\n\n\t\t\t\t\tif (hookData) {\n\t\t\t\t\t\tvar hookRoot = hookData[0],\n\t\t\t\t\t\t\t\thookPosition = hookData[1];\n\n\t\t\t\t\t\trootPropertyValue = CSS.Hooks.cleanRootPropertyValue(hookRoot, rootPropertyValue);\n\n\t\t\t\t\t\t/* Split rootPropertyValue into its constituent hook values then grab the desired hook at its standard position. */\n\t\t\t\t\t\treturn rootPropertyValue.toString().match(CSS.RegEx.valueSplit)[hookPosition];\n\t\t\t\t\t} else {\n\t\t\t\t\t\t/* If the provided fullHookName isn't a registered hook, return the rootPropertyValue that was passed in. */\n\t\t\t\t\t\treturn rootPropertyValue;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t/* Inject the hook's value into its root property's value. This is used to piece back together the root property\n\t\t\t\t once Velocity has updated one of its individually hooked values through tweening. */\n\t\t\t\tinjectValue: function(fullHookName, hookValue, rootPropertyValue) {\n\t\t\t\t\tvar hookData = CSS.Hooks.registered[fullHookName];\n\n\t\t\t\t\tif (hookData) {\n\t\t\t\t\t\tvar hookRoot = hookData[0],\n\t\t\t\t\t\t\t\thookPosition = hookData[1],\n\t\t\t\t\t\t\t\trootPropertyValueParts,\n\t\t\t\t\t\t\t\trootPropertyValueUpdated;\n\n\t\t\t\t\t\trootPropertyValue = CSS.Hooks.cleanRootPropertyValue(hookRoot, rootPropertyValue);\n\n\t\t\t\t\t\t/* Split rootPropertyValue into its individual hook values, replace the targeted value with hookValue,\n\t\t\t\t\t\t then reconstruct the rootPropertyValue string. */\n\t\t\t\t\t\trootPropertyValueParts = rootPropertyValue.toString().match(CSS.RegEx.valueSplit);\n\t\t\t\t\t\trootPropertyValueParts[hookPosition] = hookValue;\n\t\t\t\t\t\trootPropertyValueUpdated = rootPropertyValueParts.join(\" \");\n\n\t\t\t\t\t\treturn rootPropertyValueUpdated;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t/* If the provided fullHookName isn't a registered hook, return the rootPropertyValue that was passed in. */\n\t\t\t\t\t\treturn rootPropertyValue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t/*******************\n\t\t\t Normalizations\n\t\t\t *******************/\n\n\t\t\t/* Normalizations standardize CSS property manipulation by pollyfilling browser-specific implementations (e.g. opacity)\n\t\t\t and reformatting special properties (e.g. clip, rgba) to look like standard ones. */\n\t\t\tNormalizations: {\n\t\t\t\t/* Normalizations are passed a normalization target (either the property's name, its extracted value, or its injected value),\n\t\t\t\t the targeted element (which may need to be queried), and the targeted property value. */\n\t\t\t\tregistered: {\n\t\t\t\t\tclip: function(type, element, propertyValue) {\n\t\t\t\t\t\tswitch (type) {\n\t\t\t\t\t\t\tcase \"name\":\n\t\t\t\t\t\t\t\treturn \"clip\";\n\t\t\t\t\t\t\t\t/* Clip needs to be unwrapped and stripped of its commas during extraction. */\n\t\t\t\t\t\t\tcase \"extract\":\n\t\t\t\t\t\t\t\tvar extracted;\n\n\t\t\t\t\t\t\t\t/* If Velocity also extracted this value, skip extraction. */\n\t\t\t\t\t\t\t\tif (CSS.RegEx.wrappedValueAlreadyExtracted.test(propertyValue)) {\n\t\t\t\t\t\t\t\t\textracted = propertyValue;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t/* Remove the \"rect()\" wrapper. */\n\t\t\t\t\t\t\t\t\textracted = propertyValue.toString().match(CSS.RegEx.valueUnwrap);\n\n\t\t\t\t\t\t\t\t\t/* Strip off commas. */\n\t\t\t\t\t\t\t\t\textracted = extracted ? extracted[1].replace(/,(\\s+)?/g, \" \") : propertyValue;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\treturn extracted;\n\t\t\t\t\t\t\t\t/* Clip needs to be re-wrapped during injection. */\n\t\t\t\t\t\t\tcase \"inject\":\n\t\t\t\t\t\t\t\treturn \"rect(\" + propertyValue + \")\";\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tblur: function(type, element, propertyValue) {\n\t\t\t\t\t\tswitch (type) {\n\t\t\t\t\t\t\tcase \"name\":\n\t\t\t\t\t\t\t\treturn Velocity.State.isFirefox ? \"filter\" : \"-webkit-filter\";\n\t\t\t\t\t\t\tcase \"extract\":\n\t\t\t\t\t\t\t\tvar extracted = parseFloat(propertyValue);\n\n\t\t\t\t\t\t\t\t/* If extracted is NaN, meaning the value isn't already extracted. */\n\t\t\t\t\t\t\t\tif (!(extracted || extracted === 0)) {\n\t\t\t\t\t\t\t\t\tvar blurComponent = propertyValue.toString().match(/blur\\(([0-9]+[A-z]+)\\)/i);\n\n\t\t\t\t\t\t\t\t\t/* If the filter string had a blur component, return just the blur value and unit type. */\n\t\t\t\t\t\t\t\t\tif (blurComponent) {\n\t\t\t\t\t\t\t\t\t\textracted = blurComponent[1];\n\t\t\t\t\t\t\t\t\t\t/* If the component doesn't exist, default blur to 0. */\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\textracted = 0;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\treturn extracted;\n\t\t\t\t\t\t\t\t/* Blur needs to be re-wrapped during injection. */\n\t\t\t\t\t\t\tcase \"inject\":\n\t\t\t\t\t\t\t\t/* For the blur effect to be fully de-applied, it needs to be set to \"none\" instead of 0. */\n\t\t\t\t\t\t\t\tif (!parseFloat(propertyValue)) {\n\t\t\t\t\t\t\t\t\treturn \"none\";\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\treturn \"blur(\" + propertyValue + \")\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t/* <=IE8 do not support the standard opacity property. They use filter:alpha(opacity=INT) instead. */\n\t\t\t\t\topacity: function(type, element, propertyValue) {\n\t\t\t\t\t\tif (IE <= 8) {\n\t\t\t\t\t\t\tswitch (type) {\n\t\t\t\t\t\t\t\tcase \"name\":\n\t\t\t\t\t\t\t\t\treturn \"filter\";\n\t\t\t\t\t\t\t\tcase \"extract\":\n\t\t\t\t\t\t\t\t\t/* <=IE8 return a \"filter\" value of \"alpha(opacity=\\d{1,3})\".\n\t\t\t\t\t\t\t\t\t Extract the value and convert it to a decimal value to match the standard CSS opacity property's formatting. */\n\t\t\t\t\t\t\t\t\tvar extracted = propertyValue.toString().match(/alpha\\(opacity=(.*)\\)/i);\n\n\t\t\t\t\t\t\t\t\tif (extracted) {\n\t\t\t\t\t\t\t\t\t\t/* Convert to decimal value. */\n\t\t\t\t\t\t\t\t\t\tpropertyValue = extracted[1] / 100;\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t/* When extracting opacity, default to 1 since a null value means opacity hasn't been set. */\n\t\t\t\t\t\t\t\t\t\tpropertyValue = 1;\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\treturn propertyValue;\n\t\t\t\t\t\t\t\tcase \"inject\":\n\t\t\t\t\t\t\t\t\t/* Opacified elements are required to have their zoom property set to a non-zero value. */\n\t\t\t\t\t\t\t\t\telement.style.zoom = 1;\n\n\t\t\t\t\t\t\t\t\t/* Setting the filter property on elements with certain font property combinations can result in a\n\t\t\t\t\t\t\t\t\t highly unappealing ultra-bolding effect. There's no way to remedy this throughout a tween, but dropping the\n\t\t\t\t\t\t\t\t\t value altogether (when opacity hits 1) at leasts ensures that the glitch is gone post-tweening. */\n\t\t\t\t\t\t\t\t\tif (parseFloat(propertyValue) >= 1) {\n\t\t\t\t\t\t\t\t\t\treturn \"\";\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t/* As per the filter property's spec, convert the decimal value to a whole number and wrap the value. */\n\t\t\t\t\t\t\t\t\t\treturn \"alpha(opacity=\" + parseInt(parseFloat(propertyValue) * 100, 10) + \")\";\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t/* With all other browsers, normalization is not required; return the same values that were passed in. */\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tswitch (type) {\n\t\t\t\t\t\t\t\tcase \"name\":\n\t\t\t\t\t\t\t\t\treturn \"opacity\";\n\t\t\t\t\t\t\t\tcase \"extract\":\n\t\t\t\t\t\t\t\t\treturn propertyValue;\n\t\t\t\t\t\t\t\tcase \"inject\":\n\t\t\t\t\t\t\t\t\treturn propertyValue;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t/*****************************\n\t\t\t\t Batched Registrations\n\t\t\t\t *****************************/\n\n\t\t\t\t/* Note: Batched normalizations extend the CSS.Normalizations.registered object. */\n\t\t\t\tregister: function() {\n\n\t\t\t\t\t/*****************\n\t\t\t\t\t Transforms\n\t\t\t\t\t *****************/\n\n\t\t\t\t\t/* Transforms are the subproperties contained by the CSS \"transform\" property. Transforms must undergo normalization\n\t\t\t\t\t so that they can be referenced in a properties map by their individual names. */\n\t\t\t\t\t/* Note: When transforms are \"set\", they are actually assigned to a per-element transformCache. When all transform\n\t\t\t\t\t setting is complete complete, CSS.flushTransformCache() must be manually called to flush the values to the DOM.\n\t\t\t\t\t Transform setting is batched in this way to improve performance: the transform style only needs to be updated\n\t\t\t\t\t once when multiple transform subproperties are being animated simultaneously. */\n\t\t\t\t\t/* Note: IE9 and Android Gingerbread have support for 2D -- but not 3D -- transforms. Since animating unsupported\n\t\t\t\t\t transform properties results in the browser ignoring the *entire* transform string, we prevent these 3D values\n\t\t\t\t\t from being normalized for these browsers so that tweening skips these properties altogether\n\t\t\t\t\t (since it will ignore them as being unsupported by the browser.) */\n\t\t\t\t\tif ((!IE || IE > 9) && !Velocity.State.isGingerbread) {\n\t\t\t\t\t\t/* Note: Since the standalone CSS \"perspective\" property and the CSS transform \"perspective\" subproperty\n\t\t\t\t\t\t share the same name, the latter is given a unique token within Velocity: \"transformPerspective\". */\n\t\t\t\t\t\tCSS.Lists.transformsBase = CSS.Lists.transformsBase.concat(CSS.Lists.transforms3D);\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (var i = 0; i < CSS.Lists.transformsBase.length; i++) {\n\t\t\t\t\t\t/* Wrap the dynamically generated normalization function in a new scope so that transformName's value is\n\t\t\t\t\t\t paired with its respective function. (Otherwise, all functions would take the final for loop's transformName.) */\n\t\t\t\t\t\t(function() {\n\t\t\t\t\t\t\tvar transformName = CSS.Lists.transformsBase[i];\n\n\t\t\t\t\t\t\tCSS.Normalizations.registered[transformName] = function(type, element, propertyValue) {\n\t\t\t\t\t\t\t\tswitch (type) {\n\t\t\t\t\t\t\t\t\t/* The normalized property name is the parent \"transform\" property -- the property that is actually set in CSS. */\n\t\t\t\t\t\t\t\t\tcase \"name\":\n\t\t\t\t\t\t\t\t\t\treturn \"transform\";\n\t\t\t\t\t\t\t\t\t\t/* Transform values are cached onto a per-element transformCache object. */\n\t\t\t\t\t\t\t\t\tcase \"extract\":\n\t\t\t\t\t\t\t\t\t\t/* If this transform has yet to be assigned a value, return its null value. */\n\t\t\t\t\t\t\t\t\t\tif (Data(element) === undefined || Data(element).transformCache[transformName] === undefined) {\n\t\t\t\t\t\t\t\t\t\t\t/* Scale CSS.Lists.transformsBase default to 1 whereas all other transform properties default to 0. */\n\t\t\t\t\t\t\t\t\t\t\treturn /^scale/i.test(transformName) ? 1 : 0;\n\t\t\t\t\t\t\t\t\t\t\t/* When transform values are set, they are wrapped in parentheses as per the CSS spec.\n\t\t\t\t\t\t\t\t\t\t\t Thus, when extracting their values (for tween calculations), we strip off the parentheses. */\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\treturn Data(element).transformCache[transformName].replace(/[()]/g, \"\");\n\t\t\t\t\t\t\t\t\tcase \"inject\":\n\t\t\t\t\t\t\t\t\t\tvar invalid = false;\n\n\t\t\t\t\t\t\t\t\t\t/* If an individual transform property contains an unsupported unit type, the browser ignores the *entire* transform property.\n\t\t\t\t\t\t\t\t\t\t Thus, protect users from themselves by skipping setting for transform values supplied with invalid unit types. */\n\t\t\t\t\t\t\t\t\t\t/* Switch on the base transform type; ignore the axis by removing the last letter from the transform's name. */\n\t\t\t\t\t\t\t\t\t\tswitch (transformName.substr(0, transformName.length - 1)) {\n\t\t\t\t\t\t\t\t\t\t\t/* Whitelist unit types for each transform. */\n\t\t\t\t\t\t\t\t\t\t\tcase \"translate\":\n\t\t\t\t\t\t\t\t\t\t\t\tinvalid = !/(%|px|em|rem|vw|vh|\\d)$/i.test(propertyValue);\n\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t\t/* Since an axis-free \"scale\" property is supported as well, a little hack is used here to detect it by chopping off its last letter. */\n\t\t\t\t\t\t\t\t\t\t\tcase \"scal\":\n\t\t\t\t\t\t\t\t\t\t\tcase \"scale\":\n\t\t\t\t\t\t\t\t\t\t\t\t/* Chrome on Android has a bug in which scaled elements blur if their initial scale\n\t\t\t\t\t\t\t\t\t\t\t\t value is below 1 (which can happen with forcefeeding). Thus, we detect a yet-unset scale property\n\t\t\t\t\t\t\t\t\t\t\t\t and ensure that its first value is always 1. More info: http://stackoverflow.com/questions/10417890/css3-animations-with-transform-causes-blurred-elements-on-webkit/10417962#10417962 */\n\t\t\t\t\t\t\t\t\t\t\t\tif (Velocity.State.isAndroid && Data(element).transformCache[transformName] === undefined && propertyValue < 1) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tpropertyValue = 1;\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\tinvalid = !/(\\d)$/i.test(propertyValue);\n\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\tcase \"skew\":\n\t\t\t\t\t\t\t\t\t\t\t\tinvalid = !/(deg|\\d)$/i.test(propertyValue);\n\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\tcase \"rotate\":\n\t\t\t\t\t\t\t\t\t\t\t\tinvalid = !/(deg|\\d)$/i.test(propertyValue);\n\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tif (!invalid) {\n\t\t\t\t\t\t\t\t\t\t\t/* As per the CSS spec, wrap the value in parentheses. */\n\t\t\t\t\t\t\t\t\t\t\tData(element).transformCache[transformName] = \"(\" + propertyValue + \")\";\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t/* Although the value is set on the transformCache object, return the newly-updated value for the calling code to process as normal. */\n\t\t\t\t\t\t\t\t\t\treturn Data(element).transformCache[transformName];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t})();\n\t\t\t\t\t}\n\n\t\t\t\t\t/*************\n\t\t\t\t\t Colors\n\t\t\t\t\t *************/\n\n\t\t\t\t\t/* Since Velocity only animates a single numeric value per property, color animation is achieved by hooking the individual RGBA components of CSS color properties.\n\t\t\t\t\t Accordingly, color values must be normalized (e.g. \"#ff0000\", \"red\", and \"rgb(255, 0, 0)\" ==> \"255 0 0 1\") so that their components can be injected/extracted by CSS.Hooks logic. */\n\t\t\t\t\tfor (var j = 0; j < CSS.Lists.colors.length; j++) {\n\t\t\t\t\t\t/* Wrap the dynamically generated normalization function in a new scope so that colorName's value is paired with its respective function.\n\t\t\t\t\t\t (Otherwise, all functions would take the final for loop's colorName.) */\n\t\t\t\t\t\t(function() {\n\t\t\t\t\t\t\tvar colorName = CSS.Lists.colors[j];\n\n\t\t\t\t\t\t\t/* Note: In IE<=8, which support rgb but not rgba, color properties are reverted to rgb by stripping off the alpha component. */\n\t\t\t\t\t\t\tCSS.Normalizations.registered[colorName] = function(type, element, propertyValue) {\n\t\t\t\t\t\t\t\tswitch (type) {\n\t\t\t\t\t\t\t\t\tcase \"name\":\n\t\t\t\t\t\t\t\t\t\treturn colorName;\n\t\t\t\t\t\t\t\t\t\t/* Convert all color values into the rgb format. (Old IE can return hex values and color names instead of rgb/rgba.) */\n\t\t\t\t\t\t\t\t\tcase \"extract\":\n\t\t\t\t\t\t\t\t\t\tvar extracted;\n\n\t\t\t\t\t\t\t\t\t\t/* If the color is already in its hookable form (e.g. \"255 255 255 1\") due to having been previously extracted, skip extraction. */\n\t\t\t\t\t\t\t\t\t\tif (CSS.RegEx.wrappedValueAlreadyExtracted.test(propertyValue)) {\n\t\t\t\t\t\t\t\t\t\t\textracted = propertyValue;\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tvar converted,\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolorNames = {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tblack: \"rgb(0, 0, 0)\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tblue: \"rgb(0, 0, 255)\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tgray: \"rgb(128, 128, 128)\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tgreen: \"rgb(0, 128, 0)\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tred: \"rgb(255, 0, 0)\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twhite: \"rgb(255, 255, 255)\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t\t\t\t\t/* Convert color names to rgb. */\n\t\t\t\t\t\t\t\t\t\t\tif (/^[A-z]+$/i.test(propertyValue)) {\n\t\t\t\t\t\t\t\t\t\t\t\tif (colorNames[propertyValue] !== undefined) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tconverted = colorNames[propertyValue];\n\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t/* If an unmatched color name is provided, default to black. */\n\t\t\t\t\t\t\t\t\t\t\t\t\tconverted = colorNames.black;\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t/* Convert hex values to rgb. */\n\t\t\t\t\t\t\t\t\t\t\t} else if (CSS.RegEx.isHex.test(propertyValue)) {\n\t\t\t\t\t\t\t\t\t\t\t\tconverted = \"rgb(\" + CSS.Values.hexToRgb(propertyValue).join(\" \") + \")\";\n\t\t\t\t\t\t\t\t\t\t\t\t/* If the provided color doesn't match any of the accepted color formats, default to black. */\n\t\t\t\t\t\t\t\t\t\t\t} else if (!(/^rgba?\\(/i.test(propertyValue))) {\n\t\t\t\t\t\t\t\t\t\t\t\tconverted = colorNames.black;\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t/* Remove the surrounding \"rgb/rgba()\" string then replace commas with spaces and strip\n\t\t\t\t\t\t\t\t\t\t\t repeated spaces (in case the value included spaces to begin with). */\n\t\t\t\t\t\t\t\t\t\t\textracted = (converted || propertyValue).toString().match(CSS.RegEx.valueUnwrap)[1].replace(/,(\\s+)?/g, \" \");\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t/* So long as this isn't <=IE8, add a fourth (alpha) component if it's missing and default it to 1 (visible). */\n\t\t\t\t\t\t\t\t\t\tif ((!IE || IE > 8) && extracted.split(\" \").length === 3) {\n\t\t\t\t\t\t\t\t\t\t\textracted += \" 1\";\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\treturn extracted;\n\t\t\t\t\t\t\t\t\tcase \"inject\":\n\t\t\t\t\t\t\t\t\t\t/* If this is IE<=8 and an alpha component exists, strip it off. */\n\t\t\t\t\t\t\t\t\t\tif (IE <= 8) {\n\t\t\t\t\t\t\t\t\t\t\tif (propertyValue.split(\" \").length === 4) {\n\t\t\t\t\t\t\t\t\t\t\t\tpropertyValue = propertyValue.split(/\\s+/).slice(0, 3).join(\" \");\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t/* Otherwise, add a fourth (alpha) component if it's missing and default it to 1 (visible). */\n\t\t\t\t\t\t\t\t\t\t} else if (propertyValue.split(\" \").length === 3) {\n\t\t\t\t\t\t\t\t\t\t\tpropertyValue += \" 1\";\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t/* Re-insert the browser-appropriate wrapper(\"rgb/rgba()\"), insert commas, and strip off decimal units\n\t\t\t\t\t\t\t\t\t\t on all values but the fourth (R, G, and B only accept whole numbers). */\n\t\t\t\t\t\t\t\t\t\treturn (IE <= 8 ? \"rgb\" : \"rgba\") + \"(\" + propertyValue.replace(/\\s+/g, \",\").replace(/\\.(\\d)+(?=,)/g, \"\") + \")\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t})();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t/************************\n\t\t\t CSS Property Names\n\t\t\t ************************/\n\n\t\t\tNames: {\n\t\t\t\t/* Camelcase a property name into its JavaScript notation (e.g. \"background-color\" ==> \"backgroundColor\").\n\t\t\t\t Camelcasing is used to normalize property names between and across calls. */\n\t\t\t\tcamelCase: function(property) {\n\t\t\t\t\treturn property.replace(/-(\\w)/g, function(match, subMatch) {\n\t\t\t\t\t\treturn subMatch.toUpperCase();\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\t/* For SVG elements, some properties (namely, dimensional ones) are GET/SET via the element's HTML attributes (instead of via CSS styles). */\n\t\t\t\tSVGAttribute: function(property) {\n\t\t\t\t\tvar SVGAttributes = \"width|height|x|y|cx|cy|r|rx|ry|x1|x2|y1|y2\";\n\n\t\t\t\t\t/* Certain browsers require an SVG transform to be applied as an attribute. (Otherwise, application via CSS is preferable due to 3D support.) */\n\t\t\t\t\tif (IE || (Velocity.State.isAndroid && !Velocity.State.isChrome)) {\n\t\t\t\t\t\tSVGAttributes += \"|transform\";\n\t\t\t\t\t}\n\n\t\t\t\t\treturn new RegExp(\"^(\" + SVGAttributes + \")$\", \"i\").test(property);\n\t\t\t\t},\n\t\t\t\t/* Determine whether a property should be set with a vendor prefix. */\n\t\t\t\t/* If a prefixed version of the property exists, return it. Otherwise, return the original property name.\n\t\t\t\t If the property is not at all supported by the browser, return a false flag. */\n\t\t\t\tprefixCheck: function(property) {\n\t\t\t\t\t/* If this property has already been checked, return the cached value. */\n\t\t\t\t\tif (Velocity.State.prefixMatches[property]) {\n\t\t\t\t\t\treturn [Velocity.State.prefixMatches[property], true];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar vendors = [\"\", \"Webkit\", \"Moz\", \"ms\", \"O\"];\n\n\t\t\t\t\t\tfor (var i = 0, vendorsLength = vendors.length; i < vendorsLength; i++) {\n\t\t\t\t\t\t\tvar propertyPrefixed;\n\n\t\t\t\t\t\t\tif (i === 0) {\n\t\t\t\t\t\t\t\tpropertyPrefixed = property;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t/* Capitalize the first letter of the property to conform to JavaScript vendor prefix notation (e.g. webkitFilter). */\n\t\t\t\t\t\t\t\tpropertyPrefixed = vendors[i] + property.replace(/^\\w/, function(match) {\n\t\t\t\t\t\t\t\t\treturn match.toUpperCase();\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t/* Check if the browser supports this property as prefixed. */\n\t\t\t\t\t\t\tif (Type.isString(Velocity.State.prefixElement.style[propertyPrefixed])) {\n\t\t\t\t\t\t\t\t/* Cache the match. */\n\t\t\t\t\t\t\t\tVelocity.State.prefixMatches[property] = propertyPrefixed;\n\n\t\t\t\t\t\t\t\treturn [propertyPrefixed, true];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t/* If the browser doesn't support this property in any form, include a false flag so that the caller can decide how to proceed. */\n\t\t\t\t\t\treturn [property, false];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t/************************\n\t\t\t CSS Property Values\n\t\t\t ************************/\n\n\t\t\tValues: {\n\t\t\t\t/* Hex to RGB conversion. Copyright Tim Down: http://stackoverflow.com/questions/5623838/rgb-to-hex-and-hex-to-rgb */\n\t\t\t\thexToRgb: function(hex) {\n\t\t\t\t\tvar shortformRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i,\n\t\t\t\t\t\t\tlongformRegex = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i,\n\t\t\t\t\t\t\trgbParts;\n\n\t\t\t\t\thex = hex.replace(shortformRegex, function(m, r, g, b) {\n\t\t\t\t\t\treturn r + r + g + g + b + b;\n\t\t\t\t\t});\n\n\t\t\t\t\trgbParts = longformRegex.exec(hex);\n\n\t\t\t\t\treturn rgbParts ? [parseInt(rgbParts[1], 16), parseInt(rgbParts[2], 16), parseInt(rgbParts[3], 16)] : [0, 0, 0];\n\t\t\t\t},\n\t\t\t\tisCSSNullValue: function(value) {\n\t\t\t\t\t/* The browser defaults CSS values that have not been set to either 0 or one of several possible null-value strings.\n\t\t\t\t\t Thus, we check for both falsiness and these special strings. */\n\t\t\t\t\t/* Null-value checking is performed to default the special strings to 0 (for the sake of tweening) or their hook\n\t\t\t\t\t templates as defined as CSS.Hooks (for the sake of hook injection/extraction). */\n\t\t\t\t\t/* Note: Chrome returns \"rgba(0, 0, 0, 0)\" for an undefined color whereas IE returns \"transparent\". */\n\t\t\t\t\treturn (!value || /^(none|auto|transparent|(rgba\\(0, ?0, ?0, ?0\\)))$/i.test(value));\n\t\t\t\t},\n\t\t\t\t/* Retrieve a property's default unit type. Used for assigning a unit type when one is not supplied by the user. */\n\t\t\t\tgetUnitType: function(property) {\n\t\t\t\t\tif (/^(rotate|skew)/i.test(property)) {\n\t\t\t\t\t\treturn \"deg\";\n\t\t\t\t\t} else if (/(^(scale|scaleX|scaleY|scaleZ|alpha|flexGrow|flexHeight|zIndex|fontWeight)$)|((opacity|red|green|blue|alpha)$)/i.test(property)) {\n\t\t\t\t\t\t/* The above properties are unitless. */\n\t\t\t\t\t\treturn \"\";\n\t\t\t\t\t} else {\n\t\t\t\t\t\t/* Default to px for all other properties. */\n\t\t\t\t\t\treturn \"px\";\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t/* HTML elements default to an associated display type when they're not set to display:none. */\n\t\t\t\t/* Note: This function is used for correctly setting the non-\"none\" display value in certain Velocity redirects, such as fadeIn/Out. */\n\t\t\t\tgetDisplayType: function(element) {\n\t\t\t\t\tvar tagName = element && element.tagName.toString().toLowerCase();\n\n\t\t\t\t\tif (/^(b|big|i|small|tt|abbr|acronym|cite|code|dfn|em|kbd|strong|samp|var|a|bdo|br|img|map|object|q|script|span|sub|sup|button|input|label|select|textarea)$/i.test(tagName)) {\n\t\t\t\t\t\treturn \"inline\";\n\t\t\t\t\t} else if (/^(li)$/i.test(tagName)) {\n\t\t\t\t\t\treturn \"list-item\";\n\t\t\t\t\t} else if (/^(tr)$/i.test(tagName)) {\n\t\t\t\t\t\treturn \"table-row\";\n\t\t\t\t\t} else if (/^(table)$/i.test(tagName)) {\n\t\t\t\t\t\treturn \"table\";\n\t\t\t\t\t} else if (/^(tbody)$/i.test(tagName)) {\n\t\t\t\t\t\treturn \"table-row-group\";\n\t\t\t\t\t\t/* Default to \"block\" when no match is found. */\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn \"block\";\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t/* The class add/remove functions are used to temporarily apply a \"velocity-animating\" class to elements while they're animating. */\n\t\t\t\taddClass: function(element, className) {\n\t\t\t\t\tif (element.classList) {\n\t\t\t\t\t\telement.classList.add(className);\n\t\t\t\t\t} else {\n\t\t\t\t\t\telement.className += (element.className.length ? \" \" : \"\") + className;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tremoveClass: function(element, className) {\n\t\t\t\t\tif (element.classList) {\n\t\t\t\t\t\telement.classList.remove(className);\n\t\t\t\t\t} else {\n\t\t\t\t\t\telement.className = element.className.toString().replace(new RegExp(\"(^|\\\\s)\" + className.split(\" \").join(\"|\") + \"(\\\\s|$)\", \"gi\"), \" \");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t/****************************\n\t\t\t Style Getting & Setting\n\t\t\t ****************************/\n\n\t\t\t/* The singular getPropertyValue, which routes the logic for all normalizations, hooks, and standard CSS properties. */\n\t\t\tgetPropertyValue: function(element, property, rootPropertyValue, forceStyleLookup) {\n\t\t\t\t/* Get an element's computed property value. */\n\t\t\t\t/* Note: Retrieving the value of a CSS property cannot simply be performed by checking an element's\n\t\t\t\t style attribute (which only reflects user-defined values). Instead, the browser must be queried for a property's\n\t\t\t\t *computed* value. You can read more about getComputedStyle here: https://developer.mozilla.org/en/docs/Web/API/window.getComputedStyle */\n\t\t\t\tfunction computePropertyValue(element, property) {\n\t\t\t\t\t/* When box-sizing isn't set to border-box, height and width style values are incorrectly computed when an\n\t\t\t\t\t element's scrollbars are visible (which expands the element's dimensions). Thus, we defer to the more accurate\n\t\t\t\t\t offsetHeight/Width property, which includes the total dimensions for interior, border, padding, and scrollbar.\n\t\t\t\t\t We subtract border and padding to get the sum of interior + scrollbar. */\n\t\t\t\t\tvar computedValue = 0;\n\n\t\t\t\t\t/* IE<=8 doesn't support window.getComputedStyle, thus we defer to jQuery, which has an extensive array\n\t\t\t\t\t of hacks to accurately retrieve IE8 property values. Re-implementing that logic here is not worth bloating the\n\t\t\t\t\t codebase for a dying browser. The performance repercussions of using jQuery here are minimal since\n\t\t\t\t\t Velocity is optimized to rarely (and sometimes never) query the DOM. Further, the $.css() codepath isn't that slow. */\n\t\t\t\t\tif (IE <= 8) {\n\t\t\t\t\t\tcomputedValue = $.css(element, property); /* GET */\n\t\t\t\t\t\t/* All other browsers support getComputedStyle. The returned live object reference is cached onto its\n\t\t\t\t\t\t associated element so that it does not need to be refetched upon every GET. */\n\t\t\t\t\t} else {\n\t\t\t\t\t\t/* Browsers do not return height and width values for elements that are set to display:\"none\". Thus, we temporarily\n\t\t\t\t\t\t toggle display to the element type's default value. */\n\t\t\t\t\t\tvar toggleDisplay = false;\n\n\t\t\t\t\t\tif (/^(width|height)$/.test(property) && CSS.getPropertyValue(element, \"display\") === 0) {\n\t\t\t\t\t\t\ttoggleDisplay = true;\n\t\t\t\t\t\t\tCSS.setPropertyValue(element, \"display\", CSS.Values.getDisplayType(element));\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar revertDisplay = function() {\n\t\t\t\t\t\t\tif (toggleDisplay) {\n\t\t\t\t\t\t\t\tCSS.setPropertyValue(element, \"display\", \"none\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tif (!forceStyleLookup) {\n\t\t\t\t\t\t\tif (property === \"height\" && CSS.getPropertyValue(element, \"boxSizing\").toString().toLowerCase() !== \"border-box\") {\n\t\t\t\t\t\t\t\tvar contentBoxHeight = element.offsetHeight - (parseFloat(CSS.getPropertyValue(element, \"borderTopWidth\")) || 0) - (parseFloat(CSS.getPropertyValue(element, \"borderBottomWidth\")) || 0) - (parseFloat(CSS.getPropertyValue(element, \"paddingTop\")) || 0) - (parseFloat(CSS.getPropertyValue(element, \"paddingBottom\")) || 0);\n\t\t\t\t\t\t\t\trevertDisplay();\n\n\t\t\t\t\t\t\t\treturn contentBoxHeight;\n\t\t\t\t\t\t\t} else if (property === \"width\" && CSS.getPropertyValue(element, \"boxSizing\").toString().toLowerCase() !== \"border-box\") {\n\t\t\t\t\t\t\t\tvar contentBoxWidth = element.offsetWidth - (parseFloat(CSS.getPropertyValue(element, \"borderLeftWidth\")) || 0) - (parseFloat(CSS.getPropertyValue(element, \"borderRightWidth\")) || 0) - (parseFloat(CSS.getPropertyValue(element, \"paddingLeft\")) || 0) - (parseFloat(CSS.getPropertyValue(element, \"paddingRight\")) || 0);\n\t\t\t\t\t\t\t\trevertDisplay();\n\n\t\t\t\t\t\t\t\treturn contentBoxWidth;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar computedStyle;\n\n\t\t\t\t\t\t/* For elements that Velocity hasn't been called on directly (e.g. when Velocity queries the DOM on behalf\n\t\t\t\t\t\t of a parent of an element its animating), perform a direct getComputedStyle lookup since the object isn't cached. */\n\t\t\t\t\t\tif (Data(element) === undefined) {\n\t\t\t\t\t\t\tcomputedStyle = window.getComputedStyle(element, null); /* GET */\n\t\t\t\t\t\t\t/* If the computedStyle object has yet to be cached, do so now. */\n\t\t\t\t\t\t} else if (!Data(element).computedStyle) {\n\t\t\t\t\t\t\tcomputedStyle = Data(element).computedStyle = window.getComputedStyle(element, null); /* GET */\n\t\t\t\t\t\t\t/* If computedStyle is cached, use it. */\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcomputedStyle = Data(element).computedStyle;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t/* IE and Firefox do not return a value for the generic borderColor -- they only return individual values for each border side's color.\n\t\t\t\t\t\t Also, in all browsers, when border colors aren't all the same, a compound value is returned that Velocity isn't setup to parse.\n\t\t\t\t\t\t So, as a polyfill for querying individual border side colors, we just return the top border's color and animate all borders from that value. */\n\t\t\t\t\t\tif (property === \"borderColor\") {\n\t\t\t\t\t\t\tproperty = \"borderTopColor\";\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t/* IE9 has a bug in which the \"filter\" property must be accessed from computedStyle using the getPropertyValue method\n\t\t\t\t\t\t instead of a direct property lookup. The getPropertyValue method is slower than a direct lookup, which is why we avoid it by default. */\n\t\t\t\t\t\tif (IE === 9 && property === \"filter\") {\n\t\t\t\t\t\t\tcomputedValue = computedStyle.getPropertyValue(property); /* GET */\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcomputedValue = computedStyle[property];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t/* Fall back to the property's style value (if defined) when computedValue returns nothing,\n\t\t\t\t\t\t which can happen when the element hasn't been painted. */\n\t\t\t\t\t\tif (computedValue === \"\" || computedValue === null) {\n\t\t\t\t\t\t\tcomputedValue = element.style[property];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\trevertDisplay();\n\t\t\t\t\t}\n\n\t\t\t\t\t/* For top, right, bottom, and left (TRBL) values that are set to \"auto\" on elements of \"fixed\" or \"absolute\" position,\n\t\t\t\t\t defer to jQuery for converting \"auto\" to a numeric value. (For elements with a \"static\" or \"relative\" position, \"auto\" has the same\n\t\t\t\t\t effect as being set to 0, so no conversion is necessary.) */\n\t\t\t\t\t/* An example of why numeric conversion is necessary: When an element with \"position:absolute\" has an untouched \"left\"\n\t\t\t\t\t property, which reverts to \"auto\", left's value is 0 relative to its parent element, but is often non-zero relative\n\t\t\t\t\t to its *containing* (not parent) element, which is the nearest \"position:relative\" ancestor or the viewport (and always the viewport in the case of \"position:fixed\"). */\n\t\t\t\t\tif (computedValue === \"auto\" && /^(top|right|bottom|left)$/i.test(property)) {\n\t\t\t\t\t\tvar position = computePropertyValue(element, \"position\"); /* GET */\n\n\t\t\t\t\t\t/* For absolute positioning, jQuery's $.position() only returns values for top and left;\n\t\t\t\t\t\t right and bottom will have their \"auto\" value reverted to 0. */\n\t\t\t\t\t\t/* Note: A jQuery object must be created here since jQuery doesn't have a low-level alias for $.position().\n\t\t\t\t\t\t Not a big deal since we're currently in a GET batch anyway. */\n\t\t\t\t\t\tif (position === \"fixed\" || (position === \"absolute\" && /top|left/i.test(property))) {\n\t\t\t\t\t\t\t/* Note: jQuery strips the pixel unit from its returned values; we re-add it here to conform with computePropertyValue's behavior. */\n\t\t\t\t\t\t\tcomputedValue = $(element).position()[property] + \"px\"; /* GET */\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn computedValue;\n\t\t\t\t}\n\n\t\t\t\tvar propertyValue;\n\n\t\t\t\t/* If this is a hooked property (e.g. \"clipLeft\" instead of the root property of \"clip\"),\n\t\t\t\t extract the hook's value from a normalized rootPropertyValue using CSS.Hooks.extractValue(). */\n\t\t\t\tif (CSS.Hooks.registered[property]) {\n\t\t\t\t\tvar hook = property,\n\t\t\t\t\t\t\thookRoot = CSS.Hooks.getRoot(hook);\n\n\t\t\t\t\t/* If a cached rootPropertyValue wasn't passed in (which Velocity always attempts to do in order to avoid requerying the DOM),\n\t\t\t\t\t query the DOM for the root property's value. */\n\t\t\t\t\tif (rootPropertyValue === undefined) {\n\t\t\t\t\t\t/* Since the browser is now being directly queried, use the official post-prefixing property name for this lookup. */\n\t\t\t\t\t\trootPropertyValue = CSS.getPropertyValue(element, CSS.Names.prefixCheck(hookRoot)[0]); /* GET */\n\t\t\t\t\t}\n\n\t\t\t\t\t/* If this root has a normalization registered, peform the associated normalization extraction. */\n\t\t\t\t\tif (CSS.Normalizations.registered[hookRoot]) {\n\t\t\t\t\t\trootPropertyValue = CSS.Normalizations.registered[hookRoot](\"extract\", element, rootPropertyValue);\n\t\t\t\t\t}\n\n\t\t\t\t\t/* Extract the hook's value. */\n\t\t\t\t\tpropertyValue = CSS.Hooks.extractValue(hook, rootPropertyValue);\n\n\t\t\t\t\t/* If this is a normalized property (e.g. \"opacity\" becomes \"filter\" in <=IE8) or \"translateX\" becomes \"transform\"),\n\t\t\t\t\t normalize the property's name and value, and handle the special case of transforms. */\n\t\t\t\t\t/* Note: Normalizing a property is mutually exclusive from hooking a property since hook-extracted values are strictly\n\t\t\t\t\t numerical and therefore do not require normalization extraction. */\n\t\t\t\t} else if (CSS.Normalizations.registered[property]) {\n\t\t\t\t\tvar normalizedPropertyName,\n\t\t\t\t\t\t\tnormalizedPropertyValue;\n\n\t\t\t\t\tnormalizedPropertyName = CSS.Normalizations.registered[property](\"name\", element);\n\n\t\t\t\t\t/* Transform values are calculated via normalization extraction (see below), which checks against the element's transformCache.\n\t\t\t\t\t At no point do transform GETs ever actually query the DOM; initial stylesheet values are never processed.\n\t\t\t\t\t This is because parsing 3D transform matrices is not always accurate and would bloat our codebase;\n\t\t\t\t\t thus, normalization extraction defaults initial transform values to their zero-values (e.g. 1 for scaleX and 0 for translateX). */\n\t\t\t\t\tif (normalizedPropertyName !== \"transform\") {\n\t\t\t\t\t\tnormalizedPropertyValue = computePropertyValue(element, CSS.Names.prefixCheck(normalizedPropertyName)[0]); /* GET */\n\n\t\t\t\t\t\t/* If the value is a CSS null-value and this property has a hook template, use that zero-value template so that hooks can be extracted from it. */\n\t\t\t\t\t\tif (CSS.Values.isCSSNullValue(normalizedPropertyValue) && CSS.Hooks.templates[property]) {\n\t\t\t\t\t\t\tnormalizedPropertyValue = CSS.Hooks.templates[property][1];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tpropertyValue = CSS.Normalizations.registered[property](\"extract\", element, normalizedPropertyValue);\n\t\t\t\t}\n\n\t\t\t\t/* If a (numeric) value wasn't produced via hook extraction or normalization, query the DOM. */\n\t\t\t\tif (!/^[\\d-]/.test(propertyValue)) {\n\t\t\t\t\t/* For SVG elements, dimensional properties (which SVGAttribute() detects) are tweened via\n\t\t\t\t\t their HTML attribute values instead of their CSS style values. */\n\t\t\t\t\tvar data = Data(element);\n\n\t\t\t\t\tif (data && data.isSVG && CSS.Names.SVGAttribute(property)) {\n\t\t\t\t\t\t/* Since the height/width attribute values must be set manually, they don't reflect computed values.\n\t\t\t\t\t\t Thus, we use use getBBox() to ensure we always get values for elements with undefined height/width attributes. */\n\t\t\t\t\t\tif (/^(height|width)$/i.test(property)) {\n\t\t\t\t\t\t\t/* Firefox throws an error if .getBBox() is called on an SVG that isn't attached to the DOM. */\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tpropertyValue = element.getBBox()[property];\n\t\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\t\tpropertyValue = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t/* Otherwise, access the attribute value directly. */\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpropertyValue = element.getAttribute(property);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpropertyValue = computePropertyValue(element, CSS.Names.prefixCheck(property)[0]); /* GET */\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/* Since property lookups are for animation purposes (which entails computing the numeric delta between start and end values),\n\t\t\t\t convert CSS null-values to an integer of value 0. */\n\t\t\t\tif (CSS.Values.isCSSNullValue(propertyValue)) {\n\t\t\t\t\tpropertyValue = 0;\n\t\t\t\t}\n\n\t\t\t\tif (Velocity.debug >= 2) {\n\t\t\t\t\tconsole.log(\"Get \" + property + \": \" + propertyValue);\n\t\t\t\t}\n\n\t\t\t\treturn propertyValue;\n\t\t\t},\n\t\t\t/* The singular setPropertyValue, which routes the logic for all normalizations, hooks, and standard CSS properties. */\n\t\t\tsetPropertyValue: function(element, property, propertyValue, rootPropertyValue, scrollData) {\n\t\t\t\tvar propertyName = property;\n\n\t\t\t\t/* In order to be subjected to call options and element queueing, scroll animation is routed through Velocity as if it were a standard CSS property. */\n\t\t\t\tif (property === \"scroll\") {\n\t\t\t\t\t/* If a container option is present, scroll the container instead of the browser window. */\n\t\t\t\t\tif (scrollData.container) {\n\t\t\t\t\t\tscrollData.container[\"scroll\" + scrollData.direction] = propertyValue;\n\t\t\t\t\t\t/* Otherwise, Velocity defaults to scrolling the browser window. */\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (scrollData.direction === \"Left\") {\n\t\t\t\t\t\t\twindow.scrollTo(propertyValue, scrollData.alternateValue);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\twindow.scrollTo(scrollData.alternateValue, propertyValue);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t/* Transforms (translateX, rotateZ, etc.) are applied to a per-element transformCache object, which is manually flushed via flushTransformCache().\n\t\t\t\t\t Thus, for now, we merely cache transforms being SET. */\n\t\t\t\t\tif (CSS.Normalizations.registered[property] && CSS.Normalizations.registered[property](\"name\", element) === \"transform\") {\n\t\t\t\t\t\t/* Perform a normalization injection. */\n\t\t\t\t\t\t/* Note: The normalization logic handles the transformCache updating. */\n\t\t\t\t\t\tCSS.Normalizations.registered[property](\"inject\", element, propertyValue);\n\n\t\t\t\t\t\tpropertyName = \"transform\";\n\t\t\t\t\t\tpropertyValue = Data(element).transformCache[property];\n\t\t\t\t\t} else {\n\t\t\t\t\t\t/* Inject hooks. */\n\t\t\t\t\t\tif (CSS.Hooks.registered[property]) {\n\t\t\t\t\t\t\tvar hookName = property,\n\t\t\t\t\t\t\t\t\thookRoot = CSS.Hooks.getRoot(property);\n\n\t\t\t\t\t\t\t/* If a cached rootPropertyValue was not provided, query the DOM for the hookRoot's current value. */\n\t\t\t\t\t\t\trootPropertyValue = rootPropertyValue || CSS.getPropertyValue(element, hookRoot); /* GET */\n\n\t\t\t\t\t\t\tpropertyValue = CSS.Hooks.injectValue(hookName, propertyValue, rootPropertyValue);\n\t\t\t\t\t\t\tproperty = hookRoot;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t/* Normalize names and values. */\n\t\t\t\t\t\tif (CSS.Normalizations.registered[property]) {\n\t\t\t\t\t\t\tpropertyValue = CSS.Normalizations.registered[property](\"inject\", element, propertyValue);\n\t\t\t\t\t\t\tproperty = CSS.Normalizations.registered[property](\"name\", element);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t/* Assign the appropriate vendor prefix before performing an official style update. */\n\t\t\t\t\t\tpropertyName = CSS.Names.prefixCheck(property)[0];\n\n\t\t\t\t\t\t/* A try/catch is used for IE<=8, which throws an error when \"invalid\" CSS values are set, e.g. a negative width.\n\t\t\t\t\t\t Try/catch is avoided for other browsers since it incurs a performance overhead. */\n\t\t\t\t\t\tif (IE <= 8) {\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\telement.style[propertyName] = propertyValue;\n\t\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\t\tif (Velocity.debug) {\n\t\t\t\t\t\t\t\t\tconsole.log(\"Browser does not support [\" + propertyValue + \"] for [\" + propertyName + \"]\");\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t/* SVG elements have their dimensional properties (width, height, x, y, cx, etc.) applied directly as attributes instead of as styles. */\n\t\t\t\t\t\t\t/* Note: IE8 does not support SVG elements, so it's okay that we skip it for SVG animation. */\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar data = Data(element);\n\n\t\t\t\t\t\t\tif (data && data.isSVG && CSS.Names.SVGAttribute(property)) {\n\t\t\t\t\t\t\t\t/* Note: For SVG attributes, vendor-prefixed property names are never used. */\n\t\t\t\t\t\t\t\t/* Note: Not all CSS properties can be animated via attributes, but the browser won't throw an error for unsupported properties. */\n\t\t\t\t\t\t\t\telement.setAttribute(property, propertyValue);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\telement.style[propertyName] = propertyValue;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (Velocity.debug >= 2) {\n\t\t\t\t\t\t\tconsole.log(\"Set \" + property + \" (\" + propertyName + \"): \" + propertyValue);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/* Return the normalized property name and value in case the caller wants to know how these values were modified before being applied to the DOM. */\n\t\t\t\treturn [propertyName, propertyValue];\n\t\t\t},\n\t\t\t/* To increase performance by batching transform updates into a single SET, transforms are not directly applied to an element until flushTransformCache() is called. */\n\t\t\t/* Note: Velocity applies transform properties in the same order that they are chronogically introduced to the element's CSS styles. */\n\t\t\tflushTransformCache: function(element) {\n\t\t\t\tvar transformString = \"\",\n\t\t\t\t\t\tdata = Data(element);\n\n\t\t\t\t/* Certain browsers require that SVG transforms be applied as an attribute. However, the SVG transform attribute takes a modified version of CSS's transform string\n\t\t\t\t (units are dropped and, except for skewX/Y, subproperties are merged into their master property -- e.g. scaleX and scaleY are merged into scale(X Y). */\n\t\t\t\tif ((IE || (Velocity.State.isAndroid && !Velocity.State.isChrome)) && data && data.isSVG) {\n\t\t\t\t\t/* Since transform values are stored in their parentheses-wrapped form, we use a helper function to strip out their numeric values.\n\t\t\t\t\t Further, SVG transform properties only take unitless (representing pixels) values, so it's okay that parseFloat() strips the unit suffixed to the float value. */\n\t\t\t\t\tvar getTransformFloat = function(transformProperty) {\n\t\t\t\t\t\treturn parseFloat(CSS.getPropertyValue(element, transformProperty));\n\t\t\t\t\t};\n\n\t\t\t\t\t/* Create an object to organize all the transforms that we'll apply to the SVG element. To keep the logic simple,\n\t\t\t\t\t we process *all* transform properties -- even those that may not be explicitly applied (since they default to their zero-values anyway). */\n\t\t\t\t\tvar SVGTransforms = {\n\t\t\t\t\t\ttranslate: [getTransformFloat(\"translateX\"), getTransformFloat(\"translateY\")],\n\t\t\t\t\t\tskewX: [getTransformFloat(\"skewX\")], skewY: [getTransformFloat(\"skewY\")],\n\t\t\t\t\t\t/* If the scale property is set (non-1), use that value for the scaleX and scaleY values\n\t\t\t\t\t\t (this behavior mimics the result of animating all these properties at once on HTML elements). */\n\t\t\t\t\t\tscale: getTransformFloat(\"scale\") !== 1 ? [getTransformFloat(\"scale\"), getTransformFloat(\"scale\")] : [getTransformFloat(\"scaleX\"), getTransformFloat(\"scaleY\")],\n\t\t\t\t\t\t/* Note: SVG's rotate transform takes three values: rotation degrees followed by the X and Y values\n\t\t\t\t\t\t defining the rotation's origin point. We ignore the origin values (default them to 0). */\n\t\t\t\t\t\trotate: [getTransformFloat(\"rotateZ\"), 0, 0]\n\t\t\t\t\t};\n\n\t\t\t\t\t/* Iterate through the transform properties in the user-defined property map order.\n\t\t\t\t\t (This mimics the behavior of non-SVG transform animation.) */\n\t\t\t\t\t$.each(Data(element).transformCache, function(transformName) {\n\t\t\t\t\t\t/* Except for with skewX/Y, revert the axis-specific transform subproperties to their axis-free master\n\t\t\t\t\t\t properties so that they match up with SVG's accepted transform properties. */\n\t\t\t\t\t\tif (/^translate/i.test(transformName)) {\n\t\t\t\t\t\t\ttransformName = \"translate\";\n\t\t\t\t\t\t} else if (/^scale/i.test(transformName)) {\n\t\t\t\t\t\t\ttransformName = \"scale\";\n\t\t\t\t\t\t} else if (/^rotate/i.test(transformName)) {\n\t\t\t\t\t\t\ttransformName = \"rotate\";\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t/* Check that we haven't yet deleted the property from the SVGTransforms container. */\n\t\t\t\t\t\tif (SVGTransforms[transformName]) {\n\t\t\t\t\t\t\t/* Append the transform property in the SVG-supported transform format. As per the spec, surround the space-delimited values in parentheses. */\n\t\t\t\t\t\t\ttransformString += transformName + \"(\" + SVGTransforms[transformName].join(\" \") + \")\" + \" \";\n\n\t\t\t\t\t\t\t/* After processing an SVG transform property, delete it from the SVGTransforms container so we don't\n\t\t\t\t\t\t\t re-insert the same master property if we encounter another one of its axis-specific properties. */\n\t\t\t\t\t\t\tdelete SVGTransforms[transformName];\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tvar transformValue,\n\t\t\t\t\t\t\tperspective;\n\n\t\t\t\t\t/* Transform properties are stored as members of the transformCache object. Concatenate all the members into a string. */\n\t\t\t\t\t$.each(Data(element).transformCache, function(transformName) {\n\t\t\t\t\t\ttransformValue = Data(element).transformCache[transformName];\n\n\t\t\t\t\t\t/* Transform's perspective subproperty must be set first in order to take effect. Store it temporarily. */\n\t\t\t\t\t\tif (transformName === \"transformPerspective\") {\n\t\t\t\t\t\t\tperspective = transformValue;\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t/* IE9 only supports one rotation type, rotateZ, which it refers to as \"rotate\". */\n\t\t\t\t\t\tif (IE === 9 && transformName === \"rotateZ\") {\n\t\t\t\t\t\t\ttransformName = \"rotate\";\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttransformString += transformName + transformValue + \" \";\n\t\t\t\t\t});\n\n\t\t\t\t\t/* If present, set the perspective subproperty first. */\n\t\t\t\t\tif (perspective) {\n\t\t\t\t\t\ttransformString = \"perspective\" + perspective + \" \" + transformString;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tCSS.setPropertyValue(element, \"transform\", transformString);\n\t\t\t}\n\t\t};\n\n\t\t/* Register hooks and normalizations. */\n\t\tCSS.Hooks.register();\n\t\tCSS.Normalizations.register();\n\n\t\t/* Allow hook setting in the same fashion as jQuery's $.css(). */\n\t\tVelocity.hook = function(elements, arg2, arg3) {\n\t\t\tvar value;\n\n\t\t\telements = sanitizeElements(elements);\n\n\t\t\t$.each(elements, function(i, element) {\n\t\t\t\t/* Initialize Velocity's per-element data cache if this element hasn't previously been animated. */\n\t\t\t\tif (Data(element) === undefined) {\n\t\t\t\t\tVelocity.init(element);\n\t\t\t\t}\n\n\t\t\t\t/* Get property value. If an element set was passed in, only return the value for the first element. */\n\t\t\t\tif (arg3 === undefined) {\n\t\t\t\t\tif (value === undefined) {\n\t\t\t\t\t\tvalue = Velocity.CSS.getPropertyValue(element, arg2);\n\t\t\t\t\t}\n\t\t\t\t\t/* Set property value. */\n\t\t\t\t} else {\n\t\t\t\t\t/* sPV returns an array of the normalized propertyName/propertyValue pair used to update the DOM. */\n\t\t\t\t\tvar adjustedSet = Velocity.CSS.setPropertyValue(element, arg2, arg3);\n\n\t\t\t\t\t/* Transform properties don't automatically set. They have to be flushed to the DOM. */\n\t\t\t\t\tif (adjustedSet[0] === \"transform\") {\n\t\t\t\t\t\tVelocity.CSS.flushTransformCache(element);\n\t\t\t\t\t}\n\n\t\t\t\t\tvalue = adjustedSet;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn value;\n\t\t};\n\n\t\t/*****************\n\t\t Animation\n\t\t *****************/\n\n\t\tvar animate = function() {\n\t\t\tvar opts;\n\n\t\t\t/******************\n\t\t\t Call Chain\n\t\t\t ******************/\n\n\t\t\t/* Logic for determining what to return to the call stack when exiting out of Velocity. */\n\t\t\tfunction getChain() {\n\t\t\t\t/* If we are using the utility function, attempt to return this call's promise. If no promise library was detected,\n\t\t\t\t default to null instead of returning the targeted elements so that utility function's return value is standardized. */\n\t\t\t\tif (isUtility) {\n\t\t\t\t\treturn promiseData.promise || null;\n\t\t\t\t\t/* Otherwise, if we're using $.fn, return the jQuery-/Zepto-wrapped element set. */\n\t\t\t\t} else {\n\t\t\t\t\treturn elementsWrapped;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/*************************\n\t\t\t Arguments Assignment\n\t\t\t *************************/\n\n\t\t\t/* To allow for expressive CoffeeScript code, Velocity supports an alternative syntax in which \"elements\" (or \"e\"), \"properties\" (or \"p\"), and \"options\" (or \"o\")\n\t\t\t objects are defined on a container object that's passed in as Velocity's sole argument. */\n\t\t\t/* Note: Some browsers automatically populate arguments with a \"properties\" object. We detect it by checking for its default \"names\" property. */\n\t\t\tvar syntacticSugar = (arguments[0] && (arguments[0].p || (($.isPlainObject(arguments[0].properties) && !arguments[0].properties.names) || Type.isString(arguments[0].properties)))),\n\t\t\t\t\t/* Whether Velocity was called via the utility function (as opposed to on a jQuery/Zepto object). */\n\t\t\t\t\tisUtility,\n\t\t\t\t\t/* When Velocity is called via the utility function ($.Velocity()/Velocity()), elements are explicitly\n\t\t\t\t\t passed in as the first parameter. Thus, argument positioning varies. We normalize them here. */\n\t\t\t\t\telementsWrapped,\n\t\t\t\t\targumentIndex;\n\n\t\t\tvar elements,\n\t\t\t\t\tpropertiesMap,\n\t\t\t\t\toptions;\n\n\t\t\t/* Detect jQuery/Zepto elements being animated via the $.fn method. */\n\t\t\tif (Type.isWrapped(this)) {\n\t\t\t\tisUtility = false;\n\n\t\t\t\targumentIndex = 0;\n\t\t\t\telements = this;\n\t\t\t\telementsWrapped = this;\n\t\t\t\t/* Otherwise, raw elements are being animated via the utility function. */\n\t\t\t} else {\n\t\t\t\tisUtility = true;\n\n\t\t\t\targumentIndex = 1;\n\t\t\t\telements = syntacticSugar ? (arguments[0].elements || arguments[0].e) : arguments[0];\n\t\t\t}\n\n\t\t\telements = sanitizeElements(elements);\n\n\t\t\tif (!elements) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (syntacticSugar) {\n\t\t\t\tpropertiesMap = arguments[0].properties || arguments[0].p;\n\t\t\t\toptions = arguments[0].options || arguments[0].o;\n\t\t\t} else {\n\t\t\t\tpropertiesMap = arguments[argumentIndex];\n\t\t\t\toptions = arguments[argumentIndex + 1];\n\t\t\t}\n\n\t\t\t/* The length of the element set (in the form of a nodeList or an array of elements) is defaulted to 1 in case a\n\t\t\t single raw DOM element is passed in (which doesn't contain a length property). */\n\t\t\tvar elementsLength = elements.length,\n\t\t\t\t\telementsIndex = 0;\n\n\t\t\t/***************************\n\t\t\t Argument Overloading\n\t\t\t ***************************/\n\n\t\t\t/* Support is included for jQuery's argument overloading: $.animate(propertyMap [, duration] [, easing] [, complete]).\n\t\t\t Overloading is detected by checking for the absence of an object being passed into options. */\n\t\t\t/* Note: The stop and finish actions do not accept animation options, and are therefore excluded from this check. */\n\t\t\tif (!/^(stop|finish|finishAll)$/i.test(propertiesMap) && !$.isPlainObject(options)) {\n\t\t\t\t/* The utility function shifts all arguments one position to the right, so we adjust for that offset. */\n\t\t\t\tvar startingArgumentPosition = argumentIndex + 1;\n\n\t\t\t\toptions = {};\n\n\t\t\t\t/* Iterate through all options arguments */\n\t\t\t\tfor (var i = startingArgumentPosition; i < arguments.length; i++) {\n\t\t\t\t\t/* Treat a number as a duration. Parse it out. */\n\t\t\t\t\t/* Note: The following RegEx will return true if passed an array with a number as its first item.\n\t\t\t\t\t Thus, arrays are skipped from this check. */\n\t\t\t\t\tif (!Type.isArray(arguments[i]) && (/^(fast|normal|slow)$/i.test(arguments[i]) || /^\\d/.test(arguments[i]))) {\n\t\t\t\t\t\toptions.duration = arguments[i];\n\t\t\t\t\t\t/* Treat strings and arrays as easings. */\n\t\t\t\t\t} else if (Type.isString(arguments[i]) || Type.isArray(arguments[i])) {\n\t\t\t\t\t\toptions.easing = arguments[i];\n\t\t\t\t\t\t/* Treat a function as a complete callback. */\n\t\t\t\t\t} else if (Type.isFunction(arguments[i])) {\n\t\t\t\t\t\toptions.complete = arguments[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/***************\n\t\t\t Promises\n\t\t\t ***************/\n\n\t\t\tvar promiseData = {\n\t\t\t\tpromise: null,\n\t\t\t\tresolver: null,\n\t\t\t\trejecter: null\n\t\t\t};\n\n\t\t\t/* If this call was made via the utility function (which is the default method of invocation when jQuery/Zepto are not being used), and if\n\t\t\t promise support was detected, create a promise object for this call and store references to its resolver and rejecter methods. The resolve\n\t\t\t method is used when a call completes naturally or is prematurely stopped by the user. In both cases, completeCall() handles the associated\n\t\t\t call cleanup and promise resolving logic. The reject method is used when an invalid set of arguments is passed into a Velocity call. */\n\t\t\t/* Note: Velocity employs a call-based queueing architecture, which means that stopping an animating element actually stops the full call that\n\t\t\t triggered it -- not that one element exclusively. Similarly, there is one promise per call, and all elements targeted by a Velocity call are\n\t\t\t grouped together for the purposes of resolving and rejecting a promise. */\n\t\t\tif (isUtility && Velocity.Promise) {\n\t\t\t\tpromiseData.promise = new Velocity.Promise(function(resolve, reject) {\n\t\t\t\t\tpromiseData.resolver = resolve;\n\t\t\t\t\tpromiseData.rejecter = reject;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t/*********************\n\t\t\t Action Detection\n\t\t\t *********************/\n\n\t\t\t/* Velocity's behavior is categorized into \"actions\": Elements can either be specially scrolled into view,\n\t\t\t or they can be started, stopped, or reversed. If a literal or referenced properties map is passed in as Velocity's\n\t\t\t first argument, the associated action is \"start\". Alternatively, \"scroll\", \"reverse\", or \"stop\" can be passed in instead of a properties map. */\n\t\t\tvar action;\n\n\t\t\tswitch (propertiesMap) {\n\t\t\t\tcase \"scroll\":\n\t\t\t\t\taction = \"scroll\";\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"reverse\":\n\t\t\t\t\taction = \"reverse\";\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"finish\":\n\t\t\t\tcase \"finishAll\":\n\t\t\t\tcase \"stop\":\n\t\t\t\t\t/*******************\n\t\t\t\t\t Action: Stop\n\t\t\t\t\t *******************/\n\n\t\t\t\t\t/* Clear the currently-active delay on each targeted element. */\n\t\t\t\t\t$.each(elements, function(i, element) {\n\t\t\t\t\t\tif (Data(element) && Data(element).delayTimer) {\n\t\t\t\t\t\t\t/* Stop the timer from triggering its cached next() function. */\n\t\t\t\t\t\t\tclearTimeout(Data(element).delayTimer.setTimeout);\n\n\t\t\t\t\t\t\t/* Manually call the next() function so that the subsequent queue items can progress. */\n\t\t\t\t\t\t\tif (Data(element).delayTimer.next) {\n\t\t\t\t\t\t\t\tData(element).delayTimer.next();\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tdelete Data(element).delayTimer;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t/* If we want to finish everything in the queue, we have to iterate through it\n\t\t\t\t\t\t and call each function. This will make them active calls below, which will\n\t\t\t\t\t\t cause them to be applied via the duration setting. */\n\t\t\t\t\t\tif (propertiesMap === \"finishAll\" && (options === true || Type.isString(options))) {\n\t\t\t\t\t\t\t/* Iterate through the items in the element's queue. */\n\t\t\t\t\t\t\t$.each($.queue(element, Type.isString(options) ? options : \"\"), function(_, item) {\n\t\t\t\t\t\t\t\t/* The queue array can contain an \"inprogress\" string, which we skip. */\n\t\t\t\t\t\t\t\tif (Type.isFunction(item)) {\n\t\t\t\t\t\t\t\t\titem();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t/* Clearing the $.queue() array is achieved by resetting it to []. */\n\t\t\t\t\t\t\t$.queue(element, Type.isString(options) ? options : \"\", []);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\tvar callsToStop = [];\n\n\t\t\t\t\t/* When the stop action is triggered, the elements' currently active call is immediately stopped. The active call might have\n\t\t\t\t\t been applied to multiple elements, in which case all of the call's elements will be stopped. When an element\n\t\t\t\t\t is stopped, the next item in its animation queue is immediately triggered. */\n\t\t\t\t\t/* An additional argument may be passed in to clear an element's remaining queued calls. Either true (which defaults to the \"fx\" queue)\n\t\t\t\t\t or a custom queue string can be passed in. */\n\t\t\t\t\t/* Note: The stop command runs prior to Velocity's Queueing phase since its behavior is intended to take effect *immediately*,\n\t\t\t\t\t regardless of the element's current queue state. */\n\n\t\t\t\t\t/* Iterate through every active call. */\n\t\t\t\t\t$.each(Velocity.State.calls, function(i, activeCall) {\n\t\t\t\t\t\t/* Inactive calls are set to false by the logic inside completeCall(). Skip them. */\n\t\t\t\t\t\tif (activeCall) {\n\t\t\t\t\t\t\t/* Iterate through the active call's targeted elements. */\n\t\t\t\t\t\t\t$.each(activeCall[1], function(k, activeElement) {\n\t\t\t\t\t\t\t\t/* If true was passed in as a secondary argument, clear absolutely all calls on this element. Otherwise, only\n\t\t\t\t\t\t\t\t clear calls associated with the relevant queue. */\n\t\t\t\t\t\t\t\t/* Call stopping logic works as follows:\n\t\t\t\t\t\t\t\t - options === true --> stop current default queue calls (and queue:false calls), including remaining queued ones.\n\t\t\t\t\t\t\t\t - options === undefined --> stop current queue:\"\" call and all queue:false calls.\n\t\t\t\t\t\t\t\t - options === false --> stop only queue:false calls.\n\t\t\t\t\t\t\t\t - options === \"custom\" --> stop current queue:\"custom\" call, including remaining queued ones (there is no functionality to only clear the currently-running queue:\"custom\" call). */\n\t\t\t\t\t\t\t\tvar queueName = (options === undefined) ? \"\" : options;\n\n\t\t\t\t\t\t\t\tif (queueName !== true && (activeCall[2].queue !== queueName) && !(options === undefined && activeCall[2].queue === false)) {\n\t\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t/* Iterate through the calls targeted by the stop command. */\n\t\t\t\t\t\t\t\t$.each(elements, function(l, element) {\n\t\t\t\t\t\t\t\t\t/* Check that this call was applied to the target element. */\n\t\t\t\t\t\t\t\t\tif (element === activeElement) {\n\t\t\t\t\t\t\t\t\t\t/* Optionally clear the remaining queued calls. If we're doing \"finishAll\" this won't find anything,\n\t\t\t\t\t\t\t\t\t\t due to the queue-clearing above. */\n\t\t\t\t\t\t\t\t\t\tif (options === true || Type.isString(options)) {\n\t\t\t\t\t\t\t\t\t\t\t/* Iterate through the items in the element's queue. */\n\t\t\t\t\t\t\t\t\t\t\t$.each($.queue(element, Type.isString(options) ? options : \"\"), function(_, item) {\n\t\t\t\t\t\t\t\t\t\t\t\t/* The queue array can contain an \"inprogress\" string, which we skip. */\n\t\t\t\t\t\t\t\t\t\t\t\tif (Type.isFunction(item)) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t/* Pass the item's callback a flag indicating that we want to abort from the queue call.\n\t\t\t\t\t\t\t\t\t\t\t\t\t (Specifically, the queue will resolve the call's associated promise then abort.)  */\n\t\t\t\t\t\t\t\t\t\t\t\t\titem(null, true);\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\t\t\t\t/* Clearing the $.queue() array is achieved by resetting it to []. */\n\t\t\t\t\t\t\t\t\t\t\t$.queue(element, Type.isString(options) ? options : \"\", []);\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tif (propertiesMap === \"stop\") {\n\t\t\t\t\t\t\t\t\t\t\t/* Since \"reverse\" uses cached start values (the previous call's endValues), these values must be\n\t\t\t\t\t\t\t\t\t\t\t changed to reflect the final value that the elements were actually tweened to. */\n\t\t\t\t\t\t\t\t\t\t\t/* Note: If only queue:false animations are currently running on an element, it won't have a tweensContainer\n\t\t\t\t\t\t\t\t\t\t\t object. Also, queue:false animations can't be reversed. */\n\t\t\t\t\t\t\t\t\t\t\tvar data = Data(element);\n\t\t\t\t\t\t\t\t\t\t\tif (data && data.tweensContainer && queueName !== false) {\n\t\t\t\t\t\t\t\t\t\t\t\t$.each(data.tweensContainer, function(m, activeTween) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tactiveTween.endValue = activeTween.currentValue;\n\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\tcallsToStop.push(i);\n\t\t\t\t\t\t\t\t\t\t} else if (propertiesMap === \"finish\" || propertiesMap === \"finishAll\") {\n\t\t\t\t\t\t\t\t\t\t\t/* To get active tweens to finish immediately, we forcefully shorten their durations to 1ms so that\n\t\t\t\t\t\t\t\t\t\t\t they finish upon the next rAf tick then proceed with normal call completion logic. */\n\t\t\t\t\t\t\t\t\t\t\tactiveCall[2].duration = 1;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\t/* Prematurely call completeCall() on each matched active call. Pass an additional flag for \"stop\" to indicate\n\t\t\t\t\t that the complete callback and display:none setting should be skipped since we're completing prematurely. */\n\t\t\t\t\tif (propertiesMap === \"stop\") {\n\t\t\t\t\t\t$.each(callsToStop, function(i, j) {\n\t\t\t\t\t\t\tcompleteCall(j, true);\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tif (promiseData.promise) {\n\t\t\t\t\t\t\t/* Immediately resolve the promise associated with this stop call since stop runs synchronously. */\n\t\t\t\t\t\t\tpromiseData.resolver(elements);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t/* Since we're stopping, and not proceeding with queueing, exit out of Velocity. */\n\t\t\t\t\treturn getChain();\n\n\t\t\t\tdefault:\n\t\t\t\t\t/* Treat a non-empty plain object as a literal properties map. */\n\t\t\t\t\tif ($.isPlainObject(propertiesMap) && !Type.isEmptyObject(propertiesMap)) {\n\t\t\t\t\t\taction = \"start\";\n\n\t\t\t\t\t\t/****************\n\t\t\t\t\t\t Redirects\n\t\t\t\t\t\t ****************/\n\n\t\t\t\t\t\t/* Check if a string matches a registered redirect (see Redirects above). */\n\t\t\t\t\t} else if (Type.isString(propertiesMap) && Velocity.Redirects[propertiesMap]) {\n\t\t\t\t\t\topts = $.extend({}, options);\n\n\t\t\t\t\t\tvar durationOriginal = opts.duration,\n\t\t\t\t\t\t\t\tdelayOriginal = opts.delay || 0;\n\n\t\t\t\t\t\t/* If the backwards option was passed in, reverse the element set so that elements animate from the last to the first. */\n\t\t\t\t\t\tif (opts.backwards === true) {\n\t\t\t\t\t\t\telements = $.extend(true, [], elements).reverse();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t/* Individually trigger the redirect for each element in the set to prevent users from having to handle iteration logic in their redirect. */\n\t\t\t\t\t\t$.each(elements, function(elementIndex, element) {\n\t\t\t\t\t\t\t/* If the stagger option was passed in, successively delay each element by the stagger value (in ms). Retain the original delay value. */\n\t\t\t\t\t\t\tif (parseFloat(opts.stagger)) {\n\t\t\t\t\t\t\t\topts.delay = delayOriginal + (parseFloat(opts.stagger) * elementIndex);\n\t\t\t\t\t\t\t} else if (Type.isFunction(opts.stagger)) {\n\t\t\t\t\t\t\t\topts.delay = delayOriginal + opts.stagger.call(element, elementIndex, elementsLength);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t/* If the drag option was passed in, successively increase/decrease (depending on the presense of opts.backwards)\n\t\t\t\t\t\t\t the duration of each element's animation, using floors to prevent producing very short durations. */\n\t\t\t\t\t\t\tif (opts.drag) {\n\t\t\t\t\t\t\t\t/* Default the duration of UI pack effects (callouts and transitions) to 1000ms instead of the usual default duration of 400ms. */\n\t\t\t\t\t\t\t\topts.duration = parseFloat(durationOriginal) || (/^(callout|transition)/.test(propertiesMap) ? 1000 : DURATION_DEFAULT);\n\n\t\t\t\t\t\t\t\t/* For each element, take the greater duration of: A) animation completion percentage relative to the original duration,\n\t\t\t\t\t\t\t\t B) 75% of the original duration, or C) a 200ms fallback (in case duration is already set to a low value).\n\t\t\t\t\t\t\t\t The end result is a baseline of 75% of the redirect's duration that increases/decreases as the end of the element set is approached. */\n\t\t\t\t\t\t\t\topts.duration = Math.max(opts.duration * (opts.backwards ? 1 - elementIndex / elementsLength : (elementIndex + 1) / elementsLength), opts.duration * 0.75, 200);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t/* Pass in the call's opts object so that the redirect can optionally extend it. It defaults to an empty object instead of null to\n\t\t\t\t\t\t\t reduce the opts checking logic required inside the redirect. */\n\t\t\t\t\t\t\tVelocity.Redirects[propertiesMap].call(element, element, opts || {}, elementIndex, elementsLength, elements, promiseData.promise ? promiseData : undefined);\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\t/* Since the animation logic resides within the redirect's own code, abort the remainder of this call.\n\t\t\t\t\t\t (The performance overhead up to this point is virtually non-existant.) */\n\t\t\t\t\t\t/* Note: The jQuery call chain is kept intact by returning the complete element set. */\n\t\t\t\t\t\treturn getChain();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar abortError = \"Velocity: First argument (\" + propertiesMap + \") was not a property map, a known action, or a registered redirect. Aborting.\";\n\n\t\t\t\t\t\tif (promiseData.promise) {\n\t\t\t\t\t\t\tpromiseData.rejecter(new Error(abortError));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconsole.log(abortError);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn getChain();\n\t\t\t\t\t}\n\t\t\t}\n\n\t\t\t/**************************\n\t\t\t Call-Wide Variables\n\t\t\t **************************/\n\n\t\t\t/* A container for CSS unit conversion ratios (e.g. %, rem, and em ==> px) that is used to cache ratios across all elements\n\t\t\t being animated in a single Velocity call. Calculating unit ratios necessitates DOM querying and updating, and is therefore\n\t\t\t avoided (via caching) wherever possible. This container is call-wide instead of page-wide to avoid the risk of using stale\n\t\t\t conversion metrics across Velocity animations that are not immediately consecutively chained. */\n\t\t\tvar callUnitConversionData = {\n\t\t\t\tlastParent: null,\n\t\t\t\tlastPosition: null,\n\t\t\t\tlastFontSize: null,\n\t\t\t\tlastPercentToPxWidth: null,\n\t\t\t\tlastPercentToPxHeight: null,\n\t\t\t\tlastEmToPx: null,\n\t\t\t\tremToPx: null,\n\t\t\t\tvwToPx: null,\n\t\t\t\tvhToPx: null\n\t\t\t};\n\n\t\t\t/* A container for all the ensuing tween data and metadata associated with this call. This container gets pushed to the page-wide\n\t\t\t Velocity.State.calls array that is processed during animation ticking. */\n\t\t\tvar call = [];\n\n\t\t\t/************************\n\t\t\t Element Processing\n\t\t\t ************************/\n\n\t\t\t/* Element processing consists of three parts -- data processing that cannot go stale and data processing that *can* go stale (i.e. third-party style modifications):\n\t\t\t 1) Pre-Queueing: Element-wide variables, including the element's data storage, are instantiated. Call options are prepared. If triggered, the Stop action is executed.\n\t\t\t 2) Queueing: The logic that runs once this call has reached its point of execution in the element's $.queue() stack. Most logic is placed here to avoid risking it becoming stale.\n\t\t\t 3) Pushing: Consolidation of the tween data followed by its push onto the global in-progress calls container.\n\t\t\t `elementArrayIndex` allows passing index of the element in the original array to value functions.\n\t\t\t If `elementsIndex` were used instead the index would be determined by the elements' per-element queue.\n\t\t\t */\n\t\t\tfunction processElement(element, elementArrayIndex) {\n\n\t\t\t\t/*************************\n\t\t\t\t Part I: Pre-Queueing\n\t\t\t\t *************************/\n\n\t\t\t\t/***************************\n\t\t\t\t Element-Wide Variables\n\t\t\t\t ***************************/\n\n\t\t\t\tvar /* The runtime opts object is the extension of the current call's options and Velocity's page-wide option defaults. */\n\t\t\t\t\t\topts = $.extend({}, Velocity.defaults, options),\n\t\t\t\t\t\t/* A container for the processed data associated with each property in the propertyMap.\n\t\t\t\t\t\t (Each property in the map produces its own \"tween\".) */\n\t\t\t\t\t\ttweensContainer = {},\n\t\t\t\t\t\telementUnitConversionData;\n\n\t\t\t\t/******************\n\t\t\t\t Element Init\n\t\t\t\t ******************/\n\n\t\t\t\tif (Data(element) === undefined) {\n\t\t\t\t\tVelocity.init(element);\n\t\t\t\t}\n\n\t\t\t\t/******************\n\t\t\t\t Option: Delay\n\t\t\t\t ******************/\n\n\t\t\t\t/* Since queue:false doesn't respect the item's existing queue, we avoid injecting its delay here (it's set later on). */\n\t\t\t\t/* Note: Velocity rolls its own delay function since jQuery doesn't have a utility alias for $.fn.delay()\n\t\t\t\t (and thus requires jQuery element creation, which we avoid since its overhead includes DOM querying). */\n\t\t\t\tif (parseFloat(opts.delay) && opts.queue !== false) {\n\t\t\t\t\t$.queue(element, opts.queue, function(next) {\n\t\t\t\t\t\t/* This is a flag used to indicate to the upcoming completeCall() function that this queue entry was initiated by Velocity. See completeCall() for further details. */\n\t\t\t\t\t\tVelocity.velocityQueueEntryFlag = true;\n\n\t\t\t\t\t\t/* The ensuing queue item (which is assigned to the \"next\" argument that $.queue() automatically passes in) will be triggered after a setTimeout delay.\n\t\t\t\t\t\t The setTimeout is stored so that it can be subjected to clearTimeout() if this animation is prematurely stopped via Velocity's \"stop\" command. */\n\t\t\t\t\t\tData(element).delayTimer = {\n\t\t\t\t\t\t\tsetTimeout: setTimeout(next, parseFloat(opts.delay)),\n\t\t\t\t\t\t\tnext: next\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t/*********************\n\t\t\t\t Option: Duration\n\t\t\t\t *********************/\n\n\t\t\t\t/* Support for jQuery's named durations. */\n\t\t\t\tswitch (opts.duration.toString().toLowerCase()) {\n\t\t\t\t\tcase \"fast\":\n\t\t\t\t\t\topts.duration = 200;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase \"normal\":\n\t\t\t\t\t\topts.duration = DURATION_DEFAULT;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase \"slow\":\n\t\t\t\t\t\topts.duration = 600;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\t/* Remove the potential \"ms\" suffix and default to 1 if the user is attempting to set a duration of 0 (in order to produce an immediate style change). */\n\t\t\t\t\t\topts.duration = parseFloat(opts.duration) || 1;\n\t\t\t\t}\n\n\t\t\t\t/************************\n\t\t\t\t Global Option: Mock\n\t\t\t\t ************************/\n\n\t\t\t\tif (Velocity.mock !== false) {\n\t\t\t\t\t/* In mock mode, all animations are forced to 1ms so that they occur immediately upon the next rAF tick.\n\t\t\t\t\t Alternatively, a multiplier can be passed in to time remap all delays and durations. */\n\t\t\t\t\tif (Velocity.mock === true) {\n\t\t\t\t\t\topts.duration = opts.delay = 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\topts.duration *= parseFloat(Velocity.mock) || 1;\n\t\t\t\t\t\topts.delay *= parseFloat(Velocity.mock) || 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/*******************\n\t\t\t\t Option: Easing\n\t\t\t\t *******************/\n\n\t\t\t\topts.easing = getEasing(opts.easing, opts.duration);\n\n\t\t\t\t/**********************\n\t\t\t\t Option: Callbacks\n\t\t\t\t **********************/\n\n\t\t\t\t/* Callbacks must functions. Otherwise, default to null. */\n\t\t\t\tif (opts.begin && !Type.isFunction(opts.begin)) {\n\t\t\t\t\topts.begin = null;\n\t\t\t\t}\n\n\t\t\t\tif (opts.progress && !Type.isFunction(opts.progress)) {\n\t\t\t\t\topts.progress = null;\n\t\t\t\t}\n\n\t\t\t\tif (opts.complete && !Type.isFunction(opts.complete)) {\n\t\t\t\t\topts.complete = null;\n\t\t\t\t}\n\n\t\t\t\t/*********************************\n\t\t\t\t Option: Display & Visibility\n\t\t\t\t *********************************/\n\n\t\t\t\t/* Refer to Velocity's documentation (VelocityJS.org/#displayAndVisibility) for a description of the display and visibility options' behavior. */\n\t\t\t\t/* Note: We strictly check for undefined instead of falsiness because display accepts an empty string value. */\n\t\t\t\tif (opts.display !== undefined && opts.display !== null) {\n\t\t\t\t\topts.display = opts.display.toString().toLowerCase();\n\n\t\t\t\t\t/* Users can pass in a special \"auto\" value to instruct Velocity to set the element to its default display value. */\n\t\t\t\t\tif (opts.display === \"auto\") {\n\t\t\t\t\t\topts.display = Velocity.CSS.Values.getDisplayType(element);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (opts.visibility !== undefined && opts.visibility !== null) {\n\t\t\t\t\topts.visibility = opts.visibility.toString().toLowerCase();\n\t\t\t\t}\n\n\t\t\t\t/**********************\n\t\t\t\t Option: mobileHA\n\t\t\t\t **********************/\n\n\t\t\t\t/* When set to true, and if this is a mobile device, mobileHA automatically enables hardware acceleration (via a null transform hack)\n\t\t\t\t on animating elements. HA is removed from the element at the completion of its animation. */\n\t\t\t\t/* Note: Android Gingerbread doesn't support HA. If a null transform hack (mobileHA) is in fact set, it will prevent other tranform subproperties from taking effect. */\n\t\t\t\t/* Note: You can read more about the use of mobileHA in Velocity's documentation: VelocityJS.org/#mobileHA. */\n\t\t\t\topts.mobileHA = (opts.mobileHA && Velocity.State.isMobile && !Velocity.State.isGingerbread);\n\n\t\t\t\t/***********************\n\t\t\t\t Part II: Queueing\n\t\t\t\t ***********************/\n\n\t\t\t\t/* When a set of elements is targeted by a Velocity call, the set is broken up and each element has the current Velocity call individually queued onto it.\n\t\t\t\t In this way, each element's existing queue is respected; some elements may already be animating and accordingly should not have this current Velocity call triggered immediately. */\n\t\t\t\t/* In each queue, tween data is processed for each animating property then pushed onto the call-wide calls array. When the last element in the set has had its tweens processed,\n\t\t\t\t the call array is pushed to Velocity.State.calls for live processing by the requestAnimationFrame tick. */\n\t\t\t\tfunction buildQueue(next) {\n\t\t\t\t\tvar data, lastTweensContainer;\n\n\t\t\t\t\t/*******************\n\t\t\t\t\t Option: Begin\n\t\t\t\t\t *******************/\n\n\t\t\t\t\t/* The begin callback is fired once per call -- not once per elemenet -- and is passed the full raw DOM element set as both its context and its first argument. */\n\t\t\t\t\tif (opts.begin && elementsIndex === 0) {\n\t\t\t\t\t\t/* We throw callbacks in a setTimeout so that thrown errors don't halt the execution of Velocity itself. */\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\topts.begin.call(elements, elements);\n\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t\t\t\tthrow error;\n\t\t\t\t\t\t\t}, 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t/*****************************************\n\t\t\t\t\t Tween Data Construction (for Scroll)\n\t\t\t\t\t *****************************************/\n\n\t\t\t\t\t/* Note: In order to be subjected to chaining and animation options, scroll's tweening is routed through Velocity as if it were a standard CSS property animation. */\n\t\t\t\t\tif (action === \"scroll\") {\n\t\t\t\t\t\t/* The scroll action uniquely takes an optional \"offset\" option -- specified in pixels -- that offsets the targeted scroll position. */\n\t\t\t\t\t\tvar scrollDirection = (/^x$/i.test(opts.axis) ? \"Left\" : \"Top\"),\n\t\t\t\t\t\t\t\tscrollOffset = parseFloat(opts.offset) || 0,\n\t\t\t\t\t\t\t\tscrollPositionCurrent,\n\t\t\t\t\t\t\t\tscrollPositionCurrentAlternate,\n\t\t\t\t\t\t\t\tscrollPositionEnd;\n\n\t\t\t\t\t\t/* Scroll also uniquely takes an optional \"container\" option, which indicates the parent element that should be scrolled --\n\t\t\t\t\t\t as opposed to the browser window itself. This is useful for scrolling toward an element that's inside an overflowing parent element. */\n\t\t\t\t\t\tif (opts.container) {\n\t\t\t\t\t\t\t/* Ensure that either a jQuery object or a raw DOM element was passed in. */\n\t\t\t\t\t\t\tif (Type.isWrapped(opts.container) || Type.isNode(opts.container)) {\n\t\t\t\t\t\t\t\t/* Extract the raw DOM element from the jQuery wrapper. */\n\t\t\t\t\t\t\t\topts.container = opts.container[0] || opts.container;\n\t\t\t\t\t\t\t\t/* Note: Unlike other properties in Velocity, the browser's scroll position is never cached since it so frequently changes\n\t\t\t\t\t\t\t\t (due to the user's natural interaction with the page). */\n\t\t\t\t\t\t\t\tscrollPositionCurrent = opts.container[\"scroll\" + scrollDirection]; /* GET */\n\n\t\t\t\t\t\t\t\t/* $.position() values are relative to the container's currently viewable area (without taking into account the container's true dimensions\n\t\t\t\t\t\t\t\t -- say, for example, if the container was not overflowing). Thus, the scroll end value is the sum of the child element's position *and*\n\t\t\t\t\t\t\t\t the scroll container's current scroll position. */\n\t\t\t\t\t\t\t\tscrollPositionEnd = (scrollPositionCurrent + $(element).position()[scrollDirection.toLowerCase()]) + scrollOffset; /* GET */\n\t\t\t\t\t\t\t\t/* If a value other than a jQuery object or a raw DOM element was passed in, default to null so that this option is ignored. */\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\topts.container = null;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t/* If the window itself is being scrolled -- not a containing element -- perform a live scroll position lookup using\n\t\t\t\t\t\t\t the appropriate cached property names (which differ based on browser type). */\n\t\t\t\t\t\t\tscrollPositionCurrent = Velocity.State.scrollAnchor[Velocity.State[\"scrollProperty\" + scrollDirection]]; /* GET */\n\t\t\t\t\t\t\t/* When scrolling the browser window, cache the alternate axis's current value since window.scrollTo() doesn't let us change only one value at a time. */\n\t\t\t\t\t\t\tscrollPositionCurrentAlternate = Velocity.State.scrollAnchor[Velocity.State[\"scrollProperty\" + (scrollDirection === \"Left\" ? \"Top\" : \"Left\")]]; /* GET */\n\n\t\t\t\t\t\t\t/* Unlike $.position(), $.offset() values are relative to the browser window's true dimensions -- not merely its currently viewable area --\n\t\t\t\t\t\t\t and therefore end values do not need to be compounded onto current values. */\n\t\t\t\t\t\t\tscrollPositionEnd = $(element).offset()[scrollDirection.toLowerCase()] + scrollOffset; /* GET */\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t/* Since there's only one format that scroll's associated tweensContainer can take, we create it manually. */\n\t\t\t\t\t\ttweensContainer = {\n\t\t\t\t\t\t\tscroll: {\n\t\t\t\t\t\t\t\trootPropertyValue: false,\n\t\t\t\t\t\t\t\tstartValue: scrollPositionCurrent,\n\t\t\t\t\t\t\t\tcurrentValue: scrollPositionCurrent,\n\t\t\t\t\t\t\t\tendValue: scrollPositionEnd,\n\t\t\t\t\t\t\t\tunitType: \"\",\n\t\t\t\t\t\t\t\teasing: opts.easing,\n\t\t\t\t\t\t\t\tscrollData: {\n\t\t\t\t\t\t\t\t\tcontainer: opts.container,\n\t\t\t\t\t\t\t\t\tdirection: scrollDirection,\n\t\t\t\t\t\t\t\t\talternateValue: scrollPositionCurrentAlternate\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\telement: element\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tif (Velocity.debug) {\n\t\t\t\t\t\t\tconsole.log(\"tweensContainer (scroll): \", tweensContainer.scroll, element);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t/******************************************\n\t\t\t\t\t\t Tween Data Construction (for Reverse)\n\t\t\t\t\t\t ******************************************/\n\n\t\t\t\t\t\t/* Reverse acts like a \"start\" action in that a property map is animated toward. The only difference is\n\t\t\t\t\t\t that the property map used for reverse is the inverse of the map used in the previous call. Thus, we manipulate\n\t\t\t\t\t\t the previous call to construct our new map: use the previous map's end values as our new map's start values. Copy over all other data. */\n\t\t\t\t\t\t/* Note: Reverse can be directly called via the \"reverse\" parameter, or it can be indirectly triggered via the loop option. (Loops are composed of multiple reverses.) */\n\t\t\t\t\t\t/* Note: Reverse calls do not need to be consecutively chained onto a currently-animating element in order to operate on cached values;\n\t\t\t\t\t\t there is no harm to reverse being called on a potentially stale data cache since reverse's behavior is simply defined\n\t\t\t\t\t\t as reverting to the element's values as they were prior to the previous *Velocity* call. */\n\t\t\t\t\t} else if (action === \"reverse\") {\n\t\t\t\t\t\tdata = Data(element);\n\n\t\t\t\t\t\t/* Abort if there is no prior animation data to reverse to. */\n\t\t\t\t\t\tif (!data) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!data.tweensContainer) {\n\t\t\t\t\t\t\t/* Dequeue the element so that this queue entry releases itself immediately, allowing subsequent queue entries to run. */\n\t\t\t\t\t\t\t$.dequeue(element, opts.queue);\n\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t/*********************\n\t\t\t\t\t\t\t Options Parsing\n\t\t\t\t\t\t\t *********************/\n\n\t\t\t\t\t\t\t/* If the element was hidden via the display option in the previous call,\n\t\t\t\t\t\t\t revert display to \"auto\" prior to reversal so that the element is visible again. */\n\t\t\t\t\t\t\tif (data.opts.display === \"none\") {\n\t\t\t\t\t\t\t\tdata.opts.display = \"auto\";\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (data.opts.visibility === \"hidden\") {\n\t\t\t\t\t\t\t\tdata.opts.visibility = \"visible\";\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t/* If the loop option was set in the previous call, disable it so that \"reverse\" calls aren't recursively generated.\n\t\t\t\t\t\t\t Further, remove the previous call's callback options; typically, users do not want these to be refired. */\n\t\t\t\t\t\t\tdata.opts.loop = false;\n\t\t\t\t\t\t\tdata.opts.begin = null;\n\t\t\t\t\t\t\tdata.opts.complete = null;\n\n\t\t\t\t\t\t\t/* Since we're extending an opts object that has already been extended with the defaults options object,\n\t\t\t\t\t\t\t we remove non-explicitly-defined properties that are auto-assigned values. */\n\t\t\t\t\t\t\tif (!options.easing) {\n\t\t\t\t\t\t\t\tdelete opts.easing;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (!options.duration) {\n\t\t\t\t\t\t\t\tdelete opts.duration;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t/* The opts object used for reversal is an extension of the options object optionally passed into this\n\t\t\t\t\t\t\t reverse call plus the options used in the previous Velocity call. */\n\t\t\t\t\t\t\topts = $.extend({}, data.opts, opts);\n\n\t\t\t\t\t\t\t/*************************************\n\t\t\t\t\t\t\t Tweens Container Reconstruction\n\t\t\t\t\t\t\t *************************************/\n\n\t\t\t\t\t\t\t/* Create a deepy copy (indicated via the true flag) of the previous call's tweensContainer. */\n\t\t\t\t\t\t\tlastTweensContainer = $.extend(true, {}, data ? data.tweensContainer : null);\n\n\t\t\t\t\t\t\t/* Manipulate the previous tweensContainer by replacing its end values and currentValues with its start values. */\n\t\t\t\t\t\t\tfor (var lastTween in lastTweensContainer) {\n\t\t\t\t\t\t\t\t/* In addition to tween data, tweensContainers contain an element property that we ignore here. */\n\t\t\t\t\t\t\t\tif (lastTweensContainer.hasOwnProperty(lastTween) && lastTween !== \"element\") {\n\t\t\t\t\t\t\t\t\tvar lastStartValue = lastTweensContainer[lastTween].startValue;\n\n\t\t\t\t\t\t\t\t\tlastTweensContainer[lastTween].startValue = lastTweensContainer[lastTween].currentValue = lastTweensContainer[lastTween].endValue;\n\t\t\t\t\t\t\t\t\tlastTweensContainer[lastTween].endValue = lastStartValue;\n\n\t\t\t\t\t\t\t\t\t/* Easing is the only option that embeds into the individual tween data (since it can be defined on a per-property basis).\n\t\t\t\t\t\t\t\t\t Accordingly, every property's easing value must be updated when an options object is passed in with a reverse call.\n\t\t\t\t\t\t\t\t\t The side effect of this extensibility is that all per-property easing values are forcefully reset to the new value. */\n\t\t\t\t\t\t\t\t\tif (!Type.isEmptyObject(options)) {\n\t\t\t\t\t\t\t\t\t\tlastTweensContainer[lastTween].easing = opts.easing;\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tif (Velocity.debug) {\n\t\t\t\t\t\t\t\t\t\tconsole.log(\"reverse tweensContainer (\" + lastTween + \"): \" + JSON.stringify(lastTweensContainer[lastTween]), element);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\ttweensContainer = lastTweensContainer;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t/*****************************************\n\t\t\t\t\t\t Tween Data Construction (for Start)\n\t\t\t\t\t\t *****************************************/\n\n\t\t\t\t\t} else if (action === \"start\") {\n\n\t\t\t\t\t\t/*************************\n\t\t\t\t\t\t Value Transferring\n\t\t\t\t\t\t *************************/\n\n\t\t\t\t\t\t/* If this queue entry follows a previous Velocity-initiated queue entry *and* if this entry was created\n\t\t\t\t\t\t while the element was in the process of being animated by Velocity, then this current call is safe to use\n\t\t\t\t\t\t the end values from the prior call as its start values. Velocity attempts to perform this value transfer\n\t\t\t\t\t\t process whenever possible in order to avoid requerying the DOM. */\n\t\t\t\t\t\t/* If values aren't transferred from a prior call and start values were not forcefed by the user (more on this below),\n\t\t\t\t\t\t then the DOM is queried for the element's current values as a last resort. */\n\t\t\t\t\t\t/* Note: Conversely, animation reversal (and looping) *always* perform inter-call value transfers; they never requery the DOM. */\n\n\t\t\t\t\t\tdata = Data(element);\n\n\t\t\t\t\t\t/* The per-element isAnimating flag is used to indicate whether it's safe (i.e. the data isn't stale)\n\t\t\t\t\t\t to transfer over end values to use as start values. If it's set to true and there is a previous\n\t\t\t\t\t\t Velocity call to pull values from, do so. */\n\t\t\t\t\t\tif (data && data.tweensContainer && data.isAnimating === true) {\n\t\t\t\t\t\t\tlastTweensContainer = data.tweensContainer;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t/***************************\n\t\t\t\t\t\t Tween Data Calculation\n\t\t\t\t\t\t ***************************/\n\n\t\t\t\t\t\t/* This function parses property data and defaults endValue, easing, and startValue as appropriate. */\n\t\t\t\t\t\t/* Property map values can either take the form of 1) a single value representing the end value,\n\t\t\t\t\t\t or 2) an array in the form of [ endValue, [, easing] [, startValue] ].\n\t\t\t\t\t\t The optional third parameter is a forcefed startValue to be used instead of querying the DOM for\n\t\t\t\t\t\t the element's current value. Read Velocity's docmentation to learn more about forcefeeding: VelocityJS.org/#forcefeeding */\n\t\t\t\t\t\tvar parsePropertyValue = function(valueData, skipResolvingEasing) {\n\t\t\t\t\t\t\tvar endValue, easing, startValue;\n\n\t\t\t\t\t\t\t/* Handle the array format, which can be structured as one of three potential overloads:\n\t\t\t\t\t\t\t A) [ endValue, easing, startValue ], B) [ endValue, easing ], or C) [ endValue, startValue ] */\n\t\t\t\t\t\t\tif (Type.isArray(valueData)) {\n\t\t\t\t\t\t\t\t/* endValue is always the first item in the array. Don't bother validating endValue's value now\n\t\t\t\t\t\t\t\t since the ensuing property cycling logic does that. */\n\t\t\t\t\t\t\t\tendValue = valueData[0];\n\n\t\t\t\t\t\t\t\t/* Two-item array format: If the second item is a number, function, or hex string, treat it as a\n\t\t\t\t\t\t\t\t start value since easings can only be non-hex strings or arrays. */\n\t\t\t\t\t\t\t\tif ((!Type.isArray(valueData[1]) && /^[\\d-]/.test(valueData[1])) || Type.isFunction(valueData[1]) || CSS.RegEx.isHex.test(valueData[1])) {\n\t\t\t\t\t\t\t\t\tstartValue = valueData[1];\n\t\t\t\t\t\t\t\t\t/* Two or three-item array: If the second item is a non-hex string or an array, treat it as an easing. */\n\t\t\t\t\t\t\t\t} else if ((Type.isString(valueData[1]) && !CSS.RegEx.isHex.test(valueData[1])) || Type.isArray(valueData[1])) {\n\t\t\t\t\t\t\t\t\teasing = skipResolvingEasing ? valueData[1] : getEasing(valueData[1], opts.duration);\n\n\t\t\t\t\t\t\t\t\t/* Don't bother validating startValue's value now since the ensuing property cycling logic inherently does that. */\n\t\t\t\t\t\t\t\t\tif (valueData[2] !== undefined) {\n\t\t\t\t\t\t\t\t\t\tstartValue = valueData[2];\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/* Handle the single-value format. */\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tendValue = valueData;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t/* Default to the call's easing if a per-property easing type was not defined. */\n\t\t\t\t\t\t\tif (!skipResolvingEasing) {\n\t\t\t\t\t\t\t\teasing = easing || opts.easing;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t/* If functions were passed in as values, pass the function the current element as its context,\n\t\t\t\t\t\t\t plus the element's index and the element set's size as arguments. Then, assign the returned value. */\n\t\t\t\t\t\t\tif (Type.isFunction(endValue)) {\n\t\t\t\t\t\t\t\tendValue = endValue.call(element, elementArrayIndex, elementsLength);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (Type.isFunction(startValue)) {\n\t\t\t\t\t\t\t\tstartValue = startValue.call(element, elementArrayIndex, elementsLength);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t/* Allow startValue to be left as undefined to indicate to the ensuing code that its value was not forcefed. */\n\t\t\t\t\t\t\treturn [endValue || 0, easing, startValue];\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\t/* Cycle through each property in the map, looking for shorthand color properties (e.g. \"color\" as opposed to \"colorRed\"). Inject the corresponding\n\t\t\t\t\t\t colorRed, colorGreen, and colorBlue RGB component tweens into the propertiesMap (which Velocity understands) and remove the shorthand property. */\n\t\t\t\t\t\t$.each(propertiesMap, function(property, value) {\n\t\t\t\t\t\t\t/* Find shorthand color properties that have been passed a hex string. */\n\t\t\t\t\t\t\tif (RegExp(\"^\" + CSS.Lists.colors.join(\"$|^\") + \"$\").test(CSS.Names.camelCase(property))) {\n\t\t\t\t\t\t\t\t/* Parse the value data for each shorthand. */\n\t\t\t\t\t\t\t\tvar valueData = parsePropertyValue(value, true),\n\t\t\t\t\t\t\t\t\t\tendValue = valueData[0],\n\t\t\t\t\t\t\t\t\t\teasing = valueData[1],\n\t\t\t\t\t\t\t\t\t\tstartValue = valueData[2];\n\n\t\t\t\t\t\t\t\tif (CSS.RegEx.isHex.test(endValue)) {\n\t\t\t\t\t\t\t\t\t/* Convert the hex strings into their RGB component arrays. */\n\t\t\t\t\t\t\t\t\tvar colorComponents = [\"Red\", \"Green\", \"Blue\"],\n\t\t\t\t\t\t\t\t\t\t\tendValueRGB = CSS.Values.hexToRgb(endValue),\n\t\t\t\t\t\t\t\t\t\t\tstartValueRGB = startValue ? CSS.Values.hexToRgb(startValue) : undefined;\n\n\t\t\t\t\t\t\t\t\t/* Inject the RGB component tweens into propertiesMap. */\n\t\t\t\t\t\t\t\t\tfor (var i = 0; i < colorComponents.length; i++) {\n\t\t\t\t\t\t\t\t\t\tvar dataArray = [endValueRGB[i]];\n\n\t\t\t\t\t\t\t\t\t\tif (easing) {\n\t\t\t\t\t\t\t\t\t\t\tdataArray.push(easing);\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tif (startValueRGB !== undefined) {\n\t\t\t\t\t\t\t\t\t\t\tdataArray.push(startValueRGB[i]);\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tpropertiesMap[CSS.Names.camelCase(property) + colorComponents[i]] = dataArray;\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t/* Remove the intermediary shorthand property entry now that we've processed it. */\n\t\t\t\t\t\t\t\t\tdelete propertiesMap[property];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\t/* Create a tween out of each property, and append its associated data to tweensContainer. */\n\t\t\t\t\t\tfor (var property in propertiesMap) {\n\n\t\t\t\t\t\t\tif (!propertiesMap.hasOwnProperty(property)) {\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t/**************************\n\t\t\t\t\t\t\t Start Value Sourcing\n\t\t\t\t\t\t\t **************************/\n\n\t\t\t\t\t\t\t/* Parse out endValue, easing, and startValue from the property's data. */\n\t\t\t\t\t\t\tvar valueData = parsePropertyValue(propertiesMap[property]),\n\t\t\t\t\t\t\t\t\tendValue = valueData[0],\n\t\t\t\t\t\t\t\t\teasing = valueData[1],\n\t\t\t\t\t\t\t\t\tstartValue = valueData[2];\n\n\t\t\t\t\t\t\t/* Now that the original property name's format has been used for the parsePropertyValue() lookup above,\n\t\t\t\t\t\t\t we force the property to its camelCase styling to normalize it for manipulation. */\n\t\t\t\t\t\t\tproperty = CSS.Names.camelCase(property);\n\n\t\t\t\t\t\t\t/* In case this property is a hook, there are circumstances where we will intend to work on the hook's root property and not the hooked subproperty. */\n\t\t\t\t\t\t\tvar rootProperty = CSS.Hooks.getRoot(property),\n\t\t\t\t\t\t\t\t\trootPropertyValue = false;\n\n\t\t\t\t\t\t\t/* Other than for the dummy tween property, properties that are not supported by the browser (and do not have an associated normalization) will\n\t\t\t\t\t\t\t inherently produce no style changes when set, so they are skipped in order to decrease animation tick overhead.\n\t\t\t\t\t\t\t Property support is determined via prefixCheck(), which returns a false flag when no supported is detected. */\n\t\t\t\t\t\t\t/* Note: Since SVG elements have some of their properties directly applied as HTML attributes,\n\t\t\t\t\t\t\t there is no way to check for their explicit browser support, and so we skip skip this check for them. */\n\t\t\t\t\t\t\tif ((!data || !data.isSVG) && rootProperty !== \"tween\" && CSS.Names.prefixCheck(rootProperty)[1] === false && CSS.Normalizations.registered[rootProperty] === undefined) {\n\t\t\t\t\t\t\t\tif (Velocity.debug) {\n\t\t\t\t\t\t\t\t\tconsole.log(\"Skipping [\" + rootProperty + \"] due to a lack of browser support.\");\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t/* If the display option is being set to a non-\"none\" (e.g. \"block\") and opacity (filter on IE<=8) is being\n\t\t\t\t\t\t\t animated to an endValue of non-zero, the user's intention is to fade in from invisible, thus we forcefeed opacity\n\t\t\t\t\t\t\t a startValue of 0 if its startValue hasn't already been sourced by value transferring or prior forcefeeding. */\n\t\t\t\t\t\t\tif (((opts.display !== undefined && opts.display !== null && opts.display !== \"none\") || (opts.visibility !== undefined && opts.visibility !== \"hidden\")) && /opacity|filter/.test(property) && !startValue && endValue !== 0) {\n\t\t\t\t\t\t\t\tstartValue = 0;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t/* If values have been transferred from the previous Velocity call, extract the endValue and rootPropertyValue\n\t\t\t\t\t\t\t for all of the current call's properties that were *also* animated in the previous call. */\n\t\t\t\t\t\t\t/* Note: Value transferring can optionally be disabled by the user via the _cacheValues option. */\n\t\t\t\t\t\t\tif (opts._cacheValues && lastTweensContainer && lastTweensContainer[property]) {\n\t\t\t\t\t\t\t\tif (startValue === undefined) {\n\t\t\t\t\t\t\t\t\tstartValue = lastTweensContainer[property].endValue + lastTweensContainer[property].unitType;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t/* The previous call's rootPropertyValue is extracted from the element's data cache since that's the\n\t\t\t\t\t\t\t\t instance of rootPropertyValue that gets freshly updated by the tweening process, whereas the rootPropertyValue\n\t\t\t\t\t\t\t\t attached to the incoming lastTweensContainer is equal to the root property's value prior to any tweening. */\n\t\t\t\t\t\t\t\trootPropertyValue = data.rootPropertyValueCache[rootProperty];\n\t\t\t\t\t\t\t\t/* If values were not transferred from a previous Velocity call, query the DOM as needed. */\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t/* Handle hooked properties. */\n\t\t\t\t\t\t\t\tif (CSS.Hooks.registered[property]) {\n\t\t\t\t\t\t\t\t\tif (startValue === undefined) {\n\t\t\t\t\t\t\t\t\t\trootPropertyValue = CSS.getPropertyValue(element, rootProperty); /* GET */\n\t\t\t\t\t\t\t\t\t\t/* Note: The following getPropertyValue() call does not actually trigger a DOM query;\n\t\t\t\t\t\t\t\t\t\t getPropertyValue() will extract the hook from rootPropertyValue. */\n\t\t\t\t\t\t\t\t\t\tstartValue = CSS.getPropertyValue(element, property, rootPropertyValue);\n\t\t\t\t\t\t\t\t\t\t/* If startValue is already defined via forcefeeding, do not query the DOM for the root property's value;\n\t\t\t\t\t\t\t\t\t\t just grab rootProperty's zero-value template from CSS.Hooks. This overwrites the element's actual\n\t\t\t\t\t\t\t\t\t\t root property value (if one is set), but this is acceptable since the primary reason users forcefeed is\n\t\t\t\t\t\t\t\t\t\t to avoid DOM queries, and thus we likewise avoid querying the DOM for the root property's value. */\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t/* Grab this hook's zero-value template, e.g. \"0px 0px 0px black\". */\n\t\t\t\t\t\t\t\t\t\trootPropertyValue = CSS.Hooks.templates[rootProperty][1];\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t/* Handle non-hooked properties that haven't already been defined via forcefeeding. */\n\t\t\t\t\t\t\t\t} else if (startValue === undefined) {\n\t\t\t\t\t\t\t\t\tstartValue = CSS.getPropertyValue(element, property); /* GET */\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t/**************************\n\t\t\t\t\t\t\t Value Data Extraction\n\t\t\t\t\t\t\t **************************/\n\n\t\t\t\t\t\t\tvar separatedValue,\n\t\t\t\t\t\t\t\t\tendValueUnitType,\n\t\t\t\t\t\t\t\t\tstartValueUnitType,\n\t\t\t\t\t\t\t\t\toperator = false;\n\n\t\t\t\t\t\t\t/* Separates a property value into its numeric value and its unit type. */\n\t\t\t\t\t\t\tvar separateValue = function(property, value) {\n\t\t\t\t\t\t\t\tvar unitType,\n\t\t\t\t\t\t\t\t\t\tnumericValue;\n\n\t\t\t\t\t\t\t\tnumericValue = (value || \"0\")\n\t\t\t\t\t\t\t\t\t\t.toString()\n\t\t\t\t\t\t\t\t\t\t.toLowerCase()\n\t\t\t\t\t\t\t\t\t\t/* Match the unit type at the end of the value. */\n\t\t\t\t\t\t\t\t\t\t.replace(/[%A-z]+$/, function(match) {\n\t\t\t\t\t\t\t\t\t\t\t/* Grab the unit type. */\n\t\t\t\t\t\t\t\t\t\t\tunitType = match;\n\n\t\t\t\t\t\t\t\t\t\t\t/* Strip the unit type off of value. */\n\t\t\t\t\t\t\t\t\t\t\treturn \"\";\n\t\t\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\t/* If no unit type was supplied, assign one that is appropriate for this property (e.g. \"deg\" for rotateZ or \"px\" for width). */\n\t\t\t\t\t\t\t\tif (!unitType) {\n\t\t\t\t\t\t\t\t\tunitType = CSS.Values.getUnitType(property);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\treturn [numericValue, unitType];\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t/* Separate startValue. */\n\t\t\t\t\t\t\tseparatedValue = separateValue(property, startValue);\n\t\t\t\t\t\t\tstartValue = separatedValue[0];\n\t\t\t\t\t\t\tstartValueUnitType = separatedValue[1];\n\n\t\t\t\t\t\t\t/* Separate endValue, and extract a value operator (e.g. \"+=\", \"-=\") if one exists. */\n\t\t\t\t\t\t\tseparatedValue = separateValue(property, endValue);\n\t\t\t\t\t\t\tendValue = separatedValue[0].replace(/^([+-\\/*])=/, function(match, subMatch) {\n\t\t\t\t\t\t\t\toperator = subMatch;\n\n\t\t\t\t\t\t\t\t/* Strip the operator off of the value. */\n\t\t\t\t\t\t\t\treturn \"\";\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tendValueUnitType = separatedValue[1];\n\n\t\t\t\t\t\t\t/* Parse float values from endValue and startValue. Default to 0 if NaN is returned. */\n\t\t\t\t\t\t\tstartValue = parseFloat(startValue) || 0;\n\t\t\t\t\t\t\tendValue = parseFloat(endValue) || 0;\n\n\t\t\t\t\t\t\t/***************************************\n\t\t\t\t\t\t\t Property-Specific Value Conversion\n\t\t\t\t\t\t\t ***************************************/\n\n\t\t\t\t\t\t\t/* Custom support for properties that don't actually accept the % unit type, but where pollyfilling is trivial and relatively foolproof. */\n\t\t\t\t\t\t\tif (endValueUnitType === \"%\") {\n\t\t\t\t\t\t\t\t/* A %-value fontSize/lineHeight is relative to the parent's fontSize (as opposed to the parent's dimensions),\n\t\t\t\t\t\t\t\t which is identical to the em unit's behavior, so we piggyback off of that. */\n\t\t\t\t\t\t\t\tif (/^(fontSize|lineHeight)$/.test(property)) {\n\t\t\t\t\t\t\t\t\t/* Convert % into an em decimal value. */\n\t\t\t\t\t\t\t\t\tendValue = endValue / 100;\n\t\t\t\t\t\t\t\t\tendValueUnitType = \"em\";\n\t\t\t\t\t\t\t\t\t/* For scaleX and scaleY, convert the value into its decimal format and strip off the unit type. */\n\t\t\t\t\t\t\t\t} else if (/^scale/.test(property)) {\n\t\t\t\t\t\t\t\t\tendValue = endValue / 100;\n\t\t\t\t\t\t\t\t\tendValueUnitType = \"\";\n\t\t\t\t\t\t\t\t\t/* For RGB components, take the defined percentage of 255 and strip off the unit type. */\n\t\t\t\t\t\t\t\t} else if (/(Red|Green|Blue)$/i.test(property)) {\n\t\t\t\t\t\t\t\t\tendValue = (endValue / 100) * 255;\n\t\t\t\t\t\t\t\t\tendValueUnitType = \"\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t/***************************\n\t\t\t\t\t\t\t Unit Ratio Calculation\n\t\t\t\t\t\t\t ***************************/\n\n\t\t\t\t\t\t\t/* When queried, the browser returns (most) CSS property values in pixels. Therefore, if an endValue with a unit type of\n\t\t\t\t\t\t\t %, em, or rem is animated toward, startValue must be converted from pixels into the same unit type as endValue in order\n\t\t\t\t\t\t\t for value manipulation logic (increment/decrement) to proceed. Further, if the startValue was forcefed or transferred\n\t\t\t\t\t\t\t from a previous call, startValue may also not be in pixels. Unit conversion logic therefore consists of two steps:\n\t\t\t\t\t\t\t 1) Calculating the ratio of %/em/rem/vh/vw relative to pixels\n\t\t\t\t\t\t\t 2) Converting startValue into the same unit of measurement as endValue based on these ratios. */\n\t\t\t\t\t\t\t/* Unit conversion ratios are calculated by inserting a sibling node next to the target node, copying over its position property,\n\t\t\t\t\t\t\t setting values with the target unit type then comparing the returned pixel value. */\n\t\t\t\t\t\t\t/* Note: Even if only one of these unit types is being animated, all unit ratios are calculated at once since the overhead\n\t\t\t\t\t\t\t of batching the SETs and GETs together upfront outweights the potential overhead\n\t\t\t\t\t\t\t of layout thrashing caused by re-querying for uncalculated ratios for subsequently-processed properties. */\n\t\t\t\t\t\t\t/* Todo: Shift this logic into the calls' first tick instance so that it's synced with RAF. */\n\t\t\t\t\t\t\tvar calculateUnitRatios = function() {\n\n\t\t\t\t\t\t\t\t/************************\n\t\t\t\t\t\t\t\t Same Ratio Checks\n\t\t\t\t\t\t\t\t ************************/\n\n\t\t\t\t\t\t\t\t/* The properties below are used to determine whether the element differs sufficiently from this call's\n\t\t\t\t\t\t\t\t previously iterated element to also differ in its unit conversion ratios. If the properties match up with those\n\t\t\t\t\t\t\t\t of the prior element, the prior element's conversion ratios are used. Like most optimizations in Velocity,\n\t\t\t\t\t\t\t\t this is done to minimize DOM querying. */\n\t\t\t\t\t\t\t\tvar sameRatioIndicators = {\n\t\t\t\t\t\t\t\t\tmyParent: element.parentNode || document.body, /* GET */\n\t\t\t\t\t\t\t\t\tposition: CSS.getPropertyValue(element, \"position\"), /* GET */\n\t\t\t\t\t\t\t\t\tfontSize: CSS.getPropertyValue(element, \"fontSize\") /* GET */\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t/* Determine if the same % ratio can be used. % is based on the element's position value and its parent's width and height dimensions. */\n\t\t\t\t\t\t\t\tsamePercentRatio = ((sameRatioIndicators.position === callUnitConversionData.lastPosition) && (sameRatioIndicators.myParent === callUnitConversionData.lastParent)),\n\t\t\t\t\t\t\t\t\t\t/* Determine if the same em ratio can be used. em is relative to the element's fontSize. */\n\t\t\t\t\t\t\t\t\t\tsameEmRatio = (sameRatioIndicators.fontSize === callUnitConversionData.lastFontSize);\n\n\t\t\t\t\t\t\t\t/* Store these ratio indicators call-wide for the next element to compare against. */\n\t\t\t\t\t\t\t\tcallUnitConversionData.lastParent = sameRatioIndicators.myParent;\n\t\t\t\t\t\t\t\tcallUnitConversionData.lastPosition = sameRatioIndicators.position;\n\t\t\t\t\t\t\t\tcallUnitConversionData.lastFontSize = sameRatioIndicators.fontSize;\n\n\t\t\t\t\t\t\t\t/***************************\n\t\t\t\t\t\t\t\t Element-Specific Units\n\t\t\t\t\t\t\t\t ***************************/\n\n\t\t\t\t\t\t\t\t/* Note: IE8 rounds to the nearest pixel when returning CSS values, thus we perform conversions using a measurement\n\t\t\t\t\t\t\t\t of 100 (instead of 1) to give our ratios a precision of at least 2 decimal values. */\n\t\t\t\t\t\t\t\tvar measurement = 100,\n\t\t\t\t\t\t\t\t\t\tunitRatios = {};\n\n\t\t\t\t\t\t\t\tif (!sameEmRatio || !samePercentRatio) {\n\t\t\t\t\t\t\t\t\tvar dummy = data && data.isSVG ? document.createElementNS(\"http://www.w3.org/2000/svg\", \"rect\") : document.createElement(\"div\");\n\n\t\t\t\t\t\t\t\t\tVelocity.init(dummy);\n\t\t\t\t\t\t\t\t\tsameRatioIndicators.myParent.appendChild(dummy);\n\n\t\t\t\t\t\t\t\t\t/* To accurately and consistently calculate conversion ratios, the element's cascaded overflow and box-sizing are stripped.\n\t\t\t\t\t\t\t\t\t Similarly, since width/height can be artificially constrained by their min-/max- equivalents, these are controlled for as well. */\n\t\t\t\t\t\t\t\t\t/* Note: Overflow must be also be controlled for per-axis since the overflow property overwrites its per-axis values. */\n\t\t\t\t\t\t\t\t\t$.each([\"overflow\", \"overflowX\", \"overflowY\"], function(i, property) {\n\t\t\t\t\t\t\t\t\t\tVelocity.CSS.setPropertyValue(dummy, property, \"hidden\");\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\tVelocity.CSS.setPropertyValue(dummy, \"position\", sameRatioIndicators.position);\n\t\t\t\t\t\t\t\t\tVelocity.CSS.setPropertyValue(dummy, \"fontSize\", sameRatioIndicators.fontSize);\n\t\t\t\t\t\t\t\t\tVelocity.CSS.setPropertyValue(dummy, \"boxSizing\", \"content-box\");\n\n\t\t\t\t\t\t\t\t\t/* width and height act as our proxy properties for measuring the horizontal and vertical % ratios. */\n\t\t\t\t\t\t\t\t\t$.each([\"minWidth\", \"maxWidth\", \"width\", \"minHeight\", \"maxHeight\", \"height\"], function(i, property) {\n\t\t\t\t\t\t\t\t\t\tVelocity.CSS.setPropertyValue(dummy, property, measurement + \"%\");\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t/* paddingLeft arbitrarily acts as our proxy property for the em ratio. */\n\t\t\t\t\t\t\t\t\tVelocity.CSS.setPropertyValue(dummy, \"paddingLeft\", measurement + \"em\");\n\n\t\t\t\t\t\t\t\t\t/* Divide the returned value by the measurement to get the ratio between 1% and 1px. Default to 1 since working with 0 can produce Infinite. */\n\t\t\t\t\t\t\t\t\tunitRatios.percentToPxWidth = callUnitConversionData.lastPercentToPxWidth = (parseFloat(CSS.getPropertyValue(dummy, \"width\", null, true)) || 1) / measurement; /* GET */\n\t\t\t\t\t\t\t\t\tunitRatios.percentToPxHeight = callUnitConversionData.lastPercentToPxHeight = (parseFloat(CSS.getPropertyValue(dummy, \"height\", null, true)) || 1) / measurement; /* GET */\n\t\t\t\t\t\t\t\t\tunitRatios.emToPx = callUnitConversionData.lastEmToPx = (parseFloat(CSS.getPropertyValue(dummy, \"paddingLeft\")) || 1) / measurement; /* GET */\n\n\t\t\t\t\t\t\t\t\tsameRatioIndicators.myParent.removeChild(dummy);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tunitRatios.emToPx = callUnitConversionData.lastEmToPx;\n\t\t\t\t\t\t\t\t\tunitRatios.percentToPxWidth = callUnitConversionData.lastPercentToPxWidth;\n\t\t\t\t\t\t\t\t\tunitRatios.percentToPxHeight = callUnitConversionData.lastPercentToPxHeight;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t/***************************\n\t\t\t\t\t\t\t\t Element-Agnostic Units\n\t\t\t\t\t\t\t\t ***************************/\n\n\t\t\t\t\t\t\t\t/* Whereas % and em ratios are determined on a per-element basis, the rem unit only needs to be checked\n\t\t\t\t\t\t\t\t once per call since it's exclusively dependant upon document.body's fontSize. If this is the first time\n\t\t\t\t\t\t\t\t that calculateUnitRatios() is being run during this call, remToPx will still be set to its default value of null,\n\t\t\t\t\t\t\t\t so we calculate it now. */\n\t\t\t\t\t\t\t\tif (callUnitConversionData.remToPx === null) {\n\t\t\t\t\t\t\t\t\t/* Default to browsers' default fontSize of 16px in the case of 0. */\n\t\t\t\t\t\t\t\t\tcallUnitConversionData.remToPx = parseFloat(CSS.getPropertyValue(document.body, \"fontSize\")) || 16; /* GET */\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t/* Similarly, viewport units are %-relative to the window's inner dimensions. */\n\t\t\t\t\t\t\t\tif (callUnitConversionData.vwToPx === null) {\n\t\t\t\t\t\t\t\t\tcallUnitConversionData.vwToPx = parseFloat(window.innerWidth) / 100; /* GET */\n\t\t\t\t\t\t\t\t\tcallUnitConversionData.vhToPx = parseFloat(window.innerHeight) / 100; /* GET */\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tunitRatios.remToPx = callUnitConversionData.remToPx;\n\t\t\t\t\t\t\t\tunitRatios.vwToPx = callUnitConversionData.vwToPx;\n\t\t\t\t\t\t\t\tunitRatios.vhToPx = callUnitConversionData.vhToPx;\n\n\t\t\t\t\t\t\t\tif (Velocity.debug >= 1) {\n\t\t\t\t\t\t\t\t\tconsole.log(\"Unit ratios: \" + JSON.stringify(unitRatios), element);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn unitRatios;\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t/********************\n\t\t\t\t\t\t\t Unit Conversion\n\t\t\t\t\t\t\t ********************/\n\n\t\t\t\t\t\t\t/* The * and / operators, which are not passed in with an associated unit, inherently use startValue's unit. Skip value and unit conversion. */\n\t\t\t\t\t\t\tif (/[\\/*]/.test(operator)) {\n\t\t\t\t\t\t\t\tendValueUnitType = startValueUnitType;\n\t\t\t\t\t\t\t\t/* If startValue and endValue differ in unit type, convert startValue into the same unit type as endValue so that if endValueUnitType\n\t\t\t\t\t\t\t\t is a relative unit (%, em, rem), the values set during tweening will continue to be accurately relative even if the metrics they depend\n\t\t\t\t\t\t\t\t on are dynamically changing during the course of the animation. Conversely, if we always normalized into px and used px for setting values, the px ratio\n\t\t\t\t\t\t\t\t would become stale if the original unit being animated toward was relative and the underlying metrics change during the animation. */\n\t\t\t\t\t\t\t\t/* Since 0 is 0 in any unit type, no conversion is necessary when startValue is 0 -- we just start at 0 with endValueUnitType. */\n\t\t\t\t\t\t\t} else if ((startValueUnitType !== endValueUnitType) && startValue !== 0) {\n\t\t\t\t\t\t\t\t/* Unit conversion is also skipped when endValue is 0, but *startValueUnitType* must be used for tween values to remain accurate. */\n\t\t\t\t\t\t\t\t/* Note: Skipping unit conversion here means that if endValueUnitType was originally a relative unit, the animation won't relatively\n\t\t\t\t\t\t\t\t match the underlying metrics if they change, but this is acceptable since we're animating toward invisibility instead of toward visibility,\n\t\t\t\t\t\t\t\t which remains past the point of the animation's completion. */\n\t\t\t\t\t\t\t\tif (endValue === 0) {\n\t\t\t\t\t\t\t\t\tendValueUnitType = startValueUnitType;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t/* By this point, we cannot avoid unit conversion (it's undesirable since it causes layout thrashing).\n\t\t\t\t\t\t\t\t\t If we haven't already, we trigger calculateUnitRatios(), which runs once per element per call. */\n\t\t\t\t\t\t\t\t\telementUnitConversionData = elementUnitConversionData || calculateUnitRatios();\n\n\t\t\t\t\t\t\t\t\t/* The following RegEx matches CSS properties that have their % values measured relative to the x-axis. */\n\t\t\t\t\t\t\t\t\t/* Note: W3C spec mandates that all of margin and padding's properties (even top and bottom) are %-relative to the *width* of the parent element. */\n\t\t\t\t\t\t\t\t\tvar axis = (/margin|padding|left|right|width|text|word|letter/i.test(property) || /X$/.test(property) || property === \"x\") ? \"x\" : \"y\";\n\n\t\t\t\t\t\t\t\t\t/* In order to avoid generating n^2 bespoke conversion functions, unit conversion is a two-step process:\n\t\t\t\t\t\t\t\t\t 1) Convert startValue into pixels. 2) Convert this new pixel value into endValue's unit type. */\n\t\t\t\t\t\t\t\t\tswitch (startValueUnitType) {\n\t\t\t\t\t\t\t\t\t\tcase \"%\":\n\t\t\t\t\t\t\t\t\t\t\t/* Note: translateX and translateY are the only properties that are %-relative to an element's own dimensions -- not its parent's dimensions.\n\t\t\t\t\t\t\t\t\t\t\t Velocity does not include a special conversion process to account for this behavior. Therefore, animating translateX/Y from a % value\n\t\t\t\t\t\t\t\t\t\t\t to a non-% value will produce an incorrect start value. Fortunately, this sort of cross-unit conversion is rarely done by users in practice. */\n\t\t\t\t\t\t\t\t\t\t\tstartValue *= (axis === \"x\" ? elementUnitConversionData.percentToPxWidth : elementUnitConversionData.percentToPxHeight);\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\t\tcase \"px\":\n\t\t\t\t\t\t\t\t\t\t\t/* px acts as our midpoint in the unit conversion process; do nothing. */\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\t\tstartValue *= elementUnitConversionData[startValueUnitType + \"ToPx\"];\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t/* Invert the px ratios to convert into to the target unit. */\n\t\t\t\t\t\t\t\t\tswitch (endValueUnitType) {\n\t\t\t\t\t\t\t\t\t\tcase \"%\":\n\t\t\t\t\t\t\t\t\t\t\tstartValue *= 1 / (axis === \"x\" ? elementUnitConversionData.percentToPxWidth : elementUnitConversionData.percentToPxHeight);\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\t\tcase \"px\":\n\t\t\t\t\t\t\t\t\t\t\t/* startValue is already in px, do nothing; we're done. */\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\t\tstartValue *= 1 / elementUnitConversionData[endValueUnitType + \"ToPx\"];\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t/*********************\n\t\t\t\t\t\t\t Relative Values\n\t\t\t\t\t\t\t *********************/\n\n\t\t\t\t\t\t\t/* Operator logic must be performed last since it requires unit-normalized start and end values. */\n\t\t\t\t\t\t\t/* Note: Relative *percent values* do not behave how most people think; while one would expect \"+=50%\"\n\t\t\t\t\t\t\t to increase the property 1.5x its current value, it in fact increases the percent units in absolute terms:\n\t\t\t\t\t\t\t 50 points is added on top of the current % value. */\n\t\t\t\t\t\t\tswitch (operator) {\n\t\t\t\t\t\t\t\tcase \"+\":\n\t\t\t\t\t\t\t\t\tendValue = startValue + endValue;\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase \"-\":\n\t\t\t\t\t\t\t\t\tendValue = startValue - endValue;\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase \"*\":\n\t\t\t\t\t\t\t\t\tendValue = startValue * endValue;\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase \"/\":\n\t\t\t\t\t\t\t\t\tendValue = startValue / endValue;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t/**************************\n\t\t\t\t\t\t\t tweensContainer Push\n\t\t\t\t\t\t\t **************************/\n\n\t\t\t\t\t\t\t/* Construct the per-property tween object, and push it to the element's tweensContainer. */\n\t\t\t\t\t\t\ttweensContainer[property] = {\n\t\t\t\t\t\t\t\trootPropertyValue: rootPropertyValue,\n\t\t\t\t\t\t\t\tstartValue: startValue,\n\t\t\t\t\t\t\t\tcurrentValue: startValue,\n\t\t\t\t\t\t\t\tendValue: endValue,\n\t\t\t\t\t\t\t\tunitType: endValueUnitType,\n\t\t\t\t\t\t\t\teasing: easing\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\tif (Velocity.debug) {\n\t\t\t\t\t\t\t\tconsole.log(\"tweensContainer (\" + property + \"): \" + JSON.stringify(tweensContainer[property]), element);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t/* Along with its property data, store a reference to the element itself onto tweensContainer. */\n\t\t\t\t\t\ttweensContainer.element = element;\n\t\t\t\t\t}\n\n\t\t\t\t\t/*****************\n\t\t\t\t\t Call Push\n\t\t\t\t\t *****************/\n\n\t\t\t\t\t/* Note: tweensContainer can be empty if all of the properties in this call's property map were skipped due to not\n\t\t\t\t\t being supported by the browser. The element property is used for checking that the tweensContainer has been appended to. */\n\t\t\t\t\tif (tweensContainer.element) {\n\t\t\t\t\t\t/* Apply the \"velocity-animating\" indicator class. */\n\t\t\t\t\t\tCSS.Values.addClass(element, \"velocity-animating\");\n\n\t\t\t\t\t\t/* The call array houses the tweensContainers for each element being animated in the current call. */\n\t\t\t\t\t\tcall.push(tweensContainer);\n\n\t\t\t\t\t\tdata = Data(element);\n\n\t\t\t\t\t\tif (data) {\n\t\t\t\t\t\t\t/* Store the tweensContainer and options if we're working on the default effects queue, so that they can be used by the reverse command. */\n\t\t\t\t\t\t\tif (opts.queue === \"\") {\n\n\t\t\t\t\t\t\t\tdata.tweensContainer = tweensContainer;\n\t\t\t\t\t\t\t\tdata.opts = opts;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t/* Switch on the element's animating flag. */\n\t\t\t\t\t\t\tdata.isAnimating = true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t/* Once the final element in this call's element set has been processed, push the call array onto\n\t\t\t\t\t\t Velocity.State.calls for the animation tick to immediately begin processing. */\n\t\t\t\t\t\tif (elementsIndex === elementsLength - 1) {\n\t\t\t\t\t\t\t/* Add the current call plus its associated metadata (the element set and the call's options) onto the global call container.\n\t\t\t\t\t\t\t Anything on this call container is subjected to tick() processing. */\n\t\t\t\t\t\t\tVelocity.State.calls.push([call, elements, opts, null, promiseData.resolver]);\n\n\t\t\t\t\t\t\t/* If the animation tick isn't running, start it. (Velocity shuts it off when there are no active calls to process.) */\n\t\t\t\t\t\t\tif (Velocity.State.isTicking === false) {\n\t\t\t\t\t\t\t\tVelocity.State.isTicking = true;\n\n\t\t\t\t\t\t\t\t/* Start the tick loop. */\n\t\t\t\t\t\t\t\ttick();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\telementsIndex++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/* When the queue option is set to false, the call skips the element's queue and fires immediately. */\n\t\t\t\tif (opts.queue === false) {\n\t\t\t\t\t/* Since this buildQueue call doesn't respect the element's existing queue (which is where a delay option would have been appended),\n\t\t\t\t\t we manually inject the delay property here with an explicit setTimeout. */\n\t\t\t\t\tif (opts.delay) {\n\t\t\t\t\t\tsetTimeout(buildQueue, opts.delay);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbuildQueue();\n\t\t\t\t\t}\n\t\t\t\t\t/* Otherwise, the call undergoes element queueing as normal. */\n\t\t\t\t\t/* Note: To interoperate with jQuery, Velocity uses jQuery's own $.queue() stack for queuing logic. */\n\t\t\t\t} else {\n\t\t\t\t\t$.queue(element, opts.queue, function(next, clearQueue) {\n\t\t\t\t\t\t/* If the clearQueue flag was passed in by the stop command, resolve this call's promise. (Promises can only be resolved once,\n\t\t\t\t\t\t so it's fine if this is repeatedly triggered for each element in the associated call.) */\n\t\t\t\t\t\tif (clearQueue === true) {\n\t\t\t\t\t\t\tif (promiseData.promise) {\n\t\t\t\t\t\t\t\tpromiseData.resolver(elements);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t/* Do not continue with animation queueing. */\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t/* This flag indicates to the upcoming completeCall() function that this queue entry was initiated by Velocity.\n\t\t\t\t\t\t See completeCall() for further details. */\n\t\t\t\t\t\tVelocity.velocityQueueEntryFlag = true;\n\n\t\t\t\t\t\tbuildQueue(next);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t/*********************\n\t\t\t\t Auto-Dequeuing\n\t\t\t\t *********************/\n\n\t\t\t\t/* As per jQuery's $.queue() behavior, to fire the first non-custom-queue entry on an element, the element\n\t\t\t\t must be dequeued if its queue stack consists *solely* of the current call. (This can be determined by checking\n\t\t\t\t for the \"inprogress\" item that jQuery prepends to active queue stack arrays.) Regardless, whenever the element's\n\t\t\t\t queue is further appended with additional items -- including $.delay()'s or even $.animate() calls, the queue's\n\t\t\t\t first entry is automatically fired. This behavior contrasts that of custom queues, which never auto-fire. */\n\t\t\t\t/* Note: When an element set is being subjected to a non-parallel Velocity call, the animation will not begin until\n\t\t\t\t each one of the elements in the set has reached the end of its individually pre-existing queue chain. */\n\t\t\t\t/* Note: Unfortunately, most people don't fully grasp jQuery's powerful, yet quirky, $.queue() function.\n\t\t\t\t Lean more here: http://stackoverflow.com/questions/1058158/can-somebody-explain-jquery-queue-to-me */\n\t\t\t\tif ((opts.queue === \"\" || opts.queue === \"fx\") && $.queue(element)[0] !== \"inprogress\") {\n\t\t\t\t\t$.dequeue(element);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/**************************\n\t\t\t Element Set Iteration\n\t\t\t **************************/\n\n\t\t\t/* If the \"nodeType\" property exists on the elements variable, we're animating a single element.\n\t\t\t Place it in an array so that $.each() can iterate over it. */\n\t\t\t$.each(elements, function(i, element) {\n\t\t\t\t/* Ensure each element in a set has a nodeType (is a real element) to avoid throwing errors. */\n\t\t\t\tif (Type.isNode(element)) {\n\t\t\t\t\tprocessElement(element, i);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t/******************\n\t\t\t Option: Loop\n\t\t\t ******************/\n\n\t\t\t/* The loop option accepts an integer indicating how many times the element should loop between the values in the\n\t\t\t current call's properties map and the element's property values prior to this call. */\n\t\t\t/* Note: The loop option's logic is performed here -- after element processing -- because the current call needs\n\t\t\t to undergo its queue insertion prior to the loop option generating its series of constituent \"reverse\" calls,\n\t\t\t which chain after the current call. Two reverse calls (two \"alternations\") constitute one loop. */\n\t\t\topts = $.extend({}, Velocity.defaults, options);\n\t\t\topts.loop = parseInt(opts.loop, 10);\n\t\t\tvar reverseCallsCount = (opts.loop * 2) - 1;\n\n\t\t\tif (opts.loop) {\n\t\t\t\t/* Double the loop count to convert it into its appropriate number of \"reverse\" calls.\n\t\t\t\t Subtract 1 from the resulting value since the current call is included in the total alternation count. */\n\t\t\t\tfor (var x = 0; x < reverseCallsCount; x++) {\n\t\t\t\t\t/* Since the logic for the reverse action occurs inside Queueing and therefore this call's options object\n\t\t\t\t\t isn't parsed until then as well, the current call's delay option must be explicitly passed into the reverse\n\t\t\t\t\t call so that the delay logic that occurs inside *Pre-Queueing* can process it. */\n\t\t\t\t\tvar reverseOptions = {\n\t\t\t\t\t\tdelay: opts.delay,\n\t\t\t\t\t\tprogress: opts.progress\n\t\t\t\t\t};\n\n\t\t\t\t\t/* If a complete callback was passed into this call, transfer it to the loop redirect's final \"reverse\" call\n\t\t\t\t\t so that it's triggered when the entire redirect is complete (and not when the very first animation is complete). */\n\t\t\t\t\tif (x === reverseCallsCount - 1) {\n\t\t\t\t\t\treverseOptions.display = opts.display;\n\t\t\t\t\t\treverseOptions.visibility = opts.visibility;\n\t\t\t\t\t\treverseOptions.complete = opts.complete;\n\t\t\t\t\t}\n\n\t\t\t\t\tanimate(elements, \"reverse\", reverseOptions);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/***************\n\t\t\t Chaining\n\t\t\t ***************/\n\n\t\t\t/* Return the elements back to the call chain, with wrapped elements taking precedence in case Velocity was called via the $.fn. extension. */\n\t\t\treturn getChain();\n\t\t};\n\n\t\t/* Turn Velocity into the animation function, extended with the pre-existing Velocity object. */\n\t\tVelocity = $.extend(animate, Velocity);\n\t\t/* For legacy support, also expose the literal animate method. */\n\t\tVelocity.animate = animate;\n\n\t\t/**************\n\t\t Timing\n\t\t **************/\n\n\t\t/* Ticker function. */\n\t\tvar ticker = window.requestAnimationFrame || rAFShim;\n\n\t\t/* Inactive browser tabs pause rAF, which results in all active animations immediately sprinting to their completion states when the tab refocuses.\n\t\t To get around this, we dynamically switch rAF to setTimeout (which the browser *doesn't* pause) when the tab loses focus. We skip this for mobile\n\t\t devices to avoid wasting battery power on inactive tabs. */\n\t\t/* Note: Tab focus detection doesn't work on older versions of IE, but that's okay since they don't support rAF to begin with. */\n\t\tif (!Velocity.State.isMobile && document.hidden !== undefined) {\n\t\t\tdocument.addEventListener(\"visibilitychange\", function() {\n\t\t\t\t/* Reassign the rAF function (which the global tick() function uses) based on the tab's focus state. */\n\t\t\t\tif (document.hidden) {\n\t\t\t\t\tticker = function(callback) {\n\t\t\t\t\t\t/* The tick function needs a truthy first argument in order to pass its internal timestamp check. */\n\t\t\t\t\t\treturn setTimeout(function() {\n\t\t\t\t\t\t\tcallback(true);\n\t\t\t\t\t\t}, 16);\n\t\t\t\t\t};\n\n\t\t\t\t\t/* The rAF loop has been paused by the browser, so we manually restart the tick. */\n\t\t\t\t\ttick();\n\t\t\t\t} else {\n\t\t\t\t\tticker = window.requestAnimationFrame || rAFShim;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t/************\n\t\t Tick\n\t\t ************/\n\n\t\t/* Note: All calls to Velocity are pushed to the Velocity.State.calls array, which is fully iterated through upon each tick. */\n\t\tfunction tick(timestamp) {\n\t\t\t/* An empty timestamp argument indicates that this is the first tick occurence since ticking was turned on.\n\t\t\t We leverage this metadata to fully ignore the first tick pass since RAF's initial pass is fired whenever\n\t\t\t the browser's next tick sync time occurs, which results in the first elements subjected to Velocity\n\t\t\t calls being animated out of sync with any elements animated immediately thereafter. In short, we ignore\n\t\t\t the first RAF tick pass so that elements being immediately consecutively animated -- instead of simultaneously animated\n\t\t\t by the same Velocity call -- are properly batched into the same initial RAF tick and consequently remain in sync thereafter. */\n\t\t\tif (timestamp) {\n\t\t\t\t/* We ignore RAF's high resolution timestamp since it can be significantly offset when the browser is\n\t\t\t\t under high stress; we opt for choppiness over allowing the browser to drop huge chunks of frames. */\n\t\t\t\tvar timeCurrent = (new Date()).getTime();\n\n\t\t\t\t/********************\n\t\t\t\t Call Iteration\n\t\t\t\t ********************/\n\n\t\t\t\tvar callsLength = Velocity.State.calls.length;\n\n\t\t\t\t/* To speed up iterating over this array, it is compacted (falsey items -- calls that have completed -- are removed)\n\t\t\t\t when its length has ballooned to a point that can impact tick performance. This only becomes necessary when animation\n\t\t\t\t has been continuous with many elements over a long period of time; whenever all active calls are completed, completeCall() clears Velocity.State.calls. */\n\t\t\t\tif (callsLength > 10000) {\n\t\t\t\t\tVelocity.State.calls = compactSparseArray(Velocity.State.calls);\n\t\t\t\t\tcallsLength = Velocity.State.calls.length;\n\t\t\t\t}\n\n\t\t\t\t/* Iterate through each active call. */\n\t\t\t\tfor (var i = 0; i < callsLength; i++) {\n\t\t\t\t\t/* When a Velocity call is completed, its Velocity.State.calls entry is set to false. Continue on to the next call. */\n\t\t\t\t\tif (!Velocity.State.calls[i]) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\t/************************\n\t\t\t\t\t Call-Wide Variables\n\t\t\t\t\t ************************/\n\n\t\t\t\t\tvar callContainer = Velocity.State.calls[i],\n\t\t\t\t\t\t\tcall = callContainer[0],\n\t\t\t\t\t\t\topts = callContainer[2],\n\t\t\t\t\t\t\ttimeStart = callContainer[3],\n\t\t\t\t\t\t\tfirstTick = !!timeStart,\n\t\t\t\t\t\t\ttweenDummyValue = null;\n\n\t\t\t\t\t/* If timeStart is undefined, then this is the first time that this call has been processed by tick().\n\t\t\t\t\t We assign timeStart now so that its value is as close to the real animation start time as possible.\n\t\t\t\t\t (Conversely, had timeStart been defined when this call was added to Velocity.State.calls, the delay\n\t\t\t\t\t between that time and now would cause the first few frames of the tween to be skipped since\n\t\t\t\t\t percentComplete is calculated relative to timeStart.) */\n\t\t\t\t\t/* Further, subtract 16ms (the approximate resolution of RAF) from the current time value so that the\n\t\t\t\t\t first tick iteration isn't wasted by animating at 0% tween completion, which would produce the\n\t\t\t\t\t same style value as the element's current value. */\n\t\t\t\t\tif (!timeStart) {\n\t\t\t\t\t\ttimeStart = Velocity.State.calls[i][3] = timeCurrent - 16;\n\t\t\t\t\t}\n\n\t\t\t\t\t/* The tween's completion percentage is relative to the tween's start time, not the tween's start value\n\t\t\t\t\t (which would result in unpredictable tween durations since JavaScript's timers are not particularly accurate).\n\t\t\t\t\t Accordingly, we ensure that percentComplete does not exceed 1. */\n\t\t\t\t\tvar percentComplete = Math.min((timeCurrent - timeStart) / opts.duration, 1);\n\n\t\t\t\t\t/**********************\n\t\t\t\t\t Element Iteration\n\t\t\t\t\t **********************/\n\n\t\t\t\t\t/* For every call, iterate through each of the elements in its set. */\n\t\t\t\t\tfor (var j = 0, callLength = call.length; j < callLength; j++) {\n\t\t\t\t\t\tvar tweensContainer = call[j],\n\t\t\t\t\t\t\t\telement = tweensContainer.element;\n\n\t\t\t\t\t\t/* Check to see if this element has been deleted midway through the animation by checking for the\n\t\t\t\t\t\t continued existence of its data cache. If it's gone, skip animating this element. */\n\t\t\t\t\t\tif (!Data(element)) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar transformPropertyExists = false;\n\n\t\t\t\t\t\t/**********************************\n\t\t\t\t\t\t Display & Visibility Toggling\n\t\t\t\t\t\t **********************************/\n\n\t\t\t\t\t\t/* If the display option is set to non-\"none\", set it upfront so that the element can become visible before tweening begins.\n\t\t\t\t\t\t (Otherwise, display's \"none\" value is set in completeCall() once the animation has completed.) */\n\t\t\t\t\t\tif (opts.display !== undefined && opts.display !== null && opts.display !== \"none\") {\n\t\t\t\t\t\t\tif (opts.display === \"flex\") {\n\t\t\t\t\t\t\t\tvar flexValues = [\"-webkit-box\", \"-moz-box\", \"-ms-flexbox\", \"-webkit-flex\"];\n\n\t\t\t\t\t\t\t\t$.each(flexValues, function(i, flexValue) {\n\t\t\t\t\t\t\t\t\tCSS.setPropertyValue(element, \"display\", flexValue);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tCSS.setPropertyValue(element, \"display\", opts.display);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t/* Same goes with the visibility option, but its \"none\" equivalent is \"hidden\". */\n\t\t\t\t\t\tif (opts.visibility !== undefined && opts.visibility !== \"hidden\") {\n\t\t\t\t\t\t\tCSS.setPropertyValue(element, \"visibility\", opts.visibility);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t/************************\n\t\t\t\t\t\t Property Iteration\n\t\t\t\t\t\t ************************/\n\n\t\t\t\t\t\t/* For every element, iterate through each property. */\n\t\t\t\t\t\tfor (var property in tweensContainer) {\n\t\t\t\t\t\t\t/* Note: In addition to property tween data, tweensContainer contains a reference to its associated element. */\n\t\t\t\t\t\t\tif (tweensContainer.hasOwnProperty(property) && property !== \"element\") {\n\t\t\t\t\t\t\t\tvar tween = tweensContainer[property],\n\t\t\t\t\t\t\t\t\t\tcurrentValue,\n\t\t\t\t\t\t\t\t\t\t/* Easing can either be a pre-genereated function or a string that references a pre-registered easing\n\t\t\t\t\t\t\t\t\t\t on the Velocity.Easings object. In either case, return the appropriate easing *function*. */\n\t\t\t\t\t\t\t\t\t\teasing = Type.isString(tween.easing) ? Velocity.Easings[tween.easing] : tween.easing;\n\n\t\t\t\t\t\t\t\t/******************************\n\t\t\t\t\t\t\t\t Current Value Calculation\n\t\t\t\t\t\t\t\t ******************************/\n\n\t\t\t\t\t\t\t\t/* If this is the last tick pass (if we've reached 100% completion for this tween),\n\t\t\t\t\t\t\t\t ensure that currentValue is explicitly set to its target endValue so that it's not subjected to any rounding. */\n\t\t\t\t\t\t\t\tif (percentComplete === 1) {\n\t\t\t\t\t\t\t\t\tcurrentValue = tween.endValue;\n\t\t\t\t\t\t\t\t\t/* Otherwise, calculate currentValue based on the current delta from startValue. */\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tvar tweenDelta = tween.endValue - tween.startValue;\n\t\t\t\t\t\t\t\t\tcurrentValue = tween.startValue + (tweenDelta * easing(percentComplete, opts, tweenDelta));\n\n\t\t\t\t\t\t\t\t\t/* If no value change is occurring, don't proceed with DOM updating. */\n\t\t\t\t\t\t\t\t\tif (!firstTick && (currentValue === tween.currentValue)) {\n\t\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\ttween.currentValue = currentValue;\n\n\t\t\t\t\t\t\t\t/* If we're tweening a fake 'tween' property in order to log transition values, update the one-per-call variable so that\n\t\t\t\t\t\t\t\t it can be passed into the progress callback. */\n\t\t\t\t\t\t\t\tif (property === \"tween\") {\n\t\t\t\t\t\t\t\t\ttweenDummyValue = currentValue;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t/******************\n\t\t\t\t\t\t\t\t\t Hooks: Part I\n\t\t\t\t\t\t\t\t\t ******************/\n\t\t\t\t\t\t\t\t\tvar hookRoot;\n\n\t\t\t\t\t\t\t\t\t/* For hooked properties, the newly-updated rootPropertyValueCache is cached onto the element so that it can be used\n\t\t\t\t\t\t\t\t\t for subsequent hooks in this call that are associated with the same root property. If we didn't cache the updated\n\t\t\t\t\t\t\t\t\t rootPropertyValue, each subsequent update to the root property in this tick pass would reset the previous hook's\n\t\t\t\t\t\t\t\t\t updates to rootPropertyValue prior to injection. A nice performance byproduct of rootPropertyValue caching is that\n\t\t\t\t\t\t\t\t\t subsequently chained animations using the same hookRoot but a different hook can use this cached rootPropertyValue. */\n\t\t\t\t\t\t\t\t\tif (CSS.Hooks.registered[property]) {\n\t\t\t\t\t\t\t\t\t\thookRoot = CSS.Hooks.getRoot(property);\n\n\t\t\t\t\t\t\t\t\t\tvar rootPropertyValueCache = Data(element).rootPropertyValueCache[hookRoot];\n\n\t\t\t\t\t\t\t\t\t\tif (rootPropertyValueCache) {\n\t\t\t\t\t\t\t\t\t\t\ttween.rootPropertyValue = rootPropertyValueCache;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t/*****************\n\t\t\t\t\t\t\t\t\t DOM Update\n\t\t\t\t\t\t\t\t\t *****************/\n\n\t\t\t\t\t\t\t\t\t/* setPropertyValue() returns an array of the property name and property value post any normalization that may have been performed. */\n\t\t\t\t\t\t\t\t\t/* Note: To solve an IE<=8 positioning bug, the unit type is dropped when setting a property value of 0. */\n\t\t\t\t\t\t\t\t\tvar adjustedSetData = CSS.setPropertyValue(element, /* SET */\n\t\t\t\t\t\t\t\t\t\t\tproperty,\n\t\t\t\t\t\t\t\t\t\t\ttween.currentValue + (parseFloat(currentValue) === 0 ? \"\" : tween.unitType),\n\t\t\t\t\t\t\t\t\t\t\ttween.rootPropertyValue,\n\t\t\t\t\t\t\t\t\t\t\ttween.scrollData);\n\n\t\t\t\t\t\t\t\t\t/*******************\n\t\t\t\t\t\t\t\t\t Hooks: Part II\n\t\t\t\t\t\t\t\t\t *******************/\n\n\t\t\t\t\t\t\t\t\t/* Now that we have the hook's updated rootPropertyValue (the post-processed value provided by adjustedSetData), cache it onto the element. */\n\t\t\t\t\t\t\t\t\tif (CSS.Hooks.registered[property]) {\n\t\t\t\t\t\t\t\t\t\t/* Since adjustedSetData contains normalized data ready for DOM updating, the rootPropertyValue needs to be re-extracted from its normalized form. ?? */\n\t\t\t\t\t\t\t\t\t\tif (CSS.Normalizations.registered[hookRoot]) {\n\t\t\t\t\t\t\t\t\t\t\tData(element).rootPropertyValueCache[hookRoot] = CSS.Normalizations.registered[hookRoot](\"extract\", null, adjustedSetData[1]);\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tData(element).rootPropertyValueCache[hookRoot] = adjustedSetData[1];\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t/***************\n\t\t\t\t\t\t\t\t\t Transforms\n\t\t\t\t\t\t\t\t\t ***************/\n\n\t\t\t\t\t\t\t\t\t/* Flag whether a transform property is being animated so that flushTransformCache() can be triggered once this tick pass is complete. */\n\t\t\t\t\t\t\t\t\tif (adjustedSetData[0] === \"transform\") {\n\t\t\t\t\t\t\t\t\t\ttransformPropertyExists = true;\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t/****************\n\t\t\t\t\t\t mobileHA\n\t\t\t\t\t\t ****************/\n\n\t\t\t\t\t\t/* If mobileHA is enabled, set the translate3d transform to null to force hardware acceleration.\n\t\t\t\t\t\t It's safe to override this property since Velocity doesn't actually support its animation (hooks are used in its place). */\n\t\t\t\t\t\tif (opts.mobileHA) {\n\t\t\t\t\t\t\t/* Don't set the null transform hack if we've already done so. */\n\t\t\t\t\t\t\tif (Data(element).transformCache.translate3d === undefined) {\n\t\t\t\t\t\t\t\t/* All entries on the transformCache object are later concatenated into a single transform string via flushTransformCache(). */\n\t\t\t\t\t\t\t\tData(element).transformCache.translate3d = \"(0px, 0px, 0px)\";\n\n\t\t\t\t\t\t\t\ttransformPropertyExists = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (transformPropertyExists) {\n\t\t\t\t\t\t\tCSS.flushTransformCache(element);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t/* The non-\"none\" display value is only applied to an element once -- when its associated call is first ticked through.\n\t\t\t\t\t Accordingly, it's set to false so that it isn't re-processed by this call in the next tick. */\n\t\t\t\t\tif (opts.display !== undefined && opts.display !== \"none\") {\n\t\t\t\t\t\tVelocity.State.calls[i][2].display = false;\n\t\t\t\t\t}\n\t\t\t\t\tif (opts.visibility !== undefined && opts.visibility !== \"hidden\") {\n\t\t\t\t\t\tVelocity.State.calls[i][2].visibility = false;\n\t\t\t\t\t}\n\n\t\t\t\t\t/* Pass the elements and the timing data (percentComplete, msRemaining, timeStart, tweenDummyValue) into the progress callback. */\n\t\t\t\t\tif (opts.progress) {\n\t\t\t\t\t\topts.progress.call(callContainer[1],\n\t\t\t\t\t\t\t\tcallContainer[1],\n\t\t\t\t\t\t\t\tpercentComplete,\n\t\t\t\t\t\t\t\tMath.max(0, (timeStart + opts.duration) - timeCurrent),\n\t\t\t\t\t\t\t\ttimeStart,\n\t\t\t\t\t\t\t\ttweenDummyValue);\n\t\t\t\t\t}\n\n\t\t\t\t\t/* If this call has finished tweening, pass its index to completeCall() to handle call cleanup. */\n\t\t\t\t\tif (percentComplete === 1) {\n\t\t\t\t\t\tcompleteCall(i);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/* Note: completeCall() sets the isTicking flag to false when the last call on Velocity.State.calls has completed. */\n\t\t\tif (Velocity.State.isTicking) {\n\t\t\t\tticker(tick);\n\t\t\t}\n\t\t}\n\n\t\t/**********************\n\t\t Call Completion\n\t\t **********************/\n\n\t\t/* Note: Unlike tick(), which processes all active calls at once, call completion is handled on a per-call basis. */\n\t\tfunction completeCall(callIndex, isStopped) {\n\t\t\t/* Ensure the call exists. */\n\t\t\tif (!Velocity.State.calls[callIndex]) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t/* Pull the metadata from the call. */\n\t\t\tvar call = Velocity.State.calls[callIndex][0],\n\t\t\t\t\telements = Velocity.State.calls[callIndex][1],\n\t\t\t\t\topts = Velocity.State.calls[callIndex][2],\n\t\t\t\t\tresolver = Velocity.State.calls[callIndex][4];\n\n\t\t\tvar remainingCallsExist = false;\n\n\t\t\t/*************************\n\t\t\t Element Finalization\n\t\t\t *************************/\n\n\t\t\tfor (var i = 0, callLength = call.length; i < callLength; i++) {\n\t\t\t\tvar element = call[i].element;\n\n\t\t\t\t/* If the user set display to \"none\" (intending to hide the element), set it now that the animation has completed. */\n\t\t\t\t/* Note: display:none isn't set when calls are manually stopped (via Velocity(\"stop\"). */\n\t\t\t\t/* Note: Display gets ignored with \"reverse\" calls and infinite loops, since this behavior would be undesirable. */\n\t\t\t\tif (!isStopped && !opts.loop) {\n\t\t\t\t\tif (opts.display === \"none\") {\n\t\t\t\t\t\tCSS.setPropertyValue(element, \"display\", opts.display);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (opts.visibility === \"hidden\") {\n\t\t\t\t\t\tCSS.setPropertyValue(element, \"visibility\", opts.visibility);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/* If the element's queue is empty (if only the \"inprogress\" item is left at position 0) or if its queue is about to run\n\t\t\t\t a non-Velocity-initiated entry, turn off the isAnimating flag. A non-Velocity-initiatied queue entry's logic might alter\n\t\t\t\t an element's CSS values and thereby cause Velocity's cached value data to go stale. To detect if a queue entry was initiated by Velocity,\n\t\t\t\t we check for the existence of our special Velocity.queueEntryFlag declaration, which minifiers won't rename since the flag\n\t\t\t\t is assigned to jQuery's global $ object and thus exists out of Velocity's own scope. */\n\t\t\t\tvar data = Data(element);\n\n\t\t\t\tif (opts.loop !== true && ($.queue(element)[1] === undefined || !/\\.velocityQueueEntryFlag/i.test($.queue(element)[1]))) {\n\t\t\t\t\t/* The element may have been deleted. Ensure that its data cache still exists before acting on it. */\n\t\t\t\t\tif (data) {\n\t\t\t\t\t\tdata.isAnimating = false;\n\t\t\t\t\t\t/* Clear the element's rootPropertyValueCache, which will become stale. */\n\t\t\t\t\t\tdata.rootPropertyValueCache = {};\n\n\t\t\t\t\t\tvar transformHAPropertyExists = false;\n\t\t\t\t\t\t/* If any 3D transform subproperty is at its default value (regardless of unit type), remove it. */\n\t\t\t\t\t\t$.each(CSS.Lists.transforms3D, function(i, transformName) {\n\t\t\t\t\t\t\tvar defaultValue = /^scale/.test(transformName) ? 1 : 0,\n\t\t\t\t\t\t\t\t\tcurrentValue = data.transformCache[transformName];\n\n\t\t\t\t\t\t\tif (data.transformCache[transformName] !== undefined && new RegExp(\"^\\\\(\" + defaultValue + \"[^.]\").test(currentValue)) {\n\t\t\t\t\t\t\t\ttransformHAPropertyExists = true;\n\n\t\t\t\t\t\t\t\tdelete data.transformCache[transformName];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\t/* Mobile devices have hardware acceleration removed at the end of the animation in order to avoid hogging the GPU's memory. */\n\t\t\t\t\t\tif (opts.mobileHA) {\n\t\t\t\t\t\t\ttransformHAPropertyExists = true;\n\t\t\t\t\t\t\tdelete data.transformCache.translate3d;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t/* Flush the subproperty removals to the DOM. */\n\t\t\t\t\t\tif (transformHAPropertyExists) {\n\t\t\t\t\t\t\tCSS.flushTransformCache(element);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t/* Remove the \"velocity-animating\" indicator class. */\n\t\t\t\t\t\tCSS.Values.removeClass(element, \"velocity-animating\");\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/*********************\n\t\t\t\t Option: Complete\n\t\t\t\t *********************/\n\n\t\t\t\t/* Complete is fired once per call (not once per element) and is passed the full raw DOM element set as both its context and its first argument. */\n\t\t\t\t/* Note: Callbacks aren't fired when calls are manually stopped (via Velocity(\"stop\"). */\n\t\t\t\tif (!isStopped && opts.complete && !opts.loop && (i === callLength - 1)) {\n\t\t\t\t\t/* We throw callbacks in a setTimeout so that thrown errors don't halt the execution of Velocity itself. */\n\t\t\t\t\ttry {\n\t\t\t\t\t\topts.complete.call(elements, elements);\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t\t\tthrow error;\n\t\t\t\t\t\t}, 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**********************\n\t\t\t\t Promise Resolving\n\t\t\t\t **********************/\n\n\t\t\t\t/* Note: Infinite loops don't return promises. */\n\t\t\t\tif (resolver && opts.loop !== true) {\n\t\t\t\t\tresolver(elements);\n\t\t\t\t}\n\n\t\t\t\t/****************************\n\t\t\t\t Option: Loop (Infinite)\n\t\t\t\t ****************************/\n\n\t\t\t\tif (data && opts.loop === true && !isStopped) {\n\t\t\t\t\t/* If a rotateX/Y/Z property is being animated by 360 deg with loop:true, swap tween start/end values to enable\n\t\t\t\t\t continuous iterative rotation looping. (Otherise, the element would just rotate back and forth.) */\n\t\t\t\t\t$.each(data.tweensContainer, function(propertyName, tweenContainer) {\n\t\t\t\t\t\tif (/^rotate/.test(propertyName) && ((parseFloat(tweenContainer.startValue) - parseFloat(tweenContainer.endValue)) % 360 === 0)) {\n\t\t\t\t\t\t\tvar oldStartValue = tweenContainer.startValue;\n\n\t\t\t\t\t\t\ttweenContainer.startValue = tweenContainer.endValue;\n\t\t\t\t\t\t\ttweenContainer.endValue = oldStartValue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (/^backgroundPosition/.test(propertyName) && parseFloat(tweenContainer.endValue) === 100 && tweenContainer.unitType === \"%\") {\n\t\t\t\t\t\t\ttweenContainer.endValue = 0;\n\t\t\t\t\t\t\ttweenContainer.startValue = 100;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\tVelocity(element, \"reverse\", {loop: true, delay: opts.delay});\n\t\t\t\t}\n\n\t\t\t\t/***************\n\t\t\t\t Dequeueing\n\t\t\t\t ***************/\n\n\t\t\t\t/* Fire the next call in the queue so long as this call's queue wasn't set to false (to trigger a parallel animation),\n\t\t\t\t which would have already caused the next call to fire. Note: Even if the end of the animation queue has been reached,\n\t\t\t\t $.dequeue() must still be called in order to completely clear jQuery's animation queue. */\n\t\t\t\tif (opts.queue !== false) {\n\t\t\t\t\t$.dequeue(element, opts.queue);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/************************\n\t\t\t Calls Array Cleanup\n\t\t\t ************************/\n\n\t\t\t/* Since this call is complete, set it to false so that the rAF tick skips it. This array is later compacted via compactSparseArray().\n\t\t\t (For performance reasons, the call is set to false instead of being deleted from the array: http://www.html5rocks.com/en/tutorials/speed/v8/) */\n\t\t\tVelocity.State.calls[callIndex] = false;\n\n\t\t\t/* Iterate through the calls array to determine if this was the final in-progress animation.\n\t\t\t If so, set a flag to end ticking and clear the calls array. */\n\t\t\tfor (var j = 0, callsLength = Velocity.State.calls.length; j < callsLength; j++) {\n\t\t\t\tif (Velocity.State.calls[j] !== false) {\n\t\t\t\t\tremainingCallsExist = true;\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (remainingCallsExist === false) {\n\t\t\t\t/* tick() will detect this flag upon its next iteration and subsequently turn itself off. */\n\t\t\t\tVelocity.State.isTicking = false;\n\n\t\t\t\t/* Clear the calls array so that its length is reset. */\n\t\t\t\tdelete Velocity.State.calls;\n\t\t\t\tVelocity.State.calls = [];\n\t\t\t}\n\t\t}\n\n\t\t/******************\n\t\t Frameworks\n\t\t ******************/\n\n\t\t/* Both jQuery and Zepto allow their $.fn object to be extended to allow wrapped elements to be subjected to plugin calls.\n\t\t If either framework is loaded, register a \"velocity\" extension pointing to Velocity's core animate() method.  Velocity\n\t\t also registers itself onto a global container (window.jQuery || window.Zepto || window) so that certain features are\n\t\t accessible beyond just a per-element scope. This master object contains an .animate() method, which is later assigned to $.fn\n\t\t (if jQuery or Zepto are present). Accordingly, Velocity can both act on wrapped DOM elements and stand alone for targeting raw DOM elements. */\n\t\tglobal.Velocity = Velocity;\n\n\t\tif (global !== window) {\n\t\t\t/* Assign the element function to Velocity's core animate() method. */\n\t\t\tglobal.fn.velocity = animate;\n\t\t\t/* Assign the object function's defaults to Velocity's global defaults object. */\n\t\t\tglobal.fn.velocity.defaults = Velocity.defaults;\n\t\t}\n\n\t\t/***********************\n\t\t Packaged Redirects\n\t\t ***********************/\n\n\t\t/* slideUp, slideDown */\n\t\t$.each([\"Down\", \"Up\"], function(i, direction) {\n\t\t\tVelocity.Redirects[\"slide\" + direction] = function(element, options, elementsIndex, elementsSize, elements, promiseData) {\n\t\t\t\tvar opts = $.extend({}, options),\n\t\t\t\t\t\tbegin = opts.begin,\n\t\t\t\t\t\tcomplete = opts.complete,\n\t\t\t\t\t\tcomputedValues = {height: \"\", marginTop: \"\", marginBottom: \"\", paddingTop: \"\", paddingBottom: \"\"},\n\t\t\t\tinlineValues = {};\n\n\t\t\t\tif (opts.display === undefined) {\n\t\t\t\t\t/* Show the element before slideDown begins and hide the element after slideUp completes. */\n\t\t\t\t\t/* Note: Inline elements cannot have dimensions animated, so they're reverted to inline-block. */\n\t\t\t\t\topts.display = (direction === \"Down\" ? (Velocity.CSS.Values.getDisplayType(element) === \"inline\" ? \"inline-block\" : \"block\") : \"none\");\n\t\t\t\t}\n\n\t\t\t\topts.begin = function() {\n\t\t\t\t\t/* If the user passed in a begin callback, fire it now. */\n\t\t\t\t\tif (begin) {\n\t\t\t\t\t\tbegin.call(elements, elements);\n\t\t\t\t\t}\n\n\t\t\t\t\t/* Cache the elements' original vertical dimensional property values so that we can animate back to them. */\n\t\t\t\t\tfor (var property in computedValues) {\n\t\t\t\t\t\tif (!computedValues.hasOwnProperty(property)) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tinlineValues[property] = element.style[property];\n\n\t\t\t\t\t\t/* For slideDown, use forcefeeding to animate all vertical properties from 0. For slideUp,\n\t\t\t\t\t\t use forcefeeding to start from computed values and animate down to 0. */\n\t\t\t\t\t\tvar propertyValue = Velocity.CSS.getPropertyValue(element, property);\n\t\t\t\t\t\tcomputedValues[property] = (direction === \"Down\") ? [propertyValue, 0] : [0, propertyValue];\n\t\t\t\t\t}\n\n\t\t\t\t\t/* Force vertical overflow content to clip so that sliding works as expected. */\n\t\t\t\t\tinlineValues.overflow = element.style.overflow;\n\t\t\t\t\telement.style.overflow = \"hidden\";\n\t\t\t\t};\n\n\t\t\t\topts.complete = function() {\n\t\t\t\t\t/* Reset element to its pre-slide inline values once its slide animation is complete. */\n\t\t\t\t\tfor (var property in inlineValues) {\n\t\t\t\t\t\tif (inlineValues.hasOwnProperty(property)) {\n\t\t\t\t\t\t\telement.style[property] = inlineValues[property];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t/* If the user passed in a complete callback, fire it now. */\n\t\t\t\t\tif (complete) {\n\t\t\t\t\t\tcomplete.call(elements, elements);\n\t\t\t\t\t}\n\t\t\t\t\tif (promiseData) {\n\t\t\t\t\t\tpromiseData.resolver(elements);\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tVelocity(element, computedValues, opts);\n\t\t\t};\n\t\t});\n\n\t\t/* fadeIn, fadeOut */\n\t\t$.each([\"In\", \"Out\"], function(i, direction) {\n\t\t\tVelocity.Redirects[\"fade\" + direction] = function(element, options, elementsIndex, elementsSize, elements, promiseData) {\n\t\t\t\tvar opts = $.extend({}, options),\n\t\t\t\t\t\toriginalComplete = opts.complete,\n\t\t\t\t\t\tpropertiesMap = {opacity: (direction === \"In\") ? 1 : 0};\n\n\t\t\t\t/* Since redirects are triggered individually for each element in the animated set, avoid repeatedly triggering\n\t\t\t\t callbacks by firing them only when the final element has been reached. */\n\t\t\t\tif (elementsIndex !== elementsSize - 1) {\n\t\t\t\t\topts.complete = opts.begin = null;\n\t\t\t\t} else {\n\t\t\t\t\topts.complete = function() {\n\t\t\t\t\t\tif (originalComplete) {\n\t\t\t\t\t\t\toriginalComplete.call(elements, elements);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (promiseData) {\n\t\t\t\t\t\t\tpromiseData.resolver(elements);\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\t/* If a display was passed in, use it. Otherwise, default to \"none\" for fadeOut or the element-specific default for fadeIn. */\n\t\t\t\t/* Note: We allow users to pass in \"null\" to skip display setting altogether. */\n\t\t\t\tif (opts.display === undefined) {\n\t\t\t\t\topts.display = (direction === \"In\" ? \"auto\" : \"none\");\n\t\t\t\t}\n\n\t\t\t\tVelocity(this, propertiesMap, opts);\n\t\t\t};\n\t\t});\n\n\t\treturn Velocity;\n\t}((window.jQuery || window.Zepto || window), window, document);\n}));\n\n/******************\n Known Issues\n ******************/\n\n/* The CSS spec mandates that the translateX/Y/Z transforms are %-relative to the element itself -- not its parent.\n Velocity, however, doesn't make this distinction. Thus, converting to or from the % unit with these subproperties\n will produce an inaccurate conversion value. The same issue exists with the cx/cy attributes of SVG circles and ellipses. */\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ },
/* 58 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(console) {'use strict';\n\nvar createView = __webpack_require__(59),\n    workspaceState = __webpack_require__(25),\n    bindDatePicker = __webpack_require__(61),\n    pageModels = __webpack_require__(62),\n    editController = __webpack_require__(52),\n    getActivePage = __webpack_require__(56),\n    saveNewPage = __webpack_require__(63),\n    utilities = __webpack_require__(64),\n    activePageType = \"\";\n\nvar createController = {\n\n    init: function init() {\n        activePageType = utilities.findNodeInBrowseTreeByUri(workspaceState.activeUrl.get()).type;\n        createView.render(createController.getValidPageOptions());\n        this.bindEvents();\n\n        // If page being created as part of a series pre-populate some inputs\n        if (activePageType === \"bulletin\" || activePageType === \"article\") {\n            this.prePopulateInputs();\n            this.prePopulatePageModel();\n        }\n    },\n\n    bindEvents: function bindEvents() {\n        var $form = $('#js-create__form');\n\n        this.bindPageTypeSelection();\n        this.bindFormInput($form);\n        this.bindFormSubmit($form);\n    },\n\n    bindFormSubmit: function bindFormSubmit($form) {\n        $form.submit(function (event) {\n            event.preventDefault();\n\n            if (!createController.validateForm()) {\n                return false;\n            }\n\n            saveNewPage().then(function (newPageURI) {\n                workspaceState.activeUrl.set(newPageURI);\n                workspaceState.activeScreen.set(\"edit\");\n            }).catch(function (error) {\n                console.log(\"Error saving new page \\n\", error);\n            });\n        });\n    },\n\n    bindFormInput: function bindFormInput($form) {\n        var newEditorData;\n\n        // Remove previous bindings\n        $form.off();\n\n        // Bind updating to any inputs\n        $form.on('input', '#edition', function () {\n            newEditorData = workspaceState.editorData.get();\n            newEditorData.description.edition = $(this).val();\n            workspaceState.editorData.set(newEditorData);\n        });\n\n        $form.on('input', '#pagename', function () {\n            newEditorData = workspaceState.editorData.get();\n            newEditorData.description.title = $(this).val();\n            workspaceState.editorData.set(newEditorData);\n        });\n\n        $form.on('change', '#releaseDate', function () {\n            newEditorData = workspaceState.editorData.get();\n            newEditorData.description.releaseDate = new Date($(this).val()).toISOString();\n            workspaceState.editorData.set(newEditorData);\n        });\n    },\n\n    bindPageTypeSelection: function bindPageTypeSelection() {\n        $(\"#pageType\").change(function () {\n            var selectOption = $(this).val();\n            createController.buildInputs(selectOption);\n            workspaceState.editorData.set(createController.getPageModel(selectOption));\n        });\n    },\n\n    prePopulateInputs: function prePopulateInputs() {\n        var $pageNameInput;\n\n        // Render inputs\n        createController.buildInputs(activePageType);\n        workspaceState.editorData.set(createController.getPageModel(activePageType));\n        $pageNameInput = $('#pagename');\n\n        // Disable page name input as it'll be inheriting from page data\n        $pageNameInput.prop('disabled', true).prop('placeholder', 'Page name [FETCHING TITLE...]');\n\n        // Get title from page data of active URL\n        getActivePage().then(function (pageData) {\n            $pageNameInput.val(pageData.description.title).trigger('input');\n            $pageNameInput.prop('disabled', false).prop('placeholder', 'Page name');\n        }).catch(function (error) {\n            console.log(\"Error getting page data for creating page as part of a series:\\n\", error);\n            $pageNameInput.prop('disabled', false).prop('placeholder', 'Page name');\n        });\n    },\n\n    prePopulatePageModel: function prePopulatePageModel() {\n        // Get data from active bulletin ready for editor screen later\n        getActivePage().then(function (pageData) {\n            var newEditorData = workspaceState.editorData.get();\n\n            newEditorData.description.nationalStatistic = pageData.description.nationalStatistic;\n            newEditorData.description.contact.name = pageData.description.contact.name;\n            newEditorData.description.contact.email = pageData.description.contact.email;\n            newEditorData.description.contact.telephone = pageData.description.contact.telephone;\n            newEditorData.description.keywords = pageData.description.keywords;\n            newEditorData.description.metaDescription = pageData.description.metaDescription;\n            newEditorData.relatedMethodology = pageData.relatedMethodology;\n\n            if (newEditorData.type === \"bulletin\") {\n                newEditorData.description.summary = pageData.description.summary;\n                newEditorData.relatedData = pageData.relatedData;\n            }\n\n            // Update state with new editorData inherited from publication series\n            workspaceState.editorData.set(newEditorData);\n        }).catch(function (error) {\n            console.log(\"Error getting page to inherit series data into page model: \\n\", error);\n        });\n    },\n\n    validateForm: function validateForm() {\n        var pageData = workspaceState.editorData.get();\n\n        createView.renderInputError.clearAll();\n\n        /* Validate each key that could exist in form data */\n\n        // Edition\n        var edition;\n        if (pageData.description.edition) {\n            edition = pageData.description.edition.toLowerCase();\n        }\n        if (edition && (edition === 'latest' || edition === 'data' || edition === 'previousreleases' || edition === 'current')) {\n            createView.renderInputError.edition(\"<span>'\" + edition + \"' is a reserved path so it can't be used as an edition title</span>\");\n            return false;\n        }\n\n        return true;\n    },\n\n    buildInputs: function buildInputs(selectedOptionId) {\n        /* Get string of inputs HTML and request view to render it */\n        var inputsArray = this.getInputsForOptionID(selectedOptionId),\n            inputsArrayLength = inputsArray.length,\n            i;\n\n        // Empty any existing optional inputs from DOM\n        createView.inputs.empty();\n\n        // Go through array and build up new array of HTML returned for input type from view\n        for (i = 0; i < inputsArrayLength; i++) {\n            var inputHtml = createView.inputHtml(inputsArray[i]);\n            createView.inputs.append(inputHtml);\n\n            // Bind date picker pop-up on focus of input - pull this out to a separate function if it starts being used for more inputs\n            if (inputsArray[i] === \"releaseDate\") {\n                bindDatePicker();\n            }\n        }\n    },\n\n    getInputsForOptionID: function getInputsForOptionID(selectedOptionId) {\n        // Get page type for the selected option\n        switch (selectedOptionId) {\n            case \"noneSelected\":\n                {\n                    return [];\n                }\n            case \"bulletin\":\n                {\n                    return [\"pageName\", \"edition\", \"releaseDate\"];\n                }\n            case \"article\":\n                {\n                    return [\"pageName\", \"edition\", \"releaseDate\"];\n                }\n            case \"dataset_landing_page\":\n                {\n                    return [\"pageName\", \"releaseDate\"];\n                }\n            case \"timeseries_dataset_landing_page\":\n                {\n                    return [\"pageName\", \"releaseDate\"];\n                }\n            default:\n                {\n                    console.log(\"Unrecognised selected option id, doesn't map to a page type\");\n                    return false;\n                }\n        }\n    },\n\n    getPageModel: function getPageModel(selectedOptionId) {\n        switch (selectedOptionId) {\n            case \"bulletin\":\n                {\n                    return pageModels.bulletin;\n                }\n            case \"article\":\n                {\n                    return pageModels.article;\n                }\n            default:\n                {\n                    return {};\n                }\n        }\n    },\n\n    getValidPageTypesForLocation: function getValidPageTypesForLocation() {\n        /* Returns an array of page types that can be created at a URI */\n        var validPageTypes = [];\n\n        switch (activePageType) {\n            case \"home_page\":\n                {\n                    validPageTypes = [\"visualisation\", \"release\"];\n                    break;\n                }\n            case \"product_page\":\n                {\n                    validPageTypes = [\"bulletin\", \"article\", \"article_download\", \"compendium_landing_page\", \"static_methodology\", \"static_methodology_download\", \"static_qmi\", \"static_adhoc\", \"dataset_landing_page\", \"timeseries_dataset_landing_page\"];\n                    break;\n                }\n            case \"bulletin\":\n                {\n                    validPageTypes = [\"bulletin\"];\n                    break;\n                }\n            case \"article\":\n                {\n                    validPageTypes = [\"article\"];\n                    break;\n                }\n            case \"compendium\":\n                {\n                    validPageTypes = [\"compendium_chapter\", \"compendium_data\"];\n                    break;\n                }\n        }\n\n        return validPageTypes;\n    },\n\n    allPageTypeOptions: function allPageTypeOptions() {\n        /* All possible <option> elements that can be used in page type <select> */\n        return [{\n            id: \"bulletin\",\n            title: \"Statistical bulletin\"\n        }, {\n            id: \"article\",\n            title: \"Article\"\n        }, {\n            id: \"article_download\",\n            title: \"Article [PDF]\"\n        }, {\n            id: \"compendium_landing_page\",\n            title: \"Compendium\"\n        }, {\n            id: \"compendium_chapter\",\n            title: \"Compendium chapter\"\n        }, {\n            id: \"compendium_data\",\n            title: \"Compendium data\"\n        }, {\n            id: \"static_landing_page\",\n            title: \"Static landing page\"\n        }, {\n            id: \"static_page\",\n            title: \"Static page\"\n        }, {\n            id: \"static_article\",\n            title: \"Static article\"\n        }, {\n            id: \"static_foi\",\n            title: \"FOI\"\n        }, {\n            id: \"static_qmi\",\n            title: \"QMI\"\n        }, {\n            id: \"static_adhoc\",\n            title: \"User requested data\"\n        }, {\n            id: \"static_methodology\",\n            title: \"Methodology article\"\n        }, {\n            id: \"static_methodology_download\",\n            title: \"Methodology article [PDF]\"\n        }, {\n            id: \"dataset_landing_page\",\n            title: \"Dataset landing page\"\n        }, {\n            id: \"timeseries_dataset_landing_page\",\n            title: \"Timeseries data landing page\"\n        }, {\n            id: \"dataset\",\n            title: \"Dataset\"\n        }, {\n            id: \"timeseries_dataset\",\n            title: \"Timeseries dataset\"\n        }, {\n            id: \"visualisation\",\n            title: \"Data visualisation\"\n        }, {\n            id: \"release\",\n            title: \"Calendar entry\"\n        }];\n    },\n\n    getValidPageOptions: function getValidPageOptions() {\n        var validPageTypes = createController.getValidPageTypesForLocation(),\n            validPageTypesLength = validPageTypes.length,\n            validPageOptions = createController.allPageTypeOptions(),\n            validPageOptionsLength = validPageOptions.length,\n            index,\n            nestedIndex;\n\n        for (index = 0; index < validPageOptionsLength; index++) {\n            for (nestedIndex = 0; nestedIndex < validPageTypesLength; nestedIndex++) {\n\n                if (validPageOptions[index].id == validPageTypes[nestedIndex]) {\n                    validPageOptions[index].valid = true;\n                }\n\n                if (validPageOptions[index].id === activePageType) {\n                    validPageOptions[index].active = true;\n                }\n            }\n        }\n\n        return validPageOptions;\n    }\n\n};\n\nmodule.exports = createController;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ },
/* 59 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(console) {'use strict';\n\nvar createTemplate = __webpack_require__(60);\n\nvar createView = {\n\n    render: function render(templateData) {\n        document.getElementById('workspace-browse').innerHTML = createTemplate(templateData);\n    },\n\n    inputs: {\n\n        append: function append(inputHtml) {\n            document.getElementById('js-create__optional-inputs').innerHTML += inputHtml;\n        },\n\n        empty: function empty() {\n            document.getElementById('js-create__optional-inputs').innerHTML = '';\n        }\n    },\n\n    findErrorElement: function findErrorElement(inputId) {\n        var siblings = document.getElementById(inputId).parentNode.children,\n            siblingsLength = siblings.length,\n            i,\n            errorElement;\n\n        for (i = 0; i < siblingsLength; i++) {\n            if (siblings[i].classList.contains(\"js-create__input-error\")) {\n                errorElement = siblings[i];\n                break;\n            }\n        }\n\n        return errorElement;\n    },\n\n    renderInputError: {\n\n        clearAll: function clearAll() {\n            var errorElements = document.getElementsByClassName('js-create__input-error'),\n                errorElementsLength = errorElements.length,\n                i;\n\n            for (i = 0; i < errorElementsLength; i++) {\n                errorElements[i].innerHTML = \"\";\n            }\n        },\n\n        pageType: function pageType(error) {\n            var errorElement = createView.findErrorElement('pageType');\n            errorElement.innerHTML = error;\n        },\n\n        edition: function edition(error) {\n            var errorElement = createView.findErrorElement('edition');\n            errorElement.innerHTML = error;\n        },\n\n        releaseDate: function releaseDate(error) {\n            var errorElement = createView.findErrorElement('releaseDate');\n            errorElement.innerHTML = error;\n        }\n    },\n\n    inputHtml: function inputHtml(inputType) {\n\n        switch (inputType) {\n            case \"pageName\":\n                {\n                    return '<div><label for=\"pagename\" class=\"hidden\">Page name</label>' + '<input id=\"pagename\" name=\"pagename\" required minlength=\"4\" class=\"full\" type=\"text\" placeholder=\"Page name\"/>' + '<span class=\"js-create__input-error\"></span></div>';\n                }\n            case \"edition\":\n                {\n                    return '<div><label for=\"edition\">Edition</label>' + '<input id=\"edition\" name=\"edition\" type=\"text\" placeholder=\"August 2010, Q3 2015, 1978, etc.\" />' + '<span class=\"js-create__input-error\"></span></div>';\n                }\n            case \"releaseDate\":\n                {\n                    return '<div><label for=\"releaseDate\">Release date</label>' + '<input id=\"releaseDate\" name=\"releaseDate\" required type=\"text\" placeholder=\"day month year\" />' + '<span class=\"js-create__input-error\"></span></div>';\n                }\n            default:\n                {\n                    console.log('Input type for HTML requested from createView class not recognised');\n                    return false;\n                }\n        }\n    }\n\n};\n\nmodule.exports = createView;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTkuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vYXBwL3dvcmtzcGFjZS9jcmVhdGUvY3JlYXRlVmlldy5qcz80Y2M0Il0sInNvdXJjZXNDb250ZW50IjpbIlxudmFyIGNyZWF0ZVRlbXBsYXRlID0gcmVxdWlyZSgnLi9jcmVhdGUuaGFuZGxlYmFycycpO1xuXG52YXIgY3JlYXRlVmlldyA9IHtcblxuICAgIHJlbmRlcjogZnVuY3Rpb24odGVtcGxhdGVEYXRhKSB7XG4gICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd3b3Jrc3BhY2UtYnJvd3NlJykuaW5uZXJIVE1MID0gY3JlYXRlVGVtcGxhdGUodGVtcGxhdGVEYXRhKTtcbiAgICB9LFxuXG4gICAgaW5wdXRzOiB7XG5cbiAgICAgICAgYXBwZW5kOiBmdW5jdGlvbihpbnB1dEh0bWwpIHtcbiAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdqcy1jcmVhdGVfX29wdGlvbmFsLWlucHV0cycpLmlubmVySFRNTCArPSBpbnB1dEh0bWw7XG4gICAgICAgIH0sXG5cbiAgICAgICAgZW1wdHk6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2pzLWNyZWF0ZV9fb3B0aW9uYWwtaW5wdXRzJykuaW5uZXJIVE1MID0gJyc7XG4gICAgICAgIH1cbiAgICB9LFxuXG4gICAgZmluZEVycm9yRWxlbWVudDogZnVuY3Rpb24oaW5wdXRJZCkge1xuICAgICAgICB2YXIgc2libGluZ3MgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChpbnB1dElkKS5wYXJlbnROb2RlLmNoaWxkcmVuLFxuICAgICAgICAgICAgc2libGluZ3NMZW5ndGggPSBzaWJsaW5ncy5sZW5ndGgsXG4gICAgICAgICAgICBpLFxuICAgICAgICAgICAgZXJyb3JFbGVtZW50O1xuXG4gICAgICAgIGZvciAoaSA9IDA7IGkgPCBzaWJsaW5nc0xlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBpZiAoc2libGluZ3NbaV0uY2xhc3NMaXN0LmNvbnRhaW5zKFwianMtY3JlYXRlX19pbnB1dC1lcnJvclwiKSkge1xuICAgICAgICAgICAgICAgIGVycm9yRWxlbWVudCA9IHNpYmxpbmdzW2ldO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIGVycm9yRWxlbWVudDtcbiAgICB9LFxuXG4gICAgcmVuZGVySW5wdXRFcnJvcjoge1xuXG4gICAgICAgIGNsZWFyQWxsOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHZhciBlcnJvckVsZW1lbnRzID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgnanMtY3JlYXRlX19pbnB1dC1lcnJvcicpLFxuICAgICAgICAgICAgICAgIGVycm9yRWxlbWVudHNMZW5ndGggPSBlcnJvckVsZW1lbnRzLmxlbmd0aCxcbiAgICAgICAgICAgICAgICBpO1xuXG4gICAgICAgICAgICBmb3IgKGkgPSAwOyBpIDwgZXJyb3JFbGVtZW50c0xlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgZXJyb3JFbGVtZW50c1tpXS5pbm5lckhUTUwgPSBcIlwiO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuXG4gICAgICAgIHBhZ2VUeXBlOiBmdW5jdGlvbihlcnJvcikge1xuICAgICAgICAgICAgdmFyIGVycm9yRWxlbWVudCA9IGNyZWF0ZVZpZXcuZmluZEVycm9yRWxlbWVudCgncGFnZVR5cGUnKTtcbiAgICAgICAgICAgIGVycm9yRWxlbWVudC5pbm5lckhUTUwgPSBlcnJvcjtcbiAgICAgICAgfSxcblxuICAgICAgICBlZGl0aW9uOiBmdW5jdGlvbihlcnJvcikge1xuICAgICAgICAgICAgdmFyIGVycm9yRWxlbWVudCA9IGNyZWF0ZVZpZXcuZmluZEVycm9yRWxlbWVudCgnZWRpdGlvbicpO1xuICAgICAgICAgICAgZXJyb3JFbGVtZW50LmlubmVySFRNTCA9IGVycm9yO1xuICAgICAgICB9LFxuXG4gICAgICAgIHJlbGVhc2VEYXRlOiBmdW5jdGlvbihlcnJvcikge1xuICAgICAgICAgICAgdmFyIGVycm9yRWxlbWVudCA9IGNyZWF0ZVZpZXcuZmluZEVycm9yRWxlbWVudCgncmVsZWFzZURhdGUnKTtcbiAgICAgICAgICAgIGVycm9yRWxlbWVudC5pbm5lckhUTUwgPSBlcnJvcjtcbiAgICAgICAgfVxuICAgIH0sXG5cbiAgICBpbnB1dEh0bWw6IGZ1bmN0aW9uKGlucHV0VHlwZSkge1xuXG4gICAgICAgIHN3aXRjaCAoaW5wdXRUeXBlKSB7XG4gICAgICAgICAgICBjYXNlIChcInBhZ2VOYW1lXCIpOiB7XG4gICAgICAgICAgICAgICAgcmV0dXJuICc8ZGl2PjxsYWJlbCBmb3I9XCJwYWdlbmFtZVwiIGNsYXNzPVwiaGlkZGVuXCI+UGFnZSBuYW1lPC9sYWJlbD4nICtcbiAgICAgICAgICAgICAgICAgICAgJzxpbnB1dCBpZD1cInBhZ2VuYW1lXCIgbmFtZT1cInBhZ2VuYW1lXCIgcmVxdWlyZWQgbWlubGVuZ3RoPVwiNFwiIGNsYXNzPVwiZnVsbFwiIHR5cGU9XCJ0ZXh0XCIgcGxhY2Vob2xkZXI9XCJQYWdlIG5hbWVcIi8+JyArXG4gICAgICAgICAgICAgICAgICAgICc8c3BhbiBjbGFzcz1cImpzLWNyZWF0ZV9faW5wdXQtZXJyb3JcIj48L3NwYW4+PC9kaXY+JztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNhc2UgKFwiZWRpdGlvblwiKToge1xuICAgICAgICAgICAgICAgIHJldHVybiAnPGRpdj48bGFiZWwgZm9yPVwiZWRpdGlvblwiPkVkaXRpb248L2xhYmVsPicgK1xuICAgICAgICAgICAgICAgICAgICAnPGlucHV0IGlkPVwiZWRpdGlvblwiIG5hbWU9XCJlZGl0aW9uXCIgdHlwZT1cInRleHRcIiBwbGFjZWhvbGRlcj1cIkF1Z3VzdCAyMDEwLCBRMyAyMDE1LCAxOTc4LCBldGMuXCIgLz4nICtcbiAgICAgICAgICAgICAgICAgICAgJzxzcGFuIGNsYXNzPVwianMtY3JlYXRlX19pbnB1dC1lcnJvclwiPjwvc3Bhbj48L2Rpdj4nO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY2FzZSAoXCJyZWxlYXNlRGF0ZVwiKToge1xuICAgICAgICAgICAgICAgIHJldHVybiAnPGRpdj48bGFiZWwgZm9yPVwicmVsZWFzZURhdGVcIj5SZWxlYXNlIGRhdGU8L2xhYmVsPicgK1xuICAgICAgICAgICAgICAgICAgICAnPGlucHV0IGlkPVwicmVsZWFzZURhdGVcIiBuYW1lPVwicmVsZWFzZURhdGVcIiByZXF1aXJlZCB0eXBlPVwidGV4dFwiIHBsYWNlaG9sZGVyPVwiZGF5IG1vbnRoIHllYXJcIiAvPicgK1xuICAgICAgICAgICAgICAgICAgICAnPHNwYW4gY2xhc3M9XCJqcy1jcmVhdGVfX2lucHV0LWVycm9yXCI+PC9zcGFuPjwvZGl2Pic7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBkZWZhdWx0OiB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ0lucHV0IHR5cGUgZm9yIEhUTUwgcmVxdWVzdGVkIGZyb20gY3JlYXRlVmlldyBjbGFzcyBub3QgcmVjb2duaXNlZCcpO1xuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuXG5cbn07XG5cbm1vZHVsZS5leHBvcnRzID0gY3JlYXRlVmlldztcblxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIGFwcC93b3Jrc3BhY2UvY3JlYXRlL2NyZWF0ZVZpZXcuanMiXSwibWFwcGluZ3MiOiI7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQVJBO0FBQ0E7QUFVQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFJQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUF6QkE7QUFDQTtBQTJCQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFHQTtBQUNBO0FBQUE7QUFDQTtBQUdBO0FBQ0E7QUFBQTtBQUNBO0FBR0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBbkJBO0FBcUJBO0FBQ0E7QUFyRkE7QUFDQTtBQXlGQTsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ },
/* 60 */
/***/ function(module, exports, __webpack_require__) {

	eval("var Handlebars = __webpack_require__(32);\nfunction __default(obj) { return obj && (obj.__esModule ? obj[\"default\"] : obj); }\nmodule.exports = (Handlebars[\"default\"] || Handlebars).template({\"1\":function(depth0,helpers,partials,data) {\n    var stack1;\n\n  return ((stack1 = helpers['if'].call(depth0,(depth0 != null ? depth0.valid : depth0),{\"name\":\"if\",\"hash\":{},\"fn\":this.program(2, data, 0),\"inverse\":this.noop,\"data\":data})) != null ? stack1 : \"\");\n},\"2\":function(depth0,helpers,partials,data) {\n    var stack1, helper, alias1=helpers.helperMissing, alias2=\"function\", alias3=this.escapeExpression;\n\n  return \"                            <option \"\n    + ((stack1 = helpers['if'].call(depth0,(depth0 != null ? depth0.active : depth0),{\"name\":\"if\",\"hash\":{},\"fn\":this.program(3, data, 0),\"inverse\":this.noop,\"data\":data})) != null ? stack1 : \"\")\n    + \" value=\\\"\"\n    + alias3(((helper = (helper = helpers.id || (depth0 != null ? depth0.id : depth0)) != null ? helper : alias1),(typeof helper === alias2 ? helper.call(depth0,{\"name\":\"id\",\"hash\":{},\"data\":data}) : helper)))\n    + \"\\\" name=\\\"\"\n    + alias3(((helper = (helper = helpers.id || (depth0 != null ? depth0.id : depth0)) != null ? helper : alias1),(typeof helper === alias2 ? helper.call(depth0,{\"name\":\"id\",\"hash\":{},\"data\":data}) : helper)))\n    + \"\\\">\"\n    + alias3(((helper = (helper = helpers.title || (depth0 != null ? depth0.title : depth0)) != null ? helper : alias1),(typeof helper === alias2 ? helper.call(depth0,{\"name\":\"title\",\"hash\":{},\"data\":data}) : helper)))\n    + \"</option>\\n\";\n},\"3\":function(depth0,helpers,partials,data) {\n    return \"selected\";\n},\"5\":function(depth0,helpers,partials,data) {\n    var stack1;\n\n  return ((stack1 = helpers.unless.call(depth0,(depth0 != null ? depth0.valid : depth0),{\"name\":\"unless\",\"hash\":{},\"fn\":this.program(6, data, 0),\"inverse\":this.noop,\"data\":data})) != null ? stack1 : \"\");\n},\"6\":function(depth0,helpers,partials,data) {\n    var helper, alias1=helpers.helperMissing, alias2=\"function\", alias3=this.escapeExpression;\n\n  return \"                            <option value=\\\"\"\n    + alias3(((helper = (helper = helpers.id || (depth0 != null ? depth0.id : depth0)) != null ? helper : alias1),(typeof helper === alias2 ? helper.call(depth0,{\"name\":\"id\",\"hash\":{},\"data\":data}) : helper)))\n    + \"\\\" name=\\\"\"\n    + alias3(((helper = (helper = helpers.id || (depth0 != null ? depth0.id : depth0)) != null ? helper : alias1),(typeof helper === alias2 ? helper.call(depth0,{\"name\":\"id\",\"hash\":{},\"data\":data}) : helper)))\n    + \"\\\" disabled>\"\n    + alias3(((helper = (helper = helpers.title || (depth0 != null ? depth0.title : depth0)) != null ? helper : alias1),(typeof helper === alias2 ? helper.call(depth0,{\"name\":\"title\",\"hash\":{},\"data\":data}) : helper)))\n    + \"</option>\\n\";\n},\"compiler\":[6,\">= 2.0.0-beta.1\"],\"main\":function(depth0,helpers,partials,data) {\n    var stack1;\n\n  return \"<section class=\\\"panel workspace-create\\\" id=\\\"js-create\\\">\\n    <h1>New page details</h1>\\n    <form id=\\\"js-create__form\\\">\\n        <div>\\n            <label for=\\\"pageType\\\" class=\\\"hidden\\\">Page type</label>\\n            <div class=\\\"select-wrap\\\">\\n                <select id=\\\"pageType\\\" required>\\n                    <option value=\\\"\\\" name=\\\"noneSelected\\\"> --- Select page type ---</option>\\n\"\n    + ((stack1 = helpers.each.call(depth0,depth0,{\"name\":\"each\",\"hash\":{},\"fn\":this.program(1, data, 0),\"inverse\":this.noop,\"data\":data})) != null ? stack1 : \"\")\n    + \"\\n\"\n    + ((stack1 = helpers.each.call(depth0,depth0,{\"name\":\"each\",\"hash\":{},\"fn\":this.program(5, data, 0),\"inverse\":this.noop,\"data\":data})) != null ? stack1 : \"\")\n    + \"                </select>\\n            </div>\\n            <span class=\\\"js-create__input-error\\\"></span>\\n        </div>\\n        <div id=\\\"js-create__optional-inputs\\\"></div>\\n        <button class=\\\"btn btn--positive margin-left--0 btn-page-create\\\">Create page</button>\\n    </form>\\n</section>\\n\";\n},\"useData\":true});//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjAuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvd29ya3NwYWNlL2NyZWF0ZS9jcmVhdGUuaGFuZGxlYmFycz9kODdmIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBIYW5kbGViYXJzID0gcmVxdWlyZShcIi9Vc2Vycy9jcmlzcGlubWVycmltYW4vR2l0L29uc2RpZ2l0YWwvZmxvcmVuY2Uvc3JjL25vZGVfbW9kdWxlcy9oYW5kbGViYXJzL3J1bnRpbWUuanNcIik7XG5mdW5jdGlvbiBfX2RlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgKG9iai5fX2VzTW9kdWxlID8gb2JqW1wiZGVmYXVsdFwiXSA6IG9iaik7IH1cbm1vZHVsZS5leHBvcnRzID0gKEhhbmRsZWJhcnNbXCJkZWZhdWx0XCJdIHx8IEhhbmRsZWJhcnMpLnRlbXBsYXRlKHtcIjFcIjpmdW5jdGlvbihkZXB0aDAsaGVscGVycyxwYXJ0aWFscyxkYXRhKSB7XG4gICAgdmFyIHN0YWNrMTtcblxuICByZXR1cm4gKChzdGFjazEgPSBoZWxwZXJzWydpZiddLmNhbGwoZGVwdGgwLChkZXB0aDAgIT0gbnVsbCA/IGRlcHRoMC52YWxpZCA6IGRlcHRoMCkse1wibmFtZVwiOlwiaWZcIixcImhhc2hcIjp7fSxcImZuXCI6dGhpcy5wcm9ncmFtKDIsIGRhdGEsIDApLFwiaW52ZXJzZVwiOnRoaXMubm9vcCxcImRhdGFcIjpkYXRhfSkpICE9IG51bGwgPyBzdGFjazEgOiBcIlwiKTtcbn0sXCIyXCI6ZnVuY3Rpb24oZGVwdGgwLGhlbHBlcnMscGFydGlhbHMsZGF0YSkge1xuICAgIHZhciBzdGFjazEsIGhlbHBlciwgYWxpYXMxPWhlbHBlcnMuaGVscGVyTWlzc2luZywgYWxpYXMyPVwiZnVuY3Rpb25cIiwgYWxpYXMzPXRoaXMuZXNjYXBlRXhwcmVzc2lvbjtcblxuICByZXR1cm4gXCIgICAgICAgICAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiBcIlxuICAgICsgKChzdGFjazEgPSBoZWxwZXJzWydpZiddLmNhbGwoZGVwdGgwLChkZXB0aDAgIT0gbnVsbCA/IGRlcHRoMC5hY3RpdmUgOiBkZXB0aDApLHtcIm5hbWVcIjpcImlmXCIsXCJoYXNoXCI6e30sXCJmblwiOnRoaXMucHJvZ3JhbSgzLCBkYXRhLCAwKSxcImludmVyc2VcIjp0aGlzLm5vb3AsXCJkYXRhXCI6ZGF0YX0pKSAhPSBudWxsID8gc3RhY2sxIDogXCJcIilcbiAgICArIFwiIHZhbHVlPVxcXCJcIlxuICAgICsgYWxpYXMzKCgoaGVscGVyID0gKGhlbHBlciA9IGhlbHBlcnMuaWQgfHwgKGRlcHRoMCAhPSBudWxsID8gZGVwdGgwLmlkIDogZGVwdGgwKSkgIT0gbnVsbCA/IGhlbHBlciA6IGFsaWFzMSksKHR5cGVvZiBoZWxwZXIgPT09IGFsaWFzMiA/IGhlbHBlci5jYWxsKGRlcHRoMCx7XCJuYW1lXCI6XCJpZFwiLFwiaGFzaFwiOnt9LFwiZGF0YVwiOmRhdGF9KSA6IGhlbHBlcikpKVxuICAgICsgXCJcXFwiIG5hbWU9XFxcIlwiXG4gICAgKyBhbGlhczMoKChoZWxwZXIgPSAoaGVscGVyID0gaGVscGVycy5pZCB8fCAoZGVwdGgwICE9IG51bGwgPyBkZXB0aDAuaWQgOiBkZXB0aDApKSAhPSBudWxsID8gaGVscGVyIDogYWxpYXMxKSwodHlwZW9mIGhlbHBlciA9PT0gYWxpYXMyID8gaGVscGVyLmNhbGwoZGVwdGgwLHtcIm5hbWVcIjpcImlkXCIsXCJoYXNoXCI6e30sXCJkYXRhXCI6ZGF0YX0pIDogaGVscGVyKSkpXG4gICAgKyBcIlxcXCI+XCJcbiAgICArIGFsaWFzMygoKGhlbHBlciA9IChoZWxwZXIgPSBoZWxwZXJzLnRpdGxlIHx8IChkZXB0aDAgIT0gbnVsbCA/IGRlcHRoMC50aXRsZSA6IGRlcHRoMCkpICE9IG51bGwgPyBoZWxwZXIgOiBhbGlhczEpLCh0eXBlb2YgaGVscGVyID09PSBhbGlhczIgPyBoZWxwZXIuY2FsbChkZXB0aDAse1wibmFtZVwiOlwidGl0bGVcIixcImhhc2hcIjp7fSxcImRhdGFcIjpkYXRhfSkgOiBoZWxwZXIpKSlcbiAgICArIFwiPC9vcHRpb24+XFxuXCI7XG59LFwiM1wiOmZ1bmN0aW9uKGRlcHRoMCxoZWxwZXJzLHBhcnRpYWxzLGRhdGEpIHtcbiAgICByZXR1cm4gXCJzZWxlY3RlZFwiO1xufSxcIjVcIjpmdW5jdGlvbihkZXB0aDAsaGVscGVycyxwYXJ0aWFscyxkYXRhKSB7XG4gICAgdmFyIHN0YWNrMTtcblxuICByZXR1cm4gKChzdGFjazEgPSBoZWxwZXJzLnVubGVzcy5jYWxsKGRlcHRoMCwoZGVwdGgwICE9IG51bGwgPyBkZXB0aDAudmFsaWQgOiBkZXB0aDApLHtcIm5hbWVcIjpcInVubGVzc1wiLFwiaGFzaFwiOnt9LFwiZm5cIjp0aGlzLnByb2dyYW0oNiwgZGF0YSwgMCksXCJpbnZlcnNlXCI6dGhpcy5ub29wLFwiZGF0YVwiOmRhdGF9KSkgIT0gbnVsbCA/IHN0YWNrMSA6IFwiXCIpO1xufSxcIjZcIjpmdW5jdGlvbihkZXB0aDAsaGVscGVycyxwYXJ0aWFscyxkYXRhKSB7XG4gICAgdmFyIGhlbHBlciwgYWxpYXMxPWhlbHBlcnMuaGVscGVyTWlzc2luZywgYWxpYXMyPVwiZnVuY3Rpb25cIiwgYWxpYXMzPXRoaXMuZXNjYXBlRXhwcmVzc2lvbjtcblxuICByZXR1cm4gXCIgICAgICAgICAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT1cXFwiXCJcbiAgICArIGFsaWFzMygoKGhlbHBlciA9IChoZWxwZXIgPSBoZWxwZXJzLmlkIHx8IChkZXB0aDAgIT0gbnVsbCA/IGRlcHRoMC5pZCA6IGRlcHRoMCkpICE9IG51bGwgPyBoZWxwZXIgOiBhbGlhczEpLCh0eXBlb2YgaGVscGVyID09PSBhbGlhczIgPyBoZWxwZXIuY2FsbChkZXB0aDAse1wibmFtZVwiOlwiaWRcIixcImhhc2hcIjp7fSxcImRhdGFcIjpkYXRhfSkgOiBoZWxwZXIpKSlcbiAgICArIFwiXFxcIiBuYW1lPVxcXCJcIlxuICAgICsgYWxpYXMzKCgoaGVscGVyID0gKGhlbHBlciA9IGhlbHBlcnMuaWQgfHwgKGRlcHRoMCAhPSBudWxsID8gZGVwdGgwLmlkIDogZGVwdGgwKSkgIT0gbnVsbCA/IGhlbHBlciA6IGFsaWFzMSksKHR5cGVvZiBoZWxwZXIgPT09IGFsaWFzMiA/IGhlbHBlci5jYWxsKGRlcHRoMCx7XCJuYW1lXCI6XCJpZFwiLFwiaGFzaFwiOnt9LFwiZGF0YVwiOmRhdGF9KSA6IGhlbHBlcikpKVxuICAgICsgXCJcXFwiIGRpc2FibGVkPlwiXG4gICAgKyBhbGlhczMoKChoZWxwZXIgPSAoaGVscGVyID0gaGVscGVycy50aXRsZSB8fCAoZGVwdGgwICE9IG51bGwgPyBkZXB0aDAudGl0bGUgOiBkZXB0aDApKSAhPSBudWxsID8gaGVscGVyIDogYWxpYXMxKSwodHlwZW9mIGhlbHBlciA9PT0gYWxpYXMyID8gaGVscGVyLmNhbGwoZGVwdGgwLHtcIm5hbWVcIjpcInRpdGxlXCIsXCJoYXNoXCI6e30sXCJkYXRhXCI6ZGF0YX0pIDogaGVscGVyKSkpXG4gICAgKyBcIjwvb3B0aW9uPlxcblwiO1xufSxcImNvbXBpbGVyXCI6WzYsXCI+PSAyLjAuMC1iZXRhLjFcIl0sXCJtYWluXCI6ZnVuY3Rpb24oZGVwdGgwLGhlbHBlcnMscGFydGlhbHMsZGF0YSkge1xuICAgIHZhciBzdGFjazE7XG5cbiAgcmV0dXJuIFwiPHNlY3Rpb24gY2xhc3M9XFxcInBhbmVsIHdvcmtzcGFjZS1jcmVhdGVcXFwiIGlkPVxcXCJqcy1jcmVhdGVcXFwiPlxcbiAgICA8aDE+TmV3IHBhZ2UgZGV0YWlsczwvaDE+XFxuICAgIDxmb3JtIGlkPVxcXCJqcy1jcmVhdGVfX2Zvcm1cXFwiPlxcbiAgICAgICAgPGRpdj5cXG4gICAgICAgICAgICA8bGFiZWwgZm9yPVxcXCJwYWdlVHlwZVxcXCIgY2xhc3M9XFxcImhpZGRlblxcXCI+UGFnZSB0eXBlPC9sYWJlbD5cXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVxcXCJzZWxlY3Qtd3JhcFxcXCI+XFxuICAgICAgICAgICAgICAgIDxzZWxlY3QgaWQ9XFxcInBhZ2VUeXBlXFxcIiByZXF1aXJlZD5cXG4gICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9XFxcIlxcXCIgbmFtZT1cXFwibm9uZVNlbGVjdGVkXFxcIj4gLS0tIFNlbGVjdCBwYWdlIHR5cGUgLS0tPC9vcHRpb24+XFxuXCJcbiAgICArICgoc3RhY2sxID0gaGVscGVycy5lYWNoLmNhbGwoZGVwdGgwLGRlcHRoMCx7XCJuYW1lXCI6XCJlYWNoXCIsXCJoYXNoXCI6e30sXCJmblwiOnRoaXMucHJvZ3JhbSgxLCBkYXRhLCAwKSxcImludmVyc2VcIjp0aGlzLm5vb3AsXCJkYXRhXCI6ZGF0YX0pKSAhPSBudWxsID8gc3RhY2sxIDogXCJcIilcbiAgICArIFwiXFxuXCJcbiAgICArICgoc3RhY2sxID0gaGVscGVycy5lYWNoLmNhbGwoZGVwdGgwLGRlcHRoMCx7XCJuYW1lXCI6XCJlYWNoXCIsXCJoYXNoXCI6e30sXCJmblwiOnRoaXMucHJvZ3JhbSg1LCBkYXRhLCAwKSxcImludmVyc2VcIjp0aGlzLm5vb3AsXCJkYXRhXCI6ZGF0YX0pKSAhPSBudWxsID8gc3RhY2sxIDogXCJcIilcbiAgICArIFwiICAgICAgICAgICAgICAgIDwvc2VsZWN0PlxcbiAgICAgICAgICAgIDwvZGl2PlxcbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPVxcXCJqcy1jcmVhdGVfX2lucHV0LWVycm9yXFxcIj48L3NwYW4+XFxuICAgICAgICA8L2Rpdj5cXG4gICAgICAgIDxkaXYgaWQ9XFxcImpzLWNyZWF0ZV9fb3B0aW9uYWwtaW5wdXRzXFxcIj48L2Rpdj5cXG4gICAgICAgIDxidXR0b24gY2xhc3M9XFxcImJ0biBidG4tLXBvc2l0aXZlIG1hcmdpbi1sZWZ0LS0wIGJ0bi1wYWdlLWNyZWF0ZVxcXCI+Q3JlYXRlIHBhZ2U8L2J1dHRvbj5cXG4gICAgPC9mb3JtPlxcbjwvc2VjdGlvbj5cXG5cIjtcbn0sXCJ1c2VEYXRhXCI6dHJ1ZX0pO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vYXBwL3dvcmtzcGFjZS9jcmVhdGUvY3JlYXRlLmhhbmRsZWJhcnNcbi8vIG1vZHVsZSBpZCA9IDYwXG4vLyBtb2R1bGUgY2h1bmtzID0gMSJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ },
/* 61 */
/***/ function(module, exports) {

	eval("'use strict';\n\nvar bindDatePicker = function bindDatePicker() {\n    $('#releaseDate').datepicker({\n        dateFormat: 'dd MM yy'\n    });\n};\n\nmodule.exports = bindDatePicker;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjEuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vYXBwL3NoYXJlZC91dGlsaXRpZXMvYmluZERhdGVQaWNrZXIuanM/MDM2YiJdLCJzb3VyY2VzQ29udGVudCI6WyJcbnZhciBiaW5kRGF0ZVBpY2tlciA9IGZ1bmN0aW9uKCkge1xuICAgICQoJyNyZWxlYXNlRGF0ZScpLmRhdGVwaWNrZXIoe1xuICAgICAgICBkYXRlRm9ybWF0OiAnZGQgTU0geXknXG4gICAgfSk7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IGJpbmREYXRlUGlja2VyO1xuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIGFwcC9zaGFyZWQvdXRpbGl0aWVzL2JpbmREYXRlUGlja2VyLmpzIl0sIm1hcHBpbmdzIjoiOztBQUNBO0FBQ0E7QUFDQTtBQURBO0FBR0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ },
/* 62 */
/***/ function(module, exports) {

	eval("\"use strict\";\n\nvar pageModels = {\n\n    bulletin: {\n        \"description\": {\n            \"title\": \"\",\n            \"edition\": \"\",\n            \"summary\": \"\",\n            \"releaseDate\": \"\",\n            \"nextRelease\": \"\",\n            \"contact\": {\n                \"name\": \"\",\n                \"email\": \"\",\n                \"telephone\": \"\"\n            },\n            \"nationalStatistic\": false,\n            \"headline1\": \"\",\n            \"headline2\": \"\",\n            \"headline3\": \"\",\n            \"keywords\": [],\n            \"metaDescription\": \"\"\n        },\n        \"sections\": [],\n        \"accordion\": [],\n        \"relatedDocuments\": [],\n        \"relatedData\": [],\n        \"relatedMethodology\": [],\n        \"relatedMethodologyArticle\": [],\n        \"topics\": [],\n        \"links\": [],\n        \"charts\": [],\n        \"tables\": [],\n        \"equations\": [],\n        \"pdfTable\": [],\n        \"images\": [],\n        \"alerts\": [],\n        \"versions\": [],\n        type: 'bulletin'\n    },\n\n    article: {\n        \"description\": {\n            \"title\": \"\",\n            \"edition\": \"\",\n            \"_abstract\": \"\",\n            \"releaseDate\": \"\",\n            \"nextRelease\": \"\",\n            \"contact\": {\n                \"name\": \"\",\n                \"email\": \"\",\n                \"telephone\": \"\"\n            },\n            \"nationalStatistic\": false,\n            \"keywords\": [],\n            \"metaDescription\": \"\"\n        },\n        \"sections\": [],\n        \"accordion\": [],\n        \"relatedDocuments\": [],\n        \"relatedData\": [],\n        \"relatedMethodology\": [],\n        \"relatedMethodologyArticle\": [],\n        \"topics\": [],\n        \"links\": [],\n        \"charts\": [],\n        \"tables\": [],\n        \"equations\": [],\n        \"pdfTable\": [],\n        \"images\": [],\n        \"alerts\": [],\n        \"versions\": [],\n        type: \"article\"\n    }\n};\n\nmodule.exports = pageModels;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjIuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vYXBwL3NoYXJlZC9tb2RlbHMvcGFnZU1vZGVscy5qcz9iZjU3Il0sInNvdXJjZXNDb250ZW50IjpbIlxudmFyIHBhZ2VNb2RlbHMgPSB7XG5cbiAgICBidWxsZXRpbjoge1xuICAgICAgICBcImRlc2NyaXB0aW9uXCI6IHtcbiAgICAgICAgICAgIFwidGl0bGVcIjogXCJcIixcbiAgICAgICAgICAgIFwiZWRpdGlvblwiOiBcIlwiLFxuICAgICAgICAgICAgXCJzdW1tYXJ5XCI6IFwiXCIsXG4gICAgICAgICAgICBcInJlbGVhc2VEYXRlXCI6IFwiXCIsXG4gICAgICAgICAgICBcIm5leHRSZWxlYXNlXCI6IFwiXCIsXG4gICAgICAgICAgICBcImNvbnRhY3RcIjoge1xuICAgICAgICAgICAgICAgIFwibmFtZVwiOiBcIlwiLFxuICAgICAgICAgICAgICAgIFwiZW1haWxcIjogXCJcIixcbiAgICAgICAgICAgICAgICBcInRlbGVwaG9uZVwiOiBcIlwiXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgXCJuYXRpb25hbFN0YXRpc3RpY1wiOiBmYWxzZSxcbiAgICAgICAgICAgIFwiaGVhZGxpbmUxXCI6IFwiXCIsXG4gICAgICAgICAgICBcImhlYWRsaW5lMlwiOiBcIlwiLFxuICAgICAgICAgICAgXCJoZWFkbGluZTNcIjogXCJcIixcbiAgICAgICAgICAgIFwia2V5d29yZHNcIjogW10sXG4gICAgICAgICAgICBcIm1ldGFEZXNjcmlwdGlvblwiOiBcIlwiXG4gICAgICAgIH0sXG4gICAgICAgIFwic2VjdGlvbnNcIjogW10sXG4gICAgICAgIFwiYWNjb3JkaW9uXCI6IFtdLFxuICAgICAgICBcInJlbGF0ZWREb2N1bWVudHNcIjogW10sXG4gICAgICAgIFwicmVsYXRlZERhdGFcIjogW10sXG4gICAgICAgIFwicmVsYXRlZE1ldGhvZG9sb2d5XCI6IFtdLFxuICAgICAgICBcInJlbGF0ZWRNZXRob2RvbG9neUFydGljbGVcIjogW10sXG4gICAgICAgIFwidG9waWNzXCI6IFtdLFxuICAgICAgICBcImxpbmtzXCI6IFtdLFxuICAgICAgICBcImNoYXJ0c1wiOiBbXSxcbiAgICAgICAgXCJ0YWJsZXNcIjogW10sXG4gICAgICAgIFwiZXF1YXRpb25zXCI6IFtdLFxuICAgICAgICBcInBkZlRhYmxlXCI6IFtdLFxuICAgICAgICBcImltYWdlc1wiOiBbXSxcbiAgICAgICAgXCJhbGVydHNcIjogW10sXG4gICAgICAgIFwidmVyc2lvbnNcIjogW10sXG4gICAgICAgIHR5cGU6ICdidWxsZXRpbidcbiAgICB9LFxuXG4gICAgYXJ0aWNsZToge1xuICAgICAgICBcImRlc2NyaXB0aW9uXCI6IHtcbiAgICAgICAgICAgIFwidGl0bGVcIjogXCJcIixcbiAgICAgICAgICAgIFwiZWRpdGlvblwiOiBcIlwiLFxuICAgICAgICAgICAgXCJfYWJzdHJhY3RcIjogXCJcIixcbiAgICAgICAgICAgIFwicmVsZWFzZURhdGVcIjogXCJcIixcbiAgICAgICAgICAgIFwibmV4dFJlbGVhc2VcIjogXCJcIixcbiAgICAgICAgICAgIFwiY29udGFjdFwiOiB7XG4gICAgICAgICAgICAgICAgXCJuYW1lXCI6IFwiXCIsXG4gICAgICAgICAgICAgICAgXCJlbWFpbFwiOiBcIlwiLFxuICAgICAgICAgICAgICAgIFwidGVsZXBob25lXCI6IFwiXCJcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBcIm5hdGlvbmFsU3RhdGlzdGljXCI6IGZhbHNlLFxuICAgICAgICAgICAgXCJrZXl3b3Jkc1wiOiBbXSxcbiAgICAgICAgICAgIFwibWV0YURlc2NyaXB0aW9uXCI6IFwiXCIsXG4gICAgICAgIH0sXG4gICAgICAgIFwic2VjdGlvbnNcIjogW10sXG4gICAgICAgIFwiYWNjb3JkaW9uXCI6IFtdLFxuICAgICAgICBcInJlbGF0ZWREb2N1bWVudHNcIjogW10sXG4gICAgICAgIFwicmVsYXRlZERhdGFcIjogW10sXG4gICAgICAgIFwicmVsYXRlZE1ldGhvZG9sb2d5XCI6IFtdLFxuICAgICAgICBcInJlbGF0ZWRNZXRob2RvbG9neUFydGljbGVcIjogW10sXG4gICAgICAgIFwidG9waWNzXCI6IFtdLFxuICAgICAgICBcImxpbmtzXCI6IFtdLFxuICAgICAgICBcImNoYXJ0c1wiOiBbXSxcbiAgICAgICAgXCJ0YWJsZXNcIjogW10sXG4gICAgICAgIFwiZXF1YXRpb25zXCI6IFtdLFxuICAgICAgICBcInBkZlRhYmxlXCI6IFtdLFxuICAgICAgICBcImltYWdlc1wiOiBbXSxcbiAgICAgICAgXCJhbGVydHNcIjogW10sXG4gICAgICAgIFwidmVyc2lvbnNcIjogW10sXG4gICAgICAgIHR5cGU6IFwiYXJ0aWNsZVwiXG4gICAgfVxufTtcblxubW9kdWxlLmV4cG9ydHMgPSBwYWdlTW9kZWxzO1xuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIGFwcC9zaGFyZWQvbW9kZWxzL3BhZ2VNb2RlbHMuanMiXSwibWFwcGluZ3MiOiI7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFIQTtBQUtBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQWhCQTtBQWtCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQWxDQTtBQUNBO0FBb0NBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFIQTtBQUtBO0FBQ0E7QUFDQTtBQWJBO0FBZUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUEvQkE7QUF2Q0E7QUFDQTtBQXlFQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ },
/* 63 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(console) {'use strict';\n\n/**\n * Builds a safe URI from current state and POSTs to API. It handles any errors itself rather than passing it back up the stack\n *\n * @returns {Promise}\n */\n\nvar utilities = __webpack_require__(64),\n    post = __webpack_require__(65),\n    workspaceState = __webpack_require__(25),\n    collectionState = __webpack_require__(28);\n\nvar saveNewPage = function saveNewPage() {\n    var pageType = workspaceState.editorData.get().type,\n        pageEdition = workspaceState.editorData.get().description.edition ? workspaceState.editorData.get().description.edition : \"\",\n        pagePath = [],\n        activePageType = utilities.findNodeInBrowseTreeByUri(workspaceState.activeUrl.get()).type,\n        activeURL = workspaceState.activeUrl.get().split('/'),\n        index;\n\n    // Page being created as part of a series, remove unnecessary/duplicated entries from current activeURL\n    if (activePageType === \"article\" || activePageType === \"article_download\") {\n        index = activeURL.indexOf(\"articles\");\n        activeURL.splice(index, activeURL.length - index);\n    } else if (activePageType === \"bulletin\") {\n        index = activeURL.indexOf(\"bulletins\");\n        activeURL.splice(index, activeURL.length - index);\n    }\n\n    // Add current active location\n    pagePath = activeURL.concat(pagePath);\n\n    // Add page type to path\n    switch (pageType) {\n        case \"bulletin\":\n            {\n                pagePath.push(pageType + \"s\");\n                break;\n            }\n        case \"article\":\n            {\n                pagePath.push(pageType + \"s\");\n                break;\n            }\n        case \"article_download\":\n            {\n                pagePath.push(\"articles\");\n                break;\n            }\n        case \"dataset_landing_page\":\n            {\n                pagePath.push(\"datasets\");\n                break;\n            }\n        case \"compendium_landing_page\":\n            {\n                pagePath.push(\"compendium\");\n                break;\n            }\n        default:\n            {\n                console.log(\"Page type not recognised, so new page can't be saved\");\n                break;\n            }\n    }\n\n    // Add page title (which is checked for correct slashes)\n    pagePath.push(workspaceState.editorData.get().description.title);\n\n    // Add page edition (defaults to an empty string if not available)\n    pagePath.push(pageEdition);\n\n    // Build safe URI from pagePath string\n    pagePath = utilities.getSafeURI(pagePath.join('/'));\n\n    // Return the POST of latest editor data from state to API\n    return post('/zebedee/content/' + collectionState.get().id + '?uri=' + pagePath + '/data.json', workspaceState.editorData.get()).then(function () {\n        return pagePath;\n    }).catch(function (error) {\n        return error;\n    });\n};\n\nmodule.exports = saveNewPage;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vYXBwL3NoYXJlZC9hcGkvc2F2ZU5ld1BhZ2UuanM/OWNmMiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEJ1aWxkcyBhIHNhZmUgVVJJIGZyb20gY3VycmVudCBzdGF0ZSBhbmQgUE9TVHMgdG8gQVBJLiBJdCBoYW5kbGVzIGFueSBlcnJvcnMgaXRzZWxmIHJhdGhlciB0aGFuIHBhc3NpbmcgaXQgYmFjayB1cCB0aGUgc3RhY2tcbiAqXG4gKiBAcmV0dXJucyB7UHJvbWlzZX1cbiAqL1xuXG5cbnZhciB1dGlsaXRpZXMgPSByZXF1aXJlKCdzaGFyZWQvdXRpbGl0aWVzL3V0aWxpdGllcycpLFxuICAgIHBvc3QgPSByZXF1aXJlKCdzaGFyZWQvdXRpbGl0aWVzL3Bvc3QnKSxcbiAgICB3b3Jrc3BhY2VTdGF0ZSA9IHJlcXVpcmUoJ3NoYXJlZC9zdGF0ZS93b3Jrc3BhY2VTdGF0ZScpLFxuICAgIGNvbGxlY3Rpb25TdGF0ZSA9IHJlcXVpcmUoJ3NoYXJlZC9zdGF0ZS9jb2xsZWN0aW9uU3RhdGUnKTtcblxudmFyIHNhdmVOZXdQYWdlID0gZnVuY3Rpb24oKSB7XG4gICAgdmFyIHBhZ2VUeXBlID0gd29ya3NwYWNlU3RhdGUuZWRpdG9yRGF0YS5nZXQoKS50eXBlLFxuICAgICAgICBwYWdlRWRpdGlvbiA9IHdvcmtzcGFjZVN0YXRlLmVkaXRvckRhdGEuZ2V0KCkuZGVzY3JpcHRpb24uZWRpdGlvbiA/IHdvcmtzcGFjZVN0YXRlLmVkaXRvckRhdGEuZ2V0KCkuZGVzY3JpcHRpb24uZWRpdGlvbiA6IFwiXCIsXG4gICAgICAgIHBhZ2VQYXRoID0gW10sXG4gICAgICAgIGFjdGl2ZVBhZ2VUeXBlID0gdXRpbGl0aWVzLmZpbmROb2RlSW5Ccm93c2VUcmVlQnlVcmkod29ya3NwYWNlU3RhdGUuYWN0aXZlVXJsLmdldCgpKS50eXBlLFxuICAgICAgICBhY3RpdmVVUkwgPSB3b3Jrc3BhY2VTdGF0ZS5hY3RpdmVVcmwuZ2V0KCkuc3BsaXQoJy8nKSxcbiAgICAgICAgaW5kZXg7XG5cbiAgICAvLyBQYWdlIGJlaW5nIGNyZWF0ZWQgYXMgcGFydCBvZiBhIHNlcmllcywgcmVtb3ZlIHVubmVjZXNzYXJ5L2R1cGxpY2F0ZWQgZW50cmllcyBmcm9tIGN1cnJlbnQgYWN0aXZlVVJMXG4gICAgaWYgKGFjdGl2ZVBhZ2VUeXBlID09PSBcImFydGljbGVcIiB8fCBhY3RpdmVQYWdlVHlwZSA9PT0gXCJhcnRpY2xlX2Rvd25sb2FkXCIpIHtcbiAgICAgICAgaW5kZXggPSBhY3RpdmVVUkwuaW5kZXhPZihcImFydGljbGVzXCIpO1xuICAgICAgICBhY3RpdmVVUkwuc3BsaWNlKGluZGV4LCAoYWN0aXZlVVJMLmxlbmd0aC1pbmRleCkpO1xuICAgIH0gZWxzZSBpZiAoYWN0aXZlUGFnZVR5cGUgPT09IFwiYnVsbGV0aW5cIikge1xuICAgICAgICBpbmRleCA9IGFjdGl2ZVVSTC5pbmRleE9mKFwiYnVsbGV0aW5zXCIpO1xuICAgICAgICBhY3RpdmVVUkwuc3BsaWNlKGluZGV4LCAoYWN0aXZlVVJMLmxlbmd0aC1pbmRleCkpO1xuICAgIH1cblxuICAgIC8vIEFkZCBjdXJyZW50IGFjdGl2ZSBsb2NhdGlvblxuICAgIHBhZ2VQYXRoID0gYWN0aXZlVVJMLmNvbmNhdChwYWdlUGF0aCk7XG5cbiAgICAvLyBBZGQgcGFnZSB0eXBlIHRvIHBhdGhcbiAgICBzd2l0Y2ggKHBhZ2VUeXBlKSB7XG4gICAgICAgIGNhc2UgKFwiYnVsbGV0aW5cIik6IHtcbiAgICAgICAgICAgIHBhZ2VQYXRoLnB1c2gocGFnZVR5cGUgKyBcInNcIik7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgICBjYXNlIChcImFydGljbGVcIik6IHtcbiAgICAgICAgICAgIHBhZ2VQYXRoLnB1c2gocGFnZVR5cGUgKyBcInNcIik7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgICBjYXNlIChcImFydGljbGVfZG93bmxvYWRcIik6IHtcbiAgICAgICAgICAgIHBhZ2VQYXRoLnB1c2goXCJhcnRpY2xlc1wiKTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICAgIGNhc2UgKFwiZGF0YXNldF9sYW5kaW5nX3BhZ2VcIik6IHtcbiAgICAgICAgICAgIHBhZ2VQYXRoLnB1c2goXCJkYXRhc2V0c1wiKTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICAgIGNhc2UgKFwiY29tcGVuZGl1bV9sYW5kaW5nX3BhZ2VcIik6IHtcbiAgICAgICAgICAgIHBhZ2VQYXRoLnB1c2goXCJjb21wZW5kaXVtXCIpO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgICAgZGVmYXVsdDoge1xuICAgICAgICAgICAgY29uc29sZS5sb2coXCJQYWdlIHR5cGUgbm90IHJlY29nbmlzZWQsIHNvIG5ldyBwYWdlIGNhbid0IGJlIHNhdmVkXCIpO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBBZGQgcGFnZSB0aXRsZSAod2hpY2ggaXMgY2hlY2tlZCBmb3IgY29ycmVjdCBzbGFzaGVzKVxuICAgIHBhZ2VQYXRoLnB1c2god29ya3NwYWNlU3RhdGUuZWRpdG9yRGF0YS5nZXQoKS5kZXNjcmlwdGlvbi50aXRsZSk7XG5cbiAgICAvLyBBZGQgcGFnZSBlZGl0aW9uIChkZWZhdWx0cyB0byBhbiBlbXB0eSBzdHJpbmcgaWYgbm90IGF2YWlsYWJsZSlcbiAgICBwYWdlUGF0aC5wdXNoKHBhZ2VFZGl0aW9uKTtcblxuICAgIC8vIEJ1aWxkIHNhZmUgVVJJIGZyb20gcGFnZVBhdGggc3RyaW5nXG4gICAgcGFnZVBhdGggPSB1dGlsaXRpZXMuZ2V0U2FmZVVSSShwYWdlUGF0aC5qb2luKCcvJykpO1xuXG4gICAgLy8gUmV0dXJuIHRoZSBQT1NUIG9mIGxhdGVzdCBlZGl0b3IgZGF0YSBmcm9tIHN0YXRlIHRvIEFQSVxuICAgIHJldHVybiBwb3N0KCcvemViZWRlZS9jb250ZW50LycgKyBjb2xsZWN0aW9uU3RhdGUuZ2V0KCkuaWQgKyAnP3VyaT0nICsgcGFnZVBhdGggKyAnL2RhdGEuanNvbicsIHdvcmtzcGFjZVN0YXRlLmVkaXRvckRhdGEuZ2V0KClcbiAgICAgICAgKS50aGVuKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiBwYWdlUGF0aDtcbiAgICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycm9yKSB7XG4gICAgICAgICAgICByZXR1cm4gZXJyb3I7XG4gICAgICAgIH1cbiAgICApO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBzYXZlTmV3UGFnZTtcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyBhcHAvc2hhcmVkL2FwaS9zYXZlTmV3UGFnZS5qcyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7Ozs7O0FBT0E7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUlBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFNQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBeEJBO0FBQ0E7QUEwQkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTs7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ },
/* 64 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(console) {'use strict';\n\nvar workspaceState = __webpack_require__(25);\n\nvar utilities = {\n\n    /* Strips a URI of any spaces, capitalisation */\n    getSafeURI: function getSafeURI(uri) {\n        var URIArray = uri.split('/'),\n            safeURI = [],\n            i;\n\n        for (i = 0; i < URIArray.length; i++) {\n            if (URIArray !== \"\") {\n                safeURI.push(URIArray[i].replace(/[^A-Z0-9]+/ig, \"\").toLowerCase());\n            }\n        }\n\n        safeURI = this.checkURISlashes(safeURI.join('/'));\n\n        return safeURI;\n    },\n\n    /* Removes trailing slash and add leading slash (if necessary) to string */\n    checkURISlashes: function checkURISlashes(uri) {\n        var checkedUri = uri[uri.length - 1] === '/' ? uri.substring(0, uri.length - 1) : uri;\n        checkedUri = checkedUri[0] !== '/' ? '/' + checkedUri : checkedUri;\n        return checkedUri;\n    },\n\n    /* Returns the object of the node that matches the given URI string */\n    findNodeInBrowseTreeByUri: function findNodeInBrowseTreeByUri(uri) {\n        // TODO this feels like a utility - it perhaps shouldn't live here at least?\n        var browseTreeData = workspaceState.browseTreeData.get(),\n            nodeObject = false;\n\n        if (!browseTreeData) {\n            console.log(\"Error: No browse tree data is currently stored in state\");\n            return;\n        }\n\n        if (uri === \"/\") {\n            return browseTreeData;\n        }\n\n        checkOneLayer(browseTreeData.children);\n\n        function checkOneLayer(array) {\n            array.forEach(function (object) {\n                if (object.uri === uri) {\n                    nodeObject = object;\n                }\n\n                if (!nodeObject && object.children && object.children.length > 0) {\n                    checkOneLayer(object.children);\n                }\n            });\n        }\n\n        return nodeObject;\n    }\n\n};\n\nmodule.exports = utilities;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjQuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vYXBwL3NoYXJlZC91dGlsaXRpZXMvdXRpbGl0aWVzLmpzPzJjZmQiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIHdvcmtzcGFjZVN0YXRlID0gcmVxdWlyZSgnc2hhcmVkL3N0YXRlL3dvcmtzcGFjZVN0YXRlJyk7XG5cbnZhciB1dGlsaXRpZXMgPSB7XG5cbiAgICAvKiBTdHJpcHMgYSBVUkkgb2YgYW55IHNwYWNlcywgY2FwaXRhbGlzYXRpb24gKi9cbiAgICBnZXRTYWZlVVJJOiBmdW5jdGlvbih1cmkpIHtcbiAgICAgICAgdmFyIFVSSUFycmF5ID0gdXJpLnNwbGl0KCcvJyksXG4gICAgICAgICAgICBzYWZlVVJJID0gW10sXG4gICAgICAgICAgICBpO1xuXG4gICAgICAgIGZvciAoaSA9IDA7IGkgPCBVUklBcnJheS5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgaWYgKFVSSUFycmF5ICE9PSBcIlwiKSB7XG4gICAgICAgICAgICAgICAgc2FmZVVSSS5wdXNoKFVSSUFycmF5W2ldLnJlcGxhY2UoL1teQS1aMC05XSsvaWcsIFwiXCIpLnRvTG93ZXJDYXNlKCkpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgc2FmZVVSSSA9IHRoaXMuY2hlY2tVUklTbGFzaGVzKHNhZmVVUkkuam9pbignLycpKTtcblxuICAgICAgICByZXR1cm4gc2FmZVVSSTtcbiAgICB9LFxuXG4gICAgLyogUmVtb3ZlcyB0cmFpbGluZyBzbGFzaCBhbmQgYWRkIGxlYWRpbmcgc2xhc2ggKGlmIG5lY2Vzc2FyeSkgdG8gc3RyaW5nICovXG4gICAgY2hlY2tVUklTbGFzaGVzOiBmdW5jdGlvbih1cmkpIHtcbiAgICAgICAgdmFyIGNoZWNrZWRVcmkgPSB1cmlbdXJpLmxlbmd0aCAtIDFdID09PSAnLycgPyB1cmkuc3Vic3RyaW5nKDAsIHVyaS5sZW5ndGggLSAxKSA6IHVyaTtcbiAgICAgICAgY2hlY2tlZFVyaSA9IGNoZWNrZWRVcmlbMF0gIT09ICcvJyA/ICcvJyArIGNoZWNrZWRVcmkgOiBjaGVja2VkVXJpO1xuICAgICAgICByZXR1cm4gY2hlY2tlZFVyaTtcbiAgICB9LFxuXG4gICAgLyogUmV0dXJucyB0aGUgb2JqZWN0IG9mIHRoZSBub2RlIHRoYXQgbWF0Y2hlcyB0aGUgZ2l2ZW4gVVJJIHN0cmluZyAqL1xuICAgIGZpbmROb2RlSW5Ccm93c2VUcmVlQnlVcmk6IGZ1bmN0aW9uKHVyaSkge1xuICAgICAgICAvLyBUT0RPIHRoaXMgZmVlbHMgbGlrZSBhIHV0aWxpdHkgLSBpdCBwZXJoYXBzIHNob3VsZG4ndCBsaXZlIGhlcmUgYXQgbGVhc3Q/XG4gICAgICAgIHZhciBicm93c2VUcmVlRGF0YSA9IHdvcmtzcGFjZVN0YXRlLmJyb3dzZVRyZWVEYXRhLmdldCgpLFxuICAgICAgICAgICAgbm9kZU9iamVjdCA9IGZhbHNlO1xuXG4gICAgICAgIGlmICghYnJvd3NlVHJlZURhdGEpIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiRXJyb3I6IE5vIGJyb3dzZSB0cmVlIGRhdGEgaXMgY3VycmVudGx5IHN0b3JlZCBpbiBzdGF0ZVwiKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICh1cmkgPT09IFwiL1wiKSB7XG4gICAgICAgICAgICByZXR1cm4gYnJvd3NlVHJlZURhdGE7XG4gICAgICAgIH1cblxuICAgICAgICBjaGVja09uZUxheWVyKGJyb3dzZVRyZWVEYXRhLmNoaWxkcmVuKTtcblxuICAgICAgICBmdW5jdGlvbiBjaGVja09uZUxheWVyKGFycmF5KSB7XG4gICAgICAgICAgICBhcnJheS5mb3JFYWNoKGZ1bmN0aW9uKG9iamVjdCkge1xuICAgICAgICAgICAgICAgIGlmIChvYmplY3QudXJpID09PSB1cmkpIHtcbiAgICAgICAgICAgICAgICAgICAgbm9kZU9iamVjdCA9IG9iamVjdDtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBpZiAoIW5vZGVPYmplY3QgJiYgb2JqZWN0LmNoaWxkcmVuICYmIG9iamVjdC5jaGlsZHJlbi5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICAgICAgICAgIGNoZWNrT25lTGF5ZXIob2JqZWN0LmNoaWxkcmVuKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBub2RlT2JqZWN0O1xuICAgIH1cblxufTtcblxubW9kdWxlLmV4cG9ydHMgPSB1dGlsaXRpZXM7XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gYXBwL3NoYXJlZC91dGlsaXRpZXMvdXRpbGl0aWVzLmpzIl0sIm1hcHBpbmdzIjoiOztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQXpEQTtBQUNBO0FBMkRBOyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ },
/* 65 */
/***/ function(module, exports) {

	eval("\"use strict\";\n\nvar post = function post(uri, body) {\n\n    return new Promise(function (resolve, reject) {\n\n        fetch(uri, {\n            credentials: \"include\",\n            method: \"POST\",\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(body)\n        }).then(function (response) {\n            return response.json().then(function (data) {\n                if (response.ok) {\n                    return data;\n                } else {\n                    reject({ status: response.status, message: data.message });\n                }\n            });\n        }).then(function (responseJSON) {\n            resolve(responseJSON);\n        }).catch(function (fetchError) {\n            reject(fetchError);\n        });\n    });\n};\n\nmodule.exports = post;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjUuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vYXBwL3NoYXJlZC91dGlsaXRpZXMvcG9zdC5qcz9jNzgzIl0sInNvdXJjZXNDb250ZW50IjpbIlxudmFyIHBvc3QgPSBmdW5jdGlvbih1cmksIGJvZHkpIHtcblxuICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbihyZXNvbHZlLCByZWplY3QpIHtcblxuICAgICAgICBmZXRjaCh1cmksIHtcbiAgICAgICAgICAgIGNyZWRlbnRpYWxzOiBcImluY2x1ZGVcIixcbiAgICAgICAgICAgIG1ldGhvZDogXCJQT1NUXCIsXG4gICAgICAgICAgICBoZWFkZXJzOiB7J0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJ30sXG4gICAgICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeShib2R5KVxuICAgICAgICB9KS50aGVuKGZ1bmN0aW9uKHJlc3BvbnNlKSB7XG4gICAgICAgICAgICByZXR1cm4gcmVzcG9uc2UuanNvbigpLnRoZW4oZnVuY3Rpb24oZGF0YSkge1xuICAgICAgICAgICAgICAgIGlmIChyZXNwb25zZS5vaykge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gZGF0YVxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHJlamVjdCh7c3RhdHVzOiByZXNwb25zZS5zdGF0dXMsIG1lc3NhZ2U6IGRhdGEubWVzc2FnZX0pXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pLnRoZW4oZnVuY3Rpb24ocmVzcG9uc2VKU09OKSB7XG4gICAgICAgICAgICByZXNvbHZlKHJlc3BvbnNlSlNPTik7XG4gICAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uKGZldGNoRXJyb3IpIHtcbiAgICAgICAgICAgIHJlamVjdChmZXRjaEVycm9yKTtcbiAgICAgICAgfSk7XG5cbiAgICB9KTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gcG9zdDtcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyBhcHAvc2hhcmVkL3V0aWxpdGllcy9wb3N0LmpzIl0sIm1hcHBpbmdzIjoiOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUpBO0FBTUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ },
/* 66 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nvar previewView = __webpack_require__(67),\n    baseUrlState = __webpack_require__(8),\n    workspaceState = __webpack_require__(25),\n    utilities = __webpack_require__(64);\n\nvar previewController = {\n\n    init: function init() {\n        var url = baseUrlState.get() + workspaceState.activeUrl.get();\n        previewView.render(url);\n        this.catchPreviewOnUnload();\n    },\n\n    catchPreviewOnUnload: function catchPreviewOnUnload() {\n        window.addEventListener(\"message\", function (event) {\n            // Only handle messages from babbage (they have the body \"load\" in the message)\n            if (event.data === \"load\") {\n                previewController.handlePreviewChange();\n            }\n        });\n    },\n\n    handlePreviewChange: function handlePreviewChange() {\n        var newPreviewUri = this.getPreviewUri();\n        workspaceState.activeUrl.set(newPreviewUri);\n        workspaceState.previewU.set(newPreviewUri);\n    },\n\n    refreshPreview: function refreshPreview() {},\n\n    updatePreview: function updatePreview(uri) {\n        previewView.render(baseUrlState.get() + uri);\n    },\n\n    getPreviewUri: function getPreviewUri() {\n        var iframeUri = document.getElementById('iframe').contentWindow.location.pathname;\n        return utilities.getSafeURI(iframeUri);\n    },\n\n    addressBar: {\n\n        set: function set(uri) {\n            var addressBar = document.getElementById('browser-location');\n            addressBar.value = baseUrlState.get() + uri;\n        }\n    }\n\n};\n\nmodule.exports = previewController;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjYuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vYXBwL3dvcmtzcGFjZS9wcmV2aWV3L3ByZXZpZXdDb250cm9sbGVyLmpzP2I5ZTQiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIHByZXZpZXdWaWV3ID0gcmVxdWlyZSgnd29ya3NwYWNlL3ByZXZpZXcvcHJldmlld1ZpZXcnKSxcbiAgICBiYXNlVXJsU3RhdGUgPSByZXF1aXJlKCdzaGFyZWQvc3RhdGUvYmFzZVVybFN0YXRlJyksXG4gICAgd29ya3NwYWNlU3RhdGUgPSByZXF1aXJlKCdzaGFyZWQvc3RhdGUvd29ya3NwYWNlU3RhdGUnKSxcbiAgICB1dGlsaXRpZXMgPSByZXF1aXJlKCdzaGFyZWQvdXRpbGl0aWVzL3V0aWxpdGllcycpO1xuXG52YXIgcHJldmlld0NvbnRyb2xsZXIgPSB7XG5cbiAgICBpbml0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGNvbnN0IHVybCA9IGJhc2VVcmxTdGF0ZS5nZXQoKSArIHdvcmtzcGFjZVN0YXRlLmFjdGl2ZVVybC5nZXQoKTtcbiAgICAgICAgcHJldmlld1ZpZXcucmVuZGVyKHVybCk7XG4gICAgICAgIHRoaXMuY2F0Y2hQcmV2aWV3T25VbmxvYWQoKTtcbiAgICB9LFxuXG4gICAgY2F0Y2hQcmV2aWV3T25VbmxvYWQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcIm1lc3NhZ2VcIiwgZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgICAgICAgICAvLyBPbmx5IGhhbmRsZSBtZXNzYWdlcyBmcm9tIGJhYmJhZ2UgKHRoZXkgaGF2ZSB0aGUgYm9keSBcImxvYWRcIiBpbiB0aGUgbWVzc2FnZSlcbiAgICAgICAgICAgIGlmIChldmVudC5kYXRhID09PSBcImxvYWRcIikge1xuICAgICAgICAgICAgICAgIHByZXZpZXdDb250cm9sbGVyLmhhbmRsZVByZXZpZXdDaGFuZ2UoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfSxcblxuICAgIGhhbmRsZVByZXZpZXdDaGFuZ2U6IGZ1bmN0aW9uKCkge1xuICAgICAgICBjb25zdCBuZXdQcmV2aWV3VXJpID0gdGhpcy5nZXRQcmV2aWV3VXJpKCk7XG4gICAgICAgIHdvcmtzcGFjZVN0YXRlLmFjdGl2ZVVybC5zZXQobmV3UHJldmlld1VyaSk7XG4gICAgICAgIHdvcmtzcGFjZVN0YXRlLnByZXZpZXdVLnNldChuZXdQcmV2aWV3VXJpKTtcbiAgICB9LFxuXG4gICAgcmVmcmVzaFByZXZpZXc6IGZ1bmN0aW9uKCkge1xuXG4gICAgfSxcblxuICAgIHVwZGF0ZVByZXZpZXc6IGZ1bmN0aW9uKHVyaSkge1xuICAgICAgICBwcmV2aWV3Vmlldy5yZW5kZXIoYmFzZVVybFN0YXRlLmdldCgpICsgdXJpKTtcbiAgICB9LFxuXG4gICAgZ2V0UHJldmlld1VyaTogZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgaWZyYW1lVXJpID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2lmcmFtZScpLmNvbnRlbnRXaW5kb3cubG9jYXRpb24ucGF0aG5hbWU7XG4gICAgICAgIHJldHVybiB1dGlsaXRpZXMuZ2V0U2FmZVVSSShpZnJhbWVVcmkpO1xuICAgIH0sXG5cbiAgICBhZGRyZXNzQmFyOiB7XG5cbiAgICAgICAgc2V0OiBmdW5jdGlvbih1cmkpIHtcbiAgICAgICAgICAgIHZhciBhZGRyZXNzQmFyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2Jyb3dzZXItbG9jYXRpb24nKTtcbiAgICAgICAgICAgIGFkZHJlc3NCYXIudmFsdWUgPSBiYXNlVXJsU3RhdGUuZ2V0KCkgKyB1cmk7XG4gICAgICAgIH1cbiAgICB9XG5cbn07XG5cbm1vZHVsZS5leHBvcnRzID0gcHJldmlld0NvbnRyb2xsZXI7XG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIGFwcC93b3Jrc3BhY2UvcHJldmlldy9wcmV2aWV3Q29udHJvbGxlci5qcyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBSUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFMQTtBQUNBO0FBckNBO0FBQ0E7QUE2Q0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ },
/* 67 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nvar template = __webpack_require__(68);\n\nvar previewView = {\n    render: function render(uri) {\n        document.getElementById('workspace-preview').innerHTML = template(uri);\n    }\n};\n\nmodule.exports = previewView;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjcuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vYXBwL3dvcmtzcGFjZS9wcmV2aWV3L3ByZXZpZXdWaWV3LmpzP2I2MTgiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIHRlbXBsYXRlID0gcmVxdWlyZSgnLi9wcmV2aWV3LmhhbmRsZWJhcnMnKTtcblxudmFyIHByZXZpZXdWaWV3ID0ge1xuICAgIHJlbmRlcjogZnVuY3Rpb24odXJpKSB7XG4gICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd3b3Jrc3BhY2UtcHJldmlldycpLmlubmVySFRNTCA9IHRlbXBsYXRlKHVyaSk7XG4gICAgfVxufTtcblxubW9kdWxlLmV4cG9ydHMgPSBwcmV2aWV3VmlldztcblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gYXBwL3dvcmtzcGFjZS9wcmV2aWV3L3ByZXZpZXdWaWV3LmpzIl0sIm1hcHBpbmdzIjoiOztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUhBO0FBQ0E7QUFLQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ },
/* 68 */
/***/ function(module, exports, __webpack_require__) {

	eval("var Handlebars = __webpack_require__(32);\nfunction __default(obj) { return obj && (obj.__esModule ? obj[\"default\"] : obj); }\nmodule.exports = (Handlebars[\"default\"] || Handlebars).template({\"compiler\":[6,\">= 2.0.0-beta.1\"],\"main\":function(depth0,helpers,partials,data) {\n    var alias1=this.lambda, alias2=this.escapeExpression;\n\n  return \"<div class=\\\"browser\\\">\\n    <div class=\\\"addressbar\\\">\\n        <label for=\\\"browser-location\\\" class=\\\"browser-location-label\\\">Preview URL</label>\\n        <input id=\\\"browser-location\\\" class=\\\"browser-location\\\" type=\\\"text\\\" value=\\\"\"\n    + alias2(alias1(depth0, depth0))\n    + \"\\\">\\n        <div class=\\\"browser-location__select select-wrap select-wrap--browser\\\" id='select-vis-wrapper'>\\n            <select id='select-vis-preview'></select>\\n        </div>\\n    </div>\\n    <iframe id=\\\"iframe\\\" src=\\\"\"\n    + alias2(alias1(depth0, depth0))\n    + \"\\\">\\n    </iframe>\\n</div>\";\n},\"useData\":true});//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjguanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvd29ya3NwYWNlL3ByZXZpZXcvcHJldmlldy5oYW5kbGViYXJzPzM3Y2IiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIEhhbmRsZWJhcnMgPSByZXF1aXJlKFwiL1VzZXJzL2NyaXNwaW5tZXJyaW1hbi9HaXQvb25zZGlnaXRhbC9mbG9yZW5jZS9zcmMvbm9kZV9tb2R1bGVzL2hhbmRsZWJhcnMvcnVudGltZS5qc1wiKTtcbmZ1bmN0aW9uIF9fZGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiAob2JqLl9fZXNNb2R1bGUgPyBvYmpbXCJkZWZhdWx0XCJdIDogb2JqKTsgfVxubW9kdWxlLmV4cG9ydHMgPSAoSGFuZGxlYmFyc1tcImRlZmF1bHRcIl0gfHwgSGFuZGxlYmFycykudGVtcGxhdGUoe1wiY29tcGlsZXJcIjpbNixcIj49IDIuMC4wLWJldGEuMVwiXSxcIm1haW5cIjpmdW5jdGlvbihkZXB0aDAsaGVscGVycyxwYXJ0aWFscyxkYXRhKSB7XG4gICAgdmFyIGFsaWFzMT10aGlzLmxhbWJkYSwgYWxpYXMyPXRoaXMuZXNjYXBlRXhwcmVzc2lvbjtcblxuICByZXR1cm4gXCI8ZGl2IGNsYXNzPVxcXCJicm93c2VyXFxcIj5cXG4gICAgPGRpdiBjbGFzcz1cXFwiYWRkcmVzc2JhclxcXCI+XFxuICAgICAgICA8bGFiZWwgZm9yPVxcXCJicm93c2VyLWxvY2F0aW9uXFxcIiBjbGFzcz1cXFwiYnJvd3Nlci1sb2NhdGlvbi1sYWJlbFxcXCI+UHJldmlldyBVUkw8L2xhYmVsPlxcbiAgICAgICAgPGlucHV0IGlkPVxcXCJicm93c2VyLWxvY2F0aW9uXFxcIiBjbGFzcz1cXFwiYnJvd3Nlci1sb2NhdGlvblxcXCIgdHlwZT1cXFwidGV4dFxcXCIgdmFsdWU9XFxcIlwiXG4gICAgKyBhbGlhczIoYWxpYXMxKGRlcHRoMCwgZGVwdGgwKSlcbiAgICArIFwiXFxcIj5cXG4gICAgICAgIDxkaXYgY2xhc3M9XFxcImJyb3dzZXItbG9jYXRpb25fX3NlbGVjdCBzZWxlY3Qtd3JhcCBzZWxlY3Qtd3JhcC0tYnJvd3NlclxcXCIgaWQ9J3NlbGVjdC12aXMtd3JhcHBlcic+XFxuICAgICAgICAgICAgPHNlbGVjdCBpZD0nc2VsZWN0LXZpcy1wcmV2aWV3Jz48L3NlbGVjdD5cXG4gICAgICAgIDwvZGl2PlxcbiAgICA8L2Rpdj5cXG4gICAgPGlmcmFtZSBpZD1cXFwiaWZyYW1lXFxcIiBzcmM9XFxcIlwiXG4gICAgKyBhbGlhczIoYWxpYXMxKGRlcHRoMCwgZGVwdGgwKSlcbiAgICArIFwiXFxcIj5cXG4gICAgPC9pZnJhbWU+XFxuPC9kaXY+XCI7XG59LFwidXNlRGF0YVwiOnRydWV9KTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL2FwcC93b3Jrc3BhY2UvcHJldmlldy9wcmV2aWV3LmhhbmRsZWJhcnNcbi8vIG1vZHVsZSBpZCA9IDY4XG4vLyBtb2R1bGUgY2h1bmtzID0gMSJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }
/******/ ]);