// Code generated by go-bindata.
// sources:
// ../src/main/web/florence/.DS_Store
// ../src/main/web/florence/.tmp/mocha-webpack/30a8c3b100fd21df921012ba748ffb09/30a8c3b100fd21df921012ba748ffb09-output.js
// ../src/main/web/florence/.tmp/mocha-webpack/30a8c3b100fd21df921012ba748ffb09-entry.js
// ../src/main/web/florence/.tmp/mocha-webpack/8d1c411a09add6e4f9455a3e2c6fae26/8d1c411a09add6e4f9455a3e2c6fae26-output.js
// ../src/main/web/florence/.tmp/mocha-webpack/8d1c411a09add6e4f9455a3e2c6fae26-entry.js
// ../src/main/web/florence/.tmp/mocha-webpack/d560a417452018acef79b9f52ff98d6f/d560a417452018acef79b9f52ff98d6f-output.js
// ../src/main/web/florence/.tmp/mocha-webpack/d560a417452018acef79b9f52ff98d6f-entry.js
// ../src/main/web/florence/.tmp/mocha-webpack/d681649e3b3f1264990264bdb7973867/d681649e3b3f1264990264bdb7973867-output.js
// ../src/main/web/florence/.tmp/mocha-webpack/d681649e3b3f1264990264bdb7973867-entry.js
// ../src/main/web/florence/.tmp/mocha-webpack/f959c9c74bb5acdf648ff8850a842cf7/f959c9c74bb5acdf648ff8850a842cf7-output.js
// ../src/main/web/florence/.tmp/mocha-webpack/f959c9c74bb5acdf648ff8850a842cf7-entry.js
// ../src/main/web/florence/app/app.js
// ../src/main/web/florence/app/shared/api/getActivePage.js
// ../src/main/web/florence/app/shared/api/getBrowseTree.js
// ../src/main/web/florence/app/shared/api/saveNewPage.js
// ../src/main/web/florence/app/shared/api/updatePage.js
// ../src/main/web/florence/app/shared/models/pageModels.js
// ../src/main/web/florence/app/shared/state/baseUrlState.js
// ../src/main/web/florence/app/shared/state/collectionState.js
// ../src/main/web/florence/app/shared/state/state.js
// ../src/main/web/florence/app/shared/state/userState.js
// ../src/main/web/florence/app/shared/state/watchState.js
// ../src/main/web/florence/app/shared/state/workspaceState.js
// ../src/main/web/florence/app/shared/templateHelpers/ifCond.js
// ../src/main/web/florence/app/shared/templatePartials/loadingAnimation.handlebars
// ../src/main/web/florence/app/shared/utilities/bindDatePicker.js
// ../src/main/web/florence/app/shared/utilities/get.js
// ../src/main/web/florence/app/shared/utilities/post.js
// ../src/main/web/florence/app/shared/utilities/utilities.js
// ../src/main/web/florence/app/shared/utilities/utilities.test.js
// ../src/main/web/florence/app/workspace/browse/browse.handlebars
// ../src/main/web/florence/app/workspace/browse/browseController.js
// ../src/main/web/florence/app/workspace/browse/browseNode.handlebars
// ../src/main/web/florence/app/workspace/browse/browseView.js
// ../src/main/web/florence/app/workspace/browse/browseVisNode.handlebars
// ../src/main/web/florence/app/workspace/create/create.handlebars
// ../src/main/web/florence/app/workspace/create/createController.js
// ../src/main/web/florence/app/workspace/create/createView.js
// ../src/main/web/florence/app/workspace/edit/edit.handlebars
// ../src/main/web/florence/app/workspace/edit/editController.js
// ../src/main/web/florence/app/workspace/edit/editView.js
// ../src/main/web/florence/app/workspace/navigation/navigation.handlebars
// ../src/main/web/florence/app/workspace/navigation/navigationController.js
// ../src/main/web/florence/app/workspace/navigation/navigationView.js
// ../src/main/web/florence/app/workspace/preview/preview.handlebars
// ../src/main/web/florence/app/workspace/preview/previewController.js
// ../src/main/web/florence/app/workspace/preview/previewView.js
// ../src/main/web/florence/app/workspace/workspace.handlebars
// ../src/main/web/florence/app/workspace/workspaceController.js
// ../src/main/web/florence/app/workspace/workspaceView.js
// ../src/main/web/florence/assets/css/main.min.css
// ../src/main/web/florence/assets/css/main.min.css.map
// ../src/main/web/florence/assets/js/bundle.js
// ../src/main/web/florence/assets/js/main.js
// ../src/main/web/florence/assets/js/templates.js
// ../src/main/web/florence/assets/version.json
// ../src/main/web/florence/css/florence.css
// ../src/main/web/florence/css/rapid-prototype-main.css
// ../src/main/web/florence/css/third-party/c3.css
// ../src/main/web/florence/css/third-party/jquery-ui.theme.min.css
// ../src/main/web/florence/css/third-party/jquery.tagit.css
// ../src/main/web/florence/css/third-party/pagedown.css
// ../src/main/web/florence/css/third-party/responsive-tables.css
// ../src/main/web/florence/css/third-party/sweetalert.css
// ../src/main/web/florence/css/third-party/tagit.ui-zendesk.css
// ../src/main/web/florence/font/Open_Sans/LICENSE.txt
// ../src/main/web/florence/font/Open_Sans/OpenSans-Bold.eot
// ../src/main/web/florence/font/Open_Sans/OpenSans-Bold.svg
// ../src/main/web/florence/font/Open_Sans/OpenSans-Bold.ttf
// ../src/main/web/florence/font/Open_Sans/OpenSans-Bold.woff
// ../src/main/web/florence/font/Open_Sans/OpenSans-Bold.woff2
// ../src/main/web/florence/font/Open_Sans/OpenSans-BoldItalic.eot
// ../src/main/web/florence/font/Open_Sans/OpenSans-BoldItalic.svg
// ../src/main/web/florence/font/Open_Sans/OpenSans-BoldItalic.ttf
// ../src/main/web/florence/font/Open_Sans/OpenSans-BoldItalic.woff
// ../src/main/web/florence/font/Open_Sans/OpenSans-ExtraBold.eot
// ../src/main/web/florence/font/Open_Sans/OpenSans-ExtraBold.svg
// ../src/main/web/florence/font/Open_Sans/OpenSans-ExtraBold.ttf
// ../src/main/web/florence/font/Open_Sans/OpenSans-ExtraBold.woff
// ../src/main/web/florence/font/Open_Sans/OpenSans-ExtraBoldItalic.eot
// ../src/main/web/florence/font/Open_Sans/OpenSans-ExtraBoldItalic.svg
// ../src/main/web/florence/font/Open_Sans/OpenSans-ExtraBoldItalic.ttf
// ../src/main/web/florence/font/Open_Sans/OpenSans-ExtraBoldItalic.woff
// ../src/main/web/florence/font/Open_Sans/OpenSans-Italic.eot
// ../src/main/web/florence/font/Open_Sans/OpenSans-Italic.svg
// ../src/main/web/florence/font/Open_Sans/OpenSans-Italic.ttf
// ../src/main/web/florence/font/Open_Sans/OpenSans-Italic.woff
// ../src/main/web/florence/font/Open_Sans/OpenSans-Light.eot
// ../src/main/web/florence/font/Open_Sans/OpenSans-Light.svg
// ../src/main/web/florence/font/Open_Sans/OpenSans-Light.ttf
// ../src/main/web/florence/font/Open_Sans/OpenSans-Light.woff
// ../src/main/web/florence/font/Open_Sans/OpenSans-Light.woff2
// ../src/main/web/florence/font/Open_Sans/OpenSans-LightItalic.eot
// ../src/main/web/florence/font/Open_Sans/OpenSans-LightItalic.svg
// ../src/main/web/florence/font/Open_Sans/OpenSans-LightItalic.ttf
// ../src/main/web/florence/font/Open_Sans/OpenSans-LightItalic.woff
// ../src/main/web/florence/font/Open_Sans/OpenSans-Regular.eot
// ../src/main/web/florence/font/Open_Sans/OpenSans-Regular.svg
// ../src/main/web/florence/font/Open_Sans/OpenSans-Regular.ttf
// ../src/main/web/florence/font/Open_Sans/OpenSans-Regular.woff
// ../src/main/web/florence/font/Open_Sans/OpenSans-Regular.woff2
// ../src/main/web/florence/font/Open_Sans/OpenSans-Semibold.eot
// ../src/main/web/florence/font/Open_Sans/OpenSans-Semibold.svg
// ../src/main/web/florence/font/Open_Sans/OpenSans-Semibold.ttf
// ../src/main/web/florence/font/Open_Sans/OpenSans-Semibold.woff
// ../src/main/web/florence/font/Open_Sans/OpenSans-Semibold.woff2
// ../src/main/web/florence/font/Open_Sans/OpenSans-SemiboldItalic.eot
// ../src/main/web/florence/font/Open_Sans/OpenSans-SemiboldItalic.svg
// ../src/main/web/florence/font/Open_Sans/OpenSans-SemiboldItalic.ttf
// ../src/main/web/florence/font/Open_Sans/OpenSans-SemiboldItalic.woff
// ../src/main/web/florence/font/Roboto_Slab/LICENSE.txt
// ../src/main/web/florence/font/Roboto_Slab/RobotoSlab-Bold.eot
// ../src/main/web/florence/font/Roboto_Slab/RobotoSlab-Bold.svg
// ../src/main/web/florence/font/Roboto_Slab/RobotoSlab-Bold.ttf
// ../src/main/web/florence/font/Roboto_Slab/RobotoSlab-Bold.woff
// ../src/main/web/florence/font/Roboto_Slab/RobotoSlab-Bold.woff2
// ../src/main/web/florence/font/Roboto_Slab/RobotoSlab-Light.eot
// ../src/main/web/florence/font/Roboto_Slab/RobotoSlab-Light.svg
// ../src/main/web/florence/font/Roboto_Slab/RobotoSlab-Light.ttf
// ../src/main/web/florence/font/Roboto_Slab/RobotoSlab-Light.woff
// ../src/main/web/florence/font/Roboto_Slab/RobotoSlab-Regular.eot
// ../src/main/web/florence/font/Roboto_Slab/RobotoSlab-Regular.svg
// ../src/main/web/florence/font/Roboto_Slab/RobotoSlab-Regular.ttf
// ../src/main/web/florence/font/Roboto_Slab/RobotoSlab-Regular.woff
// ../src/main/web/florence/font/Roboto_Slab/RobotoSlab-Regular.woff2
// ../src/main/web/florence/font/Roboto_Slab/RobotoSlab-Thin.eot
// ../src/main/web/florence/font/Roboto_Slab/RobotoSlab-Thin.svg
// ../src/main/web/florence/font/Roboto_Slab/RobotoSlab-Thin.ttf
// ../src/main/web/florence/font/Roboto_Slab/RobotoSlab-Thin.woff
// ../src/main/web/florence/font/Roboto_Slab/RobotoSlab-Thin.woff2
// ../src/main/web/florence/font/Ubuntu_Mono/UFL.txt
// ../src/main/web/florence/font/Ubuntu_Mono/UbuntuMono-Bold.eot
// ../src/main/web/florence/font/Ubuntu_Mono/UbuntuMono-Bold.svg
// ../src/main/web/florence/font/Ubuntu_Mono/UbuntuMono-Bold.ttf
// ../src/main/web/florence/font/Ubuntu_Mono/UbuntuMono-Bold.woff
// ../src/main/web/florence/font/Ubuntu_Mono/UbuntuMono-Bold.woff2
// ../src/main/web/florence/font/Ubuntu_Mono/UbuntuMono-BoldItalic.eot
// ../src/main/web/florence/font/Ubuntu_Mono/UbuntuMono-BoldItalic.svg
// ../src/main/web/florence/font/Ubuntu_Mono/UbuntuMono-BoldItalic.ttf
// ../src/main/web/florence/font/Ubuntu_Mono/UbuntuMono-BoldItalic.woff
// ../src/main/web/florence/font/Ubuntu_Mono/UbuntuMono-Italic.eot
// ../src/main/web/florence/font/Ubuntu_Mono/UbuntuMono-Italic.svg
// ../src/main/web/florence/font/Ubuntu_Mono/UbuntuMono-Italic.ttf
// ../src/main/web/florence/font/Ubuntu_Mono/UbuntuMono-Italic.woff
// ../src/main/web/florence/font/Ubuntu_Mono/UbuntuMono-Regular.eot
// ../src/main/web/florence/font/Ubuntu_Mono/UbuntuMono-Regular.svg
// ../src/main/web/florence/font/Ubuntu_Mono/UbuntuMono-Regular.ttf
// ../src/main/web/florence/font/Ubuntu_Mono/UbuntuMono-Regular.woff
// ../src/main/web/florence/font/Ubuntu_Mono/UbuntuMono-Regular.woff2
// ../src/main/web/florence/font/florence.eot
// ../src/main/web/florence/font/florence.svg
// ../src/main/web/florence/font/florence.ttf
// ../src/main/web/florence/font/florence.woff
// ../src/main/web/florence/html templates/jquery-ui.min.js
// ../src/main/web/florence/html templates/pagedown.css
// ../src/main/web/florence/html templates/publish-manual.html
// ../src/main/web/florence/html templates/publish-scheduled.html
// ../src/main/web/florence/html templates/ui-functions.js
// ../src/main/web/florence/html templates/workspace-browse.html
// ../src/main/web/florence/html templates/workspace-create.html
// ../src/main/web/florence/html templates/workspace-edit.html
// ../src/main/web/florence/img/favicon11.ico
// ../src/main/web/florence/img/favicon12.ico
// ../src/main/web/florence/img/favicon21.ico
// ../src/main/web/florence/img/favicon22.ico
// ../src/main/web/florence/img/favicon23.ico
// ../src/main/web/florence/img/favicon24.ico
// ../src/main/web/florence/img/flo-logo.png
// ../src/main/web/florence/img/flo-logo144.png
// ../src/main/web/florence/img/rule-21.png
// ../src/main/web/florence/img/rule-22.png
// ../src/main/web/florence/img/rule.png
// ../src/main/web/florence/img/sb_v_double_arrow.png
// ../src/main/web/florence/img/semi-transparent-bg.png
// ../src/main/web/florence/img/sprite.png
// ../src/main/web/florence/img/ui-bg_diagonals-thick_18_b81900_40x40.png
// ../src/main/web/florence/img/ui-bg_diagonals-thick_20_666666_40x40.png
// ../src/main/web/florence/img/ui-bg_flat_10_000000_40x100.png
// ../src/main/web/florence/img/ui-bg_glass_100_f6f6f6_1x400.png
// ../src/main/web/florence/img/ui-bg_glass_100_fdf5ce_1x400.png
// ../src/main/web/florence/img/ui-bg_glass_65_ffffff_1x400.png
// ../src/main/web/florence/img/ui-bg_gloss-wave_35_f6a828_500x100.png
// ../src/main/web/florence/img/ui-bg_highlight-soft_100_eeeeee_1x100.png
// ../src/main/web/florence/img/ui-bg_highlight-soft_75_ffe45c_1x100.png
// ../src/main/web/florence/img/ui-icons_222222_256x240.png
// ../src/main/web/florence/img/ui-icons_228ef1_256x240.png
// ../src/main/web/florence/img/ui-icons_ef8c08_256x240.png
// ../src/main/web/florence/img/ui-icons_ffd27a_256x240.png
// ../src/main/web/florence/img/ui-icons_ffffff_256x240.png
// ../src/main/web/florence/img/wmd-buttons.png
// ../src/main/web/florence/index.html
// ../src/main/web/florence/js/.DS_Store
// ../src/main/web/florence/js/app.js
// ../src/main/web/florence/js/classes/cookieUtils.js
// ../src/main/web/florence/js/classes/florence.js
// ../src/main/web/florence/js/classes/pathUtils.js
// ../src/main/web/florence/js/classes/stringUtils.js
// ../src/main/web/florence/js/components/_accordion.js
// ../src/main/web/florence/js/components/_fileInput.js
// ../src/main/web/florence/js/components/_hidePanel.js
// ../src/main/web/florence/js/components/_showPanel.js
// ../src/main/web/florence/js/functions/_ContentDeleteMarker.js
// ../src/main/web/florence/js/functions/__init.js
// ../src/main/web/florence/js/functions/_accordionSettings.js
// ../src/main/web/florence/js/functions/_autoSize.js
// ../src/main/web/florence/js/functions/_checkForPageChanged.js
// ../src/main/web/florence/js/functions/_checkPathParsed.js
// ../src/main/web/florence/js/functions/_checkPathSlashes.js
// ../src/main/web/florence/js/functions/_checkRenameUri.js
// ../src/main/web/florence/js/functions/_collectionHelpers.js
// ../src/main/web/florence/js/functions/_copyPath.js
// ../src/main/web/florence/js/functions/_createCollection.js
// ../src/main/web/florence/js/functions/_createWorkspace.js
// ../src/main/web/florence/js/functions/_deleteTeam.js
// ../src/main/web/florence/js/functions/_deleteUnpublishedVersion.js
// ../src/main/web/florence/js/functions/_deleteUser.js
// ../src/main/web/florence/js/functions/_editAddDataset.js
// ../src/main/web/florence/js/functions/_editAddFile.js
// ../src/main/web/florence/js/functions/_editAddFileWithDetails.js
// ../src/main/web/florence/js/functions/_editAlert.js
// ../src/main/web/florence/js/functions/_editBlocks.js
// ../src/main/web/florence/js/functions/_editCollection.js
// ../src/main/web/florence/js/functions/_editDatasetVersion.js
// ../src/main/web/florence/js/functions/_editDate.js
// ../src/main/web/florence/js/functions/_editDocWithFilesCorrection.js
// ../src/main/web/florence/js/functions/_editDocumentCorrection.js
// ../src/main/web/florence/js/functions/_editIntLinks.js
// ../src/main/web/florence/js/functions/_editMarkdownOneObject.js
// ../src/main/web/florence/js/functions/_editMarkdownWithNoTitle.js
// ../src/main/web/florence/js/functions/_editServiceMessage.js
// ../src/main/web/florence/js/functions/_editTopics.js
// ../src/main/web/florence/js/functions/_environment.js
// ../src/main/web/florence/js/functions/_externalLinkAccordionSection.js
// ../src/main/web/florence/js/functions/_fileDelete.js
// ../src/main/web/florence/js/functions/_fileUpload.js
// ../src/main/web/florence/js/functions/_getLastPosition.js
// ../src/main/web/florence/js/functions/_getNetworkStatus.js
// ../src/main/web/florence/js/functions/_getParentPage.js
// ../src/main/web/florence/js/functions/_getPathNameTrimLast.js
// ../src/main/web/florence/js/functions/_getPreviewUrl.js
// ../src/main/web/florence/js/functions/_handleApiError.js
// ../src/main/web/florence/js/functions/_initialiseNoteMarkdown.js
// ../src/main/web/florence/js/functions/_inputValidation.js
// ../src/main/web/florence/js/functions/_loadBrowseScreen.js
// ../src/main/web/florence/js/functions/_loadChartBuilder.js
// ../src/main/web/florence/js/functions/_loadChartsList.js
// ../src/main/web/florence/js/functions/_loadCreateScreen.js
// ../src/main/web/florence/js/functions/_loadCreator.js
// ../src/main/web/florence/js/functions/_loadCreatorDatepicker.js
// ../src/main/web/florence/js/functions/_loadEmbedIframe.js
// ../src/main/web/florence/js/functions/_loadEquationBuilder.js
// ../src/main/web/florence/js/functions/_loadEquationsList.js
// ../src/main/web/florence/js/functions/_loadImageBuilder.js
// ../src/main/web/florence/js/functions/_loadImagesList.js
// ../src/main/web/florence/js/functions/_loadImportScreen.js
// ../src/main/web/florence/js/functions/_loadMarkdownEditor.js
// ../src/main/web/florence/js/functions/_loadPageDataIntoEditor.js
// ../src/main/web/florence/js/functions/_loadParentLink.js
// ../src/main/web/florence/js/functions/_loadT16Creator.js
// ../src/main/web/florence/js/functions/_loadT4Creator.js
// ../src/main/web/florence/js/functions/_loadT6Creator.js
// ../src/main/web/florence/js/functions/_loadT7Creator.js
// ../src/main/web/florence/js/functions/_loadT8DatasetCreator.js
// ../src/main/web/florence/js/functions/_loadT8LandingCreator.js
// ../src/main/web/florence/js/functions/_loadTableBuilder.js
// ../src/main/web/florence/js/functions/_loadTablesList.js
// ../src/main/web/florence/js/functions/_loadVisCreator.js
// ../src/main/web/florence/js/functions/_logout.js
// ../src/main/web/florence/js/functions/_makeUrl.js
// ../src/main/web/florence/js/functions/_markdownContentAccordionSection.js
// ../src/main/web/florence/js/functions/_markdownSetLines.js
// ../src/main/web/florence/js/functions/_menuSelectSettings.js
// ../src/main/web/florence/js/functions/_moveBrowseNode.js
// ../src/main/web/florence/js/functions/_parseUrl.js
// ../src/main/web/florence/js/functions/_postApproveCollection.js
// ../src/main/web/florence/js/functions/_postComplete.js
// ../src/main/web/florence/js/functions/_postContent.js
// ../src/main/web/florence/js/functions/_postLogin.js
// ../src/main/web/florence/js/functions/_postReview.js
// ../src/main/web/florence/js/functions/_postTeam.js
// ../src/main/web/florence/js/functions/_postUser.js
// ../src/main/web/florence/js/functions/_publish.js
// ../src/main/web/florence/js/functions/_refreshPreview.js
// ../src/main/web/florence/js/functions/_relatedItemAccordionSection.js
// ../src/main/web/florence/js/functions/_renameChildren.js
// ../src/main/web/florence/js/functions/_renameContent.js
// ../src/main/web/florence/js/functions/_renderAccordionSections.js
// ../src/main/web/florence/js/functions/_reset.js
// ../src/main/web/florence/js/functions/_saveContent.js
// ../src/main/web/florence/js/functions/_saveNewCorrection.js
// ../src/main/web/florence/js/functions/_setShortcuts.js
// ../src/main/web/florence/js/functions/_setupFlorence.js
// ../src/main/web/florence/js/functions/_t16ReleaseEditor.js
// ../src/main/web/florence/js/functions/_t1Editor.js
// ../src/main/web/florence/js/functions/_t1EditorCensus.js
// ../src/main/web/florence/js/functions/_t2Editor.js
// ../src/main/web/florence/js/functions/_t3Editor.js
// ../src/main/web/florence/js/functions/_t4ArticleDownloadEditor.js
// ../src/main/web/florence/js/functions/_t4ArticleEditor.js
// ../src/main/web/florence/js/functions/_t4BulletinEditor.js
// ../src/main/web/florence/js/functions/_t5TimeseriesEditor.js
// ../src/main/web/florence/js/functions/_t6CompendiumChapterEditor.js
// ../src/main/web/florence/js/functions/_t6CompendiumDataEditor.js
// ../src/main/web/florence/js/functions/_t6CompendiumEditor.js
// ../src/main/web/florence/js/functions/_t7AdHocEditor.js
// ../src/main/web/florence/js/functions/_t7FoiEditor.js
// ../src/main/web/florence/js/functions/_t7MethodologyDownloadEditor.js
// ../src/main/web/florence/js/functions/_t7MethodologyEditor.js
// ../src/main/web/florence/js/functions/_t7QmiEditor.js
// ../src/main/web/florence/js/functions/_t7StaticArticleEditor.js
// ../src/main/web/florence/js/functions/_t7StaticLandingPageEditor.js
// ../src/main/web/florence/js/functions/_t7StaticPageEditor.js
// ../src/main/web/florence/js/functions/_t8DatasetEditor.js
// ../src/main/web/florence/js/functions/_t8LandingPageEditor.js
// ../src/main/web/florence/js/functions/_transfer.js
// ../src/main/web/florence/js/functions/_treeNodeSelect.js
// ../src/main/web/florence/js/functions/_ui.js
// ../src/main/web/florence/js/functions/_uiTidyup.js
// ../src/main/web/florence/js/functions/_updateContent.js
// ../src/main/web/florence/js/functions/_viewChangePassword.js
// ../src/main/web/florence/js/functions/_viewCollectionDetails.js
// ../src/main/web/florence/js/functions/_viewCollections.js
// ../src/main/web/florence/js/functions/_viewController.js
// ../src/main/web/florence/js/functions/_viewLogIn.js
// ../src/main/web/florence/js/functions/_viewPublish.js
// ../src/main/web/florence/js/functions/_viewPublishDetails.js
// ../src/main/web/florence/js/functions/_viewReleaseSelector.js
// ../src/main/web/florence/js/functions/_viewReportDetails.js
// ../src/main/web/florence/js/functions/_viewReports.js
// ../src/main/web/florence/js/functions/_viewTeamDetails.js
// ../src/main/web/florence/js/functions/_viewTeams.js
// ../src/main/web/florence/js/functions/_viewUserDetails.js
// ../src/main/web/florence/js/functions/_viewUsers.js
// ../src/main/web/florence/js/functions/_viewWorkspace.js
// ../src/main/web/florence/js/functions/_visualisationEditor.js
// ../src/main/web/florence/js/functions/registerServiceWorker.js
// ../src/main/web/florence/js/third-party/Markdown.Converter.js
// ../src/main/web/florence/js/third-party/Markdown.Editor.js
// ../src/main/web/florence/js/third-party/Markdown.Extra.js
// ../src/main/web/florence/js/third-party/Markdown.Sanitizer.js
// ../src/main/web/florence/js/third-party/ZeroClipboard.min.js
// ../src/main/web/florence/js/third-party/ZeroClipboard.swf
// ../src/main/web/florence/js/third-party/autosize.js
// ../src/main/web/florence/js/third-party/clipboard.min.js
// ../src/main/web/florence/js/third-party/handlebars.runtime.min.js
// ../src/main/web/florence/js/third-party/highcharts-more.js
// ../src/main/web/florence/js/third-party/highcharts.js
// ../src/main/web/florence/js/third-party/jquery-ui-timepicker-addon.js
// ../src/main/web/florence/js/third-party/jquery-ui.js
// ../src/main/web/florence/js/third-party/jquery.hotkeys.js
// ../src/main/web/florence/js/third-party/jquery.min.js
// ../src/main/web/florence/js/third-party/mathjax/MathJax.js
// ../src/main/web/florence/js/third-party/mathjax/config/AM_CHTML-full.js
// ../src/main/web/florence/js/third-party/mathjax/config/AM_CHTML.js
// ../src/main/web/florence/js/third-party/mathjax/config/AM_HTMLorMML-full.js
// ../src/main/web/florence/js/third-party/mathjax/config/AM_HTMLorMML.js
// ../src/main/web/florence/js/third-party/mathjax/config/AM_SVG-full.js
// ../src/main/web/florence/js/third-party/mathjax/config/AM_SVG.js
// ../src/main/web/florence/js/third-party/mathjax/config/Accessible-full.js
// ../src/main/web/florence/js/third-party/mathjax/config/Accessible.js
// ../src/main/web/florence/js/third-party/mathjax/config/MML_CHTML-full.js
// ../src/main/web/florence/js/third-party/mathjax/config/MML_CHTML.js
// ../src/main/web/florence/js/third-party/mathjax/config/MML_HTMLorMML-full.js
// ../src/main/web/florence/js/third-party/mathjax/config/MML_HTMLorMML.js
// ../src/main/web/florence/js/third-party/mathjax/config/MML_SVG-full.js
// ../src/main/web/florence/js/third-party/mathjax/config/MML_SVG.js
// ../src/main/web/florence/js/third-party/mathjax/config/MMLorHTML.js
// ../src/main/web/florence/js/third-party/mathjax/config/Safe.js
// ../src/main/web/florence/js/third-party/mathjax/config/TeX-AMS-MML_HTMLorMML-full.js
// ../src/main/web/florence/js/third-party/mathjax/config/TeX-AMS-MML_HTMLorMML.js
// ../src/main/web/florence/js/third-party/mathjax/config/TeX-AMS-MML_SVG-full.js
// ../src/main/web/florence/js/third-party/mathjax/config/TeX-AMS-MML_SVG.js
// ../src/main/web/florence/js/third-party/mathjax/config/TeX-AMS_CHTML-full.js
// ../src/main/web/florence/js/third-party/mathjax/config/TeX-AMS_CHTML.js
// ../src/main/web/florence/js/third-party/mathjax/config/TeX-AMS_HTML-full.js
// ../src/main/web/florence/js/third-party/mathjax/config/TeX-AMS_HTML.js
// ../src/main/web/florence/js/third-party/mathjax/config/TeX-AMS_SVG-full.js
// ../src/main/web/florence/js/third-party/mathjax/config/TeX-AMS_SVG.js
// ../src/main/web/florence/js/third-party/mathjax/config/TeX-MML-AM_CHTML-full.js
// ../src/main/web/florence/js/third-party/mathjax/config/TeX-MML-AM_CHTML.js
// ../src/main/web/florence/js/third-party/mathjax/config/TeX-MML-AM_HTMLorMML-full.js
// ../src/main/web/florence/js/third-party/mathjax/config/TeX-MML-AM_HTMLorMML.js
// ../src/main/web/florence/js/third-party/mathjax/config/TeX-MML-AM_SVG-full.js
// ../src/main/web/florence/js/third-party/mathjax/config/TeX-MML-AM_SVG.js
// ../src/main/web/florence/js/third-party/mathjax/config/default.js
// ../src/main/web/florence/js/third-party/mathjax/config/local/local.js
// ../src/main/web/florence/js/third-party/mathjax/extensions/AssistiveMML.js
// ../src/main/web/florence/js/third-party/mathjax/extensions/CHTML-preview.js
// ../src/main/web/florence/js/third-party/mathjax/extensions/FontWarnings.js
// ../src/main/web/florence/js/third-party/mathjax/extensions/HTML-CSS/handle-floats.js
// ../src/main/web/florence/js/third-party/mathjax/extensions/HelpDialog.js
// ../src/main/web/florence/js/third-party/mathjax/extensions/MatchWebFonts.js
// ../src/main/web/florence/js/third-party/mathjax/extensions/MathEvents.js
// ../src/main/web/florence/js/third-party/mathjax/extensions/MathML/content-mathml.js
// ../src/main/web/florence/js/third-party/mathjax/extensions/MathML/mml3.js
// ../src/main/web/florence/js/third-party/mathjax/extensions/MathMenu.js
// ../src/main/web/florence/js/third-party/mathjax/extensions/MathZoom.js
// ../src/main/web/florence/js/third-party/mathjax/extensions/Safe.js
// ../src/main/web/florence/js/third-party/mathjax/extensions/TeX/AMScd.js
// ../src/main/web/florence/js/third-party/mathjax/extensions/TeX/AMSmath.js
// ../src/main/web/florence/js/third-party/mathjax/extensions/TeX/AMSsymbols.js
// ../src/main/web/florence/js/third-party/mathjax/extensions/TeX/HTML.js
// ../src/main/web/florence/js/third-party/mathjax/extensions/TeX/action.js
// ../src/main/web/florence/js/third-party/mathjax/extensions/TeX/autobold.js
// ../src/main/web/florence/js/third-party/mathjax/extensions/TeX/autoload-all.js
// ../src/main/web/florence/js/third-party/mathjax/extensions/TeX/bbox.js
// ../src/main/web/florence/js/third-party/mathjax/extensions/TeX/begingroup.js
// ../src/main/web/florence/js/third-party/mathjax/extensions/TeX/boldsymbol.js
// ../src/main/web/florence/js/third-party/mathjax/extensions/TeX/cancel.js
// ../src/main/web/florence/js/third-party/mathjax/extensions/TeX/color.js
// ../src/main/web/florence/js/third-party/mathjax/extensions/TeX/enclose.js
// ../src/main/web/florence/js/third-party/mathjax/extensions/TeX/extpfeil.js
// ../src/main/web/florence/js/third-party/mathjax/extensions/TeX/mathchoice.js
// ../src/main/web/florence/js/third-party/mathjax/extensions/TeX/mediawiki-texvc.js
// ../src/main/web/florence/js/third-party/mathjax/extensions/TeX/mhchem.js
// ../src/main/web/florence/js/third-party/mathjax/extensions/TeX/newcommand.js
// ../src/main/web/florence/js/third-party/mathjax/extensions/TeX/noErrors.js
// ../src/main/web/florence/js/third-party/mathjax/extensions/TeX/noUndefined.js
// ../src/main/web/florence/js/third-party/mathjax/extensions/TeX/unicode.js
// ../src/main/web/florence/js/third-party/mathjax/extensions/TeX/verb.js
// ../src/main/web/florence/js/third-party/mathjax/extensions/asciimath2jax.js
// ../src/main/web/florence/js/third-party/mathjax/extensions/fast-preview.js
// ../src/main/web/florence/js/third-party/mathjax/extensions/jsMath2jax.js
// ../src/main/web/florence/js/third-party/mathjax/extensions/mml2jax.js
// ../src/main/web/florence/js/third-party/mathjax/extensions/tex2jax.js
// ../src/main/web/florence/js/third-party/mathjax/extensions/toMathML.js
// ../src/main/web/florence/js/third-party/mathjax/jax/element/mml/jax.js
// ../src/main/web/florence/js/third-party/mathjax/jax/element/mml/optable/Arrows.js
// ../src/main/web/florence/js/third-party/mathjax/jax/element/mml/optable/BasicLatin.js
// ../src/main/web/florence/js/third-party/mathjax/jax/element/mml/optable/CombDiacritMarks.js
// ../src/main/web/florence/js/third-party/mathjax/jax/element/mml/optable/CombDiactForSymbols.js
// ../src/main/web/florence/js/third-party/mathjax/jax/element/mml/optable/Dingbats.js
// ../src/main/web/florence/js/third-party/mathjax/jax/element/mml/optable/GeneralPunctuation.js
// ../src/main/web/florence/js/third-party/mathjax/jax/element/mml/optable/GeometricShapes.js
// ../src/main/web/florence/js/third-party/mathjax/jax/element/mml/optable/GreekAndCoptic.js
// ../src/main/web/florence/js/third-party/mathjax/jax/element/mml/optable/Latin1Supplement.js
// ../src/main/web/florence/js/third-party/mathjax/jax/element/mml/optable/LetterlikeSymbols.js
// ../src/main/web/florence/js/third-party/mathjax/jax/element/mml/optable/MathOperators.js
// ../src/main/web/florence/js/third-party/mathjax/jax/element/mml/optable/MiscMathSymbolsA.js
// ../src/main/web/florence/js/third-party/mathjax/jax/element/mml/optable/MiscMathSymbolsB.js
// ../src/main/web/florence/js/third-party/mathjax/jax/element/mml/optable/MiscSymbolsAndArrows.js
// ../src/main/web/florence/js/third-party/mathjax/jax/element/mml/optable/MiscTechnical.js
// ../src/main/web/florence/js/third-party/mathjax/jax/element/mml/optable/SpacingModLetters.js
// ../src/main/web/florence/js/third-party/mathjax/jax/element/mml/optable/SuppMathOperators.js
// ../src/main/web/florence/js/third-party/mathjax/jax/element/mml/optable/SupplementalArrowsA.js
// ../src/main/web/florence/js/third-party/mathjax/jax/element/mml/optable/SupplementalArrowsB.js
// ../src/main/web/florence/js/third-party/mathjax/jax/input/AsciiMath/config.js
// ../src/main/web/florence/js/third-party/mathjax/jax/input/AsciiMath/jax.js
// ../src/main/web/florence/js/third-party/mathjax/jax/input/MathML/config.js
// ../src/main/web/florence/js/third-party/mathjax/jax/input/MathML/entities/a.js
// ../src/main/web/florence/js/third-party/mathjax/jax/input/MathML/entities/b.js
// ../src/main/web/florence/js/third-party/mathjax/jax/input/MathML/entities/c.js
// ../src/main/web/florence/js/third-party/mathjax/jax/input/MathML/entities/d.js
// ../src/main/web/florence/js/third-party/mathjax/jax/input/MathML/entities/e.js
// ../src/main/web/florence/js/third-party/mathjax/jax/input/MathML/entities/f.js
// ../src/main/web/florence/js/third-party/mathjax/jax/input/MathML/entities/fr.js
// ../src/main/web/florence/js/third-party/mathjax/jax/input/MathML/entities/g.js
// ../src/main/web/florence/js/third-party/mathjax/jax/input/MathML/entities/h.js
// ../src/main/web/florence/js/third-party/mathjax/jax/input/MathML/entities/i.js
// ../src/main/web/florence/js/third-party/mathjax/jax/input/MathML/entities/j.js
// ../src/main/web/florence/js/third-party/mathjax/jax/input/MathML/entities/k.js
// ../src/main/web/florence/js/third-party/mathjax/jax/input/MathML/entities/l.js
// ../src/main/web/florence/js/third-party/mathjax/jax/input/MathML/entities/m.js
// ../src/main/web/florence/js/third-party/mathjax/jax/input/MathML/entities/n.js
// ../src/main/web/florence/js/third-party/mathjax/jax/input/MathML/entities/o.js
// ../src/main/web/florence/js/third-party/mathjax/jax/input/MathML/entities/opf.js
// ../src/main/web/florence/js/third-party/mathjax/jax/input/MathML/entities/p.js
// ../src/main/web/florence/js/third-party/mathjax/jax/input/MathML/entities/q.js
// ../src/main/web/florence/js/third-party/mathjax/jax/input/MathML/entities/r.js
// ../src/main/web/florence/js/third-party/mathjax/jax/input/MathML/entities/s.js
// ../src/main/web/florence/js/third-party/mathjax/jax/input/MathML/entities/scr.js
// ../src/main/web/florence/js/third-party/mathjax/jax/input/MathML/entities/t.js
// ../src/main/web/florence/js/third-party/mathjax/jax/input/MathML/entities/u.js
// ../src/main/web/florence/js/third-party/mathjax/jax/input/MathML/entities/v.js
// ../src/main/web/florence/js/third-party/mathjax/jax/input/MathML/entities/w.js
// ../src/main/web/florence/js/third-party/mathjax/jax/input/MathML/entities/x.js
// ../src/main/web/florence/js/third-party/mathjax/jax/input/MathML/entities/y.js
// ../src/main/web/florence/js/third-party/mathjax/jax/input/MathML/entities/z.js
// ../src/main/web/florence/js/third-party/mathjax/jax/input/MathML/jax.js
// ../src/main/web/florence/js/third-party/mathjax/jax/input/TeX/config.js
// ../src/main/web/florence/js/third-party/mathjax/jax/input/TeX/jax.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/CommonHTML/autoload/annotation-xml.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/CommonHTML/autoload/maction.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/CommonHTML/autoload/menclose.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/CommonHTML/autoload/mglyph.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/CommonHTML/autoload/mmultiscripts.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/CommonHTML/autoload/ms.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/CommonHTML/autoload/mtable.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/CommonHTML/autoload/multiline.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/CommonHTML/config.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/CommonHTML/fonts/TeX/AMS-Regular.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/CommonHTML/fonts/TeX/Caligraphic-Bold.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/CommonHTML/fonts/TeX/Fraktur-Bold.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/CommonHTML/fonts/TeX/Fraktur-Regular.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/CommonHTML/fonts/TeX/Main-Bold.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/CommonHTML/fonts/TeX/Math-BoldItalic.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/CommonHTML/fonts/TeX/SansSerif-Bold.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/CommonHTML/fonts/TeX/SansSerif-Italic.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/CommonHTML/fonts/TeX/SansSerif-Regular.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/CommonHTML/fonts/TeX/Script-Regular.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/CommonHTML/fonts/TeX/Typewriter-Regular.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/CommonHTML/fonts/TeX/fontdata-extra.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/CommonHTML/fonts/TeX/fontdata.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/CommonHTML/jax.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/autoload/annotation-xml.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/autoload/maction.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/autoload/menclose.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/autoload/mglyph.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/autoload/mmultiscripts.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/autoload/ms.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/autoload/mtable.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/autoload/multiline.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/blank.gif
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/config.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Asana-Math/Alphabets/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Asana-Math/Arrows/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Asana-Math/DoubleStruck/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Asana-Math/Fraktur/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Asana-Math/Latin/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Asana-Math/Main/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Asana-Math/Marks/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Asana-Math/Misc/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Asana-Math/Monospace/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Asana-Math/NonUnicode/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Asana-Math/Normal/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Asana-Math/Operators/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Asana-Math/SansSerif/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Asana-Math/Script/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Asana-Math/Shapes/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Asana-Math/Size1/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Asana-Math/Size2/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Asana-Math/Size3/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Asana-Math/Size4/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Asana-Math/Size5/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Asana-Math/Size6/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Asana-Math/Symbols/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Asana-Math/Variants/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Asana-Math/fontdata-extra.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Asana-Math/fontdata.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Pagella/Alphabets/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Pagella/Arrows/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Pagella/DoubleStruck/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Pagella/Fraktur/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Pagella/Latin/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Pagella/Main/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Pagella/Marks/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Pagella/Misc/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Pagella/Monospace/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Pagella/NonUnicode/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Pagella/Normal/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Pagella/Operators/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Pagella/SansSerif/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Pagella/Script/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Pagella/Shapes/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Pagella/Size1/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Pagella/Size2/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Pagella/Size3/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Pagella/Size4/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Pagella/Size5/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Pagella/Size6/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Pagella/Symbols/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Pagella/Variants/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Pagella/fontdata-extra.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Pagella/fontdata.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Termes/Alphabets/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Termes/Arrows/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Termes/DoubleStruck/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Termes/Fraktur/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Termes/Latin/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Termes/Main/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Termes/Marks/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Termes/Misc/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Termes/Monospace/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Termes/NonUnicode/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Termes/Normal/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Termes/Operators/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Termes/SansSerif/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Termes/Script/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Termes/Shapes/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Termes/Size1/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Termes/Size2/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Termes/Size3/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Termes/Size4/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Termes/Size5/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Termes/Size6/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Termes/Symbols/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Termes/Variants/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Termes/fontdata-extra.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Termes/fontdata.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Latin-Modern/Alphabets/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Latin-Modern/Arrows/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Latin-Modern/DoubleStruck/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Latin-Modern/Fraktur/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Latin-Modern/Latin/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Latin-Modern/Main/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Latin-Modern/Marks/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Latin-Modern/Misc/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Latin-Modern/Monospace/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Latin-Modern/NonUnicode/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Latin-Modern/Normal/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Latin-Modern/Operators/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Latin-Modern/SansSerif/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Latin-Modern/Script/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Latin-Modern/Shapes/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Latin-Modern/Size1/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Latin-Modern/Size2/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Latin-Modern/Size3/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Latin-Modern/Size4/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Latin-Modern/Size5/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Latin-Modern/Size6/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Latin-Modern/Size7/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Latin-Modern/Symbols/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Latin-Modern/Variants/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Latin-Modern/fontdata-extra.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Latin-Modern/fontdata.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Neo-Euler/Alphabets/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Neo-Euler/Arrows/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Neo-Euler/Fraktur/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Neo-Euler/Main/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Neo-Euler/Marks/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Neo-Euler/NonUnicode/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Neo-Euler/Normal/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Neo-Euler/Operators/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Neo-Euler/Script/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Neo-Euler/Shapes/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Neo-Euler/Size1/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Neo-Euler/Size2/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Neo-Euler/Size3/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Neo-Euler/Size4/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Neo-Euler/Size5/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Neo-Euler/Symbols/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Neo-Euler/Variants/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Neo-Euler/fontdata-extra.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Neo-Euler/fontdata.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/AlphaPresentForms.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/Arrows.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/BBBold.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/BoldFraktur.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/BoxDrawing.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/CombDiacritMarks.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/CombDiactForSymbols.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/ControlPictures.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/CurrencySymbols.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/Cyrillic.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/EnclosedAlphanum.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/GeneralPunctuation.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/GeometricShapes.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/GreekAndCoptic.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/GreekBold.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/GreekSSBold.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/IPAExtensions.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/Latin1Supplement.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/LatinExtendedA.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/LatinExtendedAdditional.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/LatinExtendedB.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/LatinExtendedD.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/LetterlikeSymbols.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/MathBold.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/MathOperators.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/MathSSBold.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/MiscMathSymbolsA.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/MiscMathSymbolsB.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/MiscSymbols.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/MiscTechnical.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/NumberForms.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/PhoneticExtensions.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/SpacingModLetters.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/SuperAndSubscripts.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/SuppMathOperators.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/BoldItalic/AlphaPresentForms.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/BoldItalic/BasicLatin.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/BoldItalic/BoxDrawing.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/BoldItalic/CombDiactForSymbols.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/BoldItalic/ControlPictures.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/BoldItalic/CurrencySymbols.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/BoldItalic/Cyrillic.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/BoldItalic/EnclosedAlphanum.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/BoldItalic/GeneralPunctuation.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/BoldItalic/GreekAndCoptic.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/BoldItalic/GreekBoldItalic.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/BoldItalic/GreekSSBoldItalic.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/BoldItalic/IPAExtensions.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/BoldItalic/Latin1Supplement.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/BoldItalic/LatinExtendedA.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/BoldItalic/LatinExtendedAdditional.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/BoldItalic/LatinExtendedB.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/BoldItalic/LetterlikeSymbols.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/BoldItalic/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/BoldItalic/MathBoldItalic.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/BoldItalic/MathBoldScript.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/BoldItalic/MathOperators.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/BoldItalic/MathSSItalicBold.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/BoldItalic/SpacingModLetters.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Italic/AlphaPresentForms.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Italic/BoxDrawing.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Italic/CombDiactForSymbols.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Italic/ControlPictures.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Italic/CurrencySymbols.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Italic/Cyrillic.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Italic/EnclosedAlphanum.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Italic/GeneralPunctuation.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Italic/GreekAndCoptic.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Italic/GreekItalic.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Italic/IPAExtensions.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Italic/Latin1Supplement.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Italic/LatinExtendedA.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Italic/LatinExtendedAdditional.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Italic/LatinExtendedB.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Italic/LetterlikeSymbols.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Italic/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Italic/MathItalic.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Italic/MathOperators.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Italic/MathSSItalic.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Italic/MathScript.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Italic/SpacingModLetters.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Italic/ij.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/AlphaPresentForms.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/Arrows.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/BBBold.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/BlockElements.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/BoldFraktur.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/BoxDrawing.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/CJK.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/CombDiacritMarks.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/CombDiactForSymbols.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/ControlPictures.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/CurrencySymbols.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/Cyrillic.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/Dingbats.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/EnclosedAlphanum.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/Fraktur.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/GeneralPunctuation.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/GeometricShapes.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/GreekAndCoptic.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/GreekBold.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/GreekBoldItalic.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/GreekItalic.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/GreekSSBold.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/GreekSSBoldItalic.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/Hiragana.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/IPAExtensions.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/Latin1Supplement.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/LatinExtendedA.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/LatinExtendedAdditional.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/LatinExtendedB.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/LatinExtendedD.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/LetterlikeSymbols.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/MathBold.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/MathBoldItalic.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/MathBoldScript.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/MathItalic.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/MathOperators.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/MathSS.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/MathSSBold.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/MathSSItalic.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/MathSSItalicBold.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/MathScript.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/MathTT.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/MiscMathSymbolsA.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/MiscMathSymbolsB.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/MiscSymbols.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/MiscSymbolsAndArrows.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/MiscTechnical.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/NumberForms.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/PhoneticExtensions.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/SpacingModLetters.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/Specials.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/SuperAndSubscripts.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/SuppMathOperators.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/SupplementalArrowsA.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/SupplementalArrowsB.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/ij.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/IntegralsD/Bold/All.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/IntegralsD/Regular/All.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/IntegralsD/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/IntegralsSm/Bold/All.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/IntegralsSm/Regular/All.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/IntegralsSm/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/IntegralsUp/Bold/All.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/IntegralsUp/Regular/All.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/IntegralsUp/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/IntegralsUpD/Bold/All.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/IntegralsUpD/Regular/All.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/IntegralsUpD/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/IntegralsUpSm/Bold/All.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/IntegralsUpSm/Regular/All.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/IntegralsUpSm/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/NonUnicode/Bold/All.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/NonUnicode/Bold/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/NonUnicode/Bold/PrivateUse.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/NonUnicode/BoldItalic/All.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/NonUnicode/BoldItalic/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/NonUnicode/BoldItalic/PrivateUse.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/NonUnicode/Italic/All.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/NonUnicode/Italic/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/NonUnicode/Italic/PrivateUse.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/NonUnicode/Regular/All.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/NonUnicode/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/NonUnicode/Regular/PrivateUse.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/SizeFiveSym/Regular/All.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/SizeFiveSym/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/SizeFourSym/Bold/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/SizeFourSym/Regular/All.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/SizeFourSym/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/SizeOneSym/Bold/All.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/SizeOneSym/Bold/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/SizeOneSym/Regular/All.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/SizeOneSym/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/SizeThreeSym/Bold/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/SizeThreeSym/Regular/All.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/SizeThreeSym/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/SizeTwoSym/Bold/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/SizeTwoSym/Regular/All.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/SizeTwoSym/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/Variants/Bold/All.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/Variants/Bold/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/Variants/Regular/All.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/Variants/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/fontdata-1.0.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/fontdata-beta.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/fontdata-extra.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/fontdata.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Alphabets/Bold/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Alphabets/BoldItalic/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Alphabets/Italic/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Alphabets/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Arrows/Bold/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Arrows/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/DoubleStruck/Bold/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/DoubleStruck/BoldItalic/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/DoubleStruck/Italic/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/DoubleStruck/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Fraktur/Bold/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Fraktur/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Latin/Bold/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Latin/BoldItalic/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Latin/Italic/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Latin/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Main/Bold/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Main/BoldItalic/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Main/Italic/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Main/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Marks/Bold/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Marks/BoldItalic/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Marks/Italic/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Marks/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Misc/Bold/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Misc/BoldItalic/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Misc/Italic/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Misc/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Monospace/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Normal/Bold/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Normal/BoldItalic/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Normal/Italic/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Operators/Bold/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Operators/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/SansSerif/Bold/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/SansSerif/BoldItalic/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/SansSerif/Italic/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/SansSerif/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Script/BoldItalic/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Script/Italic/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Script/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Shapes/Bold/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Shapes/BoldItalic/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Shapes/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Size1/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Size2/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Size3/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Size4/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Size5/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Symbols/Bold/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Symbols/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Variants/Bold/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Variants/BoldItalic/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Variants/Italic/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Variants/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/fontdata-extra.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/fontdata.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/AMS/Regular/Arrows.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/AMS/Regular/BBBold.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/AMS/Regular/BoxDrawing.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/AMS/Regular/CombDiacritMarks.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/AMS/Regular/Dingbats.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/AMS/Regular/EnclosedAlphanum.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/AMS/Regular/GeneralPunctuation.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/AMS/Regular/GeometricShapes.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/AMS/Regular/GreekAndCoptic.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/AMS/Regular/Latin1Supplement.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/AMS/Regular/LatinExtendedA.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/AMS/Regular/LetterlikeSymbols.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/AMS/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/AMS/Regular/MathOperators.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/AMS/Regular/MiscMathSymbolsB.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/AMS/Regular/MiscSymbols.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/AMS/Regular/MiscTechnical.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/AMS/Regular/PUA.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/AMS/Regular/SpacingModLetters.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/AMS/Regular/SuppMathOperators.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Caligraphic/Bold/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Caligraphic/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Fraktur/Bold/BasicLatin.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Fraktur/Bold/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Fraktur/Bold/Other.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Fraktur/Bold/PUA.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Fraktur/Regular/BasicLatin.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Fraktur/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Fraktur/Regular/Other.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Fraktur/Regular/PUA.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Greek/Bold/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Greek/BoldItalic/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Greek/Italic/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Greek/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Main/Bold/Arrows.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Main/Bold/CombDiacritMarks.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Main/Bold/CombDiactForSymbols.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Main/Bold/GeneralPunctuation.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Main/Bold/GeometricShapes.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Main/Bold/Latin1Supplement.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Main/Bold/LatinExtendedA.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Main/Bold/LatinExtendedB.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Main/Bold/LetterlikeSymbols.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Main/Bold/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Main/Bold/MathOperators.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Main/Bold/MiscMathSymbolsA.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Main/Bold/MiscSymbols.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Main/Bold/MiscTechnical.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Main/Bold/SpacingModLetters.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Main/Bold/SuppMathOperators.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Main/Bold/SupplementalArrowsA.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Main/Italic/CombDiacritMarks.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Main/Italic/GeneralPunctuation.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Main/Italic/Latin1Supplement.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Main/Italic/LetterlikeSymbols.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Main/Italic/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Main/Regular/CombDiacritMarks.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Main/Regular/GeometricShapes.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Main/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Main/Regular/MiscSymbols.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Main/Regular/SpacingModLetters.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Math/BoldItalic/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Math/Italic/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/SansSerif/Bold/BasicLatin.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/SansSerif/Bold/CombDiacritMarks.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/SansSerif/Bold/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/SansSerif/Bold/Other.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/SansSerif/Italic/BasicLatin.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/SansSerif/Italic/CombDiacritMarks.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/SansSerif/Italic/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/SansSerif/Italic/Other.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/SansSerif/Regular/BasicLatin.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/SansSerif/Regular/CombDiacritMarks.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/SansSerif/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/SansSerif/Regular/Other.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Script/Regular/BasicLatin.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Script/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Script/Regular/Other.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Size1/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Size2/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Size3/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Size4/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Typewriter/Regular/BasicLatin.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Typewriter/Regular/CombDiacritMarks.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Typewriter/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Typewriter/Regular/Other.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/WinChrome/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/WinIE6/Regular/AMS.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/WinIE6/Regular/Bold.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/WinIE6/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/fontdata-extra.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/fontdata.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/imageFonts.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/jax.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/NativeMML/config.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/NativeMML/jax.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/PlainSource/config.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/PlainSource/jax.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/PreviewHTML/config.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/PreviewHTML/jax.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/autoload/annotation-xml.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/autoload/maction.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/autoload/menclose.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/autoload/mglyph.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/autoload/mmultiscripts.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/autoload/ms.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/autoload/mtable.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/autoload/multiline.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/config.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Asana-Math/Alphabets/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Asana-Math/Arrows/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Asana-Math/DoubleStruck/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Asana-Math/Fraktur/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Asana-Math/Latin/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Asana-Math/Main/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Asana-Math/Marks/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Asana-Math/Misc/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Asana-Math/Monospace/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Asana-Math/NonUnicode/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Asana-Math/Normal/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Asana-Math/Operators/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Asana-Math/SansSerif/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Asana-Math/Script/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Asana-Math/Shapes/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Asana-Math/Size1/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Asana-Math/Size2/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Asana-Math/Size3/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Asana-Math/Size4/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Asana-Math/Size5/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Asana-Math/Size6/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Asana-Math/Symbols/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Asana-Math/Variants/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Asana-Math/fontdata-extra.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Asana-Math/fontdata.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Pagella/Alphabets/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Pagella/Arrows/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Pagella/DoubleStruck/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Pagella/Fraktur/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Pagella/Latin/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Pagella/Main/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Pagella/Marks/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Pagella/Misc/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Pagella/Monospace/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Pagella/NonUnicode/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Pagella/Normal/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Pagella/Operators/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Pagella/SansSerif/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Pagella/Script/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Pagella/Shapes/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Pagella/Size1/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Pagella/Size2/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Pagella/Size3/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Pagella/Size4/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Pagella/Size5/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Pagella/Size6/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Pagella/Symbols/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Pagella/Variants/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Pagella/fontdata-extra.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Pagella/fontdata.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Termes/Alphabets/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Termes/Arrows/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Termes/DoubleStruck/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Termes/Fraktur/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Termes/Latin/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Termes/Main/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Termes/Marks/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Termes/Misc/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Termes/Monospace/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Termes/NonUnicode/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Termes/Normal/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Termes/Operators/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Termes/SansSerif/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Termes/Script/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Termes/Shapes/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Termes/Size1/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Termes/Size2/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Termes/Size3/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Termes/Size4/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Termes/Size5/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Termes/Size6/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Termes/Symbols/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Termes/Variants/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Termes/fontdata-extra.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Termes/fontdata.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Latin-Modern/Alphabets/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Latin-Modern/Arrows/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Latin-Modern/DoubleStruck/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Latin-Modern/Fraktur/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Latin-Modern/Latin/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Latin-Modern/Main/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Latin-Modern/Marks/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Latin-Modern/Misc/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Latin-Modern/Monospace/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Latin-Modern/NonUnicode/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Latin-Modern/Normal/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Latin-Modern/Operators/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Latin-Modern/SansSerif/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Latin-Modern/Script/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Latin-Modern/Shapes/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Latin-Modern/Size1/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Latin-Modern/Size2/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Latin-Modern/Size3/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Latin-Modern/Size4/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Latin-Modern/Size5/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Latin-Modern/Size6/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Latin-Modern/Size7/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Latin-Modern/Symbols/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Latin-Modern/Variants/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Latin-Modern/fontdata-extra.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Latin-Modern/fontdata.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Neo-Euler/Alphabets/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Neo-Euler/Arrows/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Neo-Euler/Fraktur/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Neo-Euler/Main/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Neo-Euler/Marks/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Neo-Euler/NonUnicode/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Neo-Euler/Normal/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Neo-Euler/Operators/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Neo-Euler/Script/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Neo-Euler/Shapes/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Neo-Euler/Size1/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Neo-Euler/Size2/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Neo-Euler/Size3/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Neo-Euler/Size4/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Neo-Euler/Size5/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Neo-Euler/Symbols/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Neo-Euler/Variants/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Neo-Euler/fontdata-extra.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Neo-Euler/fontdata.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Alphabets/Bold/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Alphabets/BoldItalic/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Alphabets/Italic/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Alphabets/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Arrows/Bold/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Arrows/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/DoubleStruck/Bold/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/DoubleStruck/BoldItalic/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/DoubleStruck/Italic/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/DoubleStruck/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Fraktur/Bold/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Fraktur/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Latin/Bold/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Latin/BoldItalic/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Latin/Italic/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Latin/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Main/Bold/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Main/BoldItalic/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Main/Italic/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Main/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Marks/Bold/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Marks/BoldItalic/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Marks/Italic/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Marks/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Misc/Bold/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Misc/BoldItalic/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Misc/Italic/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Misc/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Monospace/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Normal/Bold/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Normal/BoldItalic/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Normal/Italic/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Operators/Bold/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Operators/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/SansSerif/Bold/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/SansSerif/BoldItalic/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/SansSerif/Italic/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/SansSerif/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Script/BoldItalic/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Script/Italic/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Script/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Shapes/Bold/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Shapes/BoldItalic/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Shapes/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Size1/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Size2/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Size3/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Size4/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Size5/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Symbols/Bold/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Symbols/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Variants/Bold/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Variants/BoldItalic/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Variants/Italic/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Variants/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/fontdata-extra.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/fontdata.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/AMS/Regular/Arrows.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/AMS/Regular/BoxDrawing.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/AMS/Regular/CombDiacritMarks.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/AMS/Regular/Dingbats.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/AMS/Regular/EnclosedAlphanum.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/AMS/Regular/GeneralPunctuation.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/AMS/Regular/GeometricShapes.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/AMS/Regular/GreekAndCoptic.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/AMS/Regular/Latin1Supplement.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/AMS/Regular/LatinExtendedA.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/AMS/Regular/LetterlikeSymbols.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/AMS/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/AMS/Regular/MathOperators.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/AMS/Regular/MiscMathSymbolsB.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/AMS/Regular/MiscSymbols.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/AMS/Regular/MiscTechnical.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/AMS/Regular/PUA.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/AMS/Regular/SpacingModLetters.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/AMS/Regular/SuppMathOperators.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Caligraphic/Bold/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Caligraphic/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Fraktur/Bold/BasicLatin.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Fraktur/Bold/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Fraktur/Bold/Other.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Fraktur/Bold/PUA.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Fraktur/Regular/BasicLatin.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Fraktur/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Fraktur/Regular/Other.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Fraktur/Regular/PUA.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Bold/Arrows.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Bold/BasicLatin.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Bold/CombDiacritMarks.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Bold/CombDiactForSymbols.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Bold/GeneralPunctuation.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Bold/GeometricShapes.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Bold/GreekAndCoptic.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Bold/Latin1Supplement.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Bold/LatinExtendedA.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Bold/LatinExtendedB.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Bold/LetterlikeSymbols.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Bold/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Bold/MathOperators.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Bold/MiscMathSymbolsA.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Bold/MiscSymbols.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Bold/MiscTechnical.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Bold/SpacingModLetters.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Bold/SuppMathOperators.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Bold/SupplementalArrowsA.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Italic/BasicLatin.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Italic/CombDiacritMarks.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Italic/GeneralPunctuation.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Italic/GreekAndCoptic.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Italic/LatinExtendedA.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Italic/LatinExtendedB.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Italic/LetterlikeSymbols.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Italic/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Italic/MathOperators.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Regular/BasicLatin.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Regular/CombDiacritMarks.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Regular/GeometricShapes.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Regular/GreekAndCoptic.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Regular/LatinExtendedA.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Regular/LatinExtendedB.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Regular/LetterlikeSymbols.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Regular/MathOperators.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Regular/MiscSymbols.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Regular/SpacingModLetters.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Regular/SuppMathOperators.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Math/BoldItalic/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Math/Italic/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/SansSerif/Bold/BasicLatin.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/SansSerif/Bold/CombDiacritMarks.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/SansSerif/Bold/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/SansSerif/Bold/Other.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/SansSerif/Italic/BasicLatin.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/SansSerif/Italic/CombDiacritMarks.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/SansSerif/Italic/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/SansSerif/Italic/Other.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/SansSerif/Regular/BasicLatin.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/SansSerif/Regular/CombDiacritMarks.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/SansSerif/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/SansSerif/Regular/Other.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Script/Regular/BasicLatin.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Script/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Size1/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Size2/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Size3/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Size4/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Typewriter/Regular/BasicLatin.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Typewriter/Regular/CombDiacritMarks.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Typewriter/Regular/Main.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Typewriter/Regular/Other.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/fontdata-extra.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/fontdata.js
// ../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/jax.js
// ../src/main/web/florence/js/third-party/mathjax/localization/ast/FontWarnings.js
// ../src/main/web/florence/js/third-party/mathjax/localization/ast/HTML-CSS.js
// ../src/main/web/florence/js/third-party/mathjax/localization/ast/HelpDialog.js
// ../src/main/web/florence/js/third-party/mathjax/localization/ast/MathML.js
// ../src/main/web/florence/js/third-party/mathjax/localization/ast/MathMenu.js
// ../src/main/web/florence/js/third-party/mathjax/localization/ast/TeX.js
// ../src/main/web/florence/js/third-party/mathjax/localization/ast/ast.js
// ../src/main/web/florence/js/third-party/mathjax/localization/bcc/FontWarnings.js
// ../src/main/web/florence/js/third-party/mathjax/localization/bcc/HTML-CSS.js
// ../src/main/web/florence/js/third-party/mathjax/localization/bcc/HelpDialog.js
// ../src/main/web/florence/js/third-party/mathjax/localization/bcc/MathML.js
// ../src/main/web/florence/js/third-party/mathjax/localization/bcc/MathMenu.js
// ../src/main/web/florence/js/third-party/mathjax/localization/bcc/TeX.js
// ../src/main/web/florence/js/third-party/mathjax/localization/bcc/bcc.js
// ../src/main/web/florence/js/third-party/mathjax/localization/bg/FontWarnings.js
// ../src/main/web/florence/js/third-party/mathjax/localization/bg/HTML-CSS.js
// ../src/main/web/florence/js/third-party/mathjax/localization/bg/HelpDialog.js
// ../src/main/web/florence/js/third-party/mathjax/localization/bg/MathML.js
// ../src/main/web/florence/js/third-party/mathjax/localization/bg/MathMenu.js
// ../src/main/web/florence/js/third-party/mathjax/localization/bg/TeX.js
// ../src/main/web/florence/js/third-party/mathjax/localization/bg/bg.js
// ../src/main/web/florence/js/third-party/mathjax/localization/br/FontWarnings.js
// ../src/main/web/florence/js/third-party/mathjax/localization/br/HTML-CSS.js
// ../src/main/web/florence/js/third-party/mathjax/localization/br/HelpDialog.js
// ../src/main/web/florence/js/third-party/mathjax/localization/br/MathML.js
// ../src/main/web/florence/js/third-party/mathjax/localization/br/MathMenu.js
// ../src/main/web/florence/js/third-party/mathjax/localization/br/TeX.js
// ../src/main/web/florence/js/third-party/mathjax/localization/br/br.js
// ../src/main/web/florence/js/third-party/mathjax/localization/ca/FontWarnings.js
// ../src/main/web/florence/js/third-party/mathjax/localization/ca/HTML-CSS.js
// ../src/main/web/florence/js/third-party/mathjax/localization/ca/HelpDialog.js
// ../src/main/web/florence/js/third-party/mathjax/localization/ca/MathML.js
// ../src/main/web/florence/js/third-party/mathjax/localization/ca/MathMenu.js
// ../src/main/web/florence/js/third-party/mathjax/localization/ca/TeX.js
// ../src/main/web/florence/js/third-party/mathjax/localization/ca/ca.js
// ../src/main/web/florence/js/third-party/mathjax/localization/cdo/FontWarnings.js
// ../src/main/web/florence/js/third-party/mathjax/localization/cdo/HTML-CSS.js
// ../src/main/web/florence/js/third-party/mathjax/localization/cdo/HelpDialog.js
// ../src/main/web/florence/js/third-party/mathjax/localization/cdo/MathML.js
// ../src/main/web/florence/js/third-party/mathjax/localization/cdo/MathMenu.js
// ../src/main/web/florence/js/third-party/mathjax/localization/cdo/TeX.js
// ../src/main/web/florence/js/third-party/mathjax/localization/cdo/cdo.js
// ../src/main/web/florence/js/third-party/mathjax/localization/ce/FontWarnings.js
// ../src/main/web/florence/js/third-party/mathjax/localization/ce/HTML-CSS.js
// ../src/main/web/florence/js/third-party/mathjax/localization/ce/HelpDialog.js
// ../src/main/web/florence/js/third-party/mathjax/localization/ce/MathML.js
// ../src/main/web/florence/js/third-party/mathjax/localization/ce/MathMenu.js
// ../src/main/web/florence/js/third-party/mathjax/localization/ce/TeX.js
// ../src/main/web/florence/js/third-party/mathjax/localization/ce/ce.js
// ../src/main/web/florence/js/third-party/mathjax/localization/cs/FontWarnings.js
// ../src/main/web/florence/js/third-party/mathjax/localization/cs/HTML-CSS.js
// ../src/main/web/florence/js/third-party/mathjax/localization/cs/HelpDialog.js
// ../src/main/web/florence/js/third-party/mathjax/localization/cs/MathML.js
// ../src/main/web/florence/js/third-party/mathjax/localization/cs/MathMenu.js
// ../src/main/web/florence/js/third-party/mathjax/localization/cs/TeX.js
// ../src/main/web/florence/js/third-party/mathjax/localization/cs/cs.js
// ../src/main/web/florence/js/third-party/mathjax/localization/cy/FontWarnings.js
// ../src/main/web/florence/js/third-party/mathjax/localization/cy/HTML-CSS.js
// ../src/main/web/florence/js/third-party/mathjax/localization/cy/HelpDialog.js
// ../src/main/web/florence/js/third-party/mathjax/localization/cy/MathML.js
// ../src/main/web/florence/js/third-party/mathjax/localization/cy/MathMenu.js
// ../src/main/web/florence/js/third-party/mathjax/localization/cy/TeX.js
// ../src/main/web/florence/js/third-party/mathjax/localization/cy/cy.js
// ../src/main/web/florence/js/third-party/mathjax/localization/da/FontWarnings.js
// ../src/main/web/florence/js/third-party/mathjax/localization/da/HTML-CSS.js
// ../src/main/web/florence/js/third-party/mathjax/localization/da/HelpDialog.js
// ../src/main/web/florence/js/third-party/mathjax/localization/da/MathML.js
// ../src/main/web/florence/js/third-party/mathjax/localization/da/MathMenu.js
// ../src/main/web/florence/js/third-party/mathjax/localization/da/TeX.js
// ../src/main/web/florence/js/third-party/mathjax/localization/da/da.js
// ../src/main/web/florence/js/third-party/mathjax/localization/de/FontWarnings.js
// ../src/main/web/florence/js/third-party/mathjax/localization/de/HTML-CSS.js
// ../src/main/web/florence/js/third-party/mathjax/localization/de/HelpDialog.js
// ../src/main/web/florence/js/third-party/mathjax/localization/de/MathML.js
// ../src/main/web/florence/js/third-party/mathjax/localization/de/MathMenu.js
// ../src/main/web/florence/js/third-party/mathjax/localization/de/TeX.js
// ../src/main/web/florence/js/third-party/mathjax/localization/de/de.js
// ../src/main/web/florence/js/third-party/mathjax/localization/en/FontWarnings.js
// ../src/main/web/florence/js/third-party/mathjax/localization/en/HTML-CSS.js
// ../src/main/web/florence/js/third-party/mathjax/localization/en/HelpDialog.js
// ../src/main/web/florence/js/third-party/mathjax/localization/en/MathML.js
// ../src/main/web/florence/js/third-party/mathjax/localization/en/MathMenu.js
// ../src/main/web/florence/js/third-party/mathjax/localization/en/TeX.js
// ../src/main/web/florence/js/third-party/mathjax/localization/en/en.js
// ../src/main/web/florence/js/third-party/mathjax/localization/eo/FontWarnings.js
// ../src/main/web/florence/js/third-party/mathjax/localization/eo/HTML-CSS.js
// ../src/main/web/florence/js/third-party/mathjax/localization/eo/HelpDialog.js
// ../src/main/web/florence/js/third-party/mathjax/localization/eo/MathML.js
// ../src/main/web/florence/js/third-party/mathjax/localization/eo/MathMenu.js
// ../src/main/web/florence/js/third-party/mathjax/localization/eo/TeX.js
// ../src/main/web/florence/js/third-party/mathjax/localization/eo/eo.js
// ../src/main/web/florence/js/third-party/mathjax/localization/es/FontWarnings.js
// ../src/main/web/florence/js/third-party/mathjax/localization/es/HTML-CSS.js
// ../src/main/web/florence/js/third-party/mathjax/localization/es/HelpDialog.js
// ../src/main/web/florence/js/third-party/mathjax/localization/es/MathML.js
// ../src/main/web/florence/js/third-party/mathjax/localization/es/MathMenu.js
// ../src/main/web/florence/js/third-party/mathjax/localization/es/TeX.js
// ../src/main/web/florence/js/third-party/mathjax/localization/es/es.js
// ../src/main/web/florence/js/third-party/mathjax/localization/fa/FontWarnings.js
// ../src/main/web/florence/js/third-party/mathjax/localization/fa/HTML-CSS.js
// ../src/main/web/florence/js/third-party/mathjax/localization/fa/HelpDialog.js
// ../src/main/web/florence/js/third-party/mathjax/localization/fa/MathML.js
// ../src/main/web/florence/js/third-party/mathjax/localization/fa/MathMenu.js
// ../src/main/web/florence/js/third-party/mathjax/localization/fa/TeX.js
// ../src/main/web/florence/js/third-party/mathjax/localization/fa/fa.js
// ../src/main/web/florence/js/third-party/mathjax/localization/fi/FontWarnings.js
// ../src/main/web/florence/js/third-party/mathjax/localization/fi/HTML-CSS.js
// ../src/main/web/florence/js/third-party/mathjax/localization/fi/HelpDialog.js
// ../src/main/web/florence/js/third-party/mathjax/localization/fi/MathML.js
// ../src/main/web/florence/js/third-party/mathjax/localization/fi/MathMenu.js
// ../src/main/web/florence/js/third-party/mathjax/localization/fi/TeX.js
// ../src/main/web/florence/js/third-party/mathjax/localization/fi/fi.js
// ../src/main/web/florence/js/third-party/mathjax/localization/fr/FontWarnings.js
// ../src/main/web/florence/js/third-party/mathjax/localization/fr/HTML-CSS.js
// ../src/main/web/florence/js/third-party/mathjax/localization/fr/HelpDialog.js
// ../src/main/web/florence/js/third-party/mathjax/localization/fr/MathML.js
// ../src/main/web/florence/js/third-party/mathjax/localization/fr/MathMenu.js
// ../src/main/web/florence/js/third-party/mathjax/localization/fr/TeX.js
// ../src/main/web/florence/js/third-party/mathjax/localization/fr/fr.js
// ../src/main/web/florence/js/third-party/mathjax/localization/gl/FontWarnings.js
// ../src/main/web/florence/js/third-party/mathjax/localization/gl/HTML-CSS.js
// ../src/main/web/florence/js/third-party/mathjax/localization/gl/HelpDialog.js
// ../src/main/web/florence/js/third-party/mathjax/localization/gl/MathML.js
// ../src/main/web/florence/js/third-party/mathjax/localization/gl/MathMenu.js
// ../src/main/web/florence/js/third-party/mathjax/localization/gl/TeX.js
// ../src/main/web/florence/js/third-party/mathjax/localization/gl/gl.js
// ../src/main/web/florence/js/third-party/mathjax/localization/he/FontWarnings.js
// ../src/main/web/florence/js/third-party/mathjax/localization/he/HTML-CSS.js
// ../src/main/web/florence/js/third-party/mathjax/localization/he/HelpDialog.js
// ../src/main/web/florence/js/third-party/mathjax/localization/he/MathML.js
// ../src/main/web/florence/js/third-party/mathjax/localization/he/MathMenu.js
// ../src/main/web/florence/js/third-party/mathjax/localization/he/TeX.js
// ../src/main/web/florence/js/third-party/mathjax/localization/he/he.js
// ../src/main/web/florence/js/third-party/mathjax/localization/ia/FontWarnings.js
// ../src/main/web/florence/js/third-party/mathjax/localization/ia/HTML-CSS.js
// ../src/main/web/florence/js/third-party/mathjax/localization/ia/HelpDialog.js
// ../src/main/web/florence/js/third-party/mathjax/localization/ia/MathML.js
// ../src/main/web/florence/js/third-party/mathjax/localization/ia/MathMenu.js
// ../src/main/web/florence/js/third-party/mathjax/localization/ia/TeX.js
// ../src/main/web/florence/js/third-party/mathjax/localization/ia/ia.js
// ../src/main/web/florence/js/third-party/mathjax/localization/it/FontWarnings.js
// ../src/main/web/florence/js/third-party/mathjax/localization/it/HTML-CSS.js
// ../src/main/web/florence/js/third-party/mathjax/localization/it/HelpDialog.js
// ../src/main/web/florence/js/third-party/mathjax/localization/it/MathML.js
// ../src/main/web/florence/js/third-party/mathjax/localization/it/MathMenu.js
// ../src/main/web/florence/js/third-party/mathjax/localization/it/TeX.js
// ../src/main/web/florence/js/third-party/mathjax/localization/it/it.js
// ../src/main/web/florence/js/third-party/mathjax/localization/ja/FontWarnings.js
// ../src/main/web/florence/js/third-party/mathjax/localization/ja/HTML-CSS.js
// ../src/main/web/florence/js/third-party/mathjax/localization/ja/HelpDialog.js
// ../src/main/web/florence/js/third-party/mathjax/localization/ja/MathML.js
// ../src/main/web/florence/js/third-party/mathjax/localization/ja/MathMenu.js
// ../src/main/web/florence/js/third-party/mathjax/localization/ja/TeX.js
// ../src/main/web/florence/js/third-party/mathjax/localization/ja/ja.js
// ../src/main/web/florence/js/third-party/mathjax/localization/kn/FontWarnings.js
// ../src/main/web/florence/js/third-party/mathjax/localization/kn/HTML-CSS.js
// ../src/main/web/florence/js/third-party/mathjax/localization/kn/HelpDialog.js
// ../src/main/web/florence/js/third-party/mathjax/localization/kn/MathML.js
// ../src/main/web/florence/js/third-party/mathjax/localization/kn/MathMenu.js
// ../src/main/web/florence/js/third-party/mathjax/localization/kn/TeX.js
// ../src/main/web/florence/js/third-party/mathjax/localization/kn/kn.js
// ../src/main/web/florence/js/third-party/mathjax/localization/ko/FontWarnings.js
// ../src/main/web/florence/js/third-party/mathjax/localization/ko/HTML-CSS.js
// ../src/main/web/florence/js/third-party/mathjax/localization/ko/HelpDialog.js
// ../src/main/web/florence/js/third-party/mathjax/localization/ko/MathML.js
// ../src/main/web/florence/js/third-party/mathjax/localization/ko/MathMenu.js
// ../src/main/web/florence/js/third-party/mathjax/localization/ko/TeX.js
// ../src/main/web/florence/js/third-party/mathjax/localization/ko/ko.js
// ../src/main/web/florence/js/third-party/mathjax/localization/lb/FontWarnings.js
// ../src/main/web/florence/js/third-party/mathjax/localization/lb/HTML-CSS.js
// ../src/main/web/florence/js/third-party/mathjax/localization/lb/HelpDialog.js
// ../src/main/web/florence/js/third-party/mathjax/localization/lb/MathML.js
// ../src/main/web/florence/js/third-party/mathjax/localization/lb/MathMenu.js
// ../src/main/web/florence/js/third-party/mathjax/localization/lb/TeX.js
// ../src/main/web/florence/js/third-party/mathjax/localization/lb/lb.js
// ../src/main/web/florence/js/third-party/mathjax/localization/lki/FontWarnings.js
// ../src/main/web/florence/js/third-party/mathjax/localization/lki/HTML-CSS.js
// ../src/main/web/florence/js/third-party/mathjax/localization/lki/HelpDialog.js
// ../src/main/web/florence/js/third-party/mathjax/localization/lki/MathML.js
// ../src/main/web/florence/js/third-party/mathjax/localization/lki/MathMenu.js
// ../src/main/web/florence/js/third-party/mathjax/localization/lki/TeX.js
// ../src/main/web/florence/js/third-party/mathjax/localization/lki/lki.js
// ../src/main/web/florence/js/third-party/mathjax/localization/lt/FontWarnings.js
// ../src/main/web/florence/js/third-party/mathjax/localization/lt/HTML-CSS.js
// ../src/main/web/florence/js/third-party/mathjax/localization/lt/HelpDialog.js
// ../src/main/web/florence/js/third-party/mathjax/localization/lt/MathML.js
// ../src/main/web/florence/js/third-party/mathjax/localization/lt/MathMenu.js
// ../src/main/web/florence/js/third-party/mathjax/localization/lt/TeX.js
// ../src/main/web/florence/js/third-party/mathjax/localization/lt/lt.js
// ../src/main/web/florence/js/third-party/mathjax/localization/mk/FontWarnings.js
// ../src/main/web/florence/js/third-party/mathjax/localization/mk/HTML-CSS.js
// ../src/main/web/florence/js/third-party/mathjax/localization/mk/HelpDialog.js
// ../src/main/web/florence/js/third-party/mathjax/localization/mk/MathML.js
// ../src/main/web/florence/js/third-party/mathjax/localization/mk/MathMenu.js
// ../src/main/web/florence/js/third-party/mathjax/localization/mk/TeX.js
// ../src/main/web/florence/js/third-party/mathjax/localization/mk/mk.js
// ../src/main/web/florence/js/third-party/mathjax/localization/nl/FontWarnings.js
// ../src/main/web/florence/js/third-party/mathjax/localization/nl/HTML-CSS.js
// ../src/main/web/florence/js/third-party/mathjax/localization/nl/HelpDialog.js
// ../src/main/web/florence/js/third-party/mathjax/localization/nl/MathML.js
// ../src/main/web/florence/js/third-party/mathjax/localization/nl/MathMenu.js
// ../src/main/web/florence/js/third-party/mathjax/localization/nl/TeX.js
// ../src/main/web/florence/js/third-party/mathjax/localization/nl/nl.js
// ../src/main/web/florence/js/third-party/mathjax/localization/oc/FontWarnings.js
// ../src/main/web/florence/js/third-party/mathjax/localization/oc/HTML-CSS.js
// ../src/main/web/florence/js/third-party/mathjax/localization/oc/HelpDialog.js
// ../src/main/web/florence/js/third-party/mathjax/localization/oc/MathML.js
// ../src/main/web/florence/js/third-party/mathjax/localization/oc/MathMenu.js
// ../src/main/web/florence/js/third-party/mathjax/localization/oc/TeX.js
// ../src/main/web/florence/js/third-party/mathjax/localization/oc/oc.js
// ../src/main/web/florence/js/third-party/mathjax/localization/pl/FontWarnings.js
// ../src/main/web/florence/js/third-party/mathjax/localization/pl/HTML-CSS.js
// ../src/main/web/florence/js/third-party/mathjax/localization/pl/HelpDialog.js
// ../src/main/web/florence/js/third-party/mathjax/localization/pl/MathML.js
// ../src/main/web/florence/js/third-party/mathjax/localization/pl/MathMenu.js
// ../src/main/web/florence/js/third-party/mathjax/localization/pl/TeX.js
// ../src/main/web/florence/js/third-party/mathjax/localization/pl/pl.js
// ../src/main/web/florence/js/third-party/mathjax/localization/pt/FontWarnings.js
// ../src/main/web/florence/js/third-party/mathjax/localization/pt/HTML-CSS.js
// ../src/main/web/florence/js/third-party/mathjax/localization/pt/HelpDialog.js
// ../src/main/web/florence/js/third-party/mathjax/localization/pt/MathML.js
// ../src/main/web/florence/js/third-party/mathjax/localization/pt/MathMenu.js
// ../src/main/web/florence/js/third-party/mathjax/localization/pt/TeX.js
// ../src/main/web/florence/js/third-party/mathjax/localization/pt/pt.js
// ../src/main/web/florence/js/third-party/mathjax/localization/pt-br/FontWarnings.js
// ../src/main/web/florence/js/third-party/mathjax/localization/pt-br/HTML-CSS.js
// ../src/main/web/florence/js/third-party/mathjax/localization/pt-br/HelpDialog.js
// ../src/main/web/florence/js/third-party/mathjax/localization/pt-br/MathML.js
// ../src/main/web/florence/js/third-party/mathjax/localization/pt-br/MathMenu.js
// ../src/main/web/florence/js/third-party/mathjax/localization/pt-br/TeX.js
// ../src/main/web/florence/js/third-party/mathjax/localization/pt-br/pt-br.js
// ../src/main/web/florence/js/third-party/mathjax/localization/qqq/FontWarnings.js
// ../src/main/web/florence/js/third-party/mathjax/localization/qqq/HTML-CSS.js
// ../src/main/web/florence/js/third-party/mathjax/localization/qqq/HelpDialog.js
// ../src/main/web/florence/js/third-party/mathjax/localization/qqq/MathML.js
// ../src/main/web/florence/js/third-party/mathjax/localization/qqq/MathMenu.js
// ../src/main/web/florence/js/third-party/mathjax/localization/qqq/TeX.js
// ../src/main/web/florence/js/third-party/mathjax/localization/qqq/qqq.js
// ../src/main/web/florence/js/third-party/mathjax/localization/ru/FontWarnings.js
// ../src/main/web/florence/js/third-party/mathjax/localization/ru/HTML-CSS.js
// ../src/main/web/florence/js/third-party/mathjax/localization/ru/HelpDialog.js
// ../src/main/web/florence/js/third-party/mathjax/localization/ru/MathML.js
// ../src/main/web/florence/js/third-party/mathjax/localization/ru/MathMenu.js
// ../src/main/web/florence/js/third-party/mathjax/localization/ru/TeX.js
// ../src/main/web/florence/js/third-party/mathjax/localization/ru/ru.js
// ../src/main/web/florence/js/third-party/mathjax/localization/scn/FontWarnings.js
// ../src/main/web/florence/js/third-party/mathjax/localization/scn/HTML-CSS.js
// ../src/main/web/florence/js/third-party/mathjax/localization/scn/HelpDialog.js
// ../src/main/web/florence/js/third-party/mathjax/localization/scn/MathML.js
// ../src/main/web/florence/js/third-party/mathjax/localization/scn/MathMenu.js
// ../src/main/web/florence/js/third-party/mathjax/localization/scn/TeX.js
// ../src/main/web/florence/js/third-party/mathjax/localization/scn/scn.js
// ../src/main/web/florence/js/third-party/mathjax/localization/sco/FontWarnings.js
// ../src/main/web/florence/js/third-party/mathjax/localization/sco/HTML-CSS.js
// ../src/main/web/florence/js/third-party/mathjax/localization/sco/HelpDialog.js
// ../src/main/web/florence/js/third-party/mathjax/localization/sco/MathML.js
// ../src/main/web/florence/js/third-party/mathjax/localization/sco/MathMenu.js
// ../src/main/web/florence/js/third-party/mathjax/localization/sco/TeX.js
// ../src/main/web/florence/js/third-party/mathjax/localization/sco/sco.js
// ../src/main/web/florence/js/third-party/mathjax/localization/sl/FontWarnings.js
// ../src/main/web/florence/js/third-party/mathjax/localization/sl/HTML-CSS.js
// ../src/main/web/florence/js/third-party/mathjax/localization/sl/HelpDialog.js
// ../src/main/web/florence/js/third-party/mathjax/localization/sl/MathML.js
// ../src/main/web/florence/js/third-party/mathjax/localization/sl/MathMenu.js
// ../src/main/web/florence/js/third-party/mathjax/localization/sl/TeX.js
// ../src/main/web/florence/js/third-party/mathjax/localization/sl/sl.js
// ../src/main/web/florence/js/third-party/mathjax/localization/sv/FontWarnings.js
// ../src/main/web/florence/js/third-party/mathjax/localization/sv/HTML-CSS.js
// ../src/main/web/florence/js/third-party/mathjax/localization/sv/HelpDialog.js
// ../src/main/web/florence/js/third-party/mathjax/localization/sv/MathML.js
// ../src/main/web/florence/js/third-party/mathjax/localization/sv/MathMenu.js
// ../src/main/web/florence/js/third-party/mathjax/localization/sv/TeX.js
// ../src/main/web/florence/js/third-party/mathjax/localization/sv/sv.js
// ../src/main/web/florence/js/third-party/mathjax/localization/tr/FontWarnings.js
// ../src/main/web/florence/js/third-party/mathjax/localization/tr/HTML-CSS.js
// ../src/main/web/florence/js/third-party/mathjax/localization/tr/HelpDialog.js
// ../src/main/web/florence/js/third-party/mathjax/localization/tr/MathML.js
// ../src/main/web/florence/js/third-party/mathjax/localization/tr/MathMenu.js
// ../src/main/web/florence/js/third-party/mathjax/localization/tr/TeX.js
// ../src/main/web/florence/js/third-party/mathjax/localization/tr/tr.js
// ../src/main/web/florence/js/third-party/mathjax/localization/uk/FontWarnings.js
// ../src/main/web/florence/js/third-party/mathjax/localization/uk/HTML-CSS.js
// ../src/main/web/florence/js/third-party/mathjax/localization/uk/HelpDialog.js
// ../src/main/web/florence/js/third-party/mathjax/localization/uk/MathML.js
// ../src/main/web/florence/js/third-party/mathjax/localization/uk/MathMenu.js
// ../src/main/web/florence/js/third-party/mathjax/localization/uk/TeX.js
// ../src/main/web/florence/js/third-party/mathjax/localization/uk/uk.js
// ../src/main/web/florence/js/third-party/mathjax/localization/vi/FontWarnings.js
// ../src/main/web/florence/js/third-party/mathjax/localization/vi/HTML-CSS.js
// ../src/main/web/florence/js/third-party/mathjax/localization/vi/HelpDialog.js
// ../src/main/web/florence/js/third-party/mathjax/localization/vi/MathML.js
// ../src/main/web/florence/js/third-party/mathjax/localization/vi/MathMenu.js
// ../src/main/web/florence/js/third-party/mathjax/localization/vi/TeX.js
// ../src/main/web/florence/js/third-party/mathjax/localization/vi/vi.js
// ../src/main/web/florence/js/third-party/mathjax/localization/zh-hans/FontWarnings.js
// ../src/main/web/florence/js/third-party/mathjax/localization/zh-hans/HTML-CSS.js
// ../src/main/web/florence/js/third-party/mathjax/localization/zh-hans/HelpDialog.js
// ../src/main/web/florence/js/third-party/mathjax/localization/zh-hans/MathML.js
// ../src/main/web/florence/js/third-party/mathjax/localization/zh-hans/MathMenu.js
// ../src/main/web/florence/js/third-party/mathjax/localization/zh-hans/TeX.js
// ../src/main/web/florence/js/third-party/mathjax/localization/zh-hans/zh-hans.js
// ../src/main/web/florence/js/third-party/redux.min.js
// ../src/main/web/florence/js/third-party/sweetalert.min.js
// ../src/main/web/florence/js/third-party/tag-it.js
// ../src/main/web/florence/js/third-party/underscore-min.js
// ../src/main/web/florence/js/third-party/underscore-min.map
// ../src/main/web/florence/js/zebedee-api/_deleteCollection.js
// ../src/main/web/florence/js/zebedee-api/_deleteContent.js
// ../src/main/web/florence/js/zebedee-api/_deleteEquation.js
// ../src/main/web/florence/js/zebedee-api/_getCollection.js
// ../src/main/web/florence/js/zebedee-api/_getPageData.js
// ../src/main/web/florence/js/zebedee-api/_getPageResource.js
// ../src/main/web/florence/js/zebedee-api/_getTeams.js
// ../src/main/web/florence/js/zebedee-api/_getUserPermission.js
// ../src/main/web/florence/js/zebedee-api/_getUsers.js
// ../src/main/web/florence/js/zebedee-api/_moveContent.js
// ../src/main/web/florence/js/zebedee-api/_postPassword.js
// ../src/main/web/florence/js/zebedee-api/_postPermission.js
// ../src/main/web/florence/js/zebedee-api/_putContent.js
// ../src/main/web/florence/manifest.json
// ../src/main/web/florence/package.json
// ../src/main/web/florence/scss/components/_accordion.scss
// ../src/main/web/florence/scss/components/_builder.scss
// ../src/main/web/florence/scss/components/_icons.scss
// ../src/main/web/florence/scss/components/_markdown-editor.scss
// ../src/main/web/florence/scss/components/_network-status.scss
// ../src/main/web/florence/scss/components/_page.scss
// ../src/main/web/florence/scss/components/_slider.scss
// ../src/main/web/florence/scss/elements/_buttons.scss
// ../src/main/web/florence/scss/elements/_forms.scss
// ../src/main/web/florence/scss/elements/_inputs.scss
// ../src/main/web/florence/scss/elements/_nav.scss
// ../src/main/web/florence/scss/elements/_tables.scss
// ../src/main/web/florence/scss/elements/_typography.scss
// ../src/main/web/florence/scss/main.scss
// ../src/main/web/florence/scss/partials/_base.scss
// ../src/main/web/florence/scss/partials/_collections.scss
// ../src/main/web/florence/scss/partials/_colour-palette.scss
// ../src/main/web/florence/scss/partials/_elements.scss
// ../src/main/web/florence/scss/partials/_fonts.scss
// ../src/main/web/florence/scss/partials/_jqui.scss
// ../src/main/web/florence/scss/partials/_publish.scss
// ../src/main/web/florence/scss/partials/_reset.scss
// ../src/main/web/florence/scss/partials/_shame.scss
// ../src/main/web/florence/scss/partials/_utilities.scss
// ../src/main/web/florence/scss/partials/_workspace.scss
// ../src/main/web/florence/scss/utilities/_display.scss
// ../src/main/web/florence/scss/utilities/_grid.scss
// ../src/main/web/florence/scss/utilities/_margin.scss
// ../src/main/web/florence/scss/utilities/_mixins.scss
// ../src/main/web/florence/scss/utilities/_padding.scss
// ../src/main/web/florence/scss/utilities/_panels.scss
// ../src/main/web/florence/scss/utilities/_utilities.scss
// ../src/main/web/florence/service-worker.js
// ../src/main/web/florence/spec/.DS_Store
// ../src/main/web/florence/spec/classes/FlorenceSpec.js
// ../src/main/web/florence/spec/classes/PathUtilsSpec.js
// ../src/main/web/florence/spec/classes/StringUtilsSpec.js
// ../src/main/web/florence/spec/support/jasmine.json
// ../src/main/web/florence/templates/blockModal.handlebars
// ../src/main/web/florence/templates/blockNewsModal.handlebars
// ../src/main/web/florence/templates/browseNode.handlebars
// ../src/main/web/florence/templates/browseNodeDataVis.handlebars
// ../src/main/web/florence/templates/changePassword.handlebars
// ../src/main/web/florence/templates/chartBuilder.handlebars
// ../src/main/web/florence/templates/chartEditBarChartExtras.handlebars
// ../src/main/web/florence/templates/chartEditBarlineExtras.handlebars
// ../src/main/web/florence/templates/chartEditDualAxisExtras.handlebars
// ../src/main/web/florence/templates/chartEditLineChartExtras.handlebars
// ../src/main/web/florence/templates/childDeletes.handlebars
// ../src/main/web/florence/templates/collectionDetails.handlebars
// ../src/main/web/florence/templates/collectionEdit.handlebars
// ../src/main/web/florence/templates/collectionList.handlebars
// ../src/main/web/florence/templates/editNav.handlebars
// ../src/main/web/florence/templates/editNavChild.handlebars
// ../src/main/web/florence/templates/editorAlert.handlebars
// ../src/main/web/florence/templates/editorCompendiumDatasetFiles.handlebars
// ../src/main/web/florence/templates/editorContent.handlebars
// ../src/main/web/florence/templates/editorContentNoTitle.handlebars
// ../src/main/web/florence/templates/editorContentOne.handlebars
// ../src/main/web/florence/templates/editorCorrection.handlebars
// ../src/main/web/florence/templates/editorDate.handlebars
// ../src/main/web/florence/templates/editorDocWithFiles.handlebars
// ../src/main/web/florence/templates/editorDownloads.handlebars
// ../src/main/web/florence/templates/editorDownloadsWithSummary.handlebars
// ../src/main/web/florence/templates/editorLinks.handlebars
// ../src/main/web/florence/templates/editorRelated.handlebars
// ../src/main/web/florence/templates/editorServiceMessage.handlebars
// ../src/main/web/florence/templates/editorT1Blocks.handlebars
// ../src/main/web/florence/templates/editorTopics.handlebars
// ../src/main/web/florence/templates/embedIframe.handlebars
// ../src/main/web/florence/templates/equationBuilder.handlebars
// ../src/main/web/florence/templates/florence.handlebars
// ../src/main/web/florence/templates/iframeNav.handlebars
// ../src/main/web/florence/templates/imageBuilder.handlebars
// ../src/main/web/florence/templates/linkExternalModal.handlebars
// ../src/main/web/florence/templates/linkModal.handlebars
// ../src/main/web/florence/templates/loadingAnimation.handlebars
// ../src/main/web/florence/templates/login.handlebars
// ../src/main/web/florence/templates/mainNav.handlebars
// ../src/main/web/florence/templates/markdownEditor.handlebars
// ../src/main/web/florence/templates/markdownEditorNoTitle.handlebars
// ../src/main/web/florence/templates/publishDetails.handlebars
// ../src/main/web/florence/templates/publishList.handlebars
// ../src/main/web/florence/templates/relatedModal.handlebars
// ../src/main/web/florence/templates/releaseSelector.handlebars
// ../src/main/web/florence/templates/reportList.handlebars
// ../src/main/web/florence/templates/reportPublishedDetails.handlebars
// ../src/main/web/florence/templates/reportUnpublishedDetails.handlebars
// ../src/main/web/florence/templates/selectorHour.handlebars
// ../src/main/web/florence/templates/selectorMinute.handlebars
// ../src/main/web/florence/templates/tableBuilder.handlebars
// ../src/main/web/florence/templates/teamDetails.handlebars
// ../src/main/web/florence/templates/teamEdit.handlebars
// ../src/main/web/florence/templates/teamList.handlebars
// ../src/main/web/florence/templates/tickAnimation.handlebars
// ../src/main/web/florence/templates/uploadFileForm.handlebars
// ../src/main/web/florence/templates/userDetails.handlebars
// ../src/main/web/florence/templates/userList.handlebars
// ../src/main/web/florence/templates/workBrowse.handlebars
// ../src/main/web/florence/templates/workCreate.handlebars
// ../src/main/web/florence/templates/workEditCharts.handlebars
// ../src/main/web/florence/templates/workEditEquations.handlebars
// ../src/main/web/florence/templates/workEditImages.handlebars
// ../src/main/web/florence/templates/workEditT1.handlebars
// ../src/main/web/florence/templates/workEditT16.handlebars
// ../src/main/web/florence/templates/workEditT1Census.handlebars
// ../src/main/web/florence/templates/workEditT1Sections.handlebars
// ../src/main/web/florence/templates/workEditT2.handlebars
// ../src/main/web/florence/templates/workEditT3.handlebars
// ../src/main/web/florence/templates/workEditT4Article.handlebars
// ../src/main/web/florence/templates/workEditT4ArticleDownload.handlebars
// ../src/main/web/florence/templates/workEditT4Bulletin.handlebars
// ../src/main/web/florence/templates/workEditT4Compendium.handlebars
// ../src/main/web/florence/templates/workEditT4Methodology.handlebars
// ../src/main/web/florence/templates/workEditT5.handlebars
// ../src/main/web/florence/templates/workEditT6.handlebars
// ../src/main/web/florence/templates/workEditT6Chapter.handlebars
// ../src/main/web/florence/templates/workEditT6Dataset.handlebars
// ../src/main/web/florence/templates/workEditT7.handlebars
// ../src/main/web/florence/templates/workEditT7Landing.handlebars
// ../src/main/web/florence/templates/workEditT7StaticArticle.handlebars
// ../src/main/web/florence/templates/workEditT8.handlebars
// ../src/main/web/florence/templates/workEditT8Compendium.handlebars
// ../src/main/web/florence/templates/workEditT8CorrectionList.handlebars
// ../src/main/web/florence/templates/workEditT8LandingDatasetList.handlebars
// ../src/main/web/florence/templates/workEditT8LandingPage.handlebars
// ../src/main/web/florence/templates/workEditT8VersionList.handlebars
// ../src/main/web/florence/templates/workEditTables.handlebars
// ../src/main/web/florence/templates/workEditVisualisation.handlebars
// ../src/main/web/florence/templates/workImport.handlebars
// ../src/main/web/florence/templates/workSpace.handlebars
// ../src/main/web/florence/webpack.config-test.js
// ../src/main/web/florence/webpack.config.js
// ../src/main/web/florence/webpack.html
// DO NOT EDIT!

package assets

import (
	"fmt"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
)

// bindataRead reads the given file from disk. It returns an error on failure.
func bindataRead(path, name string) ([]byte, error) {
	buf, err := ioutil.ReadFile(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset %s at %s: %v", name, path, err)
	}
	return buf, err
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

// SrcMainWebFlorenceDs_store reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceDs_store() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/.DS_Store"
	name := "../src/main/web/florence/.DS_Store"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceTmpMochaWebpack30a8c3b100fd21df921012ba748ffb0930a8c3b100fd21df921012ba748ffb09OutputJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceTmpMochaWebpack30a8c3b100fd21df921012ba748ffb0930a8c3b100fd21df921012ba748ffb09OutputJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/.tmp/mocha-webpack/30a8c3b100fd21df921012ba748ffb09/30a8c3b100fd21df921012ba748ffb09-output.js"
	name := "../src/main/web/florence/.tmp/mocha-webpack/30a8c3b100fd21df921012ba748ffb09/30a8c3b100fd21df921012ba748ffb09-output.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceTmpMochaWebpack30a8c3b100fd21df921012ba748ffb09EntryJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceTmpMochaWebpack30a8c3b100fd21df921012ba748ffb09EntryJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/.tmp/mocha-webpack/30a8c3b100fd21df921012ba748ffb09-entry.js"
	name := "../src/main/web/florence/.tmp/mocha-webpack/30a8c3b100fd21df921012ba748ffb09-entry.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceTmpMochaWebpack8d1c411a09add6e4f9455a3e2c6fae268d1c411a09add6e4f9455a3e2c6fae26OutputJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceTmpMochaWebpack8d1c411a09add6e4f9455a3e2c6fae268d1c411a09add6e4f9455a3e2c6fae26OutputJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/.tmp/mocha-webpack/8d1c411a09add6e4f9455a3e2c6fae26/8d1c411a09add6e4f9455a3e2c6fae26-output.js"
	name := "../src/main/web/florence/.tmp/mocha-webpack/8d1c411a09add6e4f9455a3e2c6fae26/8d1c411a09add6e4f9455a3e2c6fae26-output.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceTmpMochaWebpack8d1c411a09add6e4f9455a3e2c6fae26EntryJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceTmpMochaWebpack8d1c411a09add6e4f9455a3e2c6fae26EntryJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/.tmp/mocha-webpack/8d1c411a09add6e4f9455a3e2c6fae26-entry.js"
	name := "../src/main/web/florence/.tmp/mocha-webpack/8d1c411a09add6e4f9455a3e2c6fae26-entry.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceTmpMochaWebpackD560a417452018acef79b9f52ff98d6fD560a417452018acef79b9f52ff98d6fOutputJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceTmpMochaWebpackD560a417452018acef79b9f52ff98d6fD560a417452018acef79b9f52ff98d6fOutputJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/.tmp/mocha-webpack/d560a417452018acef79b9f52ff98d6f/d560a417452018acef79b9f52ff98d6f-output.js"
	name := "../src/main/web/florence/.tmp/mocha-webpack/d560a417452018acef79b9f52ff98d6f/d560a417452018acef79b9f52ff98d6f-output.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceTmpMochaWebpackD560a417452018acef79b9f52ff98d6fEntryJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceTmpMochaWebpackD560a417452018acef79b9f52ff98d6fEntryJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/.tmp/mocha-webpack/d560a417452018acef79b9f52ff98d6f-entry.js"
	name := "../src/main/web/florence/.tmp/mocha-webpack/d560a417452018acef79b9f52ff98d6f-entry.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceTmpMochaWebpackD681649e3b3f1264990264bdb7973867D681649e3b3f1264990264bdb7973867OutputJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceTmpMochaWebpackD681649e3b3f1264990264bdb7973867D681649e3b3f1264990264bdb7973867OutputJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/.tmp/mocha-webpack/d681649e3b3f1264990264bdb7973867/d681649e3b3f1264990264bdb7973867-output.js"
	name := "../src/main/web/florence/.tmp/mocha-webpack/d681649e3b3f1264990264bdb7973867/d681649e3b3f1264990264bdb7973867-output.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceTmpMochaWebpackD681649e3b3f1264990264bdb7973867EntryJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceTmpMochaWebpackD681649e3b3f1264990264bdb7973867EntryJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/.tmp/mocha-webpack/d681649e3b3f1264990264bdb7973867-entry.js"
	name := "../src/main/web/florence/.tmp/mocha-webpack/d681649e3b3f1264990264bdb7973867-entry.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceTmpMochaWebpackF959c9c74bb5acdf648ff8850a842cf7F959c9c74bb5acdf648ff8850a842cf7OutputJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceTmpMochaWebpackF959c9c74bb5acdf648ff8850a842cf7F959c9c74bb5acdf648ff8850a842cf7OutputJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/.tmp/mocha-webpack/f959c9c74bb5acdf648ff8850a842cf7/f959c9c74bb5acdf648ff8850a842cf7-output.js"
	name := "../src/main/web/florence/.tmp/mocha-webpack/f959c9c74bb5acdf648ff8850a842cf7/f959c9c74bb5acdf648ff8850a842cf7-output.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceTmpMochaWebpackF959c9c74bb5acdf648ff8850a842cf7EntryJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceTmpMochaWebpackF959c9c74bb5acdf648ff8850a842cf7EntryJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/.tmp/mocha-webpack/f959c9c74bb5acdf648ff8850a842cf7-entry.js"
	name := "../src/main/web/florence/.tmp/mocha-webpack/f959c9c74bb5acdf648ff8850a842cf7-entry.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceAppAppJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceAppAppJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/app/app.js"
	name := "../src/main/web/florence/app/app.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceAppSharedApiGetactivepageJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceAppSharedApiGetactivepageJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/app/shared/api/getActivePage.js"
	name := "../src/main/web/florence/app/shared/api/getActivePage.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceAppSharedApiGetbrowsetreeJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceAppSharedApiGetbrowsetreeJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/app/shared/api/getBrowseTree.js"
	name := "../src/main/web/florence/app/shared/api/getBrowseTree.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceAppSharedApiSavenewpageJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceAppSharedApiSavenewpageJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/app/shared/api/saveNewPage.js"
	name := "../src/main/web/florence/app/shared/api/saveNewPage.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceAppSharedApiUpdatepageJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceAppSharedApiUpdatepageJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/app/shared/api/updatePage.js"
	name := "../src/main/web/florence/app/shared/api/updatePage.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceAppSharedModelsPagemodelsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceAppSharedModelsPagemodelsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/app/shared/models/pageModels.js"
	name := "../src/main/web/florence/app/shared/models/pageModels.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceAppSharedStateBaseurlstateJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceAppSharedStateBaseurlstateJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/app/shared/state/baseUrlState.js"
	name := "../src/main/web/florence/app/shared/state/baseUrlState.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceAppSharedStateCollectionstateJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceAppSharedStateCollectionstateJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/app/shared/state/collectionState.js"
	name := "../src/main/web/florence/app/shared/state/collectionState.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceAppSharedStateStateJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceAppSharedStateStateJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/app/shared/state/state.js"
	name := "../src/main/web/florence/app/shared/state/state.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceAppSharedStateUserstateJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceAppSharedStateUserstateJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/app/shared/state/userState.js"
	name := "../src/main/web/florence/app/shared/state/userState.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceAppSharedStateWatchstateJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceAppSharedStateWatchstateJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/app/shared/state/watchState.js"
	name := "../src/main/web/florence/app/shared/state/watchState.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceAppSharedStateWorkspacestateJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceAppSharedStateWorkspacestateJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/app/shared/state/workspaceState.js"
	name := "../src/main/web/florence/app/shared/state/workspaceState.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceAppSharedTemplatehelpersIfcondJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceAppSharedTemplatehelpersIfcondJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/app/shared/templateHelpers/ifCond.js"
	name := "../src/main/web/florence/app/shared/templateHelpers/ifCond.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceAppSharedTemplatepartialsLoadinganimationHandlebars reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceAppSharedTemplatepartialsLoadinganimationHandlebars() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/app/shared/templatePartials/loadingAnimation.handlebars"
	name := "../src/main/web/florence/app/shared/templatePartials/loadingAnimation.handlebars"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceAppSharedUtilitiesBinddatepickerJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceAppSharedUtilitiesBinddatepickerJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/app/shared/utilities/bindDatePicker.js"
	name := "../src/main/web/florence/app/shared/utilities/bindDatePicker.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceAppSharedUtilitiesGetJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceAppSharedUtilitiesGetJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/app/shared/utilities/get.js"
	name := "../src/main/web/florence/app/shared/utilities/get.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceAppSharedUtilitiesPostJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceAppSharedUtilitiesPostJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/app/shared/utilities/post.js"
	name := "../src/main/web/florence/app/shared/utilities/post.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceAppSharedUtilitiesUtilitiesJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceAppSharedUtilitiesUtilitiesJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/app/shared/utilities/utilities.js"
	name := "../src/main/web/florence/app/shared/utilities/utilities.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceAppSharedUtilitiesUtilitiesTestJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceAppSharedUtilitiesUtilitiesTestJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/app/shared/utilities/utilities.test.js"
	name := "../src/main/web/florence/app/shared/utilities/utilities.test.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceAppWorkspaceBrowseBrowseHandlebars reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceAppWorkspaceBrowseBrowseHandlebars() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/app/workspace/browse/browse.handlebars"
	name := "../src/main/web/florence/app/workspace/browse/browse.handlebars"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceAppWorkspaceBrowseBrowsecontrollerJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceAppWorkspaceBrowseBrowsecontrollerJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/app/workspace/browse/browseController.js"
	name := "../src/main/web/florence/app/workspace/browse/browseController.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceAppWorkspaceBrowseBrowsenodeHandlebars reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceAppWorkspaceBrowseBrowsenodeHandlebars() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/app/workspace/browse/browseNode.handlebars"
	name := "../src/main/web/florence/app/workspace/browse/browseNode.handlebars"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceAppWorkspaceBrowseBrowseviewJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceAppWorkspaceBrowseBrowseviewJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/app/workspace/browse/browseView.js"
	name := "../src/main/web/florence/app/workspace/browse/browseView.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceAppWorkspaceBrowseBrowsevisnodeHandlebars reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceAppWorkspaceBrowseBrowsevisnodeHandlebars() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/app/workspace/browse/browseVisNode.handlebars"
	name := "../src/main/web/florence/app/workspace/browse/browseVisNode.handlebars"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceAppWorkspaceCreateCreateHandlebars reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceAppWorkspaceCreateCreateHandlebars() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/app/workspace/create/create.handlebars"
	name := "../src/main/web/florence/app/workspace/create/create.handlebars"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceAppWorkspaceCreateCreatecontrollerJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceAppWorkspaceCreateCreatecontrollerJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/app/workspace/create/createController.js"
	name := "../src/main/web/florence/app/workspace/create/createController.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceAppWorkspaceCreateCreateviewJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceAppWorkspaceCreateCreateviewJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/app/workspace/create/createView.js"
	name := "../src/main/web/florence/app/workspace/create/createView.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceAppWorkspaceEditEditHandlebars reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceAppWorkspaceEditEditHandlebars() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/app/workspace/edit/edit.handlebars"
	name := "../src/main/web/florence/app/workspace/edit/edit.handlebars"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceAppWorkspaceEditEditcontrollerJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceAppWorkspaceEditEditcontrollerJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/app/workspace/edit/editController.js"
	name := "../src/main/web/florence/app/workspace/edit/editController.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceAppWorkspaceEditEditviewJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceAppWorkspaceEditEditviewJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/app/workspace/edit/editView.js"
	name := "../src/main/web/florence/app/workspace/edit/editView.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceAppWorkspaceNavigationNavigationHandlebars reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceAppWorkspaceNavigationNavigationHandlebars() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/app/workspace/navigation/navigation.handlebars"
	name := "../src/main/web/florence/app/workspace/navigation/navigation.handlebars"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceAppWorkspaceNavigationNavigationcontrollerJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceAppWorkspaceNavigationNavigationcontrollerJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/app/workspace/navigation/navigationController.js"
	name := "../src/main/web/florence/app/workspace/navigation/navigationController.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceAppWorkspaceNavigationNavigationviewJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceAppWorkspaceNavigationNavigationviewJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/app/workspace/navigation/navigationView.js"
	name := "../src/main/web/florence/app/workspace/navigation/navigationView.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceAppWorkspacePreviewPreviewHandlebars reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceAppWorkspacePreviewPreviewHandlebars() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/app/workspace/preview/preview.handlebars"
	name := "../src/main/web/florence/app/workspace/preview/preview.handlebars"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceAppWorkspacePreviewPreviewcontrollerJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceAppWorkspacePreviewPreviewcontrollerJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/app/workspace/preview/previewController.js"
	name := "../src/main/web/florence/app/workspace/preview/previewController.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceAppWorkspacePreviewPreviewviewJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceAppWorkspacePreviewPreviewviewJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/app/workspace/preview/previewView.js"
	name := "../src/main/web/florence/app/workspace/preview/previewView.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceAppWorkspaceWorkspaceHandlebars reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceAppWorkspaceWorkspaceHandlebars() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/app/workspace/workspace.handlebars"
	name := "../src/main/web/florence/app/workspace/workspace.handlebars"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceAppWorkspaceWorkspacecontrollerJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceAppWorkspaceWorkspacecontrollerJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/app/workspace/workspaceController.js"
	name := "../src/main/web/florence/app/workspace/workspaceController.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceAppWorkspaceWorkspaceviewJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceAppWorkspaceWorkspaceviewJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/app/workspace/workspaceView.js"
	name := "../src/main/web/florence/app/workspace/workspaceView.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceAssetsCssMainMinCss reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceAssetsCssMainMinCss() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/assets/css/main.min.css"
	name := "../src/main/web/florence/assets/css/main.min.css"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceAssetsCssMainMinCssMap reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceAssetsCssMainMinCssMap() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/assets/css/main.min.css.map"
	name := "../src/main/web/florence/assets/css/main.min.css.map"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceAssetsJsBundleJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceAssetsJsBundleJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/assets/js/bundle.js"
	name := "../src/main/web/florence/assets/js/bundle.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceAssetsJsMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceAssetsJsMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/assets/js/main.js"
	name := "../src/main/web/florence/assets/js/main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceAssetsJsTemplatesJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceAssetsJsTemplatesJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/assets/js/templates.js"
	name := "../src/main/web/florence/assets/js/templates.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceAssetsVersionJson reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceAssetsVersionJson() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/assets/version.json"
	name := "../src/main/web/florence/assets/version.json"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceCssFlorenceCss reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceCssFlorenceCss() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/css/florence.css"
	name := "../src/main/web/florence/css/florence.css"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceCssRapidPrototypeMainCss reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceCssRapidPrototypeMainCss() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/css/rapid-prototype-main.css"
	name := "../src/main/web/florence/css/rapid-prototype-main.css"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceCssThirdPartyC3Css reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceCssThirdPartyC3Css() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/css/third-party/c3.css"
	name := "../src/main/web/florence/css/third-party/c3.css"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceCssThirdPartyJqueryUiThemeMinCss reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceCssThirdPartyJqueryUiThemeMinCss() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/css/third-party/jquery-ui.theme.min.css"
	name := "../src/main/web/florence/css/third-party/jquery-ui.theme.min.css"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceCssThirdPartyJqueryTagitCss reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceCssThirdPartyJqueryTagitCss() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/css/third-party/jquery.tagit.css"
	name := "../src/main/web/florence/css/third-party/jquery.tagit.css"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceCssThirdPartyPagedownCss reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceCssThirdPartyPagedownCss() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/css/third-party/pagedown.css"
	name := "../src/main/web/florence/css/third-party/pagedown.css"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceCssThirdPartyResponsiveTablesCss reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceCssThirdPartyResponsiveTablesCss() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/css/third-party/responsive-tables.css"
	name := "../src/main/web/florence/css/third-party/responsive-tables.css"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceCssThirdPartySweetalertCss reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceCssThirdPartySweetalertCss() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/css/third-party/sweetalert.css"
	name := "../src/main/web/florence/css/third-party/sweetalert.css"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceCssThirdPartyTagitUiZendeskCss reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceCssThirdPartyTagitUiZendeskCss() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/css/third-party/tagit.ui-zendesk.css"
	name := "../src/main/web/florence/css/third-party/tagit.ui-zendesk.css"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceFontOpen_sansLicenseTxt reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceFontOpen_sansLicenseTxt() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/font/Open_Sans/LICENSE.txt"
	name := "../src/main/web/florence/font/Open_Sans/LICENSE.txt"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceFontOpen_sansOpensansBoldEot reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceFontOpen_sansOpensansBoldEot() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/font/Open_Sans/OpenSans-Bold.eot"
	name := "../src/main/web/florence/font/Open_Sans/OpenSans-Bold.eot"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceFontOpen_sansOpensansBoldSvg reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceFontOpen_sansOpensansBoldSvg() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/font/Open_Sans/OpenSans-Bold.svg"
	name := "../src/main/web/florence/font/Open_Sans/OpenSans-Bold.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceFontOpen_sansOpensansBoldTtf reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceFontOpen_sansOpensansBoldTtf() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/font/Open_Sans/OpenSans-Bold.ttf"
	name := "../src/main/web/florence/font/Open_Sans/OpenSans-Bold.ttf"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceFontOpen_sansOpensansBoldWoff reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceFontOpen_sansOpensansBoldWoff() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/font/Open_Sans/OpenSans-Bold.woff"
	name := "../src/main/web/florence/font/Open_Sans/OpenSans-Bold.woff"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceFontOpen_sansOpensansBoldWoff2 reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceFontOpen_sansOpensansBoldWoff2() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/font/Open_Sans/OpenSans-Bold.woff2"
	name := "../src/main/web/florence/font/Open_Sans/OpenSans-Bold.woff2"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceFontOpen_sansOpensansBolditalicEot reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceFontOpen_sansOpensansBolditalicEot() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/font/Open_Sans/OpenSans-BoldItalic.eot"
	name := "../src/main/web/florence/font/Open_Sans/OpenSans-BoldItalic.eot"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceFontOpen_sansOpensansBolditalicSvg reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceFontOpen_sansOpensansBolditalicSvg() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/font/Open_Sans/OpenSans-BoldItalic.svg"
	name := "../src/main/web/florence/font/Open_Sans/OpenSans-BoldItalic.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceFontOpen_sansOpensansBolditalicTtf reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceFontOpen_sansOpensansBolditalicTtf() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/font/Open_Sans/OpenSans-BoldItalic.ttf"
	name := "../src/main/web/florence/font/Open_Sans/OpenSans-BoldItalic.ttf"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceFontOpen_sansOpensansBolditalicWoff reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceFontOpen_sansOpensansBolditalicWoff() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/font/Open_Sans/OpenSans-BoldItalic.woff"
	name := "../src/main/web/florence/font/Open_Sans/OpenSans-BoldItalic.woff"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceFontOpen_sansOpensansExtraboldEot reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceFontOpen_sansOpensansExtraboldEot() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/font/Open_Sans/OpenSans-ExtraBold.eot"
	name := "../src/main/web/florence/font/Open_Sans/OpenSans-ExtraBold.eot"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceFontOpen_sansOpensansExtraboldSvg reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceFontOpen_sansOpensansExtraboldSvg() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/font/Open_Sans/OpenSans-ExtraBold.svg"
	name := "../src/main/web/florence/font/Open_Sans/OpenSans-ExtraBold.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceFontOpen_sansOpensansExtraboldTtf reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceFontOpen_sansOpensansExtraboldTtf() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/font/Open_Sans/OpenSans-ExtraBold.ttf"
	name := "../src/main/web/florence/font/Open_Sans/OpenSans-ExtraBold.ttf"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceFontOpen_sansOpensansExtraboldWoff reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceFontOpen_sansOpensansExtraboldWoff() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/font/Open_Sans/OpenSans-ExtraBold.woff"
	name := "../src/main/web/florence/font/Open_Sans/OpenSans-ExtraBold.woff"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceFontOpen_sansOpensansExtrabolditalicEot reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceFontOpen_sansOpensansExtrabolditalicEot() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/font/Open_Sans/OpenSans-ExtraBoldItalic.eot"
	name := "../src/main/web/florence/font/Open_Sans/OpenSans-ExtraBoldItalic.eot"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceFontOpen_sansOpensansExtrabolditalicSvg reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceFontOpen_sansOpensansExtrabolditalicSvg() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/font/Open_Sans/OpenSans-ExtraBoldItalic.svg"
	name := "../src/main/web/florence/font/Open_Sans/OpenSans-ExtraBoldItalic.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceFontOpen_sansOpensansExtrabolditalicTtf reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceFontOpen_sansOpensansExtrabolditalicTtf() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/font/Open_Sans/OpenSans-ExtraBoldItalic.ttf"
	name := "../src/main/web/florence/font/Open_Sans/OpenSans-ExtraBoldItalic.ttf"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceFontOpen_sansOpensansExtrabolditalicWoff reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceFontOpen_sansOpensansExtrabolditalicWoff() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/font/Open_Sans/OpenSans-ExtraBoldItalic.woff"
	name := "../src/main/web/florence/font/Open_Sans/OpenSans-ExtraBoldItalic.woff"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceFontOpen_sansOpensansItalicEot reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceFontOpen_sansOpensansItalicEot() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/font/Open_Sans/OpenSans-Italic.eot"
	name := "../src/main/web/florence/font/Open_Sans/OpenSans-Italic.eot"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceFontOpen_sansOpensansItalicSvg reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceFontOpen_sansOpensansItalicSvg() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/font/Open_Sans/OpenSans-Italic.svg"
	name := "../src/main/web/florence/font/Open_Sans/OpenSans-Italic.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceFontOpen_sansOpensansItalicTtf reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceFontOpen_sansOpensansItalicTtf() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/font/Open_Sans/OpenSans-Italic.ttf"
	name := "../src/main/web/florence/font/Open_Sans/OpenSans-Italic.ttf"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceFontOpen_sansOpensansItalicWoff reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceFontOpen_sansOpensansItalicWoff() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/font/Open_Sans/OpenSans-Italic.woff"
	name := "../src/main/web/florence/font/Open_Sans/OpenSans-Italic.woff"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceFontOpen_sansOpensansLightEot reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceFontOpen_sansOpensansLightEot() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/font/Open_Sans/OpenSans-Light.eot"
	name := "../src/main/web/florence/font/Open_Sans/OpenSans-Light.eot"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceFontOpen_sansOpensansLightSvg reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceFontOpen_sansOpensansLightSvg() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/font/Open_Sans/OpenSans-Light.svg"
	name := "../src/main/web/florence/font/Open_Sans/OpenSans-Light.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceFontOpen_sansOpensansLightTtf reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceFontOpen_sansOpensansLightTtf() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/font/Open_Sans/OpenSans-Light.ttf"
	name := "../src/main/web/florence/font/Open_Sans/OpenSans-Light.ttf"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceFontOpen_sansOpensansLightWoff reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceFontOpen_sansOpensansLightWoff() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/font/Open_Sans/OpenSans-Light.woff"
	name := "../src/main/web/florence/font/Open_Sans/OpenSans-Light.woff"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceFontOpen_sansOpensansLightWoff2 reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceFontOpen_sansOpensansLightWoff2() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/font/Open_Sans/OpenSans-Light.woff2"
	name := "../src/main/web/florence/font/Open_Sans/OpenSans-Light.woff2"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceFontOpen_sansOpensansLightitalicEot reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceFontOpen_sansOpensansLightitalicEot() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/font/Open_Sans/OpenSans-LightItalic.eot"
	name := "../src/main/web/florence/font/Open_Sans/OpenSans-LightItalic.eot"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceFontOpen_sansOpensansLightitalicSvg reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceFontOpen_sansOpensansLightitalicSvg() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/font/Open_Sans/OpenSans-LightItalic.svg"
	name := "../src/main/web/florence/font/Open_Sans/OpenSans-LightItalic.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceFontOpen_sansOpensansLightitalicTtf reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceFontOpen_sansOpensansLightitalicTtf() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/font/Open_Sans/OpenSans-LightItalic.ttf"
	name := "../src/main/web/florence/font/Open_Sans/OpenSans-LightItalic.ttf"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceFontOpen_sansOpensansLightitalicWoff reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceFontOpen_sansOpensansLightitalicWoff() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/font/Open_Sans/OpenSans-LightItalic.woff"
	name := "../src/main/web/florence/font/Open_Sans/OpenSans-LightItalic.woff"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceFontOpen_sansOpensansRegularEot reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceFontOpen_sansOpensansRegularEot() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/font/Open_Sans/OpenSans-Regular.eot"
	name := "../src/main/web/florence/font/Open_Sans/OpenSans-Regular.eot"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceFontOpen_sansOpensansRegularSvg reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceFontOpen_sansOpensansRegularSvg() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/font/Open_Sans/OpenSans-Regular.svg"
	name := "../src/main/web/florence/font/Open_Sans/OpenSans-Regular.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceFontOpen_sansOpensansRegularTtf reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceFontOpen_sansOpensansRegularTtf() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/font/Open_Sans/OpenSans-Regular.ttf"
	name := "../src/main/web/florence/font/Open_Sans/OpenSans-Regular.ttf"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceFontOpen_sansOpensansRegularWoff reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceFontOpen_sansOpensansRegularWoff() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/font/Open_Sans/OpenSans-Regular.woff"
	name := "../src/main/web/florence/font/Open_Sans/OpenSans-Regular.woff"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceFontOpen_sansOpensansRegularWoff2 reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceFontOpen_sansOpensansRegularWoff2() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/font/Open_Sans/OpenSans-Regular.woff2"
	name := "../src/main/web/florence/font/Open_Sans/OpenSans-Regular.woff2"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceFontOpen_sansOpensansSemiboldEot reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceFontOpen_sansOpensansSemiboldEot() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/font/Open_Sans/OpenSans-Semibold.eot"
	name := "../src/main/web/florence/font/Open_Sans/OpenSans-Semibold.eot"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceFontOpen_sansOpensansSemiboldSvg reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceFontOpen_sansOpensansSemiboldSvg() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/font/Open_Sans/OpenSans-Semibold.svg"
	name := "../src/main/web/florence/font/Open_Sans/OpenSans-Semibold.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceFontOpen_sansOpensansSemiboldTtf reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceFontOpen_sansOpensansSemiboldTtf() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/font/Open_Sans/OpenSans-Semibold.ttf"
	name := "../src/main/web/florence/font/Open_Sans/OpenSans-Semibold.ttf"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceFontOpen_sansOpensansSemiboldWoff reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceFontOpen_sansOpensansSemiboldWoff() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/font/Open_Sans/OpenSans-Semibold.woff"
	name := "../src/main/web/florence/font/Open_Sans/OpenSans-Semibold.woff"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceFontOpen_sansOpensansSemiboldWoff2 reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceFontOpen_sansOpensansSemiboldWoff2() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/font/Open_Sans/OpenSans-Semibold.woff2"
	name := "../src/main/web/florence/font/Open_Sans/OpenSans-Semibold.woff2"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceFontOpen_sansOpensansSemibolditalicEot reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceFontOpen_sansOpensansSemibolditalicEot() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/font/Open_Sans/OpenSans-SemiboldItalic.eot"
	name := "../src/main/web/florence/font/Open_Sans/OpenSans-SemiboldItalic.eot"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceFontOpen_sansOpensansSemibolditalicSvg reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceFontOpen_sansOpensansSemibolditalicSvg() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/font/Open_Sans/OpenSans-SemiboldItalic.svg"
	name := "../src/main/web/florence/font/Open_Sans/OpenSans-SemiboldItalic.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceFontOpen_sansOpensansSemibolditalicTtf reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceFontOpen_sansOpensansSemibolditalicTtf() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/font/Open_Sans/OpenSans-SemiboldItalic.ttf"
	name := "../src/main/web/florence/font/Open_Sans/OpenSans-SemiboldItalic.ttf"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceFontOpen_sansOpensansSemibolditalicWoff reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceFontOpen_sansOpensansSemibolditalicWoff() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/font/Open_Sans/OpenSans-SemiboldItalic.woff"
	name := "../src/main/web/florence/font/Open_Sans/OpenSans-SemiboldItalic.woff"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceFontRoboto_slabLicenseTxt reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceFontRoboto_slabLicenseTxt() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/font/Roboto_Slab/LICENSE.txt"
	name := "../src/main/web/florence/font/Roboto_Slab/LICENSE.txt"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceFontRoboto_slabRobotoslabBoldEot reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceFontRoboto_slabRobotoslabBoldEot() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/font/Roboto_Slab/RobotoSlab-Bold.eot"
	name := "../src/main/web/florence/font/Roboto_Slab/RobotoSlab-Bold.eot"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceFontRoboto_slabRobotoslabBoldSvg reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceFontRoboto_slabRobotoslabBoldSvg() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/font/Roboto_Slab/RobotoSlab-Bold.svg"
	name := "../src/main/web/florence/font/Roboto_Slab/RobotoSlab-Bold.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceFontRoboto_slabRobotoslabBoldTtf reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceFontRoboto_slabRobotoslabBoldTtf() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/font/Roboto_Slab/RobotoSlab-Bold.ttf"
	name := "../src/main/web/florence/font/Roboto_Slab/RobotoSlab-Bold.ttf"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceFontRoboto_slabRobotoslabBoldWoff reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceFontRoboto_slabRobotoslabBoldWoff() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/font/Roboto_Slab/RobotoSlab-Bold.woff"
	name := "../src/main/web/florence/font/Roboto_Slab/RobotoSlab-Bold.woff"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceFontRoboto_slabRobotoslabBoldWoff2 reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceFontRoboto_slabRobotoslabBoldWoff2() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/font/Roboto_Slab/RobotoSlab-Bold.woff2"
	name := "../src/main/web/florence/font/Roboto_Slab/RobotoSlab-Bold.woff2"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceFontRoboto_slabRobotoslabLightEot reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceFontRoboto_slabRobotoslabLightEot() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/font/Roboto_Slab/RobotoSlab-Light.eot"
	name := "../src/main/web/florence/font/Roboto_Slab/RobotoSlab-Light.eot"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceFontRoboto_slabRobotoslabLightSvg reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceFontRoboto_slabRobotoslabLightSvg() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/font/Roboto_Slab/RobotoSlab-Light.svg"
	name := "../src/main/web/florence/font/Roboto_Slab/RobotoSlab-Light.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceFontRoboto_slabRobotoslabLightTtf reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceFontRoboto_slabRobotoslabLightTtf() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/font/Roboto_Slab/RobotoSlab-Light.ttf"
	name := "../src/main/web/florence/font/Roboto_Slab/RobotoSlab-Light.ttf"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceFontRoboto_slabRobotoslabLightWoff reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceFontRoboto_slabRobotoslabLightWoff() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/font/Roboto_Slab/RobotoSlab-Light.woff"
	name := "../src/main/web/florence/font/Roboto_Slab/RobotoSlab-Light.woff"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceFontRoboto_slabRobotoslabRegularEot reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceFontRoboto_slabRobotoslabRegularEot() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/font/Roboto_Slab/RobotoSlab-Regular.eot"
	name := "../src/main/web/florence/font/Roboto_Slab/RobotoSlab-Regular.eot"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceFontRoboto_slabRobotoslabRegularSvg reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceFontRoboto_slabRobotoslabRegularSvg() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/font/Roboto_Slab/RobotoSlab-Regular.svg"
	name := "../src/main/web/florence/font/Roboto_Slab/RobotoSlab-Regular.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceFontRoboto_slabRobotoslabRegularTtf reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceFontRoboto_slabRobotoslabRegularTtf() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/font/Roboto_Slab/RobotoSlab-Regular.ttf"
	name := "../src/main/web/florence/font/Roboto_Slab/RobotoSlab-Regular.ttf"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceFontRoboto_slabRobotoslabRegularWoff reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceFontRoboto_slabRobotoslabRegularWoff() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/font/Roboto_Slab/RobotoSlab-Regular.woff"
	name := "../src/main/web/florence/font/Roboto_Slab/RobotoSlab-Regular.woff"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceFontRoboto_slabRobotoslabRegularWoff2 reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceFontRoboto_slabRobotoslabRegularWoff2() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/font/Roboto_Slab/RobotoSlab-Regular.woff2"
	name := "../src/main/web/florence/font/Roboto_Slab/RobotoSlab-Regular.woff2"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceFontRoboto_slabRobotoslabThinEot reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceFontRoboto_slabRobotoslabThinEot() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/font/Roboto_Slab/RobotoSlab-Thin.eot"
	name := "../src/main/web/florence/font/Roboto_Slab/RobotoSlab-Thin.eot"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceFontRoboto_slabRobotoslabThinSvg reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceFontRoboto_slabRobotoslabThinSvg() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/font/Roboto_Slab/RobotoSlab-Thin.svg"
	name := "../src/main/web/florence/font/Roboto_Slab/RobotoSlab-Thin.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceFontRoboto_slabRobotoslabThinTtf reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceFontRoboto_slabRobotoslabThinTtf() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/font/Roboto_Slab/RobotoSlab-Thin.ttf"
	name := "../src/main/web/florence/font/Roboto_Slab/RobotoSlab-Thin.ttf"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceFontRoboto_slabRobotoslabThinWoff reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceFontRoboto_slabRobotoslabThinWoff() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/font/Roboto_Slab/RobotoSlab-Thin.woff"
	name := "../src/main/web/florence/font/Roboto_Slab/RobotoSlab-Thin.woff"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceFontRoboto_slabRobotoslabThinWoff2 reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceFontRoboto_slabRobotoslabThinWoff2() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/font/Roboto_Slab/RobotoSlab-Thin.woff2"
	name := "../src/main/web/florence/font/Roboto_Slab/RobotoSlab-Thin.woff2"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceFontUbuntu_monoUflTxt reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceFontUbuntu_monoUflTxt() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/font/Ubuntu_Mono/UFL.txt"
	name := "../src/main/web/florence/font/Ubuntu_Mono/UFL.txt"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceFontUbuntu_monoUbuntumonoBoldEot reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceFontUbuntu_monoUbuntumonoBoldEot() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/font/Ubuntu_Mono/UbuntuMono-Bold.eot"
	name := "../src/main/web/florence/font/Ubuntu_Mono/UbuntuMono-Bold.eot"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceFontUbuntu_monoUbuntumonoBoldSvg reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceFontUbuntu_monoUbuntumonoBoldSvg() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/font/Ubuntu_Mono/UbuntuMono-Bold.svg"
	name := "../src/main/web/florence/font/Ubuntu_Mono/UbuntuMono-Bold.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceFontUbuntu_monoUbuntumonoBoldTtf reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceFontUbuntu_monoUbuntumonoBoldTtf() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/font/Ubuntu_Mono/UbuntuMono-Bold.ttf"
	name := "../src/main/web/florence/font/Ubuntu_Mono/UbuntuMono-Bold.ttf"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceFontUbuntu_monoUbuntumonoBoldWoff reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceFontUbuntu_monoUbuntumonoBoldWoff() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/font/Ubuntu_Mono/UbuntuMono-Bold.woff"
	name := "../src/main/web/florence/font/Ubuntu_Mono/UbuntuMono-Bold.woff"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceFontUbuntu_monoUbuntumonoBoldWoff2 reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceFontUbuntu_monoUbuntumonoBoldWoff2() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/font/Ubuntu_Mono/UbuntuMono-Bold.woff2"
	name := "../src/main/web/florence/font/Ubuntu_Mono/UbuntuMono-Bold.woff2"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceFontUbuntu_monoUbuntumonoBolditalicEot reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceFontUbuntu_monoUbuntumonoBolditalicEot() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/font/Ubuntu_Mono/UbuntuMono-BoldItalic.eot"
	name := "../src/main/web/florence/font/Ubuntu_Mono/UbuntuMono-BoldItalic.eot"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceFontUbuntu_monoUbuntumonoBolditalicSvg reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceFontUbuntu_monoUbuntumonoBolditalicSvg() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/font/Ubuntu_Mono/UbuntuMono-BoldItalic.svg"
	name := "../src/main/web/florence/font/Ubuntu_Mono/UbuntuMono-BoldItalic.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceFontUbuntu_monoUbuntumonoBolditalicTtf reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceFontUbuntu_monoUbuntumonoBolditalicTtf() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/font/Ubuntu_Mono/UbuntuMono-BoldItalic.ttf"
	name := "../src/main/web/florence/font/Ubuntu_Mono/UbuntuMono-BoldItalic.ttf"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceFontUbuntu_monoUbuntumonoBolditalicWoff reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceFontUbuntu_monoUbuntumonoBolditalicWoff() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/font/Ubuntu_Mono/UbuntuMono-BoldItalic.woff"
	name := "../src/main/web/florence/font/Ubuntu_Mono/UbuntuMono-BoldItalic.woff"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceFontUbuntu_monoUbuntumonoItalicEot reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceFontUbuntu_monoUbuntumonoItalicEot() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/font/Ubuntu_Mono/UbuntuMono-Italic.eot"
	name := "../src/main/web/florence/font/Ubuntu_Mono/UbuntuMono-Italic.eot"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceFontUbuntu_monoUbuntumonoItalicSvg reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceFontUbuntu_monoUbuntumonoItalicSvg() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/font/Ubuntu_Mono/UbuntuMono-Italic.svg"
	name := "../src/main/web/florence/font/Ubuntu_Mono/UbuntuMono-Italic.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceFontUbuntu_monoUbuntumonoItalicTtf reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceFontUbuntu_monoUbuntumonoItalicTtf() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/font/Ubuntu_Mono/UbuntuMono-Italic.ttf"
	name := "../src/main/web/florence/font/Ubuntu_Mono/UbuntuMono-Italic.ttf"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceFontUbuntu_monoUbuntumonoItalicWoff reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceFontUbuntu_monoUbuntumonoItalicWoff() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/font/Ubuntu_Mono/UbuntuMono-Italic.woff"
	name := "../src/main/web/florence/font/Ubuntu_Mono/UbuntuMono-Italic.woff"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceFontUbuntu_monoUbuntumonoRegularEot reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceFontUbuntu_monoUbuntumonoRegularEot() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/font/Ubuntu_Mono/UbuntuMono-Regular.eot"
	name := "../src/main/web/florence/font/Ubuntu_Mono/UbuntuMono-Regular.eot"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceFontUbuntu_monoUbuntumonoRegularSvg reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceFontUbuntu_monoUbuntumonoRegularSvg() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/font/Ubuntu_Mono/UbuntuMono-Regular.svg"
	name := "../src/main/web/florence/font/Ubuntu_Mono/UbuntuMono-Regular.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceFontUbuntu_monoUbuntumonoRegularTtf reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceFontUbuntu_monoUbuntumonoRegularTtf() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/font/Ubuntu_Mono/UbuntuMono-Regular.ttf"
	name := "../src/main/web/florence/font/Ubuntu_Mono/UbuntuMono-Regular.ttf"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceFontUbuntu_monoUbuntumonoRegularWoff reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceFontUbuntu_monoUbuntumonoRegularWoff() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/font/Ubuntu_Mono/UbuntuMono-Regular.woff"
	name := "../src/main/web/florence/font/Ubuntu_Mono/UbuntuMono-Regular.woff"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceFontUbuntu_monoUbuntumonoRegularWoff2 reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceFontUbuntu_monoUbuntumonoRegularWoff2() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/font/Ubuntu_Mono/UbuntuMono-Regular.woff2"
	name := "../src/main/web/florence/font/Ubuntu_Mono/UbuntuMono-Regular.woff2"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceFontFlorenceEot reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceFontFlorenceEot() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/font/florence.eot"
	name := "../src/main/web/florence/font/florence.eot"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceFontFlorenceSvg reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceFontFlorenceSvg() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/font/florence.svg"
	name := "../src/main/web/florence/font/florence.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceFontFlorenceTtf reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceFontFlorenceTtf() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/font/florence.ttf"
	name := "../src/main/web/florence/font/florence.ttf"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceFontFlorenceWoff reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceFontFlorenceWoff() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/font/florence.woff"
	name := "../src/main/web/florence/font/florence.woff"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceHtmlTemplatesJqueryUiMinJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceHtmlTemplatesJqueryUiMinJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/html templates/jquery-ui.min.js"
	name := "../src/main/web/florence/html templates/jquery-ui.min.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceHtmlTemplatesPagedownCss reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceHtmlTemplatesPagedownCss() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/html templates/pagedown.css"
	name := "../src/main/web/florence/html templates/pagedown.css"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceHtmlTemplatesPublishManualHtml reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceHtmlTemplatesPublishManualHtml() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/html templates/publish-manual.html"
	name := "../src/main/web/florence/html templates/publish-manual.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceHtmlTemplatesPublishScheduledHtml reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceHtmlTemplatesPublishScheduledHtml() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/html templates/publish-scheduled.html"
	name := "../src/main/web/florence/html templates/publish-scheduled.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceHtmlTemplatesUiFunctionsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceHtmlTemplatesUiFunctionsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/html templates/ui-functions.js"
	name := "../src/main/web/florence/html templates/ui-functions.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceHtmlTemplatesWorkspaceBrowseHtml reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceHtmlTemplatesWorkspaceBrowseHtml() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/html templates/workspace-browse.html"
	name := "../src/main/web/florence/html templates/workspace-browse.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceHtmlTemplatesWorkspaceCreateHtml reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceHtmlTemplatesWorkspaceCreateHtml() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/html templates/workspace-create.html"
	name := "../src/main/web/florence/html templates/workspace-create.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceHtmlTemplatesWorkspaceEditHtml reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceHtmlTemplatesWorkspaceEditHtml() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/html templates/workspace-edit.html"
	name := "../src/main/web/florence/html templates/workspace-edit.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceImgFavicon11Ico reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceImgFavicon11Ico() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/img/favicon11.ico"
	name := "../src/main/web/florence/img/favicon11.ico"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceImgFavicon12Ico reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceImgFavicon12Ico() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/img/favicon12.ico"
	name := "../src/main/web/florence/img/favicon12.ico"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceImgFavicon21Ico reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceImgFavicon21Ico() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/img/favicon21.ico"
	name := "../src/main/web/florence/img/favicon21.ico"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceImgFavicon22Ico reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceImgFavicon22Ico() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/img/favicon22.ico"
	name := "../src/main/web/florence/img/favicon22.ico"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceImgFavicon23Ico reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceImgFavicon23Ico() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/img/favicon23.ico"
	name := "../src/main/web/florence/img/favicon23.ico"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceImgFavicon24Ico reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceImgFavicon24Ico() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/img/favicon24.ico"
	name := "../src/main/web/florence/img/favicon24.ico"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceImgFloLogoPng reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceImgFloLogoPng() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/img/flo-logo.png"
	name := "../src/main/web/florence/img/flo-logo.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceImgFloLogo144Png reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceImgFloLogo144Png() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/img/flo-logo144.png"
	name := "../src/main/web/florence/img/flo-logo144.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceImgRule21Png reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceImgRule21Png() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/img/rule-21.png"
	name := "../src/main/web/florence/img/rule-21.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceImgRule22Png reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceImgRule22Png() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/img/rule-22.png"
	name := "../src/main/web/florence/img/rule-22.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceImgRulePng reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceImgRulePng() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/img/rule.png"
	name := "../src/main/web/florence/img/rule.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceImgSb_v_double_arrowPng reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceImgSb_v_double_arrowPng() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/img/sb_v_double_arrow.png"
	name := "../src/main/web/florence/img/sb_v_double_arrow.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceImgSemiTransparentBgPng reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceImgSemiTransparentBgPng() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/img/semi-transparent-bg.png"
	name := "../src/main/web/florence/img/semi-transparent-bg.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceImgSpritePng reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceImgSpritePng() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/img/sprite.png"
	name := "../src/main/web/florence/img/sprite.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceImgUiBg_diagonalsThick_18_b81900_40x40Png reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceImgUiBg_diagonalsThick_18_b81900_40x40Png() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/img/ui-bg_diagonals-thick_18_b81900_40x40.png"
	name := "../src/main/web/florence/img/ui-bg_diagonals-thick_18_b81900_40x40.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceImgUiBg_diagonalsThick_20_666666_40x40Png reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceImgUiBg_diagonalsThick_20_666666_40x40Png() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/img/ui-bg_diagonals-thick_20_666666_40x40.png"
	name := "../src/main/web/florence/img/ui-bg_diagonals-thick_20_666666_40x40.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceImgUiBg_flat_10_000000_40x100Png reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceImgUiBg_flat_10_000000_40x100Png() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/img/ui-bg_flat_10_000000_40x100.png"
	name := "../src/main/web/florence/img/ui-bg_flat_10_000000_40x100.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceImgUiBg_glass_100_f6f6f6_1x400Png reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceImgUiBg_glass_100_f6f6f6_1x400Png() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/img/ui-bg_glass_100_f6f6f6_1x400.png"
	name := "../src/main/web/florence/img/ui-bg_glass_100_f6f6f6_1x400.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceImgUiBg_glass_100_fdf5ce_1x400Png reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceImgUiBg_glass_100_fdf5ce_1x400Png() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/img/ui-bg_glass_100_fdf5ce_1x400.png"
	name := "../src/main/web/florence/img/ui-bg_glass_100_fdf5ce_1x400.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceImgUiBg_glass_65_ffffff_1x400Png reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceImgUiBg_glass_65_ffffff_1x400Png() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/img/ui-bg_glass_65_ffffff_1x400.png"
	name := "../src/main/web/florence/img/ui-bg_glass_65_ffffff_1x400.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceImgUiBg_glossWave_35_f6a828_500x100Png reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceImgUiBg_glossWave_35_f6a828_500x100Png() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/img/ui-bg_gloss-wave_35_f6a828_500x100.png"
	name := "../src/main/web/florence/img/ui-bg_gloss-wave_35_f6a828_500x100.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceImgUiBg_highlightSoft_100_eeeeee_1x100Png reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceImgUiBg_highlightSoft_100_eeeeee_1x100Png() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/img/ui-bg_highlight-soft_100_eeeeee_1x100.png"
	name := "../src/main/web/florence/img/ui-bg_highlight-soft_100_eeeeee_1x100.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceImgUiBg_highlightSoft_75_ffe45c_1x100Png reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceImgUiBg_highlightSoft_75_ffe45c_1x100Png() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/img/ui-bg_highlight-soft_75_ffe45c_1x100.png"
	name := "../src/main/web/florence/img/ui-bg_highlight-soft_75_ffe45c_1x100.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceImgUiIcons_222222_256x240Png reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceImgUiIcons_222222_256x240Png() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/img/ui-icons_222222_256x240.png"
	name := "../src/main/web/florence/img/ui-icons_222222_256x240.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceImgUiIcons_228ef1_256x240Png reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceImgUiIcons_228ef1_256x240Png() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/img/ui-icons_228ef1_256x240.png"
	name := "../src/main/web/florence/img/ui-icons_228ef1_256x240.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceImgUiIcons_ef8c08_256x240Png reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceImgUiIcons_ef8c08_256x240Png() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/img/ui-icons_ef8c08_256x240.png"
	name := "../src/main/web/florence/img/ui-icons_ef8c08_256x240.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceImgUiIcons_ffd27a_256x240Png reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceImgUiIcons_ffd27a_256x240Png() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/img/ui-icons_ffd27a_256x240.png"
	name := "../src/main/web/florence/img/ui-icons_ffd27a_256x240.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceImgUiIcons_ffffff_256x240Png reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceImgUiIcons_ffffff_256x240Png() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/img/ui-icons_ffffff_256x240.png"
	name := "../src/main/web/florence/img/ui-icons_ffffff_256x240.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceImgWmdButtonsPng reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceImgWmdButtonsPng() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/img/wmd-buttons.png"
	name := "../src/main/web/florence/img/wmd-buttons.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceIndexHtml reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceIndexHtml() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/index.html"
	name := "../src/main/web/florence/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsDs_store reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsDs_store() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/.DS_Store"
	name := "../src/main/web/florence/js/.DS_Store"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsAppJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsAppJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/app.js"
	name := "../src/main/web/florence/js/app.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsClassesCookieutilsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsClassesCookieutilsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/classes/cookieUtils.js"
	name := "../src/main/web/florence/js/classes/cookieUtils.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsClassesFlorenceJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsClassesFlorenceJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/classes/florence.js"
	name := "../src/main/web/florence/js/classes/florence.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsClassesPathutilsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsClassesPathutilsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/classes/pathUtils.js"
	name := "../src/main/web/florence/js/classes/pathUtils.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsClassesStringutilsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsClassesStringutilsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/classes/stringUtils.js"
	name := "../src/main/web/florence/js/classes/stringUtils.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsComponents_accordionJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsComponents_accordionJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/components/_accordion.js"
	name := "../src/main/web/florence/js/components/_accordion.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsComponents_fileinputJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsComponents_fileinputJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/components/_fileInput.js"
	name := "../src/main/web/florence/js/components/_fileInput.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsComponents_hidepanelJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsComponents_hidepanelJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/components/_hidePanel.js"
	name := "../src/main/web/florence/js/components/_hidePanel.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsComponents_showpanelJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsComponents_showpanelJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/components/_showPanel.js"
	name := "../src/main/web/florence/js/components/_showPanel.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_contentdeletemarkerJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_contentdeletemarkerJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_ContentDeleteMarker.js"
	name := "../src/main/web/florence/js/functions/_ContentDeleteMarker.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions__initJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions__initJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/__init.js"
	name := "../src/main/web/florence/js/functions/__init.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_accordionsettingsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_accordionsettingsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_accordionSettings.js"
	name := "../src/main/web/florence/js/functions/_accordionSettings.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_autosizeJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_autosizeJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_autoSize.js"
	name := "../src/main/web/florence/js/functions/_autoSize.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_checkforpagechangedJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_checkforpagechangedJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_checkForPageChanged.js"
	name := "../src/main/web/florence/js/functions/_checkForPageChanged.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_checkpathparsedJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_checkpathparsedJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_checkPathParsed.js"
	name := "../src/main/web/florence/js/functions/_checkPathParsed.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_checkpathslashesJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_checkpathslashesJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_checkPathSlashes.js"
	name := "../src/main/web/florence/js/functions/_checkPathSlashes.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_checkrenameuriJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_checkrenameuriJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_checkRenameUri.js"
	name := "../src/main/web/florence/js/functions/_checkRenameUri.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_collectionhelpersJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_collectionhelpersJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_collectionHelpers.js"
	name := "../src/main/web/florence/js/functions/_collectionHelpers.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_copypathJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_copypathJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_copyPath.js"
	name := "../src/main/web/florence/js/functions/_copyPath.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_createcollectionJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_createcollectionJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_createCollection.js"
	name := "../src/main/web/florence/js/functions/_createCollection.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_createworkspaceJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_createworkspaceJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_createWorkspace.js"
	name := "../src/main/web/florence/js/functions/_createWorkspace.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_deleteteamJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_deleteteamJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_deleteTeam.js"
	name := "../src/main/web/florence/js/functions/_deleteTeam.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_deleteunpublishedversionJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_deleteunpublishedversionJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_deleteUnpublishedVersion.js"
	name := "../src/main/web/florence/js/functions/_deleteUnpublishedVersion.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_deleteuserJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_deleteuserJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_deleteUser.js"
	name := "../src/main/web/florence/js/functions/_deleteUser.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_editadddatasetJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_editadddatasetJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_editAddDataset.js"
	name := "../src/main/web/florence/js/functions/_editAddDataset.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_editaddfileJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_editaddfileJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_editAddFile.js"
	name := "../src/main/web/florence/js/functions/_editAddFile.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_editaddfilewithdetailsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_editaddfilewithdetailsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_editAddFileWithDetails.js"
	name := "../src/main/web/florence/js/functions/_editAddFileWithDetails.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_editalertJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_editalertJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_editAlert.js"
	name := "../src/main/web/florence/js/functions/_editAlert.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_editblocksJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_editblocksJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_editBlocks.js"
	name := "../src/main/web/florence/js/functions/_editBlocks.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_editcollectionJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_editcollectionJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_editCollection.js"
	name := "../src/main/web/florence/js/functions/_editCollection.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_editdatasetversionJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_editdatasetversionJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_editDatasetVersion.js"
	name := "../src/main/web/florence/js/functions/_editDatasetVersion.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_editdateJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_editdateJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_editDate.js"
	name := "../src/main/web/florence/js/functions/_editDate.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_editdocwithfilescorrectionJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_editdocwithfilescorrectionJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_editDocWithFilesCorrection.js"
	name := "../src/main/web/florence/js/functions/_editDocWithFilesCorrection.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_editdocumentcorrectionJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_editdocumentcorrectionJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_editDocumentCorrection.js"
	name := "../src/main/web/florence/js/functions/_editDocumentCorrection.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_editintlinksJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_editintlinksJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_editIntLinks.js"
	name := "../src/main/web/florence/js/functions/_editIntLinks.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_editmarkdownoneobjectJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_editmarkdownoneobjectJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_editMarkdownOneObject.js"
	name := "../src/main/web/florence/js/functions/_editMarkdownOneObject.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_editmarkdownwithnotitleJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_editmarkdownwithnotitleJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_editMarkdownWithNoTitle.js"
	name := "../src/main/web/florence/js/functions/_editMarkdownWithNoTitle.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_editservicemessageJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_editservicemessageJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_editServiceMessage.js"
	name := "../src/main/web/florence/js/functions/_editServiceMessage.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_edittopicsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_edittopicsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_editTopics.js"
	name := "../src/main/web/florence/js/functions/_editTopics.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_environmentJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_environmentJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_environment.js"
	name := "../src/main/web/florence/js/functions/_environment.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_externallinkaccordionsectionJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_externallinkaccordionsectionJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_externalLinkAccordionSection.js"
	name := "../src/main/web/florence/js/functions/_externalLinkAccordionSection.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_filedeleteJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_filedeleteJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_fileDelete.js"
	name := "../src/main/web/florence/js/functions/_fileDelete.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_fileuploadJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_fileuploadJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_fileUpload.js"
	name := "../src/main/web/florence/js/functions/_fileUpload.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_getlastpositionJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_getlastpositionJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_getLastPosition.js"
	name := "../src/main/web/florence/js/functions/_getLastPosition.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_getnetworkstatusJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_getnetworkstatusJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_getNetworkStatus.js"
	name := "../src/main/web/florence/js/functions/_getNetworkStatus.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_getparentpageJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_getparentpageJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_getParentPage.js"
	name := "../src/main/web/florence/js/functions/_getParentPage.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_getpathnametrimlastJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_getpathnametrimlastJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_getPathNameTrimLast.js"
	name := "../src/main/web/florence/js/functions/_getPathNameTrimLast.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_getpreviewurlJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_getpreviewurlJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_getPreviewUrl.js"
	name := "../src/main/web/florence/js/functions/_getPreviewUrl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_handleapierrorJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_handleapierrorJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_handleApiError.js"
	name := "../src/main/web/florence/js/functions/_handleApiError.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_initialisenotemarkdownJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_initialisenotemarkdownJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_initialiseNoteMarkdown.js"
	name := "../src/main/web/florence/js/functions/_initialiseNoteMarkdown.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_inputvalidationJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_inputvalidationJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_inputValidation.js"
	name := "../src/main/web/florence/js/functions/_inputValidation.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_loadbrowsescreenJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_loadbrowsescreenJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_loadBrowseScreen.js"
	name := "../src/main/web/florence/js/functions/_loadBrowseScreen.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_loadchartbuilderJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_loadchartbuilderJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_loadChartBuilder.js"
	name := "../src/main/web/florence/js/functions/_loadChartBuilder.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_loadchartslistJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_loadchartslistJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_loadChartsList.js"
	name := "../src/main/web/florence/js/functions/_loadChartsList.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_loadcreatescreenJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_loadcreatescreenJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_loadCreateScreen.js"
	name := "../src/main/web/florence/js/functions/_loadCreateScreen.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_loadcreatorJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_loadcreatorJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_loadCreator.js"
	name := "../src/main/web/florence/js/functions/_loadCreator.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_loadcreatordatepickerJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_loadcreatordatepickerJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_loadCreatorDatepicker.js"
	name := "../src/main/web/florence/js/functions/_loadCreatorDatepicker.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_loadembediframeJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_loadembediframeJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_loadEmbedIframe.js"
	name := "../src/main/web/florence/js/functions/_loadEmbedIframe.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_loadequationbuilderJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_loadequationbuilderJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_loadEquationBuilder.js"
	name := "../src/main/web/florence/js/functions/_loadEquationBuilder.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_loadequationslistJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_loadequationslistJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_loadEquationsList.js"
	name := "../src/main/web/florence/js/functions/_loadEquationsList.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_loadimagebuilderJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_loadimagebuilderJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_loadImageBuilder.js"
	name := "../src/main/web/florence/js/functions/_loadImageBuilder.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_loadimageslistJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_loadimageslistJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_loadImagesList.js"
	name := "../src/main/web/florence/js/functions/_loadImagesList.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_loadimportscreenJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_loadimportscreenJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_loadImportScreen.js"
	name := "../src/main/web/florence/js/functions/_loadImportScreen.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_loadmarkdowneditorJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_loadmarkdowneditorJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_loadMarkdownEditor.js"
	name := "../src/main/web/florence/js/functions/_loadMarkdownEditor.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_loadpagedataintoeditorJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_loadpagedataintoeditorJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_loadPageDataIntoEditor.js"
	name := "../src/main/web/florence/js/functions/_loadPageDataIntoEditor.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_loadparentlinkJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_loadparentlinkJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_loadParentLink.js"
	name := "../src/main/web/florence/js/functions/_loadParentLink.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_loadt16creatorJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_loadt16creatorJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_loadT16Creator.js"
	name := "../src/main/web/florence/js/functions/_loadT16Creator.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_loadt4creatorJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_loadt4creatorJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_loadT4Creator.js"
	name := "../src/main/web/florence/js/functions/_loadT4Creator.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_loadt6creatorJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_loadt6creatorJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_loadT6Creator.js"
	name := "../src/main/web/florence/js/functions/_loadT6Creator.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_loadt7creatorJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_loadt7creatorJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_loadT7Creator.js"
	name := "../src/main/web/florence/js/functions/_loadT7Creator.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_loadt8datasetcreatorJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_loadt8datasetcreatorJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_loadT8DatasetCreator.js"
	name := "../src/main/web/florence/js/functions/_loadT8DatasetCreator.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_loadt8landingcreatorJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_loadt8landingcreatorJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_loadT8LandingCreator.js"
	name := "../src/main/web/florence/js/functions/_loadT8LandingCreator.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_loadtablebuilderJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_loadtablebuilderJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_loadTableBuilder.js"
	name := "../src/main/web/florence/js/functions/_loadTableBuilder.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_loadtableslistJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_loadtableslistJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_loadTablesList.js"
	name := "../src/main/web/florence/js/functions/_loadTablesList.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_loadviscreatorJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_loadviscreatorJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_loadVisCreator.js"
	name := "../src/main/web/florence/js/functions/_loadVisCreator.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_logoutJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_logoutJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_logout.js"
	name := "../src/main/web/florence/js/functions/_logout.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_makeurlJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_makeurlJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_makeUrl.js"
	name := "../src/main/web/florence/js/functions/_makeUrl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_markdowncontentaccordionsectionJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_markdowncontentaccordionsectionJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_markdownContentAccordionSection.js"
	name := "../src/main/web/florence/js/functions/_markdownContentAccordionSection.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_markdownsetlinesJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_markdownsetlinesJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_markdownSetLines.js"
	name := "../src/main/web/florence/js/functions/_markdownSetLines.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_menuselectsettingsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_menuselectsettingsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_menuSelectSettings.js"
	name := "../src/main/web/florence/js/functions/_menuSelectSettings.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_movebrowsenodeJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_movebrowsenodeJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_moveBrowseNode.js"
	name := "../src/main/web/florence/js/functions/_moveBrowseNode.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_parseurlJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_parseurlJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_parseUrl.js"
	name := "../src/main/web/florence/js/functions/_parseUrl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_postapprovecollectionJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_postapprovecollectionJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_postApproveCollection.js"
	name := "../src/main/web/florence/js/functions/_postApproveCollection.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_postcompleteJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_postcompleteJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_postComplete.js"
	name := "../src/main/web/florence/js/functions/_postComplete.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_postcontentJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_postcontentJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_postContent.js"
	name := "../src/main/web/florence/js/functions/_postContent.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_postloginJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_postloginJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_postLogin.js"
	name := "../src/main/web/florence/js/functions/_postLogin.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_postreviewJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_postreviewJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_postReview.js"
	name := "../src/main/web/florence/js/functions/_postReview.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_postteamJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_postteamJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_postTeam.js"
	name := "../src/main/web/florence/js/functions/_postTeam.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_postuserJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_postuserJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_postUser.js"
	name := "../src/main/web/florence/js/functions/_postUser.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_publishJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_publishJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_publish.js"
	name := "../src/main/web/florence/js/functions/_publish.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_refreshpreviewJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_refreshpreviewJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_refreshPreview.js"
	name := "../src/main/web/florence/js/functions/_refreshPreview.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_relateditemaccordionsectionJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_relateditemaccordionsectionJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_relatedItemAccordionSection.js"
	name := "../src/main/web/florence/js/functions/_relatedItemAccordionSection.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_renamechildrenJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_renamechildrenJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_renameChildren.js"
	name := "../src/main/web/florence/js/functions/_renameChildren.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_renamecontentJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_renamecontentJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_renameContent.js"
	name := "../src/main/web/florence/js/functions/_renameContent.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_renderaccordionsectionsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_renderaccordionsectionsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_renderAccordionSections.js"
	name := "../src/main/web/florence/js/functions/_renderAccordionSections.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_resetJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_resetJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_reset.js"
	name := "../src/main/web/florence/js/functions/_reset.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_savecontentJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_savecontentJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_saveContent.js"
	name := "../src/main/web/florence/js/functions/_saveContent.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_savenewcorrectionJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_savenewcorrectionJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_saveNewCorrection.js"
	name := "../src/main/web/florence/js/functions/_saveNewCorrection.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_setshortcutsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_setshortcutsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_setShortcuts.js"
	name := "../src/main/web/florence/js/functions/_setShortcuts.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_setupflorenceJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_setupflorenceJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_setupFlorence.js"
	name := "../src/main/web/florence/js/functions/_setupFlorence.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_t16releaseeditorJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_t16releaseeditorJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_t16ReleaseEditor.js"
	name := "../src/main/web/florence/js/functions/_t16ReleaseEditor.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_t1editorJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_t1editorJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_t1Editor.js"
	name := "../src/main/web/florence/js/functions/_t1Editor.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_t1editorcensusJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_t1editorcensusJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_t1EditorCensus.js"
	name := "../src/main/web/florence/js/functions/_t1EditorCensus.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_t2editorJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_t2editorJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_t2Editor.js"
	name := "../src/main/web/florence/js/functions/_t2Editor.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_t3editorJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_t3editorJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_t3Editor.js"
	name := "../src/main/web/florence/js/functions/_t3Editor.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_t4articledownloadeditorJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_t4articledownloadeditorJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_t4ArticleDownloadEditor.js"
	name := "../src/main/web/florence/js/functions/_t4ArticleDownloadEditor.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_t4articleeditorJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_t4articleeditorJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_t4ArticleEditor.js"
	name := "../src/main/web/florence/js/functions/_t4ArticleEditor.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_t4bulletineditorJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_t4bulletineditorJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_t4BulletinEditor.js"
	name := "../src/main/web/florence/js/functions/_t4BulletinEditor.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_t5timeserieseditorJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_t5timeserieseditorJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_t5TimeseriesEditor.js"
	name := "../src/main/web/florence/js/functions/_t5TimeseriesEditor.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_t6compendiumchaptereditorJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_t6compendiumchaptereditorJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_t6CompendiumChapterEditor.js"
	name := "../src/main/web/florence/js/functions/_t6CompendiumChapterEditor.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_t6compendiumdataeditorJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_t6compendiumdataeditorJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_t6CompendiumDataEditor.js"
	name := "../src/main/web/florence/js/functions/_t6CompendiumDataEditor.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_t6compendiumeditorJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_t6compendiumeditorJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_t6CompendiumEditor.js"
	name := "../src/main/web/florence/js/functions/_t6CompendiumEditor.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_t7adhoceditorJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_t7adhoceditorJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_t7AdHocEditor.js"
	name := "../src/main/web/florence/js/functions/_t7AdHocEditor.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_t7foieditorJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_t7foieditorJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_t7FoiEditor.js"
	name := "../src/main/web/florence/js/functions/_t7FoiEditor.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_t7methodologydownloadeditorJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_t7methodologydownloadeditorJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_t7MethodologyDownloadEditor.js"
	name := "../src/main/web/florence/js/functions/_t7MethodologyDownloadEditor.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_t7methodologyeditorJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_t7methodologyeditorJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_t7MethodologyEditor.js"
	name := "../src/main/web/florence/js/functions/_t7MethodologyEditor.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_t7qmieditorJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_t7qmieditorJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_t7QmiEditor.js"
	name := "../src/main/web/florence/js/functions/_t7QmiEditor.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_t7staticarticleeditorJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_t7staticarticleeditorJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_t7StaticArticleEditor.js"
	name := "../src/main/web/florence/js/functions/_t7StaticArticleEditor.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_t7staticlandingpageeditorJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_t7staticlandingpageeditorJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_t7StaticLandingPageEditor.js"
	name := "../src/main/web/florence/js/functions/_t7StaticLandingPageEditor.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_t7staticpageeditorJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_t7staticpageeditorJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_t7StaticPageEditor.js"
	name := "../src/main/web/florence/js/functions/_t7StaticPageEditor.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_t8dataseteditorJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_t8dataseteditorJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_t8DatasetEditor.js"
	name := "../src/main/web/florence/js/functions/_t8DatasetEditor.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_t8landingpageeditorJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_t8landingpageeditorJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_t8LandingPageEditor.js"
	name := "../src/main/web/florence/js/functions/_t8LandingPageEditor.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_transferJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_transferJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_transfer.js"
	name := "../src/main/web/florence/js/functions/_transfer.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_treenodeselectJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_treenodeselectJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_treeNodeSelect.js"
	name := "../src/main/web/florence/js/functions/_treeNodeSelect.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_uiJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_uiJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_ui.js"
	name := "../src/main/web/florence/js/functions/_ui.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_uitidyupJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_uitidyupJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_uiTidyup.js"
	name := "../src/main/web/florence/js/functions/_uiTidyup.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_updatecontentJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_updatecontentJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_updateContent.js"
	name := "../src/main/web/florence/js/functions/_updateContent.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_viewchangepasswordJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_viewchangepasswordJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_viewChangePassword.js"
	name := "../src/main/web/florence/js/functions/_viewChangePassword.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_viewcollectiondetailsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_viewcollectiondetailsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_viewCollectionDetails.js"
	name := "../src/main/web/florence/js/functions/_viewCollectionDetails.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_viewcollectionsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_viewcollectionsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_viewCollections.js"
	name := "../src/main/web/florence/js/functions/_viewCollections.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_viewcontrollerJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_viewcontrollerJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_viewController.js"
	name := "../src/main/web/florence/js/functions/_viewController.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_viewloginJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_viewloginJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_viewLogIn.js"
	name := "../src/main/web/florence/js/functions/_viewLogIn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_viewpublishJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_viewpublishJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_viewPublish.js"
	name := "../src/main/web/florence/js/functions/_viewPublish.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_viewpublishdetailsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_viewpublishdetailsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_viewPublishDetails.js"
	name := "../src/main/web/florence/js/functions/_viewPublishDetails.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_viewreleaseselectorJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_viewreleaseselectorJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_viewReleaseSelector.js"
	name := "../src/main/web/florence/js/functions/_viewReleaseSelector.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_viewreportdetailsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_viewreportdetailsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_viewReportDetails.js"
	name := "../src/main/web/florence/js/functions/_viewReportDetails.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_viewreportsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_viewreportsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_viewReports.js"
	name := "../src/main/web/florence/js/functions/_viewReports.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_viewteamdetailsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_viewteamdetailsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_viewTeamDetails.js"
	name := "../src/main/web/florence/js/functions/_viewTeamDetails.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_viewteamsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_viewteamsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_viewTeams.js"
	name := "../src/main/web/florence/js/functions/_viewTeams.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_viewuserdetailsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_viewuserdetailsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_viewUserDetails.js"
	name := "../src/main/web/florence/js/functions/_viewUserDetails.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_viewusersJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_viewusersJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_viewUsers.js"
	name := "../src/main/web/florence/js/functions/_viewUsers.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_viewworkspaceJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_viewworkspaceJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_viewWorkspace.js"
	name := "../src/main/web/florence/js/functions/_viewWorkspace.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctions_visualisationeditorJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctions_visualisationeditorJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/_visualisationEditor.js"
	name := "../src/main/web/florence/js/functions/_visualisationEditor.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsFunctionsRegisterserviceworkerJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsFunctionsRegisterserviceworkerJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/functions/registerServiceWorker.js"
	name := "../src/main/web/florence/js/functions/registerServiceWorker.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMarkdownConverterJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMarkdownConverterJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/Markdown.Converter.js"
	name := "../src/main/web/florence/js/third-party/Markdown.Converter.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMarkdownEditorJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMarkdownEditorJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/Markdown.Editor.js"
	name := "../src/main/web/florence/js/third-party/Markdown.Editor.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMarkdownExtraJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMarkdownExtraJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/Markdown.Extra.js"
	name := "../src/main/web/florence/js/third-party/Markdown.Extra.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMarkdownSanitizerJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMarkdownSanitizerJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/Markdown.Sanitizer.js"
	name := "../src/main/web/florence/js/third-party/Markdown.Sanitizer.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyZeroclipboardMinJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyZeroclipboardMinJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/ZeroClipboard.min.js"
	name := "../src/main/web/florence/js/third-party/ZeroClipboard.min.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyZeroclipboardSwf reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyZeroclipboardSwf() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/ZeroClipboard.swf"
	name := "../src/main/web/florence/js/third-party/ZeroClipboard.swf"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyAutosizeJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyAutosizeJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/autosize.js"
	name := "../src/main/web/florence/js/third-party/autosize.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyClipboardMinJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyClipboardMinJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/clipboard.min.js"
	name := "../src/main/web/florence/js/third-party/clipboard.min.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyHandlebarsRuntimeMinJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyHandlebarsRuntimeMinJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/handlebars.runtime.min.js"
	name := "../src/main/web/florence/js/third-party/handlebars.runtime.min.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyHighchartsMoreJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyHighchartsMoreJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/highcharts-more.js"
	name := "../src/main/web/florence/js/third-party/highcharts-more.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyHighchartsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyHighchartsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/highcharts.js"
	name := "../src/main/web/florence/js/third-party/highcharts.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyJqueryUiTimepickerAddonJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyJqueryUiTimepickerAddonJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/jquery-ui-timepicker-addon.js"
	name := "../src/main/web/florence/js/third-party/jquery-ui-timepicker-addon.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyJqueryUiJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyJqueryUiJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/jquery-ui.js"
	name := "../src/main/web/florence/js/third-party/jquery-ui.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyJqueryHotkeysJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyJqueryHotkeysJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/jquery.hotkeys.js"
	name := "../src/main/web/florence/js/third-party/jquery.hotkeys.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyJqueryMinJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyJqueryMinJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/jquery.min.js"
	name := "../src/main/web/florence/js/third-party/jquery.min.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxMathjaxJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxMathjaxJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/MathJax.js"
	name := "../src/main/web/florence/js/third-party/mathjax/MathJax.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxConfigAm_chtmlFullJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxConfigAm_chtmlFullJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/config/AM_CHTML-full.js"
	name := "../src/main/web/florence/js/third-party/mathjax/config/AM_CHTML-full.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxConfigAm_chtmlJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxConfigAm_chtmlJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/config/AM_CHTML.js"
	name := "../src/main/web/florence/js/third-party/mathjax/config/AM_CHTML.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxConfigAm_htmlormmlFullJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxConfigAm_htmlormmlFullJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/config/AM_HTMLorMML-full.js"
	name := "../src/main/web/florence/js/third-party/mathjax/config/AM_HTMLorMML-full.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxConfigAm_htmlormmlJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxConfigAm_htmlormmlJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/config/AM_HTMLorMML.js"
	name := "../src/main/web/florence/js/third-party/mathjax/config/AM_HTMLorMML.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxConfigAm_svgFullJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxConfigAm_svgFullJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/config/AM_SVG-full.js"
	name := "../src/main/web/florence/js/third-party/mathjax/config/AM_SVG-full.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxConfigAm_svgJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxConfigAm_svgJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/config/AM_SVG.js"
	name := "../src/main/web/florence/js/third-party/mathjax/config/AM_SVG.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxConfigAccessibleFullJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxConfigAccessibleFullJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/config/Accessible-full.js"
	name := "../src/main/web/florence/js/third-party/mathjax/config/Accessible-full.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxConfigAccessibleJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxConfigAccessibleJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/config/Accessible.js"
	name := "../src/main/web/florence/js/third-party/mathjax/config/Accessible.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxConfigMml_chtmlFullJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxConfigMml_chtmlFullJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/config/MML_CHTML-full.js"
	name := "../src/main/web/florence/js/third-party/mathjax/config/MML_CHTML-full.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxConfigMml_chtmlJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxConfigMml_chtmlJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/config/MML_CHTML.js"
	name := "../src/main/web/florence/js/third-party/mathjax/config/MML_CHTML.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxConfigMml_htmlormmlFullJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxConfigMml_htmlormmlFullJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/config/MML_HTMLorMML-full.js"
	name := "../src/main/web/florence/js/third-party/mathjax/config/MML_HTMLorMML-full.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxConfigMml_htmlormmlJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxConfigMml_htmlormmlJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/config/MML_HTMLorMML.js"
	name := "../src/main/web/florence/js/third-party/mathjax/config/MML_HTMLorMML.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxConfigMml_svgFullJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxConfigMml_svgFullJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/config/MML_SVG-full.js"
	name := "../src/main/web/florence/js/third-party/mathjax/config/MML_SVG-full.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxConfigMml_svgJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxConfigMml_svgJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/config/MML_SVG.js"
	name := "../src/main/web/florence/js/third-party/mathjax/config/MML_SVG.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxConfigMmlorhtmlJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxConfigMmlorhtmlJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/config/MMLorHTML.js"
	name := "../src/main/web/florence/js/third-party/mathjax/config/MMLorHTML.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxConfigSafeJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxConfigSafeJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/config/Safe.js"
	name := "../src/main/web/florence/js/third-party/mathjax/config/Safe.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxConfigTexAmsMml_htmlormmlFullJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxConfigTexAmsMml_htmlormmlFullJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/config/TeX-AMS-MML_HTMLorMML-full.js"
	name := "../src/main/web/florence/js/third-party/mathjax/config/TeX-AMS-MML_HTMLorMML-full.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxConfigTexAmsMml_htmlormmlJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxConfigTexAmsMml_htmlormmlJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/config/TeX-AMS-MML_HTMLorMML.js"
	name := "../src/main/web/florence/js/third-party/mathjax/config/TeX-AMS-MML_HTMLorMML.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxConfigTexAmsMml_svgFullJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxConfigTexAmsMml_svgFullJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/config/TeX-AMS-MML_SVG-full.js"
	name := "../src/main/web/florence/js/third-party/mathjax/config/TeX-AMS-MML_SVG-full.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxConfigTexAmsMml_svgJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxConfigTexAmsMml_svgJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/config/TeX-AMS-MML_SVG.js"
	name := "../src/main/web/florence/js/third-party/mathjax/config/TeX-AMS-MML_SVG.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxConfigTexAms_chtmlFullJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxConfigTexAms_chtmlFullJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/config/TeX-AMS_CHTML-full.js"
	name := "../src/main/web/florence/js/third-party/mathjax/config/TeX-AMS_CHTML-full.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxConfigTexAms_chtmlJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxConfigTexAms_chtmlJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/config/TeX-AMS_CHTML.js"
	name := "../src/main/web/florence/js/third-party/mathjax/config/TeX-AMS_CHTML.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxConfigTexAms_htmlFullJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxConfigTexAms_htmlFullJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/config/TeX-AMS_HTML-full.js"
	name := "../src/main/web/florence/js/third-party/mathjax/config/TeX-AMS_HTML-full.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxConfigTexAms_htmlJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxConfigTexAms_htmlJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/config/TeX-AMS_HTML.js"
	name := "../src/main/web/florence/js/third-party/mathjax/config/TeX-AMS_HTML.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxConfigTexAms_svgFullJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxConfigTexAms_svgFullJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/config/TeX-AMS_SVG-full.js"
	name := "../src/main/web/florence/js/third-party/mathjax/config/TeX-AMS_SVG-full.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxConfigTexAms_svgJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxConfigTexAms_svgJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/config/TeX-AMS_SVG.js"
	name := "../src/main/web/florence/js/third-party/mathjax/config/TeX-AMS_SVG.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxConfigTexMmlAm_chtmlFullJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxConfigTexMmlAm_chtmlFullJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/config/TeX-MML-AM_CHTML-full.js"
	name := "../src/main/web/florence/js/third-party/mathjax/config/TeX-MML-AM_CHTML-full.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxConfigTexMmlAm_chtmlJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxConfigTexMmlAm_chtmlJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/config/TeX-MML-AM_CHTML.js"
	name := "../src/main/web/florence/js/third-party/mathjax/config/TeX-MML-AM_CHTML.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxConfigTexMmlAm_htmlormmlFullJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxConfigTexMmlAm_htmlormmlFullJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/config/TeX-MML-AM_HTMLorMML-full.js"
	name := "../src/main/web/florence/js/third-party/mathjax/config/TeX-MML-AM_HTMLorMML-full.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxConfigTexMmlAm_htmlormmlJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxConfigTexMmlAm_htmlormmlJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/config/TeX-MML-AM_HTMLorMML.js"
	name := "../src/main/web/florence/js/third-party/mathjax/config/TeX-MML-AM_HTMLorMML.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxConfigTexMmlAm_svgFullJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxConfigTexMmlAm_svgFullJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/config/TeX-MML-AM_SVG-full.js"
	name := "../src/main/web/florence/js/third-party/mathjax/config/TeX-MML-AM_SVG-full.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxConfigTexMmlAm_svgJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxConfigTexMmlAm_svgJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/config/TeX-MML-AM_SVG.js"
	name := "../src/main/web/florence/js/third-party/mathjax/config/TeX-MML-AM_SVG.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxConfigDefaultJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxConfigDefaultJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/config/default.js"
	name := "../src/main/web/florence/js/third-party/mathjax/config/default.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxConfigLocalLocalJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxConfigLocalLocalJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/config/local/local.js"
	name := "../src/main/web/florence/js/third-party/mathjax/config/local/local.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsAssistivemmlJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsAssistivemmlJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/extensions/AssistiveMML.js"
	name := "../src/main/web/florence/js/third-party/mathjax/extensions/AssistiveMML.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsChtmlPreviewJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsChtmlPreviewJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/extensions/CHTML-preview.js"
	name := "../src/main/web/florence/js/third-party/mathjax/extensions/CHTML-preview.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsFontwarningsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsFontwarningsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/extensions/FontWarnings.js"
	name := "../src/main/web/florence/js/third-party/mathjax/extensions/FontWarnings.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsHtmlCssHandleFloatsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsHtmlCssHandleFloatsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/extensions/HTML-CSS/handle-floats.js"
	name := "../src/main/web/florence/js/third-party/mathjax/extensions/HTML-CSS/handle-floats.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsHelpdialogJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsHelpdialogJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/extensions/HelpDialog.js"
	name := "../src/main/web/florence/js/third-party/mathjax/extensions/HelpDialog.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsMatchwebfontsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsMatchwebfontsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/extensions/MatchWebFonts.js"
	name := "../src/main/web/florence/js/third-party/mathjax/extensions/MatchWebFonts.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsMatheventsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsMatheventsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/extensions/MathEvents.js"
	name := "../src/main/web/florence/js/third-party/mathjax/extensions/MathEvents.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsMathmlContentMathmlJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsMathmlContentMathmlJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/extensions/MathML/content-mathml.js"
	name := "../src/main/web/florence/js/third-party/mathjax/extensions/MathML/content-mathml.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsMathmlMml3Js reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsMathmlMml3Js() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/extensions/MathML/mml3.js"
	name := "../src/main/web/florence/js/third-party/mathjax/extensions/MathML/mml3.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsMathmenuJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsMathmenuJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/extensions/MathMenu.js"
	name := "../src/main/web/florence/js/third-party/mathjax/extensions/MathMenu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsMathzoomJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsMathzoomJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/extensions/MathZoom.js"
	name := "../src/main/web/florence/js/third-party/mathjax/extensions/MathZoom.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsSafeJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsSafeJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/extensions/Safe.js"
	name := "../src/main/web/florence/js/third-party/mathjax/extensions/Safe.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsTexAmscdJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsTexAmscdJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/extensions/TeX/AMScd.js"
	name := "../src/main/web/florence/js/third-party/mathjax/extensions/TeX/AMScd.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsTexAmsmathJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsTexAmsmathJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/extensions/TeX/AMSmath.js"
	name := "../src/main/web/florence/js/third-party/mathjax/extensions/TeX/AMSmath.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsTexAmssymbolsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsTexAmssymbolsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/extensions/TeX/AMSsymbols.js"
	name := "../src/main/web/florence/js/third-party/mathjax/extensions/TeX/AMSsymbols.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsTexHtmlJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsTexHtmlJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/extensions/TeX/HTML.js"
	name := "../src/main/web/florence/js/third-party/mathjax/extensions/TeX/HTML.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsTexActionJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsTexActionJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/extensions/TeX/action.js"
	name := "../src/main/web/florence/js/third-party/mathjax/extensions/TeX/action.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsTexAutoboldJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsTexAutoboldJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/extensions/TeX/autobold.js"
	name := "../src/main/web/florence/js/third-party/mathjax/extensions/TeX/autobold.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsTexAutoloadAllJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsTexAutoloadAllJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/extensions/TeX/autoload-all.js"
	name := "../src/main/web/florence/js/third-party/mathjax/extensions/TeX/autoload-all.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsTexBboxJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsTexBboxJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/extensions/TeX/bbox.js"
	name := "../src/main/web/florence/js/third-party/mathjax/extensions/TeX/bbox.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsTexBegingroupJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsTexBegingroupJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/extensions/TeX/begingroup.js"
	name := "../src/main/web/florence/js/third-party/mathjax/extensions/TeX/begingroup.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsTexBoldsymbolJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsTexBoldsymbolJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/extensions/TeX/boldsymbol.js"
	name := "../src/main/web/florence/js/third-party/mathjax/extensions/TeX/boldsymbol.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsTexCancelJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsTexCancelJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/extensions/TeX/cancel.js"
	name := "../src/main/web/florence/js/third-party/mathjax/extensions/TeX/cancel.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsTexColorJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsTexColorJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/extensions/TeX/color.js"
	name := "../src/main/web/florence/js/third-party/mathjax/extensions/TeX/color.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsTexEncloseJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsTexEncloseJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/extensions/TeX/enclose.js"
	name := "../src/main/web/florence/js/third-party/mathjax/extensions/TeX/enclose.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsTexExtpfeilJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsTexExtpfeilJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/extensions/TeX/extpfeil.js"
	name := "../src/main/web/florence/js/third-party/mathjax/extensions/TeX/extpfeil.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsTexMathchoiceJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsTexMathchoiceJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/extensions/TeX/mathchoice.js"
	name := "../src/main/web/florence/js/third-party/mathjax/extensions/TeX/mathchoice.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsTexMediawikiTexvcJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsTexMediawikiTexvcJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/extensions/TeX/mediawiki-texvc.js"
	name := "../src/main/web/florence/js/third-party/mathjax/extensions/TeX/mediawiki-texvc.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsTexMhchemJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsTexMhchemJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/extensions/TeX/mhchem.js"
	name := "../src/main/web/florence/js/third-party/mathjax/extensions/TeX/mhchem.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsTexNewcommandJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsTexNewcommandJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/extensions/TeX/newcommand.js"
	name := "../src/main/web/florence/js/third-party/mathjax/extensions/TeX/newcommand.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsTexNoerrorsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsTexNoerrorsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/extensions/TeX/noErrors.js"
	name := "../src/main/web/florence/js/third-party/mathjax/extensions/TeX/noErrors.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsTexNoundefinedJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsTexNoundefinedJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/extensions/TeX/noUndefined.js"
	name := "../src/main/web/florence/js/third-party/mathjax/extensions/TeX/noUndefined.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsTexUnicodeJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsTexUnicodeJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/extensions/TeX/unicode.js"
	name := "../src/main/web/florence/js/third-party/mathjax/extensions/TeX/unicode.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsTexVerbJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsTexVerbJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/extensions/TeX/verb.js"
	name := "../src/main/web/florence/js/third-party/mathjax/extensions/TeX/verb.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsAsciimath2jaxJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsAsciimath2jaxJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/extensions/asciimath2jax.js"
	name := "../src/main/web/florence/js/third-party/mathjax/extensions/asciimath2jax.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsFastPreviewJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsFastPreviewJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/extensions/fast-preview.js"
	name := "../src/main/web/florence/js/third-party/mathjax/extensions/fast-preview.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsJsmath2jaxJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsJsmath2jaxJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/extensions/jsMath2jax.js"
	name := "../src/main/web/florence/js/third-party/mathjax/extensions/jsMath2jax.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsMml2jaxJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsMml2jaxJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/extensions/mml2jax.js"
	name := "../src/main/web/florence/js/third-party/mathjax/extensions/mml2jax.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsTex2jaxJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsTex2jaxJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/extensions/tex2jax.js"
	name := "../src/main/web/florence/js/third-party/mathjax/extensions/tex2jax.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsTomathmlJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsTomathmlJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/extensions/toMathML.js"
	name := "../src/main/web/florence/js/third-party/mathjax/extensions/toMathML.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxElementMmlJaxJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxElementMmlJaxJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/element/mml/jax.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/element/mml/jax.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxElementMmlOptableArrowsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxElementMmlOptableArrowsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/element/mml/optable/Arrows.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/element/mml/optable/Arrows.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxElementMmlOptableBasiclatinJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxElementMmlOptableBasiclatinJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/element/mml/optable/BasicLatin.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/element/mml/optable/BasicLatin.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxElementMmlOptableCombdiacritmarksJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxElementMmlOptableCombdiacritmarksJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/element/mml/optable/CombDiacritMarks.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/element/mml/optable/CombDiacritMarks.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxElementMmlOptableCombdiactforsymbolsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxElementMmlOptableCombdiactforsymbolsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/element/mml/optable/CombDiactForSymbols.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/element/mml/optable/CombDiactForSymbols.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxElementMmlOptableDingbatsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxElementMmlOptableDingbatsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/element/mml/optable/Dingbats.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/element/mml/optable/Dingbats.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxElementMmlOptableGeneralpunctuationJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxElementMmlOptableGeneralpunctuationJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/element/mml/optable/GeneralPunctuation.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/element/mml/optable/GeneralPunctuation.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxElementMmlOptableGeometricshapesJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxElementMmlOptableGeometricshapesJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/element/mml/optable/GeometricShapes.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/element/mml/optable/GeometricShapes.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxElementMmlOptableGreekandcopticJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxElementMmlOptableGreekandcopticJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/element/mml/optable/GreekAndCoptic.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/element/mml/optable/GreekAndCoptic.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxElementMmlOptableLatin1supplementJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxElementMmlOptableLatin1supplementJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/element/mml/optable/Latin1Supplement.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/element/mml/optable/Latin1Supplement.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxElementMmlOptableLetterlikesymbolsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxElementMmlOptableLetterlikesymbolsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/element/mml/optable/LetterlikeSymbols.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/element/mml/optable/LetterlikeSymbols.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxElementMmlOptableMathoperatorsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxElementMmlOptableMathoperatorsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/element/mml/optable/MathOperators.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/element/mml/optable/MathOperators.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxElementMmlOptableMiscmathsymbolsaJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxElementMmlOptableMiscmathsymbolsaJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/element/mml/optable/MiscMathSymbolsA.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/element/mml/optable/MiscMathSymbolsA.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxElementMmlOptableMiscmathsymbolsbJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxElementMmlOptableMiscmathsymbolsbJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/element/mml/optable/MiscMathSymbolsB.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/element/mml/optable/MiscMathSymbolsB.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxElementMmlOptableMiscsymbolsandarrowsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxElementMmlOptableMiscsymbolsandarrowsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/element/mml/optable/MiscSymbolsAndArrows.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/element/mml/optable/MiscSymbolsAndArrows.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxElementMmlOptableMisctechnicalJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxElementMmlOptableMisctechnicalJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/element/mml/optable/MiscTechnical.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/element/mml/optable/MiscTechnical.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxElementMmlOptableSpacingmodlettersJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxElementMmlOptableSpacingmodlettersJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/element/mml/optable/SpacingModLetters.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/element/mml/optable/SpacingModLetters.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxElementMmlOptableSuppmathoperatorsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxElementMmlOptableSuppmathoperatorsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/element/mml/optable/SuppMathOperators.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/element/mml/optable/SuppMathOperators.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxElementMmlOptableSupplementalarrowsaJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxElementMmlOptableSupplementalarrowsaJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/element/mml/optable/SupplementalArrowsA.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/element/mml/optable/SupplementalArrowsA.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxElementMmlOptableSupplementalarrowsbJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxElementMmlOptableSupplementalarrowsbJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/element/mml/optable/SupplementalArrowsB.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/element/mml/optable/SupplementalArrowsB.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputAsciimathConfigJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputAsciimathConfigJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/input/AsciiMath/config.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/input/AsciiMath/config.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputAsciimathJaxJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputAsciimathJaxJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/input/AsciiMath/jax.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/input/AsciiMath/jax.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlConfigJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlConfigJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/input/MathML/config.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/input/MathML/config.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlEntitiesAJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlEntitiesAJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/input/MathML/entities/a.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/input/MathML/entities/a.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlEntitiesBJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlEntitiesBJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/input/MathML/entities/b.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/input/MathML/entities/b.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlEntitiesCJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlEntitiesCJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/input/MathML/entities/c.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/input/MathML/entities/c.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlEntitiesDJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlEntitiesDJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/input/MathML/entities/d.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/input/MathML/entities/d.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlEntitiesEJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlEntitiesEJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/input/MathML/entities/e.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/input/MathML/entities/e.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlEntitiesFJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlEntitiesFJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/input/MathML/entities/f.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/input/MathML/entities/f.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlEntitiesFrJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlEntitiesFrJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/input/MathML/entities/fr.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/input/MathML/entities/fr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlEntitiesGJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlEntitiesGJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/input/MathML/entities/g.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/input/MathML/entities/g.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlEntitiesHJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlEntitiesHJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/input/MathML/entities/h.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/input/MathML/entities/h.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlEntitiesIJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlEntitiesIJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/input/MathML/entities/i.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/input/MathML/entities/i.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlEntitiesJJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlEntitiesJJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/input/MathML/entities/j.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/input/MathML/entities/j.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlEntitiesKJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlEntitiesKJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/input/MathML/entities/k.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/input/MathML/entities/k.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlEntitiesLJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlEntitiesLJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/input/MathML/entities/l.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/input/MathML/entities/l.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlEntitiesMJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlEntitiesMJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/input/MathML/entities/m.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/input/MathML/entities/m.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlEntitiesNJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlEntitiesNJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/input/MathML/entities/n.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/input/MathML/entities/n.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlEntitiesOJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlEntitiesOJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/input/MathML/entities/o.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/input/MathML/entities/o.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlEntitiesOpfJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlEntitiesOpfJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/input/MathML/entities/opf.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/input/MathML/entities/opf.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlEntitiesPJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlEntitiesPJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/input/MathML/entities/p.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/input/MathML/entities/p.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlEntitiesQJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlEntitiesQJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/input/MathML/entities/q.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/input/MathML/entities/q.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlEntitiesRJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlEntitiesRJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/input/MathML/entities/r.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/input/MathML/entities/r.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlEntitiesSJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlEntitiesSJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/input/MathML/entities/s.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/input/MathML/entities/s.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlEntitiesScrJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlEntitiesScrJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/input/MathML/entities/scr.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/input/MathML/entities/scr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlEntitiesTJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlEntitiesTJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/input/MathML/entities/t.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/input/MathML/entities/t.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlEntitiesUJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlEntitiesUJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/input/MathML/entities/u.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/input/MathML/entities/u.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlEntitiesVJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlEntitiesVJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/input/MathML/entities/v.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/input/MathML/entities/v.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlEntitiesWJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlEntitiesWJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/input/MathML/entities/w.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/input/MathML/entities/w.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlEntitiesXJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlEntitiesXJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/input/MathML/entities/x.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/input/MathML/entities/x.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlEntitiesYJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlEntitiesYJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/input/MathML/entities/y.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/input/MathML/entities/y.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlEntitiesZJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlEntitiesZJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/input/MathML/entities/z.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/input/MathML/entities/z.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlJaxJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlJaxJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/input/MathML/jax.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/input/MathML/jax.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputTexConfigJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputTexConfigJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/input/TeX/config.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/input/TeX/config.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputTexJaxJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputTexJaxJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/input/TeX/jax.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/input/TeX/jax.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputCommonhtmlAutoloadAnnotationXmlJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputCommonhtmlAutoloadAnnotationXmlJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/CommonHTML/autoload/annotation-xml.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/CommonHTML/autoload/annotation-xml.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputCommonhtmlAutoloadMactionJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputCommonhtmlAutoloadMactionJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/CommonHTML/autoload/maction.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/CommonHTML/autoload/maction.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputCommonhtmlAutoloadMencloseJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputCommonhtmlAutoloadMencloseJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/CommonHTML/autoload/menclose.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/CommonHTML/autoload/menclose.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputCommonhtmlAutoloadMglyphJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputCommonhtmlAutoloadMglyphJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/CommonHTML/autoload/mglyph.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/CommonHTML/autoload/mglyph.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputCommonhtmlAutoloadMmultiscriptsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputCommonhtmlAutoloadMmultiscriptsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/CommonHTML/autoload/mmultiscripts.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/CommonHTML/autoload/mmultiscripts.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputCommonhtmlAutoloadMsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputCommonhtmlAutoloadMsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/CommonHTML/autoload/ms.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/CommonHTML/autoload/ms.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputCommonhtmlAutoloadMtableJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputCommonhtmlAutoloadMtableJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/CommonHTML/autoload/mtable.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/CommonHTML/autoload/mtable.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputCommonhtmlAutoloadMultilineJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputCommonhtmlAutoloadMultilineJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/CommonHTML/autoload/multiline.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/CommonHTML/autoload/multiline.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputCommonhtmlConfigJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputCommonhtmlConfigJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/CommonHTML/config.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/CommonHTML/config.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputCommonhtmlFontsTexAmsRegularJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputCommonhtmlFontsTexAmsRegularJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/CommonHTML/fonts/TeX/AMS-Regular.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/CommonHTML/fonts/TeX/AMS-Regular.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputCommonhtmlFontsTexCaligraphicBoldJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputCommonhtmlFontsTexCaligraphicBoldJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/CommonHTML/fonts/TeX/Caligraphic-Bold.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/CommonHTML/fonts/TeX/Caligraphic-Bold.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputCommonhtmlFontsTexFrakturBoldJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputCommonhtmlFontsTexFrakturBoldJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/CommonHTML/fonts/TeX/Fraktur-Bold.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/CommonHTML/fonts/TeX/Fraktur-Bold.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputCommonhtmlFontsTexFrakturRegularJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputCommonhtmlFontsTexFrakturRegularJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/CommonHTML/fonts/TeX/Fraktur-Regular.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/CommonHTML/fonts/TeX/Fraktur-Regular.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputCommonhtmlFontsTexMainBoldJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputCommonhtmlFontsTexMainBoldJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/CommonHTML/fonts/TeX/Main-Bold.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/CommonHTML/fonts/TeX/Main-Bold.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputCommonhtmlFontsTexMathBolditalicJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputCommonhtmlFontsTexMathBolditalicJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/CommonHTML/fonts/TeX/Math-BoldItalic.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/CommonHTML/fonts/TeX/Math-BoldItalic.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputCommonhtmlFontsTexSansserifBoldJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputCommonhtmlFontsTexSansserifBoldJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/CommonHTML/fonts/TeX/SansSerif-Bold.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/CommonHTML/fonts/TeX/SansSerif-Bold.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputCommonhtmlFontsTexSansserifItalicJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputCommonhtmlFontsTexSansserifItalicJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/CommonHTML/fonts/TeX/SansSerif-Italic.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/CommonHTML/fonts/TeX/SansSerif-Italic.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputCommonhtmlFontsTexSansserifRegularJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputCommonhtmlFontsTexSansserifRegularJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/CommonHTML/fonts/TeX/SansSerif-Regular.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/CommonHTML/fonts/TeX/SansSerif-Regular.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputCommonhtmlFontsTexScriptRegularJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputCommonhtmlFontsTexScriptRegularJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/CommonHTML/fonts/TeX/Script-Regular.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/CommonHTML/fonts/TeX/Script-Regular.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputCommonhtmlFontsTexTypewriterRegularJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputCommonhtmlFontsTexTypewriterRegularJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/CommonHTML/fonts/TeX/Typewriter-Regular.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/CommonHTML/fonts/TeX/Typewriter-Regular.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputCommonhtmlFontsTexFontdataExtraJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputCommonhtmlFontsTexFontdataExtraJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/CommonHTML/fonts/TeX/fontdata-extra.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/CommonHTML/fonts/TeX/fontdata-extra.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputCommonhtmlFontsTexFontdataJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputCommonhtmlFontsTexFontdataJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/CommonHTML/fonts/TeX/fontdata.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/CommonHTML/fonts/TeX/fontdata.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputCommonhtmlJaxJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputCommonhtmlJaxJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/CommonHTML/jax.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/CommonHTML/jax.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssAutoloadAnnotationXmlJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssAutoloadAnnotationXmlJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/autoload/annotation-xml.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/autoload/annotation-xml.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssAutoloadMactionJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssAutoloadMactionJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/autoload/maction.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/autoload/maction.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssAutoloadMencloseJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssAutoloadMencloseJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/autoload/menclose.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/autoload/menclose.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssAutoloadMglyphJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssAutoloadMglyphJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/autoload/mglyph.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/autoload/mglyph.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssAutoloadMmultiscriptsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssAutoloadMmultiscriptsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/autoload/mmultiscripts.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/autoload/mmultiscripts.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssAutoloadMsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssAutoloadMsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/autoload/ms.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/autoload/ms.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssAutoloadMtableJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssAutoloadMtableJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/autoload/mtable.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/autoload/mtable.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssAutoloadMultilineJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssAutoloadMultilineJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/autoload/multiline.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/autoload/multiline.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssBlankGif reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssBlankGif() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/blank.gif"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/blank.gif"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssConfigJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssConfigJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/config.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/config.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsAsanaMathAlphabetsRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsAsanaMathAlphabetsRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Asana-Math/Alphabets/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Asana-Math/Alphabets/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsAsanaMathArrowsRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsAsanaMathArrowsRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Asana-Math/Arrows/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Asana-Math/Arrows/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsAsanaMathDoublestruckRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsAsanaMathDoublestruckRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Asana-Math/DoubleStruck/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Asana-Math/DoubleStruck/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsAsanaMathFrakturRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsAsanaMathFrakturRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Asana-Math/Fraktur/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Asana-Math/Fraktur/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsAsanaMathLatinRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsAsanaMathLatinRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Asana-Math/Latin/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Asana-Math/Latin/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsAsanaMathMainRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsAsanaMathMainRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Asana-Math/Main/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Asana-Math/Main/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsAsanaMathMarksRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsAsanaMathMarksRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Asana-Math/Marks/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Asana-Math/Marks/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsAsanaMathMiscRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsAsanaMathMiscRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Asana-Math/Misc/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Asana-Math/Misc/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsAsanaMathMonospaceRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsAsanaMathMonospaceRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Asana-Math/Monospace/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Asana-Math/Monospace/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsAsanaMathNonunicodeRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsAsanaMathNonunicodeRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Asana-Math/NonUnicode/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Asana-Math/NonUnicode/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsAsanaMathNormalRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsAsanaMathNormalRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Asana-Math/Normal/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Asana-Math/Normal/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsAsanaMathOperatorsRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsAsanaMathOperatorsRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Asana-Math/Operators/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Asana-Math/Operators/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsAsanaMathSansserifRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsAsanaMathSansserifRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Asana-Math/SansSerif/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Asana-Math/SansSerif/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsAsanaMathScriptRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsAsanaMathScriptRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Asana-Math/Script/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Asana-Math/Script/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsAsanaMathShapesRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsAsanaMathShapesRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Asana-Math/Shapes/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Asana-Math/Shapes/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsAsanaMathSize1RegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsAsanaMathSize1RegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Asana-Math/Size1/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Asana-Math/Size1/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsAsanaMathSize2RegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsAsanaMathSize2RegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Asana-Math/Size2/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Asana-Math/Size2/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsAsanaMathSize3RegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsAsanaMathSize3RegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Asana-Math/Size3/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Asana-Math/Size3/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsAsanaMathSize4RegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsAsanaMathSize4RegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Asana-Math/Size4/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Asana-Math/Size4/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsAsanaMathSize5RegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsAsanaMathSize5RegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Asana-Math/Size5/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Asana-Math/Size5/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsAsanaMathSize6RegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsAsanaMathSize6RegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Asana-Math/Size6/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Asana-Math/Size6/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsAsanaMathSymbolsRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsAsanaMathSymbolsRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Asana-Math/Symbols/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Asana-Math/Symbols/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsAsanaMathVariantsRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsAsanaMathVariantsRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Asana-Math/Variants/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Asana-Math/Variants/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsAsanaMathFontdataExtraJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsAsanaMathFontdataExtraJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Asana-Math/fontdata-extra.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Asana-Math/fontdata-extra.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsAsanaMathFontdataJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsAsanaMathFontdataJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Asana-Math/fontdata.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Asana-Math/fontdata.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyrePagellaAlphabetsRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyrePagellaAlphabetsRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Pagella/Alphabets/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Pagella/Alphabets/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyrePagellaArrowsRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyrePagellaArrowsRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Pagella/Arrows/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Pagella/Arrows/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyrePagellaDoublestruckRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyrePagellaDoublestruckRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Pagella/DoubleStruck/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Pagella/DoubleStruck/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyrePagellaFrakturRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyrePagellaFrakturRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Pagella/Fraktur/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Pagella/Fraktur/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyrePagellaLatinRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyrePagellaLatinRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Pagella/Latin/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Pagella/Latin/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyrePagellaMainRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyrePagellaMainRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Pagella/Main/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Pagella/Main/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyrePagellaMarksRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyrePagellaMarksRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Pagella/Marks/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Pagella/Marks/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyrePagellaMiscRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyrePagellaMiscRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Pagella/Misc/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Pagella/Misc/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyrePagellaMonospaceRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyrePagellaMonospaceRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Pagella/Monospace/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Pagella/Monospace/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyrePagellaNonunicodeRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyrePagellaNonunicodeRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Pagella/NonUnicode/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Pagella/NonUnicode/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyrePagellaNormalRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyrePagellaNormalRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Pagella/Normal/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Pagella/Normal/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyrePagellaOperatorsRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyrePagellaOperatorsRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Pagella/Operators/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Pagella/Operators/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyrePagellaSansserifRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyrePagellaSansserifRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Pagella/SansSerif/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Pagella/SansSerif/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyrePagellaScriptRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyrePagellaScriptRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Pagella/Script/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Pagella/Script/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyrePagellaShapesRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyrePagellaShapesRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Pagella/Shapes/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Pagella/Shapes/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyrePagellaSize1RegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyrePagellaSize1RegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Pagella/Size1/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Pagella/Size1/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyrePagellaSize2RegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyrePagellaSize2RegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Pagella/Size2/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Pagella/Size2/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyrePagellaSize3RegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyrePagellaSize3RegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Pagella/Size3/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Pagella/Size3/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyrePagellaSize4RegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyrePagellaSize4RegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Pagella/Size4/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Pagella/Size4/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyrePagellaSize5RegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyrePagellaSize5RegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Pagella/Size5/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Pagella/Size5/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyrePagellaSize6RegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyrePagellaSize6RegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Pagella/Size6/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Pagella/Size6/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyrePagellaSymbolsRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyrePagellaSymbolsRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Pagella/Symbols/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Pagella/Symbols/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyrePagellaVariantsRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyrePagellaVariantsRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Pagella/Variants/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Pagella/Variants/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyrePagellaFontdataExtraJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyrePagellaFontdataExtraJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Pagella/fontdata-extra.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Pagella/fontdata-extra.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyrePagellaFontdataJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyrePagellaFontdataJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Pagella/fontdata.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Pagella/fontdata.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyreTermesAlphabetsRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyreTermesAlphabetsRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Termes/Alphabets/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Termes/Alphabets/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyreTermesArrowsRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyreTermesArrowsRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Termes/Arrows/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Termes/Arrows/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyreTermesDoublestruckRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyreTermesDoublestruckRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Termes/DoubleStruck/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Termes/DoubleStruck/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyreTermesFrakturRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyreTermesFrakturRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Termes/Fraktur/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Termes/Fraktur/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyreTermesLatinRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyreTermesLatinRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Termes/Latin/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Termes/Latin/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyreTermesMainRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyreTermesMainRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Termes/Main/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Termes/Main/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyreTermesMarksRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyreTermesMarksRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Termes/Marks/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Termes/Marks/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyreTermesMiscRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyreTermesMiscRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Termes/Misc/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Termes/Misc/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyreTermesMonospaceRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyreTermesMonospaceRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Termes/Monospace/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Termes/Monospace/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyreTermesNonunicodeRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyreTermesNonunicodeRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Termes/NonUnicode/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Termes/NonUnicode/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyreTermesNormalRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyreTermesNormalRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Termes/Normal/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Termes/Normal/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyreTermesOperatorsRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyreTermesOperatorsRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Termes/Operators/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Termes/Operators/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyreTermesSansserifRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyreTermesSansserifRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Termes/SansSerif/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Termes/SansSerif/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyreTermesScriptRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyreTermesScriptRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Termes/Script/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Termes/Script/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyreTermesShapesRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyreTermesShapesRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Termes/Shapes/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Termes/Shapes/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyreTermesSize1RegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyreTermesSize1RegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Termes/Size1/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Termes/Size1/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyreTermesSize2RegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyreTermesSize2RegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Termes/Size2/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Termes/Size2/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyreTermesSize3RegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyreTermesSize3RegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Termes/Size3/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Termes/Size3/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyreTermesSize4RegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyreTermesSize4RegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Termes/Size4/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Termes/Size4/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyreTermesSize5RegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyreTermesSize5RegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Termes/Size5/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Termes/Size5/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyreTermesSize6RegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyreTermesSize6RegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Termes/Size6/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Termes/Size6/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyreTermesSymbolsRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyreTermesSymbolsRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Termes/Symbols/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Termes/Symbols/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyreTermesVariantsRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyreTermesVariantsRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Termes/Variants/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Termes/Variants/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyreTermesFontdataExtraJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyreTermesFontdataExtraJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Termes/fontdata-extra.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Termes/fontdata-extra.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyreTermesFontdataJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyreTermesFontdataJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Termes/fontdata.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Termes/fontdata.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsLatinModernAlphabetsRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsLatinModernAlphabetsRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Latin-Modern/Alphabets/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Latin-Modern/Alphabets/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsLatinModernArrowsRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsLatinModernArrowsRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Latin-Modern/Arrows/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Latin-Modern/Arrows/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsLatinModernDoublestruckRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsLatinModernDoublestruckRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Latin-Modern/DoubleStruck/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Latin-Modern/DoubleStruck/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsLatinModernFrakturRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsLatinModernFrakturRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Latin-Modern/Fraktur/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Latin-Modern/Fraktur/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsLatinModernLatinRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsLatinModernLatinRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Latin-Modern/Latin/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Latin-Modern/Latin/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsLatinModernMainRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsLatinModernMainRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Latin-Modern/Main/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Latin-Modern/Main/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsLatinModernMarksRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsLatinModernMarksRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Latin-Modern/Marks/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Latin-Modern/Marks/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsLatinModernMiscRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsLatinModernMiscRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Latin-Modern/Misc/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Latin-Modern/Misc/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsLatinModernMonospaceRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsLatinModernMonospaceRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Latin-Modern/Monospace/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Latin-Modern/Monospace/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsLatinModernNonunicodeRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsLatinModernNonunicodeRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Latin-Modern/NonUnicode/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Latin-Modern/NonUnicode/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsLatinModernNormalRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsLatinModernNormalRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Latin-Modern/Normal/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Latin-Modern/Normal/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsLatinModernOperatorsRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsLatinModernOperatorsRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Latin-Modern/Operators/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Latin-Modern/Operators/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsLatinModernSansserifRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsLatinModernSansserifRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Latin-Modern/SansSerif/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Latin-Modern/SansSerif/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsLatinModernScriptRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsLatinModernScriptRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Latin-Modern/Script/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Latin-Modern/Script/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsLatinModernShapesRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsLatinModernShapesRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Latin-Modern/Shapes/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Latin-Modern/Shapes/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsLatinModernSize1RegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsLatinModernSize1RegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Latin-Modern/Size1/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Latin-Modern/Size1/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsLatinModernSize2RegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsLatinModernSize2RegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Latin-Modern/Size2/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Latin-Modern/Size2/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsLatinModernSize3RegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsLatinModernSize3RegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Latin-Modern/Size3/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Latin-Modern/Size3/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsLatinModernSize4RegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsLatinModernSize4RegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Latin-Modern/Size4/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Latin-Modern/Size4/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsLatinModernSize5RegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsLatinModernSize5RegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Latin-Modern/Size5/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Latin-Modern/Size5/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsLatinModernSize6RegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsLatinModernSize6RegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Latin-Modern/Size6/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Latin-Modern/Size6/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsLatinModernSize7RegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsLatinModernSize7RegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Latin-Modern/Size7/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Latin-Modern/Size7/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsLatinModernSymbolsRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsLatinModernSymbolsRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Latin-Modern/Symbols/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Latin-Modern/Symbols/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsLatinModernVariantsRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsLatinModernVariantsRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Latin-Modern/Variants/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Latin-Modern/Variants/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsLatinModernFontdataExtraJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsLatinModernFontdataExtraJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Latin-Modern/fontdata-extra.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Latin-Modern/fontdata-extra.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsLatinModernFontdataJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsLatinModernFontdataJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Latin-Modern/fontdata.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Latin-Modern/fontdata.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsNeoEulerAlphabetsRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsNeoEulerAlphabetsRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Neo-Euler/Alphabets/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Neo-Euler/Alphabets/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsNeoEulerArrowsRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsNeoEulerArrowsRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Neo-Euler/Arrows/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Neo-Euler/Arrows/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsNeoEulerFrakturRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsNeoEulerFrakturRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Neo-Euler/Fraktur/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Neo-Euler/Fraktur/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsNeoEulerMainRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsNeoEulerMainRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Neo-Euler/Main/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Neo-Euler/Main/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsNeoEulerMarksRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsNeoEulerMarksRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Neo-Euler/Marks/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Neo-Euler/Marks/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsNeoEulerNonunicodeRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsNeoEulerNonunicodeRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Neo-Euler/NonUnicode/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Neo-Euler/NonUnicode/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsNeoEulerNormalRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsNeoEulerNormalRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Neo-Euler/Normal/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Neo-Euler/Normal/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsNeoEulerOperatorsRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsNeoEulerOperatorsRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Neo-Euler/Operators/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Neo-Euler/Operators/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsNeoEulerScriptRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsNeoEulerScriptRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Neo-Euler/Script/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Neo-Euler/Script/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsNeoEulerShapesRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsNeoEulerShapesRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Neo-Euler/Shapes/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Neo-Euler/Shapes/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsNeoEulerSize1RegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsNeoEulerSize1RegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Neo-Euler/Size1/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Neo-Euler/Size1/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsNeoEulerSize2RegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsNeoEulerSize2RegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Neo-Euler/Size2/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Neo-Euler/Size2/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsNeoEulerSize3RegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsNeoEulerSize3RegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Neo-Euler/Size3/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Neo-Euler/Size3/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsNeoEulerSize4RegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsNeoEulerSize4RegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Neo-Euler/Size4/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Neo-Euler/Size4/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsNeoEulerSize5RegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsNeoEulerSize5RegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Neo-Euler/Size5/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Neo-Euler/Size5/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsNeoEulerSymbolsRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsNeoEulerSymbolsRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Neo-Euler/Symbols/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Neo-Euler/Symbols/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsNeoEulerVariantsRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsNeoEulerVariantsRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Neo-Euler/Variants/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Neo-Euler/Variants/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsNeoEulerFontdataExtraJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsNeoEulerFontdataExtraJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Neo-Euler/fontdata-extra.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Neo-Euler/fontdata-extra.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsNeoEulerFontdataJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsNeoEulerFontdataJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Neo-Euler/fontdata.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Neo-Euler/fontdata.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldAlphapresentformsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldAlphapresentformsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/AlphaPresentForms.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/AlphaPresentForms.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldArrowsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldArrowsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/Arrows.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/Arrows.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldBbboldJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldBbboldJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/BBBold.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/BBBold.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldBoldfrakturJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldBoldfrakturJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/BoldFraktur.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/BoldFraktur.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldBoxdrawingJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldBoxdrawingJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/BoxDrawing.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/BoxDrawing.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldCombdiacritmarksJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldCombdiacritmarksJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/CombDiacritMarks.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/CombDiacritMarks.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldCombdiactforsymbolsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldCombdiactforsymbolsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/CombDiactForSymbols.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/CombDiactForSymbols.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldControlpicturesJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldControlpicturesJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/ControlPictures.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/ControlPictures.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldCurrencysymbolsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldCurrencysymbolsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/CurrencySymbols.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/CurrencySymbols.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldCyrillicJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldCyrillicJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/Cyrillic.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/Cyrillic.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldEnclosedalphanumJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldEnclosedalphanumJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/EnclosedAlphanum.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/EnclosedAlphanum.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldGeneralpunctuationJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldGeneralpunctuationJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/GeneralPunctuation.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/GeneralPunctuation.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldGeometricshapesJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldGeometricshapesJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/GeometricShapes.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/GeometricShapes.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldGreekandcopticJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldGreekandcopticJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/GreekAndCoptic.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/GreekAndCoptic.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldGreekboldJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldGreekboldJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/GreekBold.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/GreekBold.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldGreekssboldJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldGreekssboldJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/GreekSSBold.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/GreekSSBold.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldIpaextensionsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldIpaextensionsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/IPAExtensions.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/IPAExtensions.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldLatin1supplementJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldLatin1supplementJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/Latin1Supplement.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/Latin1Supplement.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldLatinextendedaJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldLatinextendedaJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/LatinExtendedA.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/LatinExtendedA.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldLatinextendedadditionalJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldLatinextendedadditionalJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/LatinExtendedAdditional.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/LatinExtendedAdditional.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldLatinextendedbJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldLatinextendedbJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/LatinExtendedB.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/LatinExtendedB.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldLatinextendeddJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldLatinextendeddJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/LatinExtendedD.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/LatinExtendedD.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldLetterlikesymbolsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldLetterlikesymbolsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/LetterlikeSymbols.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/LetterlikeSymbols.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldMathboldJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldMathboldJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/MathBold.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/MathBold.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldMathoperatorsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldMathoperatorsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/MathOperators.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/MathOperators.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldMathssboldJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldMathssboldJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/MathSSBold.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/MathSSBold.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldMiscmathsymbolsaJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldMiscmathsymbolsaJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/MiscMathSymbolsA.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/MiscMathSymbolsA.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldMiscmathsymbolsbJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldMiscmathsymbolsbJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/MiscMathSymbolsB.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/MiscMathSymbolsB.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldMiscsymbolsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldMiscsymbolsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/MiscSymbols.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/MiscSymbols.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldMisctechnicalJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldMisctechnicalJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/MiscTechnical.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/MiscTechnical.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldNumberformsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldNumberformsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/NumberForms.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/NumberForms.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldPhoneticextensionsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldPhoneticextensionsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/PhoneticExtensions.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/PhoneticExtensions.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldSpacingmodlettersJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldSpacingmodlettersJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/SpacingModLetters.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/SpacingModLetters.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldSuperandsubscriptsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldSuperandsubscriptsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/SuperAndSubscripts.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/SuperAndSubscripts.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldSuppmathoperatorsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldSuppmathoperatorsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/SuppMathOperators.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/SuppMathOperators.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBolditalicAlphapresentformsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBolditalicAlphapresentformsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/BoldItalic/AlphaPresentForms.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/BoldItalic/AlphaPresentForms.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBolditalicBasiclatinJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBolditalicBasiclatinJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/BoldItalic/BasicLatin.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/BoldItalic/BasicLatin.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBolditalicBoxdrawingJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBolditalicBoxdrawingJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/BoldItalic/BoxDrawing.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/BoldItalic/BoxDrawing.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBolditalicCombdiactforsymbolsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBolditalicCombdiactforsymbolsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/BoldItalic/CombDiactForSymbols.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/BoldItalic/CombDiactForSymbols.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBolditalicControlpicturesJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBolditalicControlpicturesJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/BoldItalic/ControlPictures.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/BoldItalic/ControlPictures.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBolditalicCurrencysymbolsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBolditalicCurrencysymbolsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/BoldItalic/CurrencySymbols.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/BoldItalic/CurrencySymbols.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBolditalicCyrillicJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBolditalicCyrillicJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/BoldItalic/Cyrillic.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/BoldItalic/Cyrillic.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBolditalicEnclosedalphanumJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBolditalicEnclosedalphanumJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/BoldItalic/EnclosedAlphanum.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/BoldItalic/EnclosedAlphanum.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBolditalicGeneralpunctuationJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBolditalicGeneralpunctuationJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/BoldItalic/GeneralPunctuation.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/BoldItalic/GeneralPunctuation.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBolditalicGreekandcopticJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBolditalicGreekandcopticJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/BoldItalic/GreekAndCoptic.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/BoldItalic/GreekAndCoptic.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBolditalicGreekbolditalicJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBolditalicGreekbolditalicJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/BoldItalic/GreekBoldItalic.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/BoldItalic/GreekBoldItalic.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBolditalicGreekssbolditalicJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBolditalicGreekssbolditalicJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/BoldItalic/GreekSSBoldItalic.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/BoldItalic/GreekSSBoldItalic.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBolditalicIpaextensionsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBolditalicIpaextensionsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/BoldItalic/IPAExtensions.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/BoldItalic/IPAExtensions.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBolditalicLatin1supplementJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBolditalicLatin1supplementJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/BoldItalic/Latin1Supplement.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/BoldItalic/Latin1Supplement.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBolditalicLatinextendedaJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBolditalicLatinextendedaJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/BoldItalic/LatinExtendedA.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/BoldItalic/LatinExtendedA.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBolditalicLatinextendedadditionalJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBolditalicLatinextendedadditionalJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/BoldItalic/LatinExtendedAdditional.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/BoldItalic/LatinExtendedAdditional.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBolditalicLatinextendedbJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBolditalicLatinextendedbJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/BoldItalic/LatinExtendedB.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/BoldItalic/LatinExtendedB.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBolditalicLetterlikesymbolsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBolditalicLetterlikesymbolsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/BoldItalic/LetterlikeSymbols.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/BoldItalic/LetterlikeSymbols.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBolditalicMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBolditalicMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/BoldItalic/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/BoldItalic/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBolditalicMathbolditalicJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBolditalicMathbolditalicJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/BoldItalic/MathBoldItalic.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/BoldItalic/MathBoldItalic.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBolditalicMathboldscriptJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBolditalicMathboldscriptJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/BoldItalic/MathBoldScript.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/BoldItalic/MathBoldScript.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBolditalicMathoperatorsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBolditalicMathoperatorsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/BoldItalic/MathOperators.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/BoldItalic/MathOperators.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBolditalicMathssitalicboldJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBolditalicMathssitalicboldJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/BoldItalic/MathSSItalicBold.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/BoldItalic/MathSSItalicBold.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBolditalicSpacingmodlettersJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBolditalicSpacingmodlettersJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/BoldItalic/SpacingModLetters.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/BoldItalic/SpacingModLetters.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralItalicAlphapresentformsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralItalicAlphapresentformsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Italic/AlphaPresentForms.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Italic/AlphaPresentForms.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralItalicBoxdrawingJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralItalicBoxdrawingJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Italic/BoxDrawing.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Italic/BoxDrawing.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralItalicCombdiactforsymbolsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralItalicCombdiactforsymbolsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Italic/CombDiactForSymbols.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Italic/CombDiactForSymbols.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralItalicControlpicturesJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralItalicControlpicturesJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Italic/ControlPictures.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Italic/ControlPictures.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralItalicCurrencysymbolsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralItalicCurrencysymbolsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Italic/CurrencySymbols.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Italic/CurrencySymbols.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralItalicCyrillicJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralItalicCyrillicJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Italic/Cyrillic.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Italic/Cyrillic.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralItalicEnclosedalphanumJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralItalicEnclosedalphanumJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Italic/EnclosedAlphanum.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Italic/EnclosedAlphanum.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralItalicGeneralpunctuationJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralItalicGeneralpunctuationJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Italic/GeneralPunctuation.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Italic/GeneralPunctuation.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralItalicGreekandcopticJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralItalicGreekandcopticJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Italic/GreekAndCoptic.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Italic/GreekAndCoptic.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralItalicGreekitalicJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralItalicGreekitalicJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Italic/GreekItalic.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Italic/GreekItalic.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralItalicIpaextensionsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralItalicIpaextensionsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Italic/IPAExtensions.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Italic/IPAExtensions.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralItalicLatin1supplementJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralItalicLatin1supplementJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Italic/Latin1Supplement.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Italic/Latin1Supplement.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralItalicLatinextendedaJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralItalicLatinextendedaJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Italic/LatinExtendedA.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Italic/LatinExtendedA.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralItalicLatinextendedadditionalJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralItalicLatinextendedadditionalJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Italic/LatinExtendedAdditional.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Italic/LatinExtendedAdditional.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralItalicLatinextendedbJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralItalicLatinextendedbJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Italic/LatinExtendedB.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Italic/LatinExtendedB.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralItalicLetterlikesymbolsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralItalicLetterlikesymbolsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Italic/LetterlikeSymbols.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Italic/LetterlikeSymbols.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralItalicMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralItalicMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Italic/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Italic/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralItalicMathitalicJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralItalicMathitalicJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Italic/MathItalic.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Italic/MathItalic.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralItalicMathoperatorsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralItalicMathoperatorsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Italic/MathOperators.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Italic/MathOperators.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralItalicMathssitalicJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralItalicMathssitalicJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Italic/MathSSItalic.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Italic/MathSSItalic.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralItalicMathscriptJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralItalicMathscriptJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Italic/MathScript.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Italic/MathScript.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralItalicSpacingmodlettersJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralItalicSpacingmodlettersJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Italic/SpacingModLetters.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Italic/SpacingModLetters.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralItalicIjJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralItalicIjJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Italic/ij.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Italic/ij.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularAlphapresentformsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularAlphapresentformsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/AlphaPresentForms.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/AlphaPresentForms.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularArrowsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularArrowsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/Arrows.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/Arrows.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularBbboldJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularBbboldJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/BBBold.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/BBBold.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularBlockelementsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularBlockelementsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/BlockElements.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/BlockElements.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularBoldfrakturJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularBoldfrakturJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/BoldFraktur.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/BoldFraktur.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularBoxdrawingJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularBoxdrawingJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/BoxDrawing.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/BoxDrawing.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularCjkJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularCjkJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/CJK.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/CJK.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularCombdiacritmarksJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularCombdiacritmarksJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/CombDiacritMarks.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/CombDiacritMarks.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularCombdiactforsymbolsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularCombdiactforsymbolsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/CombDiactForSymbols.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/CombDiactForSymbols.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularControlpicturesJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularControlpicturesJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/ControlPictures.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/ControlPictures.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularCurrencysymbolsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularCurrencysymbolsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/CurrencySymbols.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/CurrencySymbols.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularCyrillicJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularCyrillicJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/Cyrillic.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/Cyrillic.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularDingbatsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularDingbatsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/Dingbats.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/Dingbats.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularEnclosedalphanumJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularEnclosedalphanumJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/EnclosedAlphanum.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/EnclosedAlphanum.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularFrakturJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularFrakturJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/Fraktur.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/Fraktur.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularGeneralpunctuationJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularGeneralpunctuationJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/GeneralPunctuation.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/GeneralPunctuation.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularGeometricshapesJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularGeometricshapesJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/GeometricShapes.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/GeometricShapes.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularGreekandcopticJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularGreekandcopticJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/GreekAndCoptic.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/GreekAndCoptic.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularGreekboldJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularGreekboldJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/GreekBold.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/GreekBold.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularGreekbolditalicJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularGreekbolditalicJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/GreekBoldItalic.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/GreekBoldItalic.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularGreekitalicJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularGreekitalicJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/GreekItalic.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/GreekItalic.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularGreekssboldJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularGreekssboldJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/GreekSSBold.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/GreekSSBold.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularGreekssbolditalicJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularGreekssbolditalicJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/GreekSSBoldItalic.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/GreekSSBoldItalic.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularHiraganaJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularHiraganaJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/Hiragana.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/Hiragana.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularIpaextensionsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularIpaextensionsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/IPAExtensions.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/IPAExtensions.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularLatin1supplementJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularLatin1supplementJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/Latin1Supplement.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/Latin1Supplement.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularLatinextendedaJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularLatinextendedaJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/LatinExtendedA.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/LatinExtendedA.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularLatinextendedadditionalJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularLatinextendedadditionalJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/LatinExtendedAdditional.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/LatinExtendedAdditional.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularLatinextendedbJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularLatinextendedbJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/LatinExtendedB.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/LatinExtendedB.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularLatinextendeddJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularLatinextendeddJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/LatinExtendedD.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/LatinExtendedD.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularLetterlikesymbolsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularLetterlikesymbolsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/LetterlikeSymbols.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/LetterlikeSymbols.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularMathboldJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularMathboldJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/MathBold.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/MathBold.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularMathbolditalicJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularMathbolditalicJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/MathBoldItalic.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/MathBoldItalic.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularMathboldscriptJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularMathboldscriptJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/MathBoldScript.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/MathBoldScript.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularMathitalicJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularMathitalicJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/MathItalic.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/MathItalic.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularMathoperatorsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularMathoperatorsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/MathOperators.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/MathOperators.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularMathssJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularMathssJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/MathSS.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/MathSS.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularMathssboldJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularMathssboldJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/MathSSBold.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/MathSSBold.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularMathssitalicJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularMathssitalicJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/MathSSItalic.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/MathSSItalic.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularMathssitalicboldJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularMathssitalicboldJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/MathSSItalicBold.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/MathSSItalicBold.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularMathscriptJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularMathscriptJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/MathScript.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/MathScript.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularMathttJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularMathttJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/MathTT.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/MathTT.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularMiscmathsymbolsaJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularMiscmathsymbolsaJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/MiscMathSymbolsA.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/MiscMathSymbolsA.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularMiscmathsymbolsbJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularMiscmathsymbolsbJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/MiscMathSymbolsB.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/MiscMathSymbolsB.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularMiscsymbolsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularMiscsymbolsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/MiscSymbols.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/MiscSymbols.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularMiscsymbolsandarrowsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularMiscsymbolsandarrowsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/MiscSymbolsAndArrows.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/MiscSymbolsAndArrows.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularMisctechnicalJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularMisctechnicalJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/MiscTechnical.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/MiscTechnical.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularNumberformsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularNumberformsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/NumberForms.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/NumberForms.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularPhoneticextensionsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularPhoneticextensionsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/PhoneticExtensions.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/PhoneticExtensions.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularSpacingmodlettersJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularSpacingmodlettersJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/SpacingModLetters.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/SpacingModLetters.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularSpecialsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularSpecialsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/Specials.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/Specials.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularSuperandsubscriptsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularSuperandsubscriptsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/SuperAndSubscripts.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/SuperAndSubscripts.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularSuppmathoperatorsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularSuppmathoperatorsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/SuppMathOperators.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/SuppMathOperators.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularSupplementalarrowsaJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularSupplementalarrowsaJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/SupplementalArrowsA.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/SupplementalArrowsA.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularSupplementalarrowsbJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularSupplementalarrowsbJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/SupplementalArrowsB.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/SupplementalArrowsB.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularIjJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularIjJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/ij.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/ij.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixIntegralsdBoldAllJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixIntegralsdBoldAllJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/IntegralsD/Bold/All.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/IntegralsD/Bold/All.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixIntegralsdRegularAllJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixIntegralsdRegularAllJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/IntegralsD/Regular/All.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/IntegralsD/Regular/All.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixIntegralsdRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixIntegralsdRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/IntegralsD/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/IntegralsD/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixIntegralssmBoldAllJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixIntegralssmBoldAllJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/IntegralsSm/Bold/All.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/IntegralsSm/Bold/All.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixIntegralssmRegularAllJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixIntegralssmRegularAllJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/IntegralsSm/Regular/All.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/IntegralsSm/Regular/All.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixIntegralssmRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixIntegralssmRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/IntegralsSm/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/IntegralsSm/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixIntegralsupBoldAllJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixIntegralsupBoldAllJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/IntegralsUp/Bold/All.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/IntegralsUp/Bold/All.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixIntegralsupRegularAllJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixIntegralsupRegularAllJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/IntegralsUp/Regular/All.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/IntegralsUp/Regular/All.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixIntegralsupRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixIntegralsupRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/IntegralsUp/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/IntegralsUp/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixIntegralsupdBoldAllJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixIntegralsupdBoldAllJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/IntegralsUpD/Bold/All.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/IntegralsUpD/Bold/All.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixIntegralsupdRegularAllJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixIntegralsupdRegularAllJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/IntegralsUpD/Regular/All.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/IntegralsUpD/Regular/All.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixIntegralsupdRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixIntegralsupdRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/IntegralsUpD/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/IntegralsUpD/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixIntegralsupsmBoldAllJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixIntegralsupsmBoldAllJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/IntegralsUpSm/Bold/All.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/IntegralsUpSm/Bold/All.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixIntegralsupsmRegularAllJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixIntegralsupsmRegularAllJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/IntegralsUpSm/Regular/All.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/IntegralsUpSm/Regular/All.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixIntegralsupsmRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixIntegralsupsmRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/IntegralsUpSm/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/IntegralsUpSm/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixNonunicodeBoldAllJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixNonunicodeBoldAllJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/NonUnicode/Bold/All.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/NonUnicode/Bold/All.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixNonunicodeBoldMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixNonunicodeBoldMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/NonUnicode/Bold/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/NonUnicode/Bold/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixNonunicodeBoldPrivateuseJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixNonunicodeBoldPrivateuseJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/NonUnicode/Bold/PrivateUse.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/NonUnicode/Bold/PrivateUse.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixNonunicodeBolditalicAllJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixNonunicodeBolditalicAllJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/NonUnicode/BoldItalic/All.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/NonUnicode/BoldItalic/All.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixNonunicodeBolditalicMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixNonunicodeBolditalicMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/NonUnicode/BoldItalic/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/NonUnicode/BoldItalic/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixNonunicodeBolditalicPrivateuseJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixNonunicodeBolditalicPrivateuseJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/NonUnicode/BoldItalic/PrivateUse.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/NonUnicode/BoldItalic/PrivateUse.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixNonunicodeItalicAllJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixNonunicodeItalicAllJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/NonUnicode/Italic/All.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/NonUnicode/Italic/All.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixNonunicodeItalicMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixNonunicodeItalicMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/NonUnicode/Italic/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/NonUnicode/Italic/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixNonunicodeItalicPrivateuseJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixNonunicodeItalicPrivateuseJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/NonUnicode/Italic/PrivateUse.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/NonUnicode/Italic/PrivateUse.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixNonunicodeRegularAllJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixNonunicodeRegularAllJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/NonUnicode/Regular/All.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/NonUnicode/Regular/All.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixNonunicodeRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixNonunicodeRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/NonUnicode/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/NonUnicode/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixNonunicodeRegularPrivateuseJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixNonunicodeRegularPrivateuseJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/NonUnicode/Regular/PrivateUse.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/NonUnicode/Regular/PrivateUse.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixSizefivesymRegularAllJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixSizefivesymRegularAllJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/SizeFiveSym/Regular/All.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/SizeFiveSym/Regular/All.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixSizefivesymRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixSizefivesymRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/SizeFiveSym/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/SizeFiveSym/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixSizefoursymBoldMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixSizefoursymBoldMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/SizeFourSym/Bold/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/SizeFourSym/Bold/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixSizefoursymRegularAllJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixSizefoursymRegularAllJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/SizeFourSym/Regular/All.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/SizeFourSym/Regular/All.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixSizefoursymRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixSizefoursymRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/SizeFourSym/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/SizeFourSym/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixSizeonesymBoldAllJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixSizeonesymBoldAllJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/SizeOneSym/Bold/All.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/SizeOneSym/Bold/All.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixSizeonesymBoldMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixSizeonesymBoldMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/SizeOneSym/Bold/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/SizeOneSym/Bold/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixSizeonesymRegularAllJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixSizeonesymRegularAllJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/SizeOneSym/Regular/All.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/SizeOneSym/Regular/All.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixSizeonesymRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixSizeonesymRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/SizeOneSym/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/SizeOneSym/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixSizethreesymBoldMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixSizethreesymBoldMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/SizeThreeSym/Bold/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/SizeThreeSym/Bold/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixSizethreesymRegularAllJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixSizethreesymRegularAllJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/SizeThreeSym/Regular/All.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/SizeThreeSym/Regular/All.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixSizethreesymRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixSizethreesymRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/SizeThreeSym/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/SizeThreeSym/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixSizetwosymBoldMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixSizetwosymBoldMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/SizeTwoSym/Bold/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/SizeTwoSym/Bold/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixSizetwosymRegularAllJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixSizetwosymRegularAllJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/SizeTwoSym/Regular/All.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/SizeTwoSym/Regular/All.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixSizetwosymRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixSizetwosymRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/SizeTwoSym/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/SizeTwoSym/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixVariantsBoldAllJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixVariantsBoldAllJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/Variants/Bold/All.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/Variants/Bold/All.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixVariantsBoldMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixVariantsBoldMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/Variants/Bold/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/Variants/Bold/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixVariantsRegularAllJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixVariantsRegularAllJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/Variants/Regular/All.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/Variants/Regular/All.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixVariantsRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixVariantsRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/Variants/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/Variants/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixFontdata10Js reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixFontdata10Js() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/fontdata-1.0.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/fontdata-1.0.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixFontdataBetaJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixFontdataBetaJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/fontdata-beta.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/fontdata-beta.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixFontdataExtraJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixFontdataExtraJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/fontdata-extra.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/fontdata-extra.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixFontdataJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixFontdataJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/fontdata.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/fontdata.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebAlphabetsBoldMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebAlphabetsBoldMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Alphabets/Bold/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Alphabets/Bold/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebAlphabetsBolditalicMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebAlphabetsBolditalicMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Alphabets/BoldItalic/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Alphabets/BoldItalic/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebAlphabetsItalicMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebAlphabetsItalicMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Alphabets/Italic/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Alphabets/Italic/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebAlphabetsRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebAlphabetsRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Alphabets/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Alphabets/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebArrowsBoldMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebArrowsBoldMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Arrows/Bold/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Arrows/Bold/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebArrowsRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebArrowsRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Arrows/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Arrows/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebDoublestruckBoldMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebDoublestruckBoldMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/DoubleStruck/Bold/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/DoubleStruck/Bold/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebDoublestruckBolditalicMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebDoublestruckBolditalicMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/DoubleStruck/BoldItalic/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/DoubleStruck/BoldItalic/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebDoublestruckItalicMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebDoublestruckItalicMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/DoubleStruck/Italic/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/DoubleStruck/Italic/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebDoublestruckRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebDoublestruckRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/DoubleStruck/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/DoubleStruck/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebFrakturBoldMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebFrakturBoldMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Fraktur/Bold/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Fraktur/Bold/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebFrakturRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebFrakturRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Fraktur/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Fraktur/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebLatinBoldMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebLatinBoldMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Latin/Bold/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Latin/Bold/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebLatinBolditalicMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebLatinBolditalicMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Latin/BoldItalic/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Latin/BoldItalic/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebLatinItalicMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebLatinItalicMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Latin/Italic/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Latin/Italic/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebLatinRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebLatinRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Latin/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Latin/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebMainBoldMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebMainBoldMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Main/Bold/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Main/Bold/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebMainBolditalicMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebMainBolditalicMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Main/BoldItalic/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Main/BoldItalic/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebMainItalicMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebMainItalicMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Main/Italic/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Main/Italic/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebMainRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebMainRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Main/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Main/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebMarksBoldMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebMarksBoldMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Marks/Bold/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Marks/Bold/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebMarksBolditalicMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebMarksBolditalicMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Marks/BoldItalic/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Marks/BoldItalic/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebMarksItalicMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebMarksItalicMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Marks/Italic/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Marks/Italic/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebMarksRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebMarksRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Marks/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Marks/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebMiscBoldMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebMiscBoldMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Misc/Bold/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Misc/Bold/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebMiscBolditalicMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebMiscBolditalicMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Misc/BoldItalic/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Misc/BoldItalic/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebMiscItalicMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebMiscItalicMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Misc/Italic/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Misc/Italic/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebMiscRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebMiscRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Misc/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Misc/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebMonospaceRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebMonospaceRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Monospace/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Monospace/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebNormalBoldMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebNormalBoldMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Normal/Bold/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Normal/Bold/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebNormalBolditalicMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebNormalBolditalicMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Normal/BoldItalic/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Normal/BoldItalic/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebNormalItalicMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebNormalItalicMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Normal/Italic/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Normal/Italic/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebOperatorsBoldMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebOperatorsBoldMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Operators/Bold/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Operators/Bold/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebOperatorsRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebOperatorsRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Operators/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Operators/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebSansserifBoldMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebSansserifBoldMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/SansSerif/Bold/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/SansSerif/Bold/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebSansserifBolditalicMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebSansserifBolditalicMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/SansSerif/BoldItalic/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/SansSerif/BoldItalic/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebSansserifItalicMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebSansserifItalicMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/SansSerif/Italic/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/SansSerif/Italic/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebSansserifRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebSansserifRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/SansSerif/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/SansSerif/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebScriptBolditalicMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebScriptBolditalicMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Script/BoldItalic/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Script/BoldItalic/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebScriptItalicMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebScriptItalicMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Script/Italic/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Script/Italic/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebScriptRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebScriptRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Script/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Script/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebShapesBoldMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebShapesBoldMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Shapes/Bold/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Shapes/Bold/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebShapesBolditalicMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebShapesBolditalicMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Shapes/BoldItalic/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Shapes/BoldItalic/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebShapesRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebShapesRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Shapes/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Shapes/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebSize1RegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebSize1RegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Size1/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Size1/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebSize2RegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebSize2RegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Size2/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Size2/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebSize3RegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebSize3RegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Size3/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Size3/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebSize4RegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebSize4RegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Size4/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Size4/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebSize5RegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebSize5RegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Size5/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Size5/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebSymbolsBoldMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebSymbolsBoldMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Symbols/Bold/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Symbols/Bold/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebSymbolsRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebSymbolsRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Symbols/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Symbols/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebVariantsBoldMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebVariantsBoldMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Variants/Bold/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Variants/Bold/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebVariantsBolditalicMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebVariantsBolditalicMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Variants/BoldItalic/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Variants/BoldItalic/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebVariantsItalicMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebVariantsItalicMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Variants/Italic/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Variants/Italic/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebVariantsRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebVariantsRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Variants/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Variants/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebFontdataExtraJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebFontdataExtraJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/fontdata-extra.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/fontdata-extra.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebFontdataJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebFontdataJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/fontdata.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/fontdata.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexAmsRegularArrowsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexAmsRegularArrowsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/AMS/Regular/Arrows.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/AMS/Regular/Arrows.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexAmsRegularBbboldJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexAmsRegularBbboldJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/AMS/Regular/BBBold.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/AMS/Regular/BBBold.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexAmsRegularBoxdrawingJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexAmsRegularBoxdrawingJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/AMS/Regular/BoxDrawing.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/AMS/Regular/BoxDrawing.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexAmsRegularCombdiacritmarksJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexAmsRegularCombdiacritmarksJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/AMS/Regular/CombDiacritMarks.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/AMS/Regular/CombDiacritMarks.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexAmsRegularDingbatsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexAmsRegularDingbatsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/AMS/Regular/Dingbats.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/AMS/Regular/Dingbats.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexAmsRegularEnclosedalphanumJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexAmsRegularEnclosedalphanumJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/AMS/Regular/EnclosedAlphanum.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/AMS/Regular/EnclosedAlphanum.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexAmsRegularGeneralpunctuationJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexAmsRegularGeneralpunctuationJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/AMS/Regular/GeneralPunctuation.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/AMS/Regular/GeneralPunctuation.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexAmsRegularGeometricshapesJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexAmsRegularGeometricshapesJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/AMS/Regular/GeometricShapes.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/AMS/Regular/GeometricShapes.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexAmsRegularGreekandcopticJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexAmsRegularGreekandcopticJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/AMS/Regular/GreekAndCoptic.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/AMS/Regular/GreekAndCoptic.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexAmsRegularLatin1supplementJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexAmsRegularLatin1supplementJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/AMS/Regular/Latin1Supplement.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/AMS/Regular/Latin1Supplement.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexAmsRegularLatinextendedaJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexAmsRegularLatinextendedaJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/AMS/Regular/LatinExtendedA.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/AMS/Regular/LatinExtendedA.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexAmsRegularLetterlikesymbolsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexAmsRegularLetterlikesymbolsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/AMS/Regular/LetterlikeSymbols.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/AMS/Regular/LetterlikeSymbols.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexAmsRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexAmsRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/AMS/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/AMS/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexAmsRegularMathoperatorsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexAmsRegularMathoperatorsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/AMS/Regular/MathOperators.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/AMS/Regular/MathOperators.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexAmsRegularMiscmathsymbolsbJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexAmsRegularMiscmathsymbolsbJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/AMS/Regular/MiscMathSymbolsB.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/AMS/Regular/MiscMathSymbolsB.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexAmsRegularMiscsymbolsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexAmsRegularMiscsymbolsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/AMS/Regular/MiscSymbols.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/AMS/Regular/MiscSymbols.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexAmsRegularMisctechnicalJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexAmsRegularMisctechnicalJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/AMS/Regular/MiscTechnical.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/AMS/Regular/MiscTechnical.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexAmsRegularPuaJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexAmsRegularPuaJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/AMS/Regular/PUA.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/AMS/Regular/PUA.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexAmsRegularSpacingmodlettersJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexAmsRegularSpacingmodlettersJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/AMS/Regular/SpacingModLetters.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/AMS/Regular/SpacingModLetters.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexAmsRegularSuppmathoperatorsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexAmsRegularSuppmathoperatorsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/AMS/Regular/SuppMathOperators.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/AMS/Regular/SuppMathOperators.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexCaligraphicBoldMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexCaligraphicBoldMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Caligraphic/Bold/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Caligraphic/Bold/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexCaligraphicRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexCaligraphicRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Caligraphic/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Caligraphic/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexFrakturBoldBasiclatinJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexFrakturBoldBasiclatinJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Fraktur/Bold/BasicLatin.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Fraktur/Bold/BasicLatin.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexFrakturBoldMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexFrakturBoldMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Fraktur/Bold/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Fraktur/Bold/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexFrakturBoldOtherJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexFrakturBoldOtherJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Fraktur/Bold/Other.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Fraktur/Bold/Other.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexFrakturBoldPuaJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexFrakturBoldPuaJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Fraktur/Bold/PUA.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Fraktur/Bold/PUA.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexFrakturRegularBasiclatinJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexFrakturRegularBasiclatinJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Fraktur/Regular/BasicLatin.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Fraktur/Regular/BasicLatin.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexFrakturRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexFrakturRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Fraktur/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Fraktur/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexFrakturRegularOtherJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexFrakturRegularOtherJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Fraktur/Regular/Other.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Fraktur/Regular/Other.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexFrakturRegularPuaJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexFrakturRegularPuaJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Fraktur/Regular/PUA.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Fraktur/Regular/PUA.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexGreekBoldMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexGreekBoldMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Greek/Bold/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Greek/Bold/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexGreekBolditalicMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexGreekBolditalicMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Greek/BoldItalic/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Greek/BoldItalic/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexGreekItalicMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexGreekItalicMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Greek/Italic/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Greek/Italic/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexGreekRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexGreekRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Greek/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Greek/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexMainBoldArrowsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexMainBoldArrowsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Main/Bold/Arrows.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Main/Bold/Arrows.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexMainBoldCombdiacritmarksJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexMainBoldCombdiacritmarksJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Main/Bold/CombDiacritMarks.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Main/Bold/CombDiacritMarks.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexMainBoldCombdiactforsymbolsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexMainBoldCombdiactforsymbolsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Main/Bold/CombDiactForSymbols.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Main/Bold/CombDiactForSymbols.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexMainBoldGeneralpunctuationJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexMainBoldGeneralpunctuationJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Main/Bold/GeneralPunctuation.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Main/Bold/GeneralPunctuation.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexMainBoldGeometricshapesJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexMainBoldGeometricshapesJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Main/Bold/GeometricShapes.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Main/Bold/GeometricShapes.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexMainBoldLatin1supplementJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexMainBoldLatin1supplementJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Main/Bold/Latin1Supplement.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Main/Bold/Latin1Supplement.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexMainBoldLatinextendedaJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexMainBoldLatinextendedaJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Main/Bold/LatinExtendedA.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Main/Bold/LatinExtendedA.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexMainBoldLatinextendedbJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexMainBoldLatinextendedbJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Main/Bold/LatinExtendedB.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Main/Bold/LatinExtendedB.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexMainBoldLetterlikesymbolsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexMainBoldLetterlikesymbolsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Main/Bold/LetterlikeSymbols.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Main/Bold/LetterlikeSymbols.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexMainBoldMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexMainBoldMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Main/Bold/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Main/Bold/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexMainBoldMathoperatorsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexMainBoldMathoperatorsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Main/Bold/MathOperators.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Main/Bold/MathOperators.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexMainBoldMiscmathsymbolsaJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexMainBoldMiscmathsymbolsaJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Main/Bold/MiscMathSymbolsA.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Main/Bold/MiscMathSymbolsA.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexMainBoldMiscsymbolsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexMainBoldMiscsymbolsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Main/Bold/MiscSymbols.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Main/Bold/MiscSymbols.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexMainBoldMisctechnicalJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexMainBoldMisctechnicalJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Main/Bold/MiscTechnical.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Main/Bold/MiscTechnical.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexMainBoldSpacingmodlettersJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexMainBoldSpacingmodlettersJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Main/Bold/SpacingModLetters.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Main/Bold/SpacingModLetters.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexMainBoldSuppmathoperatorsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexMainBoldSuppmathoperatorsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Main/Bold/SuppMathOperators.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Main/Bold/SuppMathOperators.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexMainBoldSupplementalarrowsaJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexMainBoldSupplementalarrowsaJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Main/Bold/SupplementalArrowsA.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Main/Bold/SupplementalArrowsA.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexMainItalicCombdiacritmarksJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexMainItalicCombdiacritmarksJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Main/Italic/CombDiacritMarks.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Main/Italic/CombDiacritMarks.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexMainItalicGeneralpunctuationJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexMainItalicGeneralpunctuationJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Main/Italic/GeneralPunctuation.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Main/Italic/GeneralPunctuation.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexMainItalicLatin1supplementJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexMainItalicLatin1supplementJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Main/Italic/Latin1Supplement.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Main/Italic/Latin1Supplement.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexMainItalicLetterlikesymbolsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexMainItalicLetterlikesymbolsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Main/Italic/LetterlikeSymbols.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Main/Italic/LetterlikeSymbols.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexMainItalicMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexMainItalicMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Main/Italic/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Main/Italic/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexMainRegularCombdiacritmarksJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexMainRegularCombdiacritmarksJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Main/Regular/CombDiacritMarks.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Main/Regular/CombDiacritMarks.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexMainRegularGeometricshapesJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexMainRegularGeometricshapesJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Main/Regular/GeometricShapes.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Main/Regular/GeometricShapes.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexMainRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexMainRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Main/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Main/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexMainRegularMiscsymbolsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexMainRegularMiscsymbolsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Main/Regular/MiscSymbols.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Main/Regular/MiscSymbols.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexMainRegularSpacingmodlettersJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexMainRegularSpacingmodlettersJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Main/Regular/SpacingModLetters.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Main/Regular/SpacingModLetters.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexMathBolditalicMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexMathBolditalicMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Math/BoldItalic/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Math/BoldItalic/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexMathItalicMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexMathItalicMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Math/Italic/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Math/Italic/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexSansserifBoldBasiclatinJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexSansserifBoldBasiclatinJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/SansSerif/Bold/BasicLatin.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/SansSerif/Bold/BasicLatin.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexSansserifBoldCombdiacritmarksJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexSansserifBoldCombdiacritmarksJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/SansSerif/Bold/CombDiacritMarks.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/SansSerif/Bold/CombDiacritMarks.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexSansserifBoldMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexSansserifBoldMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/SansSerif/Bold/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/SansSerif/Bold/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexSansserifBoldOtherJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexSansserifBoldOtherJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/SansSerif/Bold/Other.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/SansSerif/Bold/Other.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexSansserifItalicBasiclatinJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexSansserifItalicBasiclatinJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/SansSerif/Italic/BasicLatin.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/SansSerif/Italic/BasicLatin.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexSansserifItalicCombdiacritmarksJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexSansserifItalicCombdiacritmarksJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/SansSerif/Italic/CombDiacritMarks.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/SansSerif/Italic/CombDiacritMarks.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexSansserifItalicMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexSansserifItalicMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/SansSerif/Italic/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/SansSerif/Italic/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexSansserifItalicOtherJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexSansserifItalicOtherJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/SansSerif/Italic/Other.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/SansSerif/Italic/Other.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexSansserifRegularBasiclatinJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexSansserifRegularBasiclatinJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/SansSerif/Regular/BasicLatin.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/SansSerif/Regular/BasicLatin.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexSansserifRegularCombdiacritmarksJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexSansserifRegularCombdiacritmarksJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/SansSerif/Regular/CombDiacritMarks.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/SansSerif/Regular/CombDiacritMarks.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexSansserifRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexSansserifRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/SansSerif/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/SansSerif/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexSansserifRegularOtherJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexSansserifRegularOtherJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/SansSerif/Regular/Other.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/SansSerif/Regular/Other.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexScriptRegularBasiclatinJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexScriptRegularBasiclatinJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Script/Regular/BasicLatin.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Script/Regular/BasicLatin.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexScriptRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexScriptRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Script/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Script/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexScriptRegularOtherJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexScriptRegularOtherJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Script/Regular/Other.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Script/Regular/Other.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexSize1RegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexSize1RegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Size1/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Size1/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexSize2RegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexSize2RegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Size2/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Size2/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexSize3RegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexSize3RegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Size3/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Size3/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexSize4RegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexSize4RegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Size4/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Size4/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexTypewriterRegularBasiclatinJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexTypewriterRegularBasiclatinJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Typewriter/Regular/BasicLatin.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Typewriter/Regular/BasicLatin.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexTypewriterRegularCombdiacritmarksJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexTypewriterRegularCombdiacritmarksJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Typewriter/Regular/CombDiacritMarks.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Typewriter/Regular/CombDiacritMarks.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexTypewriterRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexTypewriterRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Typewriter/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Typewriter/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexTypewriterRegularOtherJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexTypewriterRegularOtherJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Typewriter/Regular/Other.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Typewriter/Regular/Other.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexWinchromeRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexWinchromeRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/WinChrome/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/WinChrome/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexWinie6RegularAmsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexWinie6RegularAmsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/WinIE6/Regular/AMS.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/WinIE6/Regular/AMS.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexWinie6RegularBoldJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexWinie6RegularBoldJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/WinIE6/Regular/Bold.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/WinIE6/Regular/Bold.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexWinie6RegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexWinie6RegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/WinIE6/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/WinIE6/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexFontdataExtraJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexFontdataExtraJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/fontdata-extra.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/fontdata-extra.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexFontdataJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexFontdataJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/fontdata.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/fontdata.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssImagefontsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssImagefontsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/imageFonts.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/imageFonts.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssJaxJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssJaxJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/jax.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/jax.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputNativemmlConfigJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputNativemmlConfigJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/NativeMML/config.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/NativeMML/config.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputNativemmlJaxJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputNativemmlJaxJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/NativeMML/jax.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/NativeMML/jax.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputPlainsourceConfigJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputPlainsourceConfigJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/PlainSource/config.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/PlainSource/config.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputPlainsourceJaxJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputPlainsourceJaxJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/PlainSource/jax.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/PlainSource/jax.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputPreviewhtmlConfigJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputPreviewhtmlConfigJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/PreviewHTML/config.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/PreviewHTML/config.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputPreviewhtmlJaxJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputPreviewhtmlJaxJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/PreviewHTML/jax.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/PreviewHTML/jax.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgAutoloadAnnotationXmlJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgAutoloadAnnotationXmlJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/autoload/annotation-xml.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/autoload/annotation-xml.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgAutoloadMactionJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgAutoloadMactionJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/autoload/maction.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/autoload/maction.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgAutoloadMencloseJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgAutoloadMencloseJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/autoload/menclose.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/autoload/menclose.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgAutoloadMglyphJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgAutoloadMglyphJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/autoload/mglyph.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/autoload/mglyph.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgAutoloadMmultiscriptsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgAutoloadMmultiscriptsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/autoload/mmultiscripts.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/autoload/mmultiscripts.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgAutoloadMsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgAutoloadMsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/autoload/ms.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/autoload/ms.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgAutoloadMtableJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgAutoloadMtableJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/autoload/mtable.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/autoload/mtable.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgAutoloadMultilineJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgAutoloadMultilineJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/autoload/multiline.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/autoload/multiline.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgConfigJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgConfigJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/config.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/config.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsAsanaMathAlphabetsRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsAsanaMathAlphabetsRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Asana-Math/Alphabets/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Asana-Math/Alphabets/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsAsanaMathArrowsRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsAsanaMathArrowsRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Asana-Math/Arrows/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Asana-Math/Arrows/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsAsanaMathDoublestruckRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsAsanaMathDoublestruckRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Asana-Math/DoubleStruck/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Asana-Math/DoubleStruck/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsAsanaMathFrakturRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsAsanaMathFrakturRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Asana-Math/Fraktur/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Asana-Math/Fraktur/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsAsanaMathLatinRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsAsanaMathLatinRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Asana-Math/Latin/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Asana-Math/Latin/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsAsanaMathMainRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsAsanaMathMainRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Asana-Math/Main/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Asana-Math/Main/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsAsanaMathMarksRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsAsanaMathMarksRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Asana-Math/Marks/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Asana-Math/Marks/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsAsanaMathMiscRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsAsanaMathMiscRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Asana-Math/Misc/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Asana-Math/Misc/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsAsanaMathMonospaceRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsAsanaMathMonospaceRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Asana-Math/Monospace/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Asana-Math/Monospace/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsAsanaMathNonunicodeRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsAsanaMathNonunicodeRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Asana-Math/NonUnicode/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Asana-Math/NonUnicode/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsAsanaMathNormalRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsAsanaMathNormalRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Asana-Math/Normal/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Asana-Math/Normal/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsAsanaMathOperatorsRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsAsanaMathOperatorsRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Asana-Math/Operators/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Asana-Math/Operators/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsAsanaMathSansserifRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsAsanaMathSansserifRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Asana-Math/SansSerif/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Asana-Math/SansSerif/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsAsanaMathScriptRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsAsanaMathScriptRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Asana-Math/Script/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Asana-Math/Script/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsAsanaMathShapesRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsAsanaMathShapesRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Asana-Math/Shapes/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Asana-Math/Shapes/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsAsanaMathSize1RegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsAsanaMathSize1RegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Asana-Math/Size1/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Asana-Math/Size1/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsAsanaMathSize2RegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsAsanaMathSize2RegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Asana-Math/Size2/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Asana-Math/Size2/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsAsanaMathSize3RegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsAsanaMathSize3RegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Asana-Math/Size3/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Asana-Math/Size3/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsAsanaMathSize4RegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsAsanaMathSize4RegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Asana-Math/Size4/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Asana-Math/Size4/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsAsanaMathSize5RegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsAsanaMathSize5RegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Asana-Math/Size5/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Asana-Math/Size5/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsAsanaMathSize6RegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsAsanaMathSize6RegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Asana-Math/Size6/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Asana-Math/Size6/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsAsanaMathSymbolsRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsAsanaMathSymbolsRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Asana-Math/Symbols/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Asana-Math/Symbols/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsAsanaMathVariantsRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsAsanaMathVariantsRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Asana-Math/Variants/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Asana-Math/Variants/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsAsanaMathFontdataExtraJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsAsanaMathFontdataExtraJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Asana-Math/fontdata-extra.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Asana-Math/fontdata-extra.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsAsanaMathFontdataJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsAsanaMathFontdataJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Asana-Math/fontdata.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Asana-Math/fontdata.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyrePagellaAlphabetsRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyrePagellaAlphabetsRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Pagella/Alphabets/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Pagella/Alphabets/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyrePagellaArrowsRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyrePagellaArrowsRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Pagella/Arrows/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Pagella/Arrows/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyrePagellaDoublestruckRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyrePagellaDoublestruckRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Pagella/DoubleStruck/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Pagella/DoubleStruck/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyrePagellaFrakturRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyrePagellaFrakturRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Pagella/Fraktur/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Pagella/Fraktur/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyrePagellaLatinRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyrePagellaLatinRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Pagella/Latin/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Pagella/Latin/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyrePagellaMainRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyrePagellaMainRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Pagella/Main/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Pagella/Main/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyrePagellaMarksRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyrePagellaMarksRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Pagella/Marks/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Pagella/Marks/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyrePagellaMiscRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyrePagellaMiscRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Pagella/Misc/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Pagella/Misc/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyrePagellaMonospaceRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyrePagellaMonospaceRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Pagella/Monospace/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Pagella/Monospace/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyrePagellaNonunicodeRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyrePagellaNonunicodeRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Pagella/NonUnicode/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Pagella/NonUnicode/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyrePagellaNormalRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyrePagellaNormalRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Pagella/Normal/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Pagella/Normal/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyrePagellaOperatorsRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyrePagellaOperatorsRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Pagella/Operators/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Pagella/Operators/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyrePagellaSansserifRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyrePagellaSansserifRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Pagella/SansSerif/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Pagella/SansSerif/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyrePagellaScriptRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyrePagellaScriptRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Pagella/Script/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Pagella/Script/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyrePagellaShapesRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyrePagellaShapesRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Pagella/Shapes/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Pagella/Shapes/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyrePagellaSize1RegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyrePagellaSize1RegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Pagella/Size1/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Pagella/Size1/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyrePagellaSize2RegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyrePagellaSize2RegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Pagella/Size2/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Pagella/Size2/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyrePagellaSize3RegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyrePagellaSize3RegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Pagella/Size3/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Pagella/Size3/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyrePagellaSize4RegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyrePagellaSize4RegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Pagella/Size4/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Pagella/Size4/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyrePagellaSize5RegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyrePagellaSize5RegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Pagella/Size5/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Pagella/Size5/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyrePagellaSize6RegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyrePagellaSize6RegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Pagella/Size6/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Pagella/Size6/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyrePagellaSymbolsRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyrePagellaSymbolsRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Pagella/Symbols/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Pagella/Symbols/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyrePagellaVariantsRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyrePagellaVariantsRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Pagella/Variants/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Pagella/Variants/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyrePagellaFontdataExtraJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyrePagellaFontdataExtraJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Pagella/fontdata-extra.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Pagella/fontdata-extra.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyrePagellaFontdataJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyrePagellaFontdataJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Pagella/fontdata.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Pagella/fontdata.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyreTermesAlphabetsRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyreTermesAlphabetsRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Termes/Alphabets/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Termes/Alphabets/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyreTermesArrowsRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyreTermesArrowsRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Termes/Arrows/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Termes/Arrows/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyreTermesDoublestruckRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyreTermesDoublestruckRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Termes/DoubleStruck/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Termes/DoubleStruck/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyreTermesFrakturRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyreTermesFrakturRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Termes/Fraktur/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Termes/Fraktur/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyreTermesLatinRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyreTermesLatinRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Termes/Latin/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Termes/Latin/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyreTermesMainRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyreTermesMainRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Termes/Main/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Termes/Main/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyreTermesMarksRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyreTermesMarksRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Termes/Marks/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Termes/Marks/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyreTermesMiscRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyreTermesMiscRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Termes/Misc/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Termes/Misc/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyreTermesMonospaceRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyreTermesMonospaceRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Termes/Monospace/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Termes/Monospace/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyreTermesNonunicodeRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyreTermesNonunicodeRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Termes/NonUnicode/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Termes/NonUnicode/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyreTermesNormalRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyreTermesNormalRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Termes/Normal/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Termes/Normal/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyreTermesOperatorsRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyreTermesOperatorsRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Termes/Operators/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Termes/Operators/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyreTermesSansserifRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyreTermesSansserifRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Termes/SansSerif/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Termes/SansSerif/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyreTermesScriptRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyreTermesScriptRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Termes/Script/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Termes/Script/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyreTermesShapesRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyreTermesShapesRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Termes/Shapes/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Termes/Shapes/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyreTermesSize1RegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyreTermesSize1RegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Termes/Size1/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Termes/Size1/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyreTermesSize2RegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyreTermesSize2RegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Termes/Size2/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Termes/Size2/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyreTermesSize3RegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyreTermesSize3RegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Termes/Size3/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Termes/Size3/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyreTermesSize4RegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyreTermesSize4RegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Termes/Size4/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Termes/Size4/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyreTermesSize5RegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyreTermesSize5RegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Termes/Size5/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Termes/Size5/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyreTermesSize6RegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyreTermesSize6RegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Termes/Size6/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Termes/Size6/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyreTermesSymbolsRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyreTermesSymbolsRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Termes/Symbols/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Termes/Symbols/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyreTermesVariantsRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyreTermesVariantsRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Termes/Variants/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Termes/Variants/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyreTermesFontdataExtraJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyreTermesFontdataExtraJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Termes/fontdata-extra.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Termes/fontdata-extra.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyreTermesFontdataJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyreTermesFontdataJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Termes/fontdata.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Termes/fontdata.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsLatinModernAlphabetsRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsLatinModernAlphabetsRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Latin-Modern/Alphabets/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Latin-Modern/Alphabets/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsLatinModernArrowsRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsLatinModernArrowsRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Latin-Modern/Arrows/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Latin-Modern/Arrows/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsLatinModernDoublestruckRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsLatinModernDoublestruckRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Latin-Modern/DoubleStruck/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Latin-Modern/DoubleStruck/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsLatinModernFrakturRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsLatinModernFrakturRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Latin-Modern/Fraktur/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Latin-Modern/Fraktur/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsLatinModernLatinRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsLatinModernLatinRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Latin-Modern/Latin/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Latin-Modern/Latin/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsLatinModernMainRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsLatinModernMainRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Latin-Modern/Main/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Latin-Modern/Main/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsLatinModernMarksRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsLatinModernMarksRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Latin-Modern/Marks/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Latin-Modern/Marks/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsLatinModernMiscRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsLatinModernMiscRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Latin-Modern/Misc/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Latin-Modern/Misc/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsLatinModernMonospaceRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsLatinModernMonospaceRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Latin-Modern/Monospace/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Latin-Modern/Monospace/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsLatinModernNonunicodeRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsLatinModernNonunicodeRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Latin-Modern/NonUnicode/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Latin-Modern/NonUnicode/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsLatinModernNormalRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsLatinModernNormalRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Latin-Modern/Normal/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Latin-Modern/Normal/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsLatinModernOperatorsRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsLatinModernOperatorsRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Latin-Modern/Operators/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Latin-Modern/Operators/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsLatinModernSansserifRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsLatinModernSansserifRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Latin-Modern/SansSerif/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Latin-Modern/SansSerif/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsLatinModernScriptRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsLatinModernScriptRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Latin-Modern/Script/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Latin-Modern/Script/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsLatinModernShapesRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsLatinModernShapesRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Latin-Modern/Shapes/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Latin-Modern/Shapes/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsLatinModernSize1RegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsLatinModernSize1RegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Latin-Modern/Size1/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Latin-Modern/Size1/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsLatinModernSize2RegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsLatinModernSize2RegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Latin-Modern/Size2/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Latin-Modern/Size2/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsLatinModernSize3RegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsLatinModernSize3RegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Latin-Modern/Size3/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Latin-Modern/Size3/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsLatinModernSize4RegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsLatinModernSize4RegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Latin-Modern/Size4/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Latin-Modern/Size4/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsLatinModernSize5RegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsLatinModernSize5RegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Latin-Modern/Size5/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Latin-Modern/Size5/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsLatinModernSize6RegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsLatinModernSize6RegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Latin-Modern/Size6/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Latin-Modern/Size6/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsLatinModernSize7RegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsLatinModernSize7RegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Latin-Modern/Size7/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Latin-Modern/Size7/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsLatinModernSymbolsRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsLatinModernSymbolsRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Latin-Modern/Symbols/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Latin-Modern/Symbols/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsLatinModernVariantsRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsLatinModernVariantsRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Latin-Modern/Variants/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Latin-Modern/Variants/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsLatinModernFontdataExtraJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsLatinModernFontdataExtraJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Latin-Modern/fontdata-extra.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Latin-Modern/fontdata-extra.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsLatinModernFontdataJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsLatinModernFontdataJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Latin-Modern/fontdata.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Latin-Modern/fontdata.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsNeoEulerAlphabetsRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsNeoEulerAlphabetsRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Neo-Euler/Alphabets/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Neo-Euler/Alphabets/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsNeoEulerArrowsRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsNeoEulerArrowsRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Neo-Euler/Arrows/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Neo-Euler/Arrows/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsNeoEulerFrakturRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsNeoEulerFrakturRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Neo-Euler/Fraktur/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Neo-Euler/Fraktur/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsNeoEulerMainRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsNeoEulerMainRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Neo-Euler/Main/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Neo-Euler/Main/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsNeoEulerMarksRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsNeoEulerMarksRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Neo-Euler/Marks/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Neo-Euler/Marks/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsNeoEulerNonunicodeRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsNeoEulerNonunicodeRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Neo-Euler/NonUnicode/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Neo-Euler/NonUnicode/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsNeoEulerNormalRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsNeoEulerNormalRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Neo-Euler/Normal/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Neo-Euler/Normal/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsNeoEulerOperatorsRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsNeoEulerOperatorsRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Neo-Euler/Operators/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Neo-Euler/Operators/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsNeoEulerScriptRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsNeoEulerScriptRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Neo-Euler/Script/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Neo-Euler/Script/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsNeoEulerShapesRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsNeoEulerShapesRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Neo-Euler/Shapes/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Neo-Euler/Shapes/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsNeoEulerSize1RegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsNeoEulerSize1RegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Neo-Euler/Size1/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Neo-Euler/Size1/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsNeoEulerSize2RegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsNeoEulerSize2RegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Neo-Euler/Size2/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Neo-Euler/Size2/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsNeoEulerSize3RegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsNeoEulerSize3RegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Neo-Euler/Size3/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Neo-Euler/Size3/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsNeoEulerSize4RegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsNeoEulerSize4RegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Neo-Euler/Size4/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Neo-Euler/Size4/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsNeoEulerSize5RegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsNeoEulerSize5RegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Neo-Euler/Size5/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Neo-Euler/Size5/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsNeoEulerSymbolsRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsNeoEulerSymbolsRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Neo-Euler/Symbols/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Neo-Euler/Symbols/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsNeoEulerVariantsRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsNeoEulerVariantsRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Neo-Euler/Variants/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Neo-Euler/Variants/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsNeoEulerFontdataExtraJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsNeoEulerFontdataExtraJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Neo-Euler/fontdata-extra.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Neo-Euler/fontdata-extra.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsNeoEulerFontdataJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsNeoEulerFontdataJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Neo-Euler/fontdata.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Neo-Euler/fontdata.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebAlphabetsBoldMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebAlphabetsBoldMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Alphabets/Bold/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Alphabets/Bold/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebAlphabetsBolditalicMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebAlphabetsBolditalicMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Alphabets/BoldItalic/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Alphabets/BoldItalic/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebAlphabetsItalicMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebAlphabetsItalicMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Alphabets/Italic/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Alphabets/Italic/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebAlphabetsRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebAlphabetsRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Alphabets/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Alphabets/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebArrowsBoldMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebArrowsBoldMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Arrows/Bold/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Arrows/Bold/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebArrowsRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebArrowsRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Arrows/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Arrows/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebDoublestruckBoldMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebDoublestruckBoldMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/DoubleStruck/Bold/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/DoubleStruck/Bold/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebDoublestruckBolditalicMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebDoublestruckBolditalicMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/DoubleStruck/BoldItalic/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/DoubleStruck/BoldItalic/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebDoublestruckItalicMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebDoublestruckItalicMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/DoubleStruck/Italic/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/DoubleStruck/Italic/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebDoublestruckRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebDoublestruckRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/DoubleStruck/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/DoubleStruck/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebFrakturBoldMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebFrakturBoldMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Fraktur/Bold/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Fraktur/Bold/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebFrakturRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebFrakturRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Fraktur/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Fraktur/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebLatinBoldMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebLatinBoldMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Latin/Bold/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Latin/Bold/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebLatinBolditalicMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebLatinBolditalicMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Latin/BoldItalic/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Latin/BoldItalic/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebLatinItalicMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebLatinItalicMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Latin/Italic/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Latin/Italic/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebLatinRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebLatinRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Latin/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Latin/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebMainBoldMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebMainBoldMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Main/Bold/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Main/Bold/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebMainBolditalicMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebMainBolditalicMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Main/BoldItalic/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Main/BoldItalic/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebMainItalicMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebMainItalicMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Main/Italic/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Main/Italic/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebMainRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebMainRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Main/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Main/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebMarksBoldMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebMarksBoldMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Marks/Bold/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Marks/Bold/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebMarksBolditalicMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebMarksBolditalicMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Marks/BoldItalic/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Marks/BoldItalic/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebMarksItalicMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebMarksItalicMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Marks/Italic/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Marks/Italic/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebMarksRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebMarksRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Marks/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Marks/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebMiscBoldMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebMiscBoldMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Misc/Bold/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Misc/Bold/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebMiscBolditalicMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebMiscBolditalicMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Misc/BoldItalic/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Misc/BoldItalic/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebMiscItalicMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebMiscItalicMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Misc/Italic/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Misc/Italic/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebMiscRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebMiscRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Misc/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Misc/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebMonospaceRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebMonospaceRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Monospace/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Monospace/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebNormalBoldMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebNormalBoldMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Normal/Bold/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Normal/Bold/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebNormalBolditalicMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebNormalBolditalicMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Normal/BoldItalic/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Normal/BoldItalic/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebNormalItalicMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebNormalItalicMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Normal/Italic/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Normal/Italic/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebOperatorsBoldMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebOperatorsBoldMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Operators/Bold/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Operators/Bold/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebOperatorsRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebOperatorsRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Operators/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Operators/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebSansserifBoldMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebSansserifBoldMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/SansSerif/Bold/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/SansSerif/Bold/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebSansserifBolditalicMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebSansserifBolditalicMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/SansSerif/BoldItalic/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/SansSerif/BoldItalic/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebSansserifItalicMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebSansserifItalicMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/SansSerif/Italic/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/SansSerif/Italic/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebSansserifRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebSansserifRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/SansSerif/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/SansSerif/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebScriptBolditalicMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebScriptBolditalicMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Script/BoldItalic/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Script/BoldItalic/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebScriptItalicMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebScriptItalicMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Script/Italic/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Script/Italic/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebScriptRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebScriptRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Script/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Script/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebShapesBoldMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebShapesBoldMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Shapes/Bold/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Shapes/Bold/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebShapesBolditalicMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebShapesBolditalicMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Shapes/BoldItalic/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Shapes/BoldItalic/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebShapesRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebShapesRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Shapes/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Shapes/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebSize1RegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebSize1RegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Size1/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Size1/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebSize2RegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebSize2RegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Size2/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Size2/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebSize3RegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebSize3RegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Size3/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Size3/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebSize4RegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebSize4RegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Size4/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Size4/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebSize5RegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebSize5RegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Size5/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Size5/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebSymbolsBoldMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebSymbolsBoldMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Symbols/Bold/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Symbols/Bold/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebSymbolsRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebSymbolsRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Symbols/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Symbols/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebVariantsBoldMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebVariantsBoldMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Variants/Bold/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Variants/Bold/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebVariantsBolditalicMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebVariantsBolditalicMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Variants/BoldItalic/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Variants/BoldItalic/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebVariantsItalicMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebVariantsItalicMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Variants/Italic/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Variants/Italic/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebVariantsRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebVariantsRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Variants/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Variants/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebFontdataExtraJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebFontdataExtraJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/fontdata-extra.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/fontdata-extra.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebFontdataJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebFontdataJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/fontdata.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/fontdata.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexAmsRegularArrowsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexAmsRegularArrowsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/AMS/Regular/Arrows.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/AMS/Regular/Arrows.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexAmsRegularBoxdrawingJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexAmsRegularBoxdrawingJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/AMS/Regular/BoxDrawing.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/AMS/Regular/BoxDrawing.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexAmsRegularCombdiacritmarksJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexAmsRegularCombdiacritmarksJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/AMS/Regular/CombDiacritMarks.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/AMS/Regular/CombDiacritMarks.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexAmsRegularDingbatsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexAmsRegularDingbatsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/AMS/Regular/Dingbats.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/AMS/Regular/Dingbats.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexAmsRegularEnclosedalphanumJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexAmsRegularEnclosedalphanumJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/AMS/Regular/EnclosedAlphanum.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/AMS/Regular/EnclosedAlphanum.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexAmsRegularGeneralpunctuationJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexAmsRegularGeneralpunctuationJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/AMS/Regular/GeneralPunctuation.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/AMS/Regular/GeneralPunctuation.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexAmsRegularGeometricshapesJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexAmsRegularGeometricshapesJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/AMS/Regular/GeometricShapes.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/AMS/Regular/GeometricShapes.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexAmsRegularGreekandcopticJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexAmsRegularGreekandcopticJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/AMS/Regular/GreekAndCoptic.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/AMS/Regular/GreekAndCoptic.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexAmsRegularLatin1supplementJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexAmsRegularLatin1supplementJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/AMS/Regular/Latin1Supplement.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/AMS/Regular/Latin1Supplement.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexAmsRegularLatinextendedaJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexAmsRegularLatinextendedaJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/AMS/Regular/LatinExtendedA.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/AMS/Regular/LatinExtendedA.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexAmsRegularLetterlikesymbolsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexAmsRegularLetterlikesymbolsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/AMS/Regular/LetterlikeSymbols.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/AMS/Regular/LetterlikeSymbols.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexAmsRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexAmsRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/AMS/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/AMS/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexAmsRegularMathoperatorsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexAmsRegularMathoperatorsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/AMS/Regular/MathOperators.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/AMS/Regular/MathOperators.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexAmsRegularMiscmathsymbolsbJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexAmsRegularMiscmathsymbolsbJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/AMS/Regular/MiscMathSymbolsB.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/AMS/Regular/MiscMathSymbolsB.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexAmsRegularMiscsymbolsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexAmsRegularMiscsymbolsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/AMS/Regular/MiscSymbols.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/AMS/Regular/MiscSymbols.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexAmsRegularMisctechnicalJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexAmsRegularMisctechnicalJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/AMS/Regular/MiscTechnical.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/AMS/Regular/MiscTechnical.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexAmsRegularPuaJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexAmsRegularPuaJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/AMS/Regular/PUA.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/AMS/Regular/PUA.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexAmsRegularSpacingmodlettersJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexAmsRegularSpacingmodlettersJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/AMS/Regular/SpacingModLetters.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/AMS/Regular/SpacingModLetters.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexAmsRegularSuppmathoperatorsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexAmsRegularSuppmathoperatorsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/AMS/Regular/SuppMathOperators.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/AMS/Regular/SuppMathOperators.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexCaligraphicBoldMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexCaligraphicBoldMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Caligraphic/Bold/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Caligraphic/Bold/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexCaligraphicRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexCaligraphicRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Caligraphic/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Caligraphic/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexFrakturBoldBasiclatinJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexFrakturBoldBasiclatinJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Fraktur/Bold/BasicLatin.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Fraktur/Bold/BasicLatin.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexFrakturBoldMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexFrakturBoldMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Fraktur/Bold/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Fraktur/Bold/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexFrakturBoldOtherJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexFrakturBoldOtherJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Fraktur/Bold/Other.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Fraktur/Bold/Other.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexFrakturBoldPuaJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexFrakturBoldPuaJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Fraktur/Bold/PUA.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Fraktur/Bold/PUA.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexFrakturRegularBasiclatinJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexFrakturRegularBasiclatinJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Fraktur/Regular/BasicLatin.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Fraktur/Regular/BasicLatin.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexFrakturRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexFrakturRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Fraktur/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Fraktur/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexFrakturRegularOtherJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexFrakturRegularOtherJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Fraktur/Regular/Other.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Fraktur/Regular/Other.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexFrakturRegularPuaJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexFrakturRegularPuaJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Fraktur/Regular/PUA.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Fraktur/Regular/PUA.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainBoldArrowsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainBoldArrowsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Bold/Arrows.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Bold/Arrows.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainBoldBasiclatinJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainBoldBasiclatinJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Bold/BasicLatin.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Bold/BasicLatin.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainBoldCombdiacritmarksJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainBoldCombdiacritmarksJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Bold/CombDiacritMarks.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Bold/CombDiacritMarks.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainBoldCombdiactforsymbolsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainBoldCombdiactforsymbolsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Bold/CombDiactForSymbols.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Bold/CombDiactForSymbols.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainBoldGeneralpunctuationJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainBoldGeneralpunctuationJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Bold/GeneralPunctuation.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Bold/GeneralPunctuation.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainBoldGeometricshapesJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainBoldGeometricshapesJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Bold/GeometricShapes.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Bold/GeometricShapes.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainBoldGreekandcopticJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainBoldGreekandcopticJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Bold/GreekAndCoptic.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Bold/GreekAndCoptic.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainBoldLatin1supplementJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainBoldLatin1supplementJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Bold/Latin1Supplement.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Bold/Latin1Supplement.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainBoldLatinextendedaJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainBoldLatinextendedaJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Bold/LatinExtendedA.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Bold/LatinExtendedA.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainBoldLatinextendedbJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainBoldLatinextendedbJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Bold/LatinExtendedB.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Bold/LatinExtendedB.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainBoldLetterlikesymbolsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainBoldLetterlikesymbolsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Bold/LetterlikeSymbols.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Bold/LetterlikeSymbols.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainBoldMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainBoldMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Bold/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Bold/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainBoldMathoperatorsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainBoldMathoperatorsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Bold/MathOperators.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Bold/MathOperators.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainBoldMiscmathsymbolsaJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainBoldMiscmathsymbolsaJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Bold/MiscMathSymbolsA.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Bold/MiscMathSymbolsA.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainBoldMiscsymbolsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainBoldMiscsymbolsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Bold/MiscSymbols.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Bold/MiscSymbols.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainBoldMisctechnicalJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainBoldMisctechnicalJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Bold/MiscTechnical.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Bold/MiscTechnical.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainBoldSpacingmodlettersJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainBoldSpacingmodlettersJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Bold/SpacingModLetters.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Bold/SpacingModLetters.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainBoldSuppmathoperatorsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainBoldSuppmathoperatorsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Bold/SuppMathOperators.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Bold/SuppMathOperators.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainBoldSupplementalarrowsaJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainBoldSupplementalarrowsaJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Bold/SupplementalArrowsA.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Bold/SupplementalArrowsA.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainItalicBasiclatinJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainItalicBasiclatinJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Italic/BasicLatin.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Italic/BasicLatin.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainItalicCombdiacritmarksJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainItalicCombdiacritmarksJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Italic/CombDiacritMarks.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Italic/CombDiacritMarks.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainItalicGeneralpunctuationJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainItalicGeneralpunctuationJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Italic/GeneralPunctuation.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Italic/GeneralPunctuation.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainItalicGreekandcopticJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainItalicGreekandcopticJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Italic/GreekAndCoptic.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Italic/GreekAndCoptic.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainItalicLatinextendedaJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainItalicLatinextendedaJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Italic/LatinExtendedA.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Italic/LatinExtendedA.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainItalicLatinextendedbJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainItalicLatinextendedbJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Italic/LatinExtendedB.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Italic/LatinExtendedB.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainItalicLetterlikesymbolsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainItalicLetterlikesymbolsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Italic/LetterlikeSymbols.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Italic/LetterlikeSymbols.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainItalicMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainItalicMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Italic/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Italic/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainItalicMathoperatorsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainItalicMathoperatorsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Italic/MathOperators.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Italic/MathOperators.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainRegularBasiclatinJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainRegularBasiclatinJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Regular/BasicLatin.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Regular/BasicLatin.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainRegularCombdiacritmarksJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainRegularCombdiacritmarksJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Regular/CombDiacritMarks.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Regular/CombDiacritMarks.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainRegularGeometricshapesJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainRegularGeometricshapesJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Regular/GeometricShapes.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Regular/GeometricShapes.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainRegularGreekandcopticJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainRegularGreekandcopticJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Regular/GreekAndCoptic.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Regular/GreekAndCoptic.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainRegularLatinextendedaJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainRegularLatinextendedaJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Regular/LatinExtendedA.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Regular/LatinExtendedA.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainRegularLatinextendedbJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainRegularLatinextendedbJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Regular/LatinExtendedB.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Regular/LatinExtendedB.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainRegularLetterlikesymbolsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainRegularLetterlikesymbolsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Regular/LetterlikeSymbols.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Regular/LetterlikeSymbols.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainRegularMathoperatorsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainRegularMathoperatorsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Regular/MathOperators.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Regular/MathOperators.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainRegularMiscsymbolsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainRegularMiscsymbolsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Regular/MiscSymbols.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Regular/MiscSymbols.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainRegularSpacingmodlettersJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainRegularSpacingmodlettersJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Regular/SpacingModLetters.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Regular/SpacingModLetters.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainRegularSuppmathoperatorsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainRegularSuppmathoperatorsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Regular/SuppMathOperators.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Regular/SuppMathOperators.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMathBolditalicMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMathBolditalicMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Math/BoldItalic/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Math/BoldItalic/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMathItalicMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMathItalicMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Math/Italic/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Math/Italic/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexSansserifBoldBasiclatinJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexSansserifBoldBasiclatinJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/SansSerif/Bold/BasicLatin.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/SansSerif/Bold/BasicLatin.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexSansserifBoldCombdiacritmarksJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexSansserifBoldCombdiacritmarksJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/SansSerif/Bold/CombDiacritMarks.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/SansSerif/Bold/CombDiacritMarks.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexSansserifBoldMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexSansserifBoldMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/SansSerif/Bold/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/SansSerif/Bold/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexSansserifBoldOtherJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexSansserifBoldOtherJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/SansSerif/Bold/Other.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/SansSerif/Bold/Other.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexSansserifItalicBasiclatinJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexSansserifItalicBasiclatinJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/SansSerif/Italic/BasicLatin.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/SansSerif/Italic/BasicLatin.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexSansserifItalicCombdiacritmarksJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexSansserifItalicCombdiacritmarksJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/SansSerif/Italic/CombDiacritMarks.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/SansSerif/Italic/CombDiacritMarks.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexSansserifItalicMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexSansserifItalicMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/SansSerif/Italic/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/SansSerif/Italic/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexSansserifItalicOtherJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexSansserifItalicOtherJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/SansSerif/Italic/Other.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/SansSerif/Italic/Other.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexSansserifRegularBasiclatinJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexSansserifRegularBasiclatinJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/SansSerif/Regular/BasicLatin.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/SansSerif/Regular/BasicLatin.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexSansserifRegularCombdiacritmarksJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexSansserifRegularCombdiacritmarksJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/SansSerif/Regular/CombDiacritMarks.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/SansSerif/Regular/CombDiacritMarks.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexSansserifRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexSansserifRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/SansSerif/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/SansSerif/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexSansserifRegularOtherJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexSansserifRegularOtherJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/SansSerif/Regular/Other.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/SansSerif/Regular/Other.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexScriptRegularBasiclatinJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexScriptRegularBasiclatinJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Script/Regular/BasicLatin.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Script/Regular/BasicLatin.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexScriptRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexScriptRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Script/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Script/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexSize1RegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexSize1RegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Size1/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Size1/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexSize2RegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexSize2RegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Size2/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Size2/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexSize3RegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexSize3RegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Size3/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Size3/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexSize4RegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexSize4RegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Size4/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Size4/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexTypewriterRegularBasiclatinJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexTypewriterRegularBasiclatinJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Typewriter/Regular/BasicLatin.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Typewriter/Regular/BasicLatin.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexTypewriterRegularCombdiacritmarksJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexTypewriterRegularCombdiacritmarksJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Typewriter/Regular/CombDiacritMarks.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Typewriter/Regular/CombDiacritMarks.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexTypewriterRegularMainJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexTypewriterRegularMainJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Typewriter/Regular/Main.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Typewriter/Regular/Main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexTypewriterRegularOtherJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexTypewriterRegularOtherJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Typewriter/Regular/Other.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Typewriter/Regular/Other.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexFontdataExtraJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexFontdataExtraJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/fontdata-extra.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/fontdata-extra.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexFontdataJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexFontdataJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/fontdata.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/fontdata.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgJaxJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgJaxJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/jax/output/SVG/jax.js"
	name := "../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/jax.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationAstFontwarningsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationAstFontwarningsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/ast/FontWarnings.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/ast/FontWarnings.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationAstHtmlCssJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationAstHtmlCssJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/ast/HTML-CSS.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/ast/HTML-CSS.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationAstHelpdialogJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationAstHelpdialogJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/ast/HelpDialog.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/ast/HelpDialog.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationAstMathmlJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationAstMathmlJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/ast/MathML.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/ast/MathML.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationAstMathmenuJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationAstMathmenuJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/ast/MathMenu.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/ast/MathMenu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationAstTexJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationAstTexJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/ast/TeX.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/ast/TeX.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationAstAstJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationAstAstJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/ast/ast.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/ast/ast.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationBccFontwarningsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationBccFontwarningsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/bcc/FontWarnings.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/bcc/FontWarnings.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationBccHtmlCssJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationBccHtmlCssJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/bcc/HTML-CSS.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/bcc/HTML-CSS.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationBccHelpdialogJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationBccHelpdialogJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/bcc/HelpDialog.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/bcc/HelpDialog.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationBccMathmlJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationBccMathmlJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/bcc/MathML.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/bcc/MathML.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationBccMathmenuJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationBccMathmenuJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/bcc/MathMenu.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/bcc/MathMenu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationBccTexJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationBccTexJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/bcc/TeX.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/bcc/TeX.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationBccBccJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationBccBccJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/bcc/bcc.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/bcc/bcc.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationBgFontwarningsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationBgFontwarningsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/bg/FontWarnings.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/bg/FontWarnings.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationBgHtmlCssJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationBgHtmlCssJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/bg/HTML-CSS.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/bg/HTML-CSS.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationBgHelpdialogJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationBgHelpdialogJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/bg/HelpDialog.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/bg/HelpDialog.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationBgMathmlJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationBgMathmlJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/bg/MathML.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/bg/MathML.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationBgMathmenuJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationBgMathmenuJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/bg/MathMenu.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/bg/MathMenu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationBgTexJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationBgTexJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/bg/TeX.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/bg/TeX.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationBgBgJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationBgBgJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/bg/bg.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/bg/bg.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationBrFontwarningsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationBrFontwarningsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/br/FontWarnings.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/br/FontWarnings.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationBrHtmlCssJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationBrHtmlCssJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/br/HTML-CSS.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/br/HTML-CSS.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationBrHelpdialogJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationBrHelpdialogJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/br/HelpDialog.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/br/HelpDialog.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationBrMathmlJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationBrMathmlJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/br/MathML.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/br/MathML.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationBrMathmenuJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationBrMathmenuJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/br/MathMenu.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/br/MathMenu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationBrTexJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationBrTexJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/br/TeX.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/br/TeX.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationBrBrJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationBrBrJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/br/br.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/br/br.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCaFontwarningsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCaFontwarningsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/ca/FontWarnings.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/ca/FontWarnings.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCaHtmlCssJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCaHtmlCssJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/ca/HTML-CSS.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/ca/HTML-CSS.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCaHelpdialogJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCaHelpdialogJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/ca/HelpDialog.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/ca/HelpDialog.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCaMathmlJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCaMathmlJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/ca/MathML.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/ca/MathML.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCaMathmenuJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCaMathmenuJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/ca/MathMenu.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/ca/MathMenu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCaTexJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCaTexJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/ca/TeX.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/ca/TeX.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCaCaJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCaCaJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/ca/ca.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/ca/ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCdoFontwarningsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCdoFontwarningsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/cdo/FontWarnings.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/cdo/FontWarnings.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCdoHtmlCssJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCdoHtmlCssJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/cdo/HTML-CSS.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/cdo/HTML-CSS.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCdoHelpdialogJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCdoHelpdialogJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/cdo/HelpDialog.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/cdo/HelpDialog.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCdoMathmlJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCdoMathmlJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/cdo/MathML.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/cdo/MathML.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCdoMathmenuJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCdoMathmenuJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/cdo/MathMenu.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/cdo/MathMenu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCdoTexJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCdoTexJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/cdo/TeX.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/cdo/TeX.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCdoCdoJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCdoCdoJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/cdo/cdo.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/cdo/cdo.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCeFontwarningsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCeFontwarningsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/ce/FontWarnings.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/ce/FontWarnings.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCeHtmlCssJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCeHtmlCssJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/ce/HTML-CSS.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/ce/HTML-CSS.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCeHelpdialogJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCeHelpdialogJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/ce/HelpDialog.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/ce/HelpDialog.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCeMathmlJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCeMathmlJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/ce/MathML.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/ce/MathML.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCeMathmenuJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCeMathmenuJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/ce/MathMenu.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/ce/MathMenu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCeTexJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCeTexJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/ce/TeX.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/ce/TeX.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCeCeJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCeCeJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/ce/ce.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/ce/ce.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCsFontwarningsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCsFontwarningsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/cs/FontWarnings.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/cs/FontWarnings.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCsHtmlCssJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCsHtmlCssJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/cs/HTML-CSS.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/cs/HTML-CSS.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCsHelpdialogJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCsHelpdialogJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/cs/HelpDialog.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/cs/HelpDialog.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCsMathmlJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCsMathmlJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/cs/MathML.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/cs/MathML.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCsMathmenuJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCsMathmenuJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/cs/MathMenu.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/cs/MathMenu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCsTexJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCsTexJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/cs/TeX.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/cs/TeX.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCsCsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCsCsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/cs/cs.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/cs/cs.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCyFontwarningsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCyFontwarningsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/cy/FontWarnings.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/cy/FontWarnings.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCyHtmlCssJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCyHtmlCssJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/cy/HTML-CSS.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/cy/HTML-CSS.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCyHelpdialogJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCyHelpdialogJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/cy/HelpDialog.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/cy/HelpDialog.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCyMathmlJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCyMathmlJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/cy/MathML.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/cy/MathML.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCyMathmenuJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCyMathmenuJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/cy/MathMenu.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/cy/MathMenu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCyTexJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCyTexJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/cy/TeX.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/cy/TeX.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCyCyJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCyCyJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/cy/cy.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/cy/cy.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationDaFontwarningsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationDaFontwarningsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/da/FontWarnings.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/da/FontWarnings.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationDaHtmlCssJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationDaHtmlCssJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/da/HTML-CSS.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/da/HTML-CSS.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationDaHelpdialogJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationDaHelpdialogJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/da/HelpDialog.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/da/HelpDialog.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationDaMathmlJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationDaMathmlJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/da/MathML.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/da/MathML.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationDaMathmenuJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationDaMathmenuJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/da/MathMenu.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/da/MathMenu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationDaTexJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationDaTexJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/da/TeX.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/da/TeX.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationDaDaJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationDaDaJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/da/da.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/da/da.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationDeFontwarningsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationDeFontwarningsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/de/FontWarnings.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/de/FontWarnings.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationDeHtmlCssJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationDeHtmlCssJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/de/HTML-CSS.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/de/HTML-CSS.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationDeHelpdialogJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationDeHelpdialogJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/de/HelpDialog.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/de/HelpDialog.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationDeMathmlJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationDeMathmlJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/de/MathML.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/de/MathML.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationDeMathmenuJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationDeMathmenuJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/de/MathMenu.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/de/MathMenu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationDeTexJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationDeTexJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/de/TeX.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/de/TeX.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationDeDeJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationDeDeJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/de/de.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/de/de.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationEnFontwarningsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationEnFontwarningsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/en/FontWarnings.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/en/FontWarnings.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationEnHtmlCssJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationEnHtmlCssJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/en/HTML-CSS.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/en/HTML-CSS.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationEnHelpdialogJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationEnHelpdialogJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/en/HelpDialog.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/en/HelpDialog.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationEnMathmlJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationEnMathmlJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/en/MathML.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/en/MathML.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationEnMathmenuJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationEnMathmenuJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/en/MathMenu.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/en/MathMenu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationEnTexJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationEnTexJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/en/TeX.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/en/TeX.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationEnEnJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationEnEnJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/en/en.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/en/en.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationEoFontwarningsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationEoFontwarningsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/eo/FontWarnings.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/eo/FontWarnings.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationEoHtmlCssJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationEoHtmlCssJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/eo/HTML-CSS.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/eo/HTML-CSS.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationEoHelpdialogJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationEoHelpdialogJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/eo/HelpDialog.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/eo/HelpDialog.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationEoMathmlJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationEoMathmlJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/eo/MathML.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/eo/MathML.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationEoMathmenuJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationEoMathmenuJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/eo/MathMenu.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/eo/MathMenu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationEoTexJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationEoTexJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/eo/TeX.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/eo/TeX.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationEoEoJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationEoEoJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/eo/eo.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/eo/eo.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationEsFontwarningsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationEsFontwarningsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/es/FontWarnings.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/es/FontWarnings.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationEsHtmlCssJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationEsHtmlCssJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/es/HTML-CSS.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/es/HTML-CSS.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationEsHelpdialogJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationEsHelpdialogJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/es/HelpDialog.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/es/HelpDialog.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationEsMathmlJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationEsMathmlJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/es/MathML.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/es/MathML.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationEsMathmenuJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationEsMathmenuJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/es/MathMenu.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/es/MathMenu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationEsTexJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationEsTexJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/es/TeX.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/es/TeX.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationEsEsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationEsEsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/es/es.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/es/es.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationFaFontwarningsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationFaFontwarningsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/fa/FontWarnings.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/fa/FontWarnings.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationFaHtmlCssJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationFaHtmlCssJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/fa/HTML-CSS.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/fa/HTML-CSS.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationFaHelpdialogJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationFaHelpdialogJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/fa/HelpDialog.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/fa/HelpDialog.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationFaMathmlJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationFaMathmlJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/fa/MathML.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/fa/MathML.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationFaMathmenuJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationFaMathmenuJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/fa/MathMenu.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/fa/MathMenu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationFaTexJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationFaTexJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/fa/TeX.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/fa/TeX.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationFaFaJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationFaFaJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/fa/fa.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/fa/fa.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationFiFontwarningsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationFiFontwarningsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/fi/FontWarnings.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/fi/FontWarnings.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationFiHtmlCssJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationFiHtmlCssJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/fi/HTML-CSS.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/fi/HTML-CSS.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationFiHelpdialogJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationFiHelpdialogJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/fi/HelpDialog.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/fi/HelpDialog.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationFiMathmlJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationFiMathmlJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/fi/MathML.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/fi/MathML.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationFiMathmenuJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationFiMathmenuJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/fi/MathMenu.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/fi/MathMenu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationFiTexJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationFiTexJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/fi/TeX.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/fi/TeX.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationFiFiJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationFiFiJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/fi/fi.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/fi/fi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationFrFontwarningsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationFrFontwarningsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/fr/FontWarnings.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/fr/FontWarnings.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationFrHtmlCssJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationFrHtmlCssJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/fr/HTML-CSS.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/fr/HTML-CSS.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationFrHelpdialogJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationFrHelpdialogJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/fr/HelpDialog.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/fr/HelpDialog.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationFrMathmlJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationFrMathmlJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/fr/MathML.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/fr/MathML.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationFrMathmenuJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationFrMathmenuJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/fr/MathMenu.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/fr/MathMenu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationFrTexJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationFrTexJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/fr/TeX.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/fr/TeX.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationFrFrJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationFrFrJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/fr/fr.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/fr/fr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationGlFontwarningsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationGlFontwarningsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/gl/FontWarnings.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/gl/FontWarnings.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationGlHtmlCssJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationGlHtmlCssJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/gl/HTML-CSS.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/gl/HTML-CSS.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationGlHelpdialogJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationGlHelpdialogJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/gl/HelpDialog.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/gl/HelpDialog.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationGlMathmlJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationGlMathmlJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/gl/MathML.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/gl/MathML.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationGlMathmenuJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationGlMathmenuJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/gl/MathMenu.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/gl/MathMenu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationGlTexJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationGlTexJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/gl/TeX.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/gl/TeX.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationGlGlJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationGlGlJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/gl/gl.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/gl/gl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationHeFontwarningsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationHeFontwarningsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/he/FontWarnings.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/he/FontWarnings.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationHeHtmlCssJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationHeHtmlCssJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/he/HTML-CSS.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/he/HTML-CSS.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationHeHelpdialogJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationHeHelpdialogJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/he/HelpDialog.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/he/HelpDialog.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationHeMathmlJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationHeMathmlJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/he/MathML.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/he/MathML.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationHeMathmenuJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationHeMathmenuJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/he/MathMenu.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/he/MathMenu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationHeTexJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationHeTexJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/he/TeX.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/he/TeX.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationHeHeJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationHeHeJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/he/he.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/he/he.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationIaFontwarningsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationIaFontwarningsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/ia/FontWarnings.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/ia/FontWarnings.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationIaHtmlCssJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationIaHtmlCssJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/ia/HTML-CSS.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/ia/HTML-CSS.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationIaHelpdialogJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationIaHelpdialogJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/ia/HelpDialog.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/ia/HelpDialog.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationIaMathmlJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationIaMathmlJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/ia/MathML.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/ia/MathML.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationIaMathmenuJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationIaMathmenuJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/ia/MathMenu.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/ia/MathMenu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationIaTexJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationIaTexJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/ia/TeX.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/ia/TeX.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationIaIaJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationIaIaJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/ia/ia.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/ia/ia.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationItFontwarningsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationItFontwarningsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/it/FontWarnings.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/it/FontWarnings.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationItHtmlCssJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationItHtmlCssJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/it/HTML-CSS.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/it/HTML-CSS.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationItHelpdialogJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationItHelpdialogJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/it/HelpDialog.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/it/HelpDialog.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationItMathmlJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationItMathmlJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/it/MathML.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/it/MathML.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationItMathmenuJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationItMathmenuJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/it/MathMenu.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/it/MathMenu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationItTexJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationItTexJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/it/TeX.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/it/TeX.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationItItJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationItItJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/it/it.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/it/it.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationJaFontwarningsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationJaFontwarningsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/ja/FontWarnings.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/ja/FontWarnings.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationJaHtmlCssJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationJaHtmlCssJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/ja/HTML-CSS.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/ja/HTML-CSS.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationJaHelpdialogJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationJaHelpdialogJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/ja/HelpDialog.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/ja/HelpDialog.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationJaMathmlJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationJaMathmlJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/ja/MathML.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/ja/MathML.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationJaMathmenuJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationJaMathmenuJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/ja/MathMenu.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/ja/MathMenu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationJaTexJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationJaTexJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/ja/TeX.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/ja/TeX.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationJaJaJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationJaJaJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/ja/ja.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/ja/ja.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationKnFontwarningsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationKnFontwarningsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/kn/FontWarnings.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/kn/FontWarnings.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationKnHtmlCssJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationKnHtmlCssJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/kn/HTML-CSS.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/kn/HTML-CSS.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationKnHelpdialogJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationKnHelpdialogJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/kn/HelpDialog.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/kn/HelpDialog.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationKnMathmlJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationKnMathmlJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/kn/MathML.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/kn/MathML.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationKnMathmenuJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationKnMathmenuJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/kn/MathMenu.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/kn/MathMenu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationKnTexJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationKnTexJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/kn/TeX.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/kn/TeX.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationKnKnJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationKnKnJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/kn/kn.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/kn/kn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationKoFontwarningsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationKoFontwarningsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/ko/FontWarnings.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/ko/FontWarnings.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationKoHtmlCssJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationKoHtmlCssJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/ko/HTML-CSS.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/ko/HTML-CSS.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationKoHelpdialogJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationKoHelpdialogJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/ko/HelpDialog.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/ko/HelpDialog.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationKoMathmlJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationKoMathmlJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/ko/MathML.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/ko/MathML.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationKoMathmenuJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationKoMathmenuJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/ko/MathMenu.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/ko/MathMenu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationKoTexJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationKoTexJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/ko/TeX.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/ko/TeX.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationKoKoJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationKoKoJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/ko/ko.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/ko/ko.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationLbFontwarningsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationLbFontwarningsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/lb/FontWarnings.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/lb/FontWarnings.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationLbHtmlCssJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationLbHtmlCssJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/lb/HTML-CSS.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/lb/HTML-CSS.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationLbHelpdialogJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationLbHelpdialogJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/lb/HelpDialog.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/lb/HelpDialog.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationLbMathmlJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationLbMathmlJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/lb/MathML.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/lb/MathML.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationLbMathmenuJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationLbMathmenuJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/lb/MathMenu.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/lb/MathMenu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationLbTexJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationLbTexJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/lb/TeX.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/lb/TeX.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationLbLbJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationLbLbJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/lb/lb.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/lb/lb.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationLkiFontwarningsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationLkiFontwarningsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/lki/FontWarnings.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/lki/FontWarnings.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationLkiHtmlCssJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationLkiHtmlCssJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/lki/HTML-CSS.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/lki/HTML-CSS.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationLkiHelpdialogJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationLkiHelpdialogJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/lki/HelpDialog.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/lki/HelpDialog.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationLkiMathmlJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationLkiMathmlJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/lki/MathML.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/lki/MathML.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationLkiMathmenuJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationLkiMathmenuJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/lki/MathMenu.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/lki/MathMenu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationLkiTexJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationLkiTexJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/lki/TeX.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/lki/TeX.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationLkiLkiJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationLkiLkiJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/lki/lki.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/lki/lki.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationLtFontwarningsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationLtFontwarningsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/lt/FontWarnings.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/lt/FontWarnings.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationLtHtmlCssJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationLtHtmlCssJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/lt/HTML-CSS.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/lt/HTML-CSS.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationLtHelpdialogJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationLtHelpdialogJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/lt/HelpDialog.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/lt/HelpDialog.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationLtMathmlJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationLtMathmlJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/lt/MathML.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/lt/MathML.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationLtMathmenuJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationLtMathmenuJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/lt/MathMenu.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/lt/MathMenu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationLtTexJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationLtTexJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/lt/TeX.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/lt/TeX.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationLtLtJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationLtLtJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/lt/lt.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/lt/lt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationMkFontwarningsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationMkFontwarningsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/mk/FontWarnings.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/mk/FontWarnings.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationMkHtmlCssJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationMkHtmlCssJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/mk/HTML-CSS.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/mk/HTML-CSS.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationMkHelpdialogJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationMkHelpdialogJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/mk/HelpDialog.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/mk/HelpDialog.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationMkMathmlJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationMkMathmlJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/mk/MathML.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/mk/MathML.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationMkMathmenuJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationMkMathmenuJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/mk/MathMenu.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/mk/MathMenu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationMkTexJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationMkTexJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/mk/TeX.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/mk/TeX.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationMkMkJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationMkMkJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/mk/mk.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/mk/mk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationNlFontwarningsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationNlFontwarningsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/nl/FontWarnings.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/nl/FontWarnings.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationNlHtmlCssJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationNlHtmlCssJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/nl/HTML-CSS.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/nl/HTML-CSS.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationNlHelpdialogJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationNlHelpdialogJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/nl/HelpDialog.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/nl/HelpDialog.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationNlMathmlJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationNlMathmlJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/nl/MathML.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/nl/MathML.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationNlMathmenuJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationNlMathmenuJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/nl/MathMenu.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/nl/MathMenu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationNlTexJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationNlTexJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/nl/TeX.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/nl/TeX.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationNlNlJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationNlNlJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/nl/nl.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/nl/nl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationOcFontwarningsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationOcFontwarningsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/oc/FontWarnings.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/oc/FontWarnings.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationOcHtmlCssJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationOcHtmlCssJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/oc/HTML-CSS.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/oc/HTML-CSS.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationOcHelpdialogJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationOcHelpdialogJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/oc/HelpDialog.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/oc/HelpDialog.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationOcMathmlJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationOcMathmlJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/oc/MathML.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/oc/MathML.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationOcMathmenuJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationOcMathmenuJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/oc/MathMenu.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/oc/MathMenu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationOcTexJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationOcTexJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/oc/TeX.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/oc/TeX.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationOcOcJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationOcOcJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/oc/oc.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/oc/oc.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationPlFontwarningsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationPlFontwarningsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/pl/FontWarnings.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/pl/FontWarnings.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationPlHtmlCssJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationPlHtmlCssJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/pl/HTML-CSS.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/pl/HTML-CSS.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationPlHelpdialogJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationPlHelpdialogJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/pl/HelpDialog.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/pl/HelpDialog.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationPlMathmlJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationPlMathmlJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/pl/MathML.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/pl/MathML.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationPlMathmenuJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationPlMathmenuJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/pl/MathMenu.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/pl/MathMenu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationPlTexJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationPlTexJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/pl/TeX.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/pl/TeX.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationPlPlJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationPlPlJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/pl/pl.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/pl/pl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationPtFontwarningsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationPtFontwarningsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/pt/FontWarnings.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/pt/FontWarnings.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationPtHtmlCssJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationPtHtmlCssJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/pt/HTML-CSS.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/pt/HTML-CSS.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationPtHelpdialogJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationPtHelpdialogJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/pt/HelpDialog.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/pt/HelpDialog.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationPtMathmlJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationPtMathmlJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/pt/MathML.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/pt/MathML.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationPtMathmenuJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationPtMathmenuJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/pt/MathMenu.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/pt/MathMenu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationPtTexJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationPtTexJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/pt/TeX.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/pt/TeX.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationPtPtJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationPtPtJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/pt/pt.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/pt/pt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationPtBrFontwarningsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationPtBrFontwarningsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/pt-br/FontWarnings.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/pt-br/FontWarnings.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationPtBrHtmlCssJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationPtBrHtmlCssJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/pt-br/HTML-CSS.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/pt-br/HTML-CSS.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationPtBrHelpdialogJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationPtBrHelpdialogJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/pt-br/HelpDialog.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/pt-br/HelpDialog.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationPtBrMathmlJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationPtBrMathmlJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/pt-br/MathML.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/pt-br/MathML.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationPtBrMathmenuJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationPtBrMathmenuJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/pt-br/MathMenu.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/pt-br/MathMenu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationPtBrTexJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationPtBrTexJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/pt-br/TeX.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/pt-br/TeX.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationPtBrPtBrJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationPtBrPtBrJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/pt-br/pt-br.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/pt-br/pt-br.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationQqqFontwarningsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationQqqFontwarningsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/qqq/FontWarnings.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/qqq/FontWarnings.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationQqqHtmlCssJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationQqqHtmlCssJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/qqq/HTML-CSS.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/qqq/HTML-CSS.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationQqqHelpdialogJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationQqqHelpdialogJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/qqq/HelpDialog.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/qqq/HelpDialog.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationQqqMathmlJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationQqqMathmlJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/qqq/MathML.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/qqq/MathML.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationQqqMathmenuJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationQqqMathmenuJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/qqq/MathMenu.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/qqq/MathMenu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationQqqTexJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationQqqTexJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/qqq/TeX.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/qqq/TeX.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationQqqQqqJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationQqqQqqJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/qqq/qqq.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/qqq/qqq.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationRuFontwarningsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationRuFontwarningsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/ru/FontWarnings.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/ru/FontWarnings.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationRuHtmlCssJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationRuHtmlCssJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/ru/HTML-CSS.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/ru/HTML-CSS.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationRuHelpdialogJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationRuHelpdialogJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/ru/HelpDialog.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/ru/HelpDialog.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationRuMathmlJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationRuMathmlJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/ru/MathML.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/ru/MathML.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationRuMathmenuJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationRuMathmenuJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/ru/MathMenu.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/ru/MathMenu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationRuTexJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationRuTexJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/ru/TeX.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/ru/TeX.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationRuRuJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationRuRuJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/ru/ru.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/ru/ru.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationScnFontwarningsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationScnFontwarningsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/scn/FontWarnings.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/scn/FontWarnings.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationScnHtmlCssJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationScnHtmlCssJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/scn/HTML-CSS.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/scn/HTML-CSS.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationScnHelpdialogJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationScnHelpdialogJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/scn/HelpDialog.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/scn/HelpDialog.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationScnMathmlJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationScnMathmlJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/scn/MathML.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/scn/MathML.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationScnMathmenuJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationScnMathmenuJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/scn/MathMenu.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/scn/MathMenu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationScnTexJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationScnTexJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/scn/TeX.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/scn/TeX.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationScnScnJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationScnScnJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/scn/scn.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/scn/scn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationScoFontwarningsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationScoFontwarningsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/sco/FontWarnings.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/sco/FontWarnings.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationScoHtmlCssJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationScoHtmlCssJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/sco/HTML-CSS.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/sco/HTML-CSS.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationScoHelpdialogJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationScoHelpdialogJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/sco/HelpDialog.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/sco/HelpDialog.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationScoMathmlJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationScoMathmlJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/sco/MathML.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/sco/MathML.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationScoMathmenuJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationScoMathmenuJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/sco/MathMenu.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/sco/MathMenu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationScoTexJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationScoTexJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/sco/TeX.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/sco/TeX.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationScoScoJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationScoScoJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/sco/sco.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/sco/sco.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationSlFontwarningsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationSlFontwarningsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/sl/FontWarnings.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/sl/FontWarnings.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationSlHtmlCssJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationSlHtmlCssJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/sl/HTML-CSS.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/sl/HTML-CSS.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationSlHelpdialogJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationSlHelpdialogJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/sl/HelpDialog.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/sl/HelpDialog.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationSlMathmlJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationSlMathmlJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/sl/MathML.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/sl/MathML.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationSlMathmenuJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationSlMathmenuJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/sl/MathMenu.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/sl/MathMenu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationSlTexJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationSlTexJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/sl/TeX.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/sl/TeX.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationSlSlJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationSlSlJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/sl/sl.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/sl/sl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationSvFontwarningsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationSvFontwarningsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/sv/FontWarnings.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/sv/FontWarnings.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationSvHtmlCssJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationSvHtmlCssJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/sv/HTML-CSS.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/sv/HTML-CSS.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationSvHelpdialogJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationSvHelpdialogJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/sv/HelpDialog.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/sv/HelpDialog.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationSvMathmlJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationSvMathmlJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/sv/MathML.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/sv/MathML.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationSvMathmenuJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationSvMathmenuJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/sv/MathMenu.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/sv/MathMenu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationSvTexJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationSvTexJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/sv/TeX.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/sv/TeX.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationSvSvJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationSvSvJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/sv/sv.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/sv/sv.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationTrFontwarningsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationTrFontwarningsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/tr/FontWarnings.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/tr/FontWarnings.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationTrHtmlCssJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationTrHtmlCssJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/tr/HTML-CSS.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/tr/HTML-CSS.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationTrHelpdialogJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationTrHelpdialogJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/tr/HelpDialog.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/tr/HelpDialog.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationTrMathmlJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationTrMathmlJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/tr/MathML.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/tr/MathML.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationTrMathmenuJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationTrMathmenuJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/tr/MathMenu.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/tr/MathMenu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationTrTexJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationTrTexJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/tr/TeX.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/tr/TeX.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationTrTrJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationTrTrJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/tr/tr.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/tr/tr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationUkFontwarningsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationUkFontwarningsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/uk/FontWarnings.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/uk/FontWarnings.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationUkHtmlCssJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationUkHtmlCssJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/uk/HTML-CSS.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/uk/HTML-CSS.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationUkHelpdialogJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationUkHelpdialogJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/uk/HelpDialog.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/uk/HelpDialog.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationUkMathmlJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationUkMathmlJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/uk/MathML.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/uk/MathML.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationUkMathmenuJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationUkMathmenuJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/uk/MathMenu.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/uk/MathMenu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationUkTexJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationUkTexJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/uk/TeX.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/uk/TeX.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationUkUkJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationUkUkJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/uk/uk.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/uk/uk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationViFontwarningsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationViFontwarningsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/vi/FontWarnings.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/vi/FontWarnings.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationViHtmlCssJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationViHtmlCssJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/vi/HTML-CSS.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/vi/HTML-CSS.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationViHelpdialogJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationViHelpdialogJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/vi/HelpDialog.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/vi/HelpDialog.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationViMathmlJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationViMathmlJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/vi/MathML.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/vi/MathML.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationViMathmenuJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationViMathmenuJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/vi/MathMenu.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/vi/MathMenu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationViTexJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationViTexJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/vi/TeX.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/vi/TeX.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationViViJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationViViJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/vi/vi.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/vi/vi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationZhHansFontwarningsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationZhHansFontwarningsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/zh-hans/FontWarnings.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/zh-hans/FontWarnings.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationZhHansHtmlCssJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationZhHansHtmlCssJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/zh-hans/HTML-CSS.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/zh-hans/HTML-CSS.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationZhHansHelpdialogJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationZhHansHelpdialogJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/zh-hans/HelpDialog.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/zh-hans/HelpDialog.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationZhHansMathmlJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationZhHansMathmlJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/zh-hans/MathML.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/zh-hans/MathML.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationZhHansMathmenuJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationZhHansMathmenuJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/zh-hans/MathMenu.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/zh-hans/MathMenu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationZhHansTexJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationZhHansTexJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/zh-hans/TeX.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/zh-hans/TeX.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationZhHansZhHansJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationZhHansZhHansJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/mathjax/localization/zh-hans/zh-hans.js"
	name := "../src/main/web/florence/js/third-party/mathjax/localization/zh-hans/zh-hans.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyReduxMinJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyReduxMinJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/redux.min.js"
	name := "../src/main/web/florence/js/third-party/redux.min.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartySweetalertMinJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartySweetalertMinJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/sweetalert.min.js"
	name := "../src/main/web/florence/js/third-party/sweetalert.min.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyTagItJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyTagItJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/tag-it.js"
	name := "../src/main/web/florence/js/third-party/tag-it.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyUnderscoreMinJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyUnderscoreMinJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/underscore-min.js"
	name := "../src/main/web/florence/js/third-party/underscore-min.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsThirdPartyUnderscoreMinMap reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsThirdPartyUnderscoreMinMap() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/third-party/underscore-min.map"
	name := "../src/main/web/florence/js/third-party/underscore-min.map"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsZebedeeApi_deletecollectionJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsZebedeeApi_deletecollectionJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/zebedee-api/_deleteCollection.js"
	name := "../src/main/web/florence/js/zebedee-api/_deleteCollection.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsZebedeeApi_deletecontentJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsZebedeeApi_deletecontentJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/zebedee-api/_deleteContent.js"
	name := "../src/main/web/florence/js/zebedee-api/_deleteContent.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsZebedeeApi_deleteequationJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsZebedeeApi_deleteequationJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/zebedee-api/_deleteEquation.js"
	name := "../src/main/web/florence/js/zebedee-api/_deleteEquation.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsZebedeeApi_getcollectionJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsZebedeeApi_getcollectionJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/zebedee-api/_getCollection.js"
	name := "../src/main/web/florence/js/zebedee-api/_getCollection.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsZebedeeApi_getpagedataJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsZebedeeApi_getpagedataJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/zebedee-api/_getPageData.js"
	name := "../src/main/web/florence/js/zebedee-api/_getPageData.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsZebedeeApi_getpageresourceJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsZebedeeApi_getpageresourceJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/zebedee-api/_getPageResource.js"
	name := "../src/main/web/florence/js/zebedee-api/_getPageResource.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsZebedeeApi_getteamsJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsZebedeeApi_getteamsJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/zebedee-api/_getTeams.js"
	name := "../src/main/web/florence/js/zebedee-api/_getTeams.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsZebedeeApi_getuserpermissionJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsZebedeeApi_getuserpermissionJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/zebedee-api/_getUserPermission.js"
	name := "../src/main/web/florence/js/zebedee-api/_getUserPermission.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsZebedeeApi_getusersJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsZebedeeApi_getusersJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/zebedee-api/_getUsers.js"
	name := "../src/main/web/florence/js/zebedee-api/_getUsers.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsZebedeeApi_movecontentJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsZebedeeApi_movecontentJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/zebedee-api/_moveContent.js"
	name := "../src/main/web/florence/js/zebedee-api/_moveContent.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsZebedeeApi_postpasswordJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsZebedeeApi_postpasswordJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/zebedee-api/_postPassword.js"
	name := "../src/main/web/florence/js/zebedee-api/_postPassword.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsZebedeeApi_postpermissionJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsZebedeeApi_postpermissionJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/zebedee-api/_postPermission.js"
	name := "../src/main/web/florence/js/zebedee-api/_postPermission.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceJsZebedeeApi_putcontentJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceJsZebedeeApi_putcontentJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/js/zebedee-api/_putContent.js"
	name := "../src/main/web/florence/js/zebedee-api/_putContent.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceManifestJson reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceManifestJson() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/manifest.json"
	name := "../src/main/web/florence/manifest.json"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorencePackageJson reads file data from disk. It returns an error on failure.
func SrcMainWebFlorencePackageJson() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/package.json"
	name := "../src/main/web/florence/package.json"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceScssComponents_accordionScss reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceScssComponents_accordionScss() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/scss/components/_accordion.scss"
	name := "../src/main/web/florence/scss/components/_accordion.scss"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceScssComponents_builderScss reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceScssComponents_builderScss() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/scss/components/_builder.scss"
	name := "../src/main/web/florence/scss/components/_builder.scss"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceScssComponents_iconsScss reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceScssComponents_iconsScss() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/scss/components/_icons.scss"
	name := "../src/main/web/florence/scss/components/_icons.scss"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceScssComponents_markdownEditorScss reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceScssComponents_markdownEditorScss() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/scss/components/_markdown-editor.scss"
	name := "../src/main/web/florence/scss/components/_markdown-editor.scss"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceScssComponents_networkStatusScss reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceScssComponents_networkStatusScss() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/scss/components/_network-status.scss"
	name := "../src/main/web/florence/scss/components/_network-status.scss"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceScssComponents_pageScss reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceScssComponents_pageScss() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/scss/components/_page.scss"
	name := "../src/main/web/florence/scss/components/_page.scss"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceScssComponents_sliderScss reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceScssComponents_sliderScss() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/scss/components/_slider.scss"
	name := "../src/main/web/florence/scss/components/_slider.scss"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceScssElements_buttonsScss reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceScssElements_buttonsScss() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/scss/elements/_buttons.scss"
	name := "../src/main/web/florence/scss/elements/_buttons.scss"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceScssElements_formsScss reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceScssElements_formsScss() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/scss/elements/_forms.scss"
	name := "../src/main/web/florence/scss/elements/_forms.scss"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceScssElements_inputsScss reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceScssElements_inputsScss() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/scss/elements/_inputs.scss"
	name := "../src/main/web/florence/scss/elements/_inputs.scss"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceScssElements_navScss reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceScssElements_navScss() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/scss/elements/_nav.scss"
	name := "../src/main/web/florence/scss/elements/_nav.scss"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceScssElements_tablesScss reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceScssElements_tablesScss() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/scss/elements/_tables.scss"
	name := "../src/main/web/florence/scss/elements/_tables.scss"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceScssElements_typographyScss reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceScssElements_typographyScss() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/scss/elements/_typography.scss"
	name := "../src/main/web/florence/scss/elements/_typography.scss"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceScssMainScss reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceScssMainScss() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/scss/main.scss"
	name := "../src/main/web/florence/scss/main.scss"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceScssPartials_baseScss reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceScssPartials_baseScss() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/scss/partials/_base.scss"
	name := "../src/main/web/florence/scss/partials/_base.scss"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceScssPartials_collectionsScss reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceScssPartials_collectionsScss() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/scss/partials/_collections.scss"
	name := "../src/main/web/florence/scss/partials/_collections.scss"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceScssPartials_colourPaletteScss reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceScssPartials_colourPaletteScss() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/scss/partials/_colour-palette.scss"
	name := "../src/main/web/florence/scss/partials/_colour-palette.scss"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceScssPartials_elementsScss reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceScssPartials_elementsScss() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/scss/partials/_elements.scss"
	name := "../src/main/web/florence/scss/partials/_elements.scss"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceScssPartials_fontsScss reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceScssPartials_fontsScss() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/scss/partials/_fonts.scss"
	name := "../src/main/web/florence/scss/partials/_fonts.scss"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceScssPartials_jquiScss reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceScssPartials_jquiScss() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/scss/partials/_jqui.scss"
	name := "../src/main/web/florence/scss/partials/_jqui.scss"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceScssPartials_publishScss reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceScssPartials_publishScss() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/scss/partials/_publish.scss"
	name := "../src/main/web/florence/scss/partials/_publish.scss"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceScssPartials_resetScss reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceScssPartials_resetScss() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/scss/partials/_reset.scss"
	name := "../src/main/web/florence/scss/partials/_reset.scss"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceScssPartials_shameScss reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceScssPartials_shameScss() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/scss/partials/_shame.scss"
	name := "../src/main/web/florence/scss/partials/_shame.scss"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceScssPartials_utilitiesScss reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceScssPartials_utilitiesScss() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/scss/partials/_utilities.scss"
	name := "../src/main/web/florence/scss/partials/_utilities.scss"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceScssPartials_workspaceScss reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceScssPartials_workspaceScss() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/scss/partials/_workspace.scss"
	name := "../src/main/web/florence/scss/partials/_workspace.scss"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceScssUtilities_displayScss reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceScssUtilities_displayScss() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/scss/utilities/_display.scss"
	name := "../src/main/web/florence/scss/utilities/_display.scss"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceScssUtilities_gridScss reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceScssUtilities_gridScss() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/scss/utilities/_grid.scss"
	name := "../src/main/web/florence/scss/utilities/_grid.scss"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceScssUtilities_marginScss reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceScssUtilities_marginScss() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/scss/utilities/_margin.scss"
	name := "../src/main/web/florence/scss/utilities/_margin.scss"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceScssUtilities_mixinsScss reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceScssUtilities_mixinsScss() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/scss/utilities/_mixins.scss"
	name := "../src/main/web/florence/scss/utilities/_mixins.scss"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceScssUtilities_paddingScss reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceScssUtilities_paddingScss() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/scss/utilities/_padding.scss"
	name := "../src/main/web/florence/scss/utilities/_padding.scss"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceScssUtilities_panelsScss reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceScssUtilities_panelsScss() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/scss/utilities/_panels.scss"
	name := "../src/main/web/florence/scss/utilities/_panels.scss"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceScssUtilities_utilitiesScss reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceScssUtilities_utilitiesScss() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/scss/utilities/_utilities.scss"
	name := "../src/main/web/florence/scss/utilities/_utilities.scss"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceServiceWorkerJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceServiceWorkerJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/service-worker.js"
	name := "../src/main/web/florence/service-worker.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceSpecDs_store reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceSpecDs_store() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/spec/.DS_Store"
	name := "../src/main/web/florence/spec/.DS_Store"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceSpecClassesFlorencespecJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceSpecClassesFlorencespecJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/spec/classes/FlorenceSpec.js"
	name := "../src/main/web/florence/spec/classes/FlorenceSpec.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceSpecClassesPathutilsspecJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceSpecClassesPathutilsspecJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/spec/classes/PathUtilsSpec.js"
	name := "../src/main/web/florence/spec/classes/PathUtilsSpec.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceSpecClassesStringutilsspecJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceSpecClassesStringutilsspecJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/spec/classes/StringUtilsSpec.js"
	name := "../src/main/web/florence/spec/classes/StringUtilsSpec.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceSpecSupportJasmineJson reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceSpecSupportJasmineJson() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/spec/support/jasmine.json"
	name := "../src/main/web/florence/spec/support/jasmine.json"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceTemplatesBlockmodalHandlebars reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceTemplatesBlockmodalHandlebars() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/templates/blockModal.handlebars"
	name := "../src/main/web/florence/templates/blockModal.handlebars"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceTemplatesBlocknewsmodalHandlebars reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceTemplatesBlocknewsmodalHandlebars() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/templates/blockNewsModal.handlebars"
	name := "../src/main/web/florence/templates/blockNewsModal.handlebars"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceTemplatesBrowsenodeHandlebars reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceTemplatesBrowsenodeHandlebars() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/templates/browseNode.handlebars"
	name := "../src/main/web/florence/templates/browseNode.handlebars"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceTemplatesBrowsenodedatavisHandlebars reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceTemplatesBrowsenodedatavisHandlebars() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/templates/browseNodeDataVis.handlebars"
	name := "../src/main/web/florence/templates/browseNodeDataVis.handlebars"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceTemplatesChangepasswordHandlebars reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceTemplatesChangepasswordHandlebars() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/templates/changePassword.handlebars"
	name := "../src/main/web/florence/templates/changePassword.handlebars"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceTemplatesChartbuilderHandlebars reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceTemplatesChartbuilderHandlebars() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/templates/chartBuilder.handlebars"
	name := "../src/main/web/florence/templates/chartBuilder.handlebars"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceTemplatesCharteditbarchartextrasHandlebars reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceTemplatesCharteditbarchartextrasHandlebars() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/templates/chartEditBarChartExtras.handlebars"
	name := "../src/main/web/florence/templates/chartEditBarChartExtras.handlebars"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceTemplatesCharteditbarlineextrasHandlebars reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceTemplatesCharteditbarlineextrasHandlebars() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/templates/chartEditBarlineExtras.handlebars"
	name := "../src/main/web/florence/templates/chartEditBarlineExtras.handlebars"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceTemplatesCharteditdualaxisextrasHandlebars reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceTemplatesCharteditdualaxisextrasHandlebars() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/templates/chartEditDualAxisExtras.handlebars"
	name := "../src/main/web/florence/templates/chartEditDualAxisExtras.handlebars"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceTemplatesCharteditlinechartextrasHandlebars reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceTemplatesCharteditlinechartextrasHandlebars() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/templates/chartEditLineChartExtras.handlebars"
	name := "../src/main/web/florence/templates/chartEditLineChartExtras.handlebars"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceTemplatesChilddeletesHandlebars reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceTemplatesChilddeletesHandlebars() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/templates/childDeletes.handlebars"
	name := "../src/main/web/florence/templates/childDeletes.handlebars"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceTemplatesCollectiondetailsHandlebars reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceTemplatesCollectiondetailsHandlebars() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/templates/collectionDetails.handlebars"
	name := "../src/main/web/florence/templates/collectionDetails.handlebars"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceTemplatesCollectioneditHandlebars reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceTemplatesCollectioneditHandlebars() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/templates/collectionEdit.handlebars"
	name := "../src/main/web/florence/templates/collectionEdit.handlebars"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceTemplatesCollectionlistHandlebars reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceTemplatesCollectionlistHandlebars() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/templates/collectionList.handlebars"
	name := "../src/main/web/florence/templates/collectionList.handlebars"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceTemplatesEditnavHandlebars reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceTemplatesEditnavHandlebars() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/templates/editNav.handlebars"
	name := "../src/main/web/florence/templates/editNav.handlebars"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceTemplatesEditnavchildHandlebars reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceTemplatesEditnavchildHandlebars() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/templates/editNavChild.handlebars"
	name := "../src/main/web/florence/templates/editNavChild.handlebars"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceTemplatesEditoralertHandlebars reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceTemplatesEditoralertHandlebars() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/templates/editorAlert.handlebars"
	name := "../src/main/web/florence/templates/editorAlert.handlebars"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceTemplatesEditorcompendiumdatasetfilesHandlebars reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceTemplatesEditorcompendiumdatasetfilesHandlebars() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/templates/editorCompendiumDatasetFiles.handlebars"
	name := "../src/main/web/florence/templates/editorCompendiumDatasetFiles.handlebars"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceTemplatesEditorcontentHandlebars reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceTemplatesEditorcontentHandlebars() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/templates/editorContent.handlebars"
	name := "../src/main/web/florence/templates/editorContent.handlebars"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceTemplatesEditorcontentnotitleHandlebars reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceTemplatesEditorcontentnotitleHandlebars() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/templates/editorContentNoTitle.handlebars"
	name := "../src/main/web/florence/templates/editorContentNoTitle.handlebars"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceTemplatesEditorcontentoneHandlebars reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceTemplatesEditorcontentoneHandlebars() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/templates/editorContentOne.handlebars"
	name := "../src/main/web/florence/templates/editorContentOne.handlebars"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceTemplatesEditorcorrectionHandlebars reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceTemplatesEditorcorrectionHandlebars() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/templates/editorCorrection.handlebars"
	name := "../src/main/web/florence/templates/editorCorrection.handlebars"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceTemplatesEditordateHandlebars reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceTemplatesEditordateHandlebars() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/templates/editorDate.handlebars"
	name := "../src/main/web/florence/templates/editorDate.handlebars"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceTemplatesEditordocwithfilesHandlebars reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceTemplatesEditordocwithfilesHandlebars() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/templates/editorDocWithFiles.handlebars"
	name := "../src/main/web/florence/templates/editorDocWithFiles.handlebars"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceTemplatesEditordownloadsHandlebars reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceTemplatesEditordownloadsHandlebars() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/templates/editorDownloads.handlebars"
	name := "../src/main/web/florence/templates/editorDownloads.handlebars"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceTemplatesEditordownloadswithsummaryHandlebars reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceTemplatesEditordownloadswithsummaryHandlebars() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/templates/editorDownloadsWithSummary.handlebars"
	name := "../src/main/web/florence/templates/editorDownloadsWithSummary.handlebars"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceTemplatesEditorlinksHandlebars reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceTemplatesEditorlinksHandlebars() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/templates/editorLinks.handlebars"
	name := "../src/main/web/florence/templates/editorLinks.handlebars"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceTemplatesEditorrelatedHandlebars reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceTemplatesEditorrelatedHandlebars() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/templates/editorRelated.handlebars"
	name := "../src/main/web/florence/templates/editorRelated.handlebars"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceTemplatesEditorservicemessageHandlebars reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceTemplatesEditorservicemessageHandlebars() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/templates/editorServiceMessage.handlebars"
	name := "../src/main/web/florence/templates/editorServiceMessage.handlebars"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceTemplatesEditort1blocksHandlebars reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceTemplatesEditort1blocksHandlebars() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/templates/editorT1Blocks.handlebars"
	name := "../src/main/web/florence/templates/editorT1Blocks.handlebars"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceTemplatesEditortopicsHandlebars reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceTemplatesEditortopicsHandlebars() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/templates/editorTopics.handlebars"
	name := "../src/main/web/florence/templates/editorTopics.handlebars"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceTemplatesEmbediframeHandlebars reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceTemplatesEmbediframeHandlebars() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/templates/embedIframe.handlebars"
	name := "../src/main/web/florence/templates/embedIframe.handlebars"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceTemplatesEquationbuilderHandlebars reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceTemplatesEquationbuilderHandlebars() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/templates/equationBuilder.handlebars"
	name := "../src/main/web/florence/templates/equationBuilder.handlebars"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceTemplatesFlorenceHandlebars reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceTemplatesFlorenceHandlebars() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/templates/florence.handlebars"
	name := "../src/main/web/florence/templates/florence.handlebars"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceTemplatesIframenavHandlebars reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceTemplatesIframenavHandlebars() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/templates/iframeNav.handlebars"
	name := "../src/main/web/florence/templates/iframeNav.handlebars"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceTemplatesImagebuilderHandlebars reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceTemplatesImagebuilderHandlebars() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/templates/imageBuilder.handlebars"
	name := "../src/main/web/florence/templates/imageBuilder.handlebars"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceTemplatesLinkexternalmodalHandlebars reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceTemplatesLinkexternalmodalHandlebars() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/templates/linkExternalModal.handlebars"
	name := "../src/main/web/florence/templates/linkExternalModal.handlebars"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceTemplatesLinkmodalHandlebars reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceTemplatesLinkmodalHandlebars() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/templates/linkModal.handlebars"
	name := "../src/main/web/florence/templates/linkModal.handlebars"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceTemplatesLoadinganimationHandlebars reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceTemplatesLoadinganimationHandlebars() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/templates/loadingAnimation.handlebars"
	name := "../src/main/web/florence/templates/loadingAnimation.handlebars"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceTemplatesLoginHandlebars reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceTemplatesLoginHandlebars() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/templates/login.handlebars"
	name := "../src/main/web/florence/templates/login.handlebars"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceTemplatesMainnavHandlebars reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceTemplatesMainnavHandlebars() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/templates/mainNav.handlebars"
	name := "../src/main/web/florence/templates/mainNav.handlebars"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceTemplatesMarkdowneditorHandlebars reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceTemplatesMarkdowneditorHandlebars() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/templates/markdownEditor.handlebars"
	name := "../src/main/web/florence/templates/markdownEditor.handlebars"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceTemplatesMarkdowneditornotitleHandlebars reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceTemplatesMarkdowneditornotitleHandlebars() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/templates/markdownEditorNoTitle.handlebars"
	name := "../src/main/web/florence/templates/markdownEditorNoTitle.handlebars"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceTemplatesPublishdetailsHandlebars reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceTemplatesPublishdetailsHandlebars() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/templates/publishDetails.handlebars"
	name := "../src/main/web/florence/templates/publishDetails.handlebars"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceTemplatesPublishlistHandlebars reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceTemplatesPublishlistHandlebars() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/templates/publishList.handlebars"
	name := "../src/main/web/florence/templates/publishList.handlebars"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceTemplatesRelatedmodalHandlebars reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceTemplatesRelatedmodalHandlebars() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/templates/relatedModal.handlebars"
	name := "../src/main/web/florence/templates/relatedModal.handlebars"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceTemplatesReleaseselectorHandlebars reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceTemplatesReleaseselectorHandlebars() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/templates/releaseSelector.handlebars"
	name := "../src/main/web/florence/templates/releaseSelector.handlebars"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceTemplatesReportlistHandlebars reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceTemplatesReportlistHandlebars() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/templates/reportList.handlebars"
	name := "../src/main/web/florence/templates/reportList.handlebars"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceTemplatesReportpublisheddetailsHandlebars reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceTemplatesReportpublisheddetailsHandlebars() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/templates/reportPublishedDetails.handlebars"
	name := "../src/main/web/florence/templates/reportPublishedDetails.handlebars"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceTemplatesReportunpublisheddetailsHandlebars reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceTemplatesReportunpublisheddetailsHandlebars() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/templates/reportUnpublishedDetails.handlebars"
	name := "../src/main/web/florence/templates/reportUnpublishedDetails.handlebars"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceTemplatesSelectorhourHandlebars reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceTemplatesSelectorhourHandlebars() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/templates/selectorHour.handlebars"
	name := "../src/main/web/florence/templates/selectorHour.handlebars"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceTemplatesSelectorminuteHandlebars reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceTemplatesSelectorminuteHandlebars() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/templates/selectorMinute.handlebars"
	name := "../src/main/web/florence/templates/selectorMinute.handlebars"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceTemplatesTablebuilderHandlebars reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceTemplatesTablebuilderHandlebars() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/templates/tableBuilder.handlebars"
	name := "../src/main/web/florence/templates/tableBuilder.handlebars"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceTemplatesTeamdetailsHandlebars reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceTemplatesTeamdetailsHandlebars() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/templates/teamDetails.handlebars"
	name := "../src/main/web/florence/templates/teamDetails.handlebars"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceTemplatesTeameditHandlebars reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceTemplatesTeameditHandlebars() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/templates/teamEdit.handlebars"
	name := "../src/main/web/florence/templates/teamEdit.handlebars"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceTemplatesTeamlistHandlebars reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceTemplatesTeamlistHandlebars() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/templates/teamList.handlebars"
	name := "../src/main/web/florence/templates/teamList.handlebars"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceTemplatesTickanimationHandlebars reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceTemplatesTickanimationHandlebars() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/templates/tickAnimation.handlebars"
	name := "../src/main/web/florence/templates/tickAnimation.handlebars"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceTemplatesUploadfileformHandlebars reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceTemplatesUploadfileformHandlebars() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/templates/uploadFileForm.handlebars"
	name := "../src/main/web/florence/templates/uploadFileForm.handlebars"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceTemplatesUserdetailsHandlebars reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceTemplatesUserdetailsHandlebars() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/templates/userDetails.handlebars"
	name := "../src/main/web/florence/templates/userDetails.handlebars"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceTemplatesUserlistHandlebars reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceTemplatesUserlistHandlebars() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/templates/userList.handlebars"
	name := "../src/main/web/florence/templates/userList.handlebars"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceTemplatesWorkbrowseHandlebars reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceTemplatesWorkbrowseHandlebars() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/templates/workBrowse.handlebars"
	name := "../src/main/web/florence/templates/workBrowse.handlebars"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceTemplatesWorkcreateHandlebars reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceTemplatesWorkcreateHandlebars() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/templates/workCreate.handlebars"
	name := "../src/main/web/florence/templates/workCreate.handlebars"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceTemplatesWorkeditchartsHandlebars reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceTemplatesWorkeditchartsHandlebars() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/templates/workEditCharts.handlebars"
	name := "../src/main/web/florence/templates/workEditCharts.handlebars"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceTemplatesWorkeditequationsHandlebars reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceTemplatesWorkeditequationsHandlebars() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/templates/workEditEquations.handlebars"
	name := "../src/main/web/florence/templates/workEditEquations.handlebars"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceTemplatesWorkeditimagesHandlebars reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceTemplatesWorkeditimagesHandlebars() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/templates/workEditImages.handlebars"
	name := "../src/main/web/florence/templates/workEditImages.handlebars"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceTemplatesWorkeditt1Handlebars reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceTemplatesWorkeditt1Handlebars() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/templates/workEditT1.handlebars"
	name := "../src/main/web/florence/templates/workEditT1.handlebars"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceTemplatesWorkeditt16Handlebars reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceTemplatesWorkeditt16Handlebars() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/templates/workEditT16.handlebars"
	name := "../src/main/web/florence/templates/workEditT16.handlebars"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceTemplatesWorkeditt1censusHandlebars reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceTemplatesWorkeditt1censusHandlebars() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/templates/workEditT1Census.handlebars"
	name := "../src/main/web/florence/templates/workEditT1Census.handlebars"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceTemplatesWorkeditt1sectionsHandlebars reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceTemplatesWorkeditt1sectionsHandlebars() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/templates/workEditT1Sections.handlebars"
	name := "../src/main/web/florence/templates/workEditT1Sections.handlebars"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceTemplatesWorkeditt2Handlebars reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceTemplatesWorkeditt2Handlebars() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/templates/workEditT2.handlebars"
	name := "../src/main/web/florence/templates/workEditT2.handlebars"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceTemplatesWorkeditt3Handlebars reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceTemplatesWorkeditt3Handlebars() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/templates/workEditT3.handlebars"
	name := "../src/main/web/florence/templates/workEditT3.handlebars"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceTemplatesWorkeditt4articleHandlebars reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceTemplatesWorkeditt4articleHandlebars() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/templates/workEditT4Article.handlebars"
	name := "../src/main/web/florence/templates/workEditT4Article.handlebars"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceTemplatesWorkeditt4articledownloadHandlebars reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceTemplatesWorkeditt4articledownloadHandlebars() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/templates/workEditT4ArticleDownload.handlebars"
	name := "../src/main/web/florence/templates/workEditT4ArticleDownload.handlebars"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceTemplatesWorkeditt4bulletinHandlebars reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceTemplatesWorkeditt4bulletinHandlebars() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/templates/workEditT4Bulletin.handlebars"
	name := "../src/main/web/florence/templates/workEditT4Bulletin.handlebars"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceTemplatesWorkeditt4compendiumHandlebars reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceTemplatesWorkeditt4compendiumHandlebars() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/templates/workEditT4Compendium.handlebars"
	name := "../src/main/web/florence/templates/workEditT4Compendium.handlebars"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceTemplatesWorkeditt4methodologyHandlebars reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceTemplatesWorkeditt4methodologyHandlebars() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/templates/workEditT4Methodology.handlebars"
	name := "../src/main/web/florence/templates/workEditT4Methodology.handlebars"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceTemplatesWorkeditt5Handlebars reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceTemplatesWorkeditt5Handlebars() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/templates/workEditT5.handlebars"
	name := "../src/main/web/florence/templates/workEditT5.handlebars"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceTemplatesWorkeditt6Handlebars reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceTemplatesWorkeditt6Handlebars() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/templates/workEditT6.handlebars"
	name := "../src/main/web/florence/templates/workEditT6.handlebars"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceTemplatesWorkeditt6chapterHandlebars reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceTemplatesWorkeditt6chapterHandlebars() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/templates/workEditT6Chapter.handlebars"
	name := "../src/main/web/florence/templates/workEditT6Chapter.handlebars"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceTemplatesWorkeditt6datasetHandlebars reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceTemplatesWorkeditt6datasetHandlebars() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/templates/workEditT6Dataset.handlebars"
	name := "../src/main/web/florence/templates/workEditT6Dataset.handlebars"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceTemplatesWorkeditt7Handlebars reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceTemplatesWorkeditt7Handlebars() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/templates/workEditT7.handlebars"
	name := "../src/main/web/florence/templates/workEditT7.handlebars"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceTemplatesWorkeditt7landingHandlebars reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceTemplatesWorkeditt7landingHandlebars() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/templates/workEditT7Landing.handlebars"
	name := "../src/main/web/florence/templates/workEditT7Landing.handlebars"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceTemplatesWorkeditt7staticarticleHandlebars reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceTemplatesWorkeditt7staticarticleHandlebars() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/templates/workEditT7StaticArticle.handlebars"
	name := "../src/main/web/florence/templates/workEditT7StaticArticle.handlebars"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceTemplatesWorkeditt8Handlebars reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceTemplatesWorkeditt8Handlebars() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/templates/workEditT8.handlebars"
	name := "../src/main/web/florence/templates/workEditT8.handlebars"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceTemplatesWorkeditt8compendiumHandlebars reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceTemplatesWorkeditt8compendiumHandlebars() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/templates/workEditT8Compendium.handlebars"
	name := "../src/main/web/florence/templates/workEditT8Compendium.handlebars"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceTemplatesWorkeditt8correctionlistHandlebars reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceTemplatesWorkeditt8correctionlistHandlebars() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/templates/workEditT8CorrectionList.handlebars"
	name := "../src/main/web/florence/templates/workEditT8CorrectionList.handlebars"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceTemplatesWorkeditt8landingdatasetlistHandlebars reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceTemplatesWorkeditt8landingdatasetlistHandlebars() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/templates/workEditT8LandingDatasetList.handlebars"
	name := "../src/main/web/florence/templates/workEditT8LandingDatasetList.handlebars"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceTemplatesWorkeditt8landingpageHandlebars reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceTemplatesWorkeditt8landingpageHandlebars() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/templates/workEditT8LandingPage.handlebars"
	name := "../src/main/web/florence/templates/workEditT8LandingPage.handlebars"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceTemplatesWorkeditt8versionlistHandlebars reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceTemplatesWorkeditt8versionlistHandlebars() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/templates/workEditT8VersionList.handlebars"
	name := "../src/main/web/florence/templates/workEditT8VersionList.handlebars"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceTemplatesWorkedittablesHandlebars reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceTemplatesWorkedittablesHandlebars() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/templates/workEditTables.handlebars"
	name := "../src/main/web/florence/templates/workEditTables.handlebars"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceTemplatesWorkeditvisualisationHandlebars reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceTemplatesWorkeditvisualisationHandlebars() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/templates/workEditVisualisation.handlebars"
	name := "../src/main/web/florence/templates/workEditVisualisation.handlebars"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceTemplatesWorkimportHandlebars reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceTemplatesWorkimportHandlebars() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/templates/workImport.handlebars"
	name := "../src/main/web/florence/templates/workImport.handlebars"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceTemplatesWorkspaceHandlebars reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceTemplatesWorkspaceHandlebars() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/templates/workSpace.handlebars"
	name := "../src/main/web/florence/templates/workSpace.handlebars"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceWebpackConfigTestJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceWebpackConfigTestJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/webpack.config-test.js"
	name := "../src/main/web/florence/webpack.config-test.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceWebpackConfigJs reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceWebpackConfigJs() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/webpack.config.js"
	name := "../src/main/web/florence/webpack.config.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// SrcMainWebFlorenceWebpackHtml reads file data from disk. It returns an error on failure.
func SrcMainWebFlorenceWebpackHtml() (*asset, error) {
	path := "/Users/crispinmerriman/Git/onsdigital/florence/src/main/web/florence/webpack.html"
	name := "../src/main/web/florence/webpack.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"../src/main/web/florence/.DS_Store": SrcMainWebFlorenceDs_store,
	"../src/main/web/florence/.tmp/mocha-webpack/30a8c3b100fd21df921012ba748ffb09/30a8c3b100fd21df921012ba748ffb09-output.js": SrcMainWebFlorenceTmpMochaWebpack30a8c3b100fd21df921012ba748ffb0930a8c3b100fd21df921012ba748ffb09OutputJs,
	"../src/main/web/florence/.tmp/mocha-webpack/30a8c3b100fd21df921012ba748ffb09-entry.js": SrcMainWebFlorenceTmpMochaWebpack30a8c3b100fd21df921012ba748ffb09EntryJs,
	"../src/main/web/florence/.tmp/mocha-webpack/8d1c411a09add6e4f9455a3e2c6fae26/8d1c411a09add6e4f9455a3e2c6fae26-output.js": SrcMainWebFlorenceTmpMochaWebpack8d1c411a09add6e4f9455a3e2c6fae268d1c411a09add6e4f9455a3e2c6fae26OutputJs,
	"../src/main/web/florence/.tmp/mocha-webpack/8d1c411a09add6e4f9455a3e2c6fae26-entry.js": SrcMainWebFlorenceTmpMochaWebpack8d1c411a09add6e4f9455a3e2c6fae26EntryJs,
	"../src/main/web/florence/.tmp/mocha-webpack/d560a417452018acef79b9f52ff98d6f/d560a417452018acef79b9f52ff98d6f-output.js": SrcMainWebFlorenceTmpMochaWebpackD560a417452018acef79b9f52ff98d6fD560a417452018acef79b9f52ff98d6fOutputJs,
	"../src/main/web/florence/.tmp/mocha-webpack/d560a417452018acef79b9f52ff98d6f-entry.js": SrcMainWebFlorenceTmpMochaWebpackD560a417452018acef79b9f52ff98d6fEntryJs,
	"../src/main/web/florence/.tmp/mocha-webpack/d681649e3b3f1264990264bdb7973867/d681649e3b3f1264990264bdb7973867-output.js": SrcMainWebFlorenceTmpMochaWebpackD681649e3b3f1264990264bdb7973867D681649e3b3f1264990264bdb7973867OutputJs,
	"../src/main/web/florence/.tmp/mocha-webpack/d681649e3b3f1264990264bdb7973867-entry.js": SrcMainWebFlorenceTmpMochaWebpackD681649e3b3f1264990264bdb7973867EntryJs,
	"../src/main/web/florence/.tmp/mocha-webpack/f959c9c74bb5acdf648ff8850a842cf7/f959c9c74bb5acdf648ff8850a842cf7-output.js": SrcMainWebFlorenceTmpMochaWebpackF959c9c74bb5acdf648ff8850a842cf7F959c9c74bb5acdf648ff8850a842cf7OutputJs,
	"../src/main/web/florence/.tmp/mocha-webpack/f959c9c74bb5acdf648ff8850a842cf7-entry.js": SrcMainWebFlorenceTmpMochaWebpackF959c9c74bb5acdf648ff8850a842cf7EntryJs,
	"../src/main/web/florence/app/app.js": SrcMainWebFlorenceAppAppJs,
	"../src/main/web/florence/app/shared/api/getActivePage.js": SrcMainWebFlorenceAppSharedApiGetactivepageJs,
	"../src/main/web/florence/app/shared/api/getBrowseTree.js": SrcMainWebFlorenceAppSharedApiGetbrowsetreeJs,
	"../src/main/web/florence/app/shared/api/saveNewPage.js": SrcMainWebFlorenceAppSharedApiSavenewpageJs,
	"../src/main/web/florence/app/shared/api/updatePage.js": SrcMainWebFlorenceAppSharedApiUpdatepageJs,
	"../src/main/web/florence/app/shared/models/pageModels.js": SrcMainWebFlorenceAppSharedModelsPagemodelsJs,
	"../src/main/web/florence/app/shared/state/baseUrlState.js": SrcMainWebFlorenceAppSharedStateBaseurlstateJs,
	"../src/main/web/florence/app/shared/state/collectionState.js": SrcMainWebFlorenceAppSharedStateCollectionstateJs,
	"../src/main/web/florence/app/shared/state/state.js": SrcMainWebFlorenceAppSharedStateStateJs,
	"../src/main/web/florence/app/shared/state/userState.js": SrcMainWebFlorenceAppSharedStateUserstateJs,
	"../src/main/web/florence/app/shared/state/watchState.js": SrcMainWebFlorenceAppSharedStateWatchstateJs,
	"../src/main/web/florence/app/shared/state/workspaceState.js": SrcMainWebFlorenceAppSharedStateWorkspacestateJs,
	"../src/main/web/florence/app/shared/templateHelpers/ifCond.js": SrcMainWebFlorenceAppSharedTemplatehelpersIfcondJs,
	"../src/main/web/florence/app/shared/templatePartials/loadingAnimation.handlebars": SrcMainWebFlorenceAppSharedTemplatepartialsLoadinganimationHandlebars,
	"../src/main/web/florence/app/shared/utilities/bindDatePicker.js": SrcMainWebFlorenceAppSharedUtilitiesBinddatepickerJs,
	"../src/main/web/florence/app/shared/utilities/get.js": SrcMainWebFlorenceAppSharedUtilitiesGetJs,
	"../src/main/web/florence/app/shared/utilities/post.js": SrcMainWebFlorenceAppSharedUtilitiesPostJs,
	"../src/main/web/florence/app/shared/utilities/utilities.js": SrcMainWebFlorenceAppSharedUtilitiesUtilitiesJs,
	"../src/main/web/florence/app/shared/utilities/utilities.test.js": SrcMainWebFlorenceAppSharedUtilitiesUtilitiesTestJs,
	"../src/main/web/florence/app/workspace/browse/browse.handlebars": SrcMainWebFlorenceAppWorkspaceBrowseBrowseHandlebars,
	"../src/main/web/florence/app/workspace/browse/browseController.js": SrcMainWebFlorenceAppWorkspaceBrowseBrowsecontrollerJs,
	"../src/main/web/florence/app/workspace/browse/browseNode.handlebars": SrcMainWebFlorenceAppWorkspaceBrowseBrowsenodeHandlebars,
	"../src/main/web/florence/app/workspace/browse/browseView.js": SrcMainWebFlorenceAppWorkspaceBrowseBrowseviewJs,
	"../src/main/web/florence/app/workspace/browse/browseVisNode.handlebars": SrcMainWebFlorenceAppWorkspaceBrowseBrowsevisnodeHandlebars,
	"../src/main/web/florence/app/workspace/create/create.handlebars": SrcMainWebFlorenceAppWorkspaceCreateCreateHandlebars,
	"../src/main/web/florence/app/workspace/create/createController.js": SrcMainWebFlorenceAppWorkspaceCreateCreatecontrollerJs,
	"../src/main/web/florence/app/workspace/create/createView.js": SrcMainWebFlorenceAppWorkspaceCreateCreateviewJs,
	"../src/main/web/florence/app/workspace/edit/edit.handlebars": SrcMainWebFlorenceAppWorkspaceEditEditHandlebars,
	"../src/main/web/florence/app/workspace/edit/editController.js": SrcMainWebFlorenceAppWorkspaceEditEditcontrollerJs,
	"../src/main/web/florence/app/workspace/edit/editView.js": SrcMainWebFlorenceAppWorkspaceEditEditviewJs,
	"../src/main/web/florence/app/workspace/navigation/navigation.handlebars": SrcMainWebFlorenceAppWorkspaceNavigationNavigationHandlebars,
	"../src/main/web/florence/app/workspace/navigation/navigationController.js": SrcMainWebFlorenceAppWorkspaceNavigationNavigationcontrollerJs,
	"../src/main/web/florence/app/workspace/navigation/navigationView.js": SrcMainWebFlorenceAppWorkspaceNavigationNavigationviewJs,
	"../src/main/web/florence/app/workspace/preview/preview.handlebars": SrcMainWebFlorenceAppWorkspacePreviewPreviewHandlebars,
	"../src/main/web/florence/app/workspace/preview/previewController.js": SrcMainWebFlorenceAppWorkspacePreviewPreviewcontrollerJs,
	"../src/main/web/florence/app/workspace/preview/previewView.js": SrcMainWebFlorenceAppWorkspacePreviewPreviewviewJs,
	"../src/main/web/florence/app/workspace/workspace.handlebars": SrcMainWebFlorenceAppWorkspaceWorkspaceHandlebars,
	"../src/main/web/florence/app/workspace/workspaceController.js": SrcMainWebFlorenceAppWorkspaceWorkspacecontrollerJs,
	"../src/main/web/florence/app/workspace/workspaceView.js": SrcMainWebFlorenceAppWorkspaceWorkspaceviewJs,
	"../src/main/web/florence/assets/css/main.min.css": SrcMainWebFlorenceAssetsCssMainMinCss,
	"../src/main/web/florence/assets/css/main.min.css.map": SrcMainWebFlorenceAssetsCssMainMinCssMap,
	"../src/main/web/florence/assets/js/bundle.js": SrcMainWebFlorenceAssetsJsBundleJs,
	"../src/main/web/florence/assets/js/main.js": SrcMainWebFlorenceAssetsJsMainJs,
	"../src/main/web/florence/assets/js/templates.js": SrcMainWebFlorenceAssetsJsTemplatesJs,
	"../src/main/web/florence/assets/version.json": SrcMainWebFlorenceAssetsVersionJson,
	"../src/main/web/florence/css/florence.css": SrcMainWebFlorenceCssFlorenceCss,
	"../src/main/web/florence/css/rapid-prototype-main.css": SrcMainWebFlorenceCssRapidPrototypeMainCss,
	"../src/main/web/florence/css/third-party/c3.css": SrcMainWebFlorenceCssThirdPartyC3Css,
	"../src/main/web/florence/css/third-party/jquery-ui.theme.min.css": SrcMainWebFlorenceCssThirdPartyJqueryUiThemeMinCss,
	"../src/main/web/florence/css/third-party/jquery.tagit.css": SrcMainWebFlorenceCssThirdPartyJqueryTagitCss,
	"../src/main/web/florence/css/third-party/pagedown.css": SrcMainWebFlorenceCssThirdPartyPagedownCss,
	"../src/main/web/florence/css/third-party/responsive-tables.css": SrcMainWebFlorenceCssThirdPartyResponsiveTablesCss,
	"../src/main/web/florence/css/third-party/sweetalert.css": SrcMainWebFlorenceCssThirdPartySweetalertCss,
	"../src/main/web/florence/css/third-party/tagit.ui-zendesk.css": SrcMainWebFlorenceCssThirdPartyTagitUiZendeskCss,
	"../src/main/web/florence/font/Open_Sans/LICENSE.txt": SrcMainWebFlorenceFontOpen_sansLicenseTxt,
	"../src/main/web/florence/font/Open_Sans/OpenSans-Bold.eot": SrcMainWebFlorenceFontOpen_sansOpensansBoldEot,
	"../src/main/web/florence/font/Open_Sans/OpenSans-Bold.svg": SrcMainWebFlorenceFontOpen_sansOpensansBoldSvg,
	"../src/main/web/florence/font/Open_Sans/OpenSans-Bold.ttf": SrcMainWebFlorenceFontOpen_sansOpensansBoldTtf,
	"../src/main/web/florence/font/Open_Sans/OpenSans-Bold.woff": SrcMainWebFlorenceFontOpen_sansOpensansBoldWoff,
	"../src/main/web/florence/font/Open_Sans/OpenSans-Bold.woff2": SrcMainWebFlorenceFontOpen_sansOpensansBoldWoff2,
	"../src/main/web/florence/font/Open_Sans/OpenSans-BoldItalic.eot": SrcMainWebFlorenceFontOpen_sansOpensansBolditalicEot,
	"../src/main/web/florence/font/Open_Sans/OpenSans-BoldItalic.svg": SrcMainWebFlorenceFontOpen_sansOpensansBolditalicSvg,
	"../src/main/web/florence/font/Open_Sans/OpenSans-BoldItalic.ttf": SrcMainWebFlorenceFontOpen_sansOpensansBolditalicTtf,
	"../src/main/web/florence/font/Open_Sans/OpenSans-BoldItalic.woff": SrcMainWebFlorenceFontOpen_sansOpensansBolditalicWoff,
	"../src/main/web/florence/font/Open_Sans/OpenSans-ExtraBold.eot": SrcMainWebFlorenceFontOpen_sansOpensansExtraboldEot,
	"../src/main/web/florence/font/Open_Sans/OpenSans-ExtraBold.svg": SrcMainWebFlorenceFontOpen_sansOpensansExtraboldSvg,
	"../src/main/web/florence/font/Open_Sans/OpenSans-ExtraBold.ttf": SrcMainWebFlorenceFontOpen_sansOpensansExtraboldTtf,
	"../src/main/web/florence/font/Open_Sans/OpenSans-ExtraBold.woff": SrcMainWebFlorenceFontOpen_sansOpensansExtraboldWoff,
	"../src/main/web/florence/font/Open_Sans/OpenSans-ExtraBoldItalic.eot": SrcMainWebFlorenceFontOpen_sansOpensansExtrabolditalicEot,
	"../src/main/web/florence/font/Open_Sans/OpenSans-ExtraBoldItalic.svg": SrcMainWebFlorenceFontOpen_sansOpensansExtrabolditalicSvg,
	"../src/main/web/florence/font/Open_Sans/OpenSans-ExtraBoldItalic.ttf": SrcMainWebFlorenceFontOpen_sansOpensansExtrabolditalicTtf,
	"../src/main/web/florence/font/Open_Sans/OpenSans-ExtraBoldItalic.woff": SrcMainWebFlorenceFontOpen_sansOpensansExtrabolditalicWoff,
	"../src/main/web/florence/font/Open_Sans/OpenSans-Italic.eot": SrcMainWebFlorenceFontOpen_sansOpensansItalicEot,
	"../src/main/web/florence/font/Open_Sans/OpenSans-Italic.svg": SrcMainWebFlorenceFontOpen_sansOpensansItalicSvg,
	"../src/main/web/florence/font/Open_Sans/OpenSans-Italic.ttf": SrcMainWebFlorenceFontOpen_sansOpensansItalicTtf,
	"../src/main/web/florence/font/Open_Sans/OpenSans-Italic.woff": SrcMainWebFlorenceFontOpen_sansOpensansItalicWoff,
	"../src/main/web/florence/font/Open_Sans/OpenSans-Light.eot": SrcMainWebFlorenceFontOpen_sansOpensansLightEot,
	"../src/main/web/florence/font/Open_Sans/OpenSans-Light.svg": SrcMainWebFlorenceFontOpen_sansOpensansLightSvg,
	"../src/main/web/florence/font/Open_Sans/OpenSans-Light.ttf": SrcMainWebFlorenceFontOpen_sansOpensansLightTtf,
	"../src/main/web/florence/font/Open_Sans/OpenSans-Light.woff": SrcMainWebFlorenceFontOpen_sansOpensansLightWoff,
	"../src/main/web/florence/font/Open_Sans/OpenSans-Light.woff2": SrcMainWebFlorenceFontOpen_sansOpensansLightWoff2,
	"../src/main/web/florence/font/Open_Sans/OpenSans-LightItalic.eot": SrcMainWebFlorenceFontOpen_sansOpensansLightitalicEot,
	"../src/main/web/florence/font/Open_Sans/OpenSans-LightItalic.svg": SrcMainWebFlorenceFontOpen_sansOpensansLightitalicSvg,
	"../src/main/web/florence/font/Open_Sans/OpenSans-LightItalic.ttf": SrcMainWebFlorenceFontOpen_sansOpensansLightitalicTtf,
	"../src/main/web/florence/font/Open_Sans/OpenSans-LightItalic.woff": SrcMainWebFlorenceFontOpen_sansOpensansLightitalicWoff,
	"../src/main/web/florence/font/Open_Sans/OpenSans-Regular.eot": SrcMainWebFlorenceFontOpen_sansOpensansRegularEot,
	"../src/main/web/florence/font/Open_Sans/OpenSans-Regular.svg": SrcMainWebFlorenceFontOpen_sansOpensansRegularSvg,
	"../src/main/web/florence/font/Open_Sans/OpenSans-Regular.ttf": SrcMainWebFlorenceFontOpen_sansOpensansRegularTtf,
	"../src/main/web/florence/font/Open_Sans/OpenSans-Regular.woff": SrcMainWebFlorenceFontOpen_sansOpensansRegularWoff,
	"../src/main/web/florence/font/Open_Sans/OpenSans-Regular.woff2": SrcMainWebFlorenceFontOpen_sansOpensansRegularWoff2,
	"../src/main/web/florence/font/Open_Sans/OpenSans-Semibold.eot": SrcMainWebFlorenceFontOpen_sansOpensansSemiboldEot,
	"../src/main/web/florence/font/Open_Sans/OpenSans-Semibold.svg": SrcMainWebFlorenceFontOpen_sansOpensansSemiboldSvg,
	"../src/main/web/florence/font/Open_Sans/OpenSans-Semibold.ttf": SrcMainWebFlorenceFontOpen_sansOpensansSemiboldTtf,
	"../src/main/web/florence/font/Open_Sans/OpenSans-Semibold.woff": SrcMainWebFlorenceFontOpen_sansOpensansSemiboldWoff,
	"../src/main/web/florence/font/Open_Sans/OpenSans-Semibold.woff2": SrcMainWebFlorenceFontOpen_sansOpensansSemiboldWoff2,
	"../src/main/web/florence/font/Open_Sans/OpenSans-SemiboldItalic.eot": SrcMainWebFlorenceFontOpen_sansOpensansSemibolditalicEot,
	"../src/main/web/florence/font/Open_Sans/OpenSans-SemiboldItalic.svg": SrcMainWebFlorenceFontOpen_sansOpensansSemibolditalicSvg,
	"../src/main/web/florence/font/Open_Sans/OpenSans-SemiboldItalic.ttf": SrcMainWebFlorenceFontOpen_sansOpensansSemibolditalicTtf,
	"../src/main/web/florence/font/Open_Sans/OpenSans-SemiboldItalic.woff": SrcMainWebFlorenceFontOpen_sansOpensansSemibolditalicWoff,
	"../src/main/web/florence/font/Roboto_Slab/LICENSE.txt": SrcMainWebFlorenceFontRoboto_slabLicenseTxt,
	"../src/main/web/florence/font/Roboto_Slab/RobotoSlab-Bold.eot": SrcMainWebFlorenceFontRoboto_slabRobotoslabBoldEot,
	"../src/main/web/florence/font/Roboto_Slab/RobotoSlab-Bold.svg": SrcMainWebFlorenceFontRoboto_slabRobotoslabBoldSvg,
	"../src/main/web/florence/font/Roboto_Slab/RobotoSlab-Bold.ttf": SrcMainWebFlorenceFontRoboto_slabRobotoslabBoldTtf,
	"../src/main/web/florence/font/Roboto_Slab/RobotoSlab-Bold.woff": SrcMainWebFlorenceFontRoboto_slabRobotoslabBoldWoff,
	"../src/main/web/florence/font/Roboto_Slab/RobotoSlab-Bold.woff2": SrcMainWebFlorenceFontRoboto_slabRobotoslabBoldWoff2,
	"../src/main/web/florence/font/Roboto_Slab/RobotoSlab-Light.eot": SrcMainWebFlorenceFontRoboto_slabRobotoslabLightEot,
	"../src/main/web/florence/font/Roboto_Slab/RobotoSlab-Light.svg": SrcMainWebFlorenceFontRoboto_slabRobotoslabLightSvg,
	"../src/main/web/florence/font/Roboto_Slab/RobotoSlab-Light.ttf": SrcMainWebFlorenceFontRoboto_slabRobotoslabLightTtf,
	"../src/main/web/florence/font/Roboto_Slab/RobotoSlab-Light.woff": SrcMainWebFlorenceFontRoboto_slabRobotoslabLightWoff,
	"../src/main/web/florence/font/Roboto_Slab/RobotoSlab-Regular.eot": SrcMainWebFlorenceFontRoboto_slabRobotoslabRegularEot,
	"../src/main/web/florence/font/Roboto_Slab/RobotoSlab-Regular.svg": SrcMainWebFlorenceFontRoboto_slabRobotoslabRegularSvg,
	"../src/main/web/florence/font/Roboto_Slab/RobotoSlab-Regular.ttf": SrcMainWebFlorenceFontRoboto_slabRobotoslabRegularTtf,
	"../src/main/web/florence/font/Roboto_Slab/RobotoSlab-Regular.woff": SrcMainWebFlorenceFontRoboto_slabRobotoslabRegularWoff,
	"../src/main/web/florence/font/Roboto_Slab/RobotoSlab-Regular.woff2": SrcMainWebFlorenceFontRoboto_slabRobotoslabRegularWoff2,
	"../src/main/web/florence/font/Roboto_Slab/RobotoSlab-Thin.eot": SrcMainWebFlorenceFontRoboto_slabRobotoslabThinEot,
	"../src/main/web/florence/font/Roboto_Slab/RobotoSlab-Thin.svg": SrcMainWebFlorenceFontRoboto_slabRobotoslabThinSvg,
	"../src/main/web/florence/font/Roboto_Slab/RobotoSlab-Thin.ttf": SrcMainWebFlorenceFontRoboto_slabRobotoslabThinTtf,
	"../src/main/web/florence/font/Roboto_Slab/RobotoSlab-Thin.woff": SrcMainWebFlorenceFontRoboto_slabRobotoslabThinWoff,
	"../src/main/web/florence/font/Roboto_Slab/RobotoSlab-Thin.woff2": SrcMainWebFlorenceFontRoboto_slabRobotoslabThinWoff2,
	"../src/main/web/florence/font/Ubuntu_Mono/UFL.txt": SrcMainWebFlorenceFontUbuntu_monoUflTxt,
	"../src/main/web/florence/font/Ubuntu_Mono/UbuntuMono-Bold.eot": SrcMainWebFlorenceFontUbuntu_monoUbuntumonoBoldEot,
	"../src/main/web/florence/font/Ubuntu_Mono/UbuntuMono-Bold.svg": SrcMainWebFlorenceFontUbuntu_monoUbuntumonoBoldSvg,
	"../src/main/web/florence/font/Ubuntu_Mono/UbuntuMono-Bold.ttf": SrcMainWebFlorenceFontUbuntu_monoUbuntumonoBoldTtf,
	"../src/main/web/florence/font/Ubuntu_Mono/UbuntuMono-Bold.woff": SrcMainWebFlorenceFontUbuntu_monoUbuntumonoBoldWoff,
	"../src/main/web/florence/font/Ubuntu_Mono/UbuntuMono-Bold.woff2": SrcMainWebFlorenceFontUbuntu_monoUbuntumonoBoldWoff2,
	"../src/main/web/florence/font/Ubuntu_Mono/UbuntuMono-BoldItalic.eot": SrcMainWebFlorenceFontUbuntu_monoUbuntumonoBolditalicEot,
	"../src/main/web/florence/font/Ubuntu_Mono/UbuntuMono-BoldItalic.svg": SrcMainWebFlorenceFontUbuntu_monoUbuntumonoBolditalicSvg,
	"../src/main/web/florence/font/Ubuntu_Mono/UbuntuMono-BoldItalic.ttf": SrcMainWebFlorenceFontUbuntu_monoUbuntumonoBolditalicTtf,
	"../src/main/web/florence/font/Ubuntu_Mono/UbuntuMono-BoldItalic.woff": SrcMainWebFlorenceFontUbuntu_monoUbuntumonoBolditalicWoff,
	"../src/main/web/florence/font/Ubuntu_Mono/UbuntuMono-Italic.eot": SrcMainWebFlorenceFontUbuntu_monoUbuntumonoItalicEot,
	"../src/main/web/florence/font/Ubuntu_Mono/UbuntuMono-Italic.svg": SrcMainWebFlorenceFontUbuntu_monoUbuntumonoItalicSvg,
	"../src/main/web/florence/font/Ubuntu_Mono/UbuntuMono-Italic.ttf": SrcMainWebFlorenceFontUbuntu_monoUbuntumonoItalicTtf,
	"../src/main/web/florence/font/Ubuntu_Mono/UbuntuMono-Italic.woff": SrcMainWebFlorenceFontUbuntu_monoUbuntumonoItalicWoff,
	"../src/main/web/florence/font/Ubuntu_Mono/UbuntuMono-Regular.eot": SrcMainWebFlorenceFontUbuntu_monoUbuntumonoRegularEot,
	"../src/main/web/florence/font/Ubuntu_Mono/UbuntuMono-Regular.svg": SrcMainWebFlorenceFontUbuntu_monoUbuntumonoRegularSvg,
	"../src/main/web/florence/font/Ubuntu_Mono/UbuntuMono-Regular.ttf": SrcMainWebFlorenceFontUbuntu_monoUbuntumonoRegularTtf,
	"../src/main/web/florence/font/Ubuntu_Mono/UbuntuMono-Regular.woff": SrcMainWebFlorenceFontUbuntu_monoUbuntumonoRegularWoff,
	"../src/main/web/florence/font/Ubuntu_Mono/UbuntuMono-Regular.woff2": SrcMainWebFlorenceFontUbuntu_monoUbuntumonoRegularWoff2,
	"../src/main/web/florence/font/florence.eot": SrcMainWebFlorenceFontFlorenceEot,
	"../src/main/web/florence/font/florence.svg": SrcMainWebFlorenceFontFlorenceSvg,
	"../src/main/web/florence/font/florence.ttf": SrcMainWebFlorenceFontFlorenceTtf,
	"../src/main/web/florence/font/florence.woff": SrcMainWebFlorenceFontFlorenceWoff,
	"../src/main/web/florence/html templates/jquery-ui.min.js": SrcMainWebFlorenceHtmlTemplatesJqueryUiMinJs,
	"../src/main/web/florence/html templates/pagedown.css": SrcMainWebFlorenceHtmlTemplatesPagedownCss,
	"../src/main/web/florence/html templates/publish-manual.html": SrcMainWebFlorenceHtmlTemplatesPublishManualHtml,
	"../src/main/web/florence/html templates/publish-scheduled.html": SrcMainWebFlorenceHtmlTemplatesPublishScheduledHtml,
	"../src/main/web/florence/html templates/ui-functions.js": SrcMainWebFlorenceHtmlTemplatesUiFunctionsJs,
	"../src/main/web/florence/html templates/workspace-browse.html": SrcMainWebFlorenceHtmlTemplatesWorkspaceBrowseHtml,
	"../src/main/web/florence/html templates/workspace-create.html": SrcMainWebFlorenceHtmlTemplatesWorkspaceCreateHtml,
	"../src/main/web/florence/html templates/workspace-edit.html": SrcMainWebFlorenceHtmlTemplatesWorkspaceEditHtml,
	"../src/main/web/florence/img/favicon11.ico": SrcMainWebFlorenceImgFavicon11Ico,
	"../src/main/web/florence/img/favicon12.ico": SrcMainWebFlorenceImgFavicon12Ico,
	"../src/main/web/florence/img/favicon21.ico": SrcMainWebFlorenceImgFavicon21Ico,
	"../src/main/web/florence/img/favicon22.ico": SrcMainWebFlorenceImgFavicon22Ico,
	"../src/main/web/florence/img/favicon23.ico": SrcMainWebFlorenceImgFavicon23Ico,
	"../src/main/web/florence/img/favicon24.ico": SrcMainWebFlorenceImgFavicon24Ico,
	"../src/main/web/florence/img/flo-logo.png": SrcMainWebFlorenceImgFloLogoPng,
	"../src/main/web/florence/img/flo-logo144.png": SrcMainWebFlorenceImgFloLogo144Png,
	"../src/main/web/florence/img/rule-21.png": SrcMainWebFlorenceImgRule21Png,
	"../src/main/web/florence/img/rule-22.png": SrcMainWebFlorenceImgRule22Png,
	"../src/main/web/florence/img/rule.png": SrcMainWebFlorenceImgRulePng,
	"../src/main/web/florence/img/sb_v_double_arrow.png": SrcMainWebFlorenceImgSb_v_double_arrowPng,
	"../src/main/web/florence/img/semi-transparent-bg.png": SrcMainWebFlorenceImgSemiTransparentBgPng,
	"../src/main/web/florence/img/sprite.png": SrcMainWebFlorenceImgSpritePng,
	"../src/main/web/florence/img/ui-bg_diagonals-thick_18_b81900_40x40.png": SrcMainWebFlorenceImgUiBg_diagonalsThick_18_b81900_40x40Png,
	"../src/main/web/florence/img/ui-bg_diagonals-thick_20_666666_40x40.png": SrcMainWebFlorenceImgUiBg_diagonalsThick_20_666666_40x40Png,
	"../src/main/web/florence/img/ui-bg_flat_10_000000_40x100.png": SrcMainWebFlorenceImgUiBg_flat_10_000000_40x100Png,
	"../src/main/web/florence/img/ui-bg_glass_100_f6f6f6_1x400.png": SrcMainWebFlorenceImgUiBg_glass_100_f6f6f6_1x400Png,
	"../src/main/web/florence/img/ui-bg_glass_100_fdf5ce_1x400.png": SrcMainWebFlorenceImgUiBg_glass_100_fdf5ce_1x400Png,
	"../src/main/web/florence/img/ui-bg_glass_65_ffffff_1x400.png": SrcMainWebFlorenceImgUiBg_glass_65_ffffff_1x400Png,
	"../src/main/web/florence/img/ui-bg_gloss-wave_35_f6a828_500x100.png": SrcMainWebFlorenceImgUiBg_glossWave_35_f6a828_500x100Png,
	"../src/main/web/florence/img/ui-bg_highlight-soft_100_eeeeee_1x100.png": SrcMainWebFlorenceImgUiBg_highlightSoft_100_eeeeee_1x100Png,
	"../src/main/web/florence/img/ui-bg_highlight-soft_75_ffe45c_1x100.png": SrcMainWebFlorenceImgUiBg_highlightSoft_75_ffe45c_1x100Png,
	"../src/main/web/florence/img/ui-icons_222222_256x240.png": SrcMainWebFlorenceImgUiIcons_222222_256x240Png,
	"../src/main/web/florence/img/ui-icons_228ef1_256x240.png": SrcMainWebFlorenceImgUiIcons_228ef1_256x240Png,
	"../src/main/web/florence/img/ui-icons_ef8c08_256x240.png": SrcMainWebFlorenceImgUiIcons_ef8c08_256x240Png,
	"../src/main/web/florence/img/ui-icons_ffd27a_256x240.png": SrcMainWebFlorenceImgUiIcons_ffd27a_256x240Png,
	"../src/main/web/florence/img/ui-icons_ffffff_256x240.png": SrcMainWebFlorenceImgUiIcons_ffffff_256x240Png,
	"../src/main/web/florence/img/wmd-buttons.png": SrcMainWebFlorenceImgWmdButtonsPng,
	"../src/main/web/florence/index.html": SrcMainWebFlorenceIndexHtml,
	"../src/main/web/florence/js/.DS_Store": SrcMainWebFlorenceJsDs_store,
	"../src/main/web/florence/js/app.js": SrcMainWebFlorenceJsAppJs,
	"../src/main/web/florence/js/classes/cookieUtils.js": SrcMainWebFlorenceJsClassesCookieutilsJs,
	"../src/main/web/florence/js/classes/florence.js": SrcMainWebFlorenceJsClassesFlorenceJs,
	"../src/main/web/florence/js/classes/pathUtils.js": SrcMainWebFlorenceJsClassesPathutilsJs,
	"../src/main/web/florence/js/classes/stringUtils.js": SrcMainWebFlorenceJsClassesStringutilsJs,
	"../src/main/web/florence/js/components/_accordion.js": SrcMainWebFlorenceJsComponents_accordionJs,
	"../src/main/web/florence/js/components/_fileInput.js": SrcMainWebFlorenceJsComponents_fileinputJs,
	"../src/main/web/florence/js/components/_hidePanel.js": SrcMainWebFlorenceJsComponents_hidepanelJs,
	"../src/main/web/florence/js/components/_showPanel.js": SrcMainWebFlorenceJsComponents_showpanelJs,
	"../src/main/web/florence/js/functions/_ContentDeleteMarker.js": SrcMainWebFlorenceJsFunctions_contentdeletemarkerJs,
	"../src/main/web/florence/js/functions/__init.js": SrcMainWebFlorenceJsFunctions__initJs,
	"../src/main/web/florence/js/functions/_accordionSettings.js": SrcMainWebFlorenceJsFunctions_accordionsettingsJs,
	"../src/main/web/florence/js/functions/_autoSize.js": SrcMainWebFlorenceJsFunctions_autosizeJs,
	"../src/main/web/florence/js/functions/_checkForPageChanged.js": SrcMainWebFlorenceJsFunctions_checkforpagechangedJs,
	"../src/main/web/florence/js/functions/_checkPathParsed.js": SrcMainWebFlorenceJsFunctions_checkpathparsedJs,
	"../src/main/web/florence/js/functions/_checkPathSlashes.js": SrcMainWebFlorenceJsFunctions_checkpathslashesJs,
	"../src/main/web/florence/js/functions/_checkRenameUri.js": SrcMainWebFlorenceJsFunctions_checkrenameuriJs,
	"../src/main/web/florence/js/functions/_collectionHelpers.js": SrcMainWebFlorenceJsFunctions_collectionhelpersJs,
	"../src/main/web/florence/js/functions/_copyPath.js": SrcMainWebFlorenceJsFunctions_copypathJs,
	"../src/main/web/florence/js/functions/_createCollection.js": SrcMainWebFlorenceJsFunctions_createcollectionJs,
	"../src/main/web/florence/js/functions/_createWorkspace.js": SrcMainWebFlorenceJsFunctions_createworkspaceJs,
	"../src/main/web/florence/js/functions/_deleteTeam.js": SrcMainWebFlorenceJsFunctions_deleteteamJs,
	"../src/main/web/florence/js/functions/_deleteUnpublishedVersion.js": SrcMainWebFlorenceJsFunctions_deleteunpublishedversionJs,
	"../src/main/web/florence/js/functions/_deleteUser.js": SrcMainWebFlorenceJsFunctions_deleteuserJs,
	"../src/main/web/florence/js/functions/_editAddDataset.js": SrcMainWebFlorenceJsFunctions_editadddatasetJs,
	"../src/main/web/florence/js/functions/_editAddFile.js": SrcMainWebFlorenceJsFunctions_editaddfileJs,
	"../src/main/web/florence/js/functions/_editAddFileWithDetails.js": SrcMainWebFlorenceJsFunctions_editaddfilewithdetailsJs,
	"../src/main/web/florence/js/functions/_editAlert.js": SrcMainWebFlorenceJsFunctions_editalertJs,
	"../src/main/web/florence/js/functions/_editBlocks.js": SrcMainWebFlorenceJsFunctions_editblocksJs,
	"../src/main/web/florence/js/functions/_editCollection.js": SrcMainWebFlorenceJsFunctions_editcollectionJs,
	"../src/main/web/florence/js/functions/_editDatasetVersion.js": SrcMainWebFlorenceJsFunctions_editdatasetversionJs,
	"../src/main/web/florence/js/functions/_editDate.js": SrcMainWebFlorenceJsFunctions_editdateJs,
	"../src/main/web/florence/js/functions/_editDocWithFilesCorrection.js": SrcMainWebFlorenceJsFunctions_editdocwithfilescorrectionJs,
	"../src/main/web/florence/js/functions/_editDocumentCorrection.js": SrcMainWebFlorenceJsFunctions_editdocumentcorrectionJs,
	"../src/main/web/florence/js/functions/_editIntLinks.js": SrcMainWebFlorenceJsFunctions_editintlinksJs,
	"../src/main/web/florence/js/functions/_editMarkdownOneObject.js": SrcMainWebFlorenceJsFunctions_editmarkdownoneobjectJs,
	"../src/main/web/florence/js/functions/_editMarkdownWithNoTitle.js": SrcMainWebFlorenceJsFunctions_editmarkdownwithnotitleJs,
	"../src/main/web/florence/js/functions/_editServiceMessage.js": SrcMainWebFlorenceJsFunctions_editservicemessageJs,
	"../src/main/web/florence/js/functions/_editTopics.js": SrcMainWebFlorenceJsFunctions_edittopicsJs,
	"../src/main/web/florence/js/functions/_environment.js": SrcMainWebFlorenceJsFunctions_environmentJs,
	"../src/main/web/florence/js/functions/_externalLinkAccordionSection.js": SrcMainWebFlorenceJsFunctions_externallinkaccordionsectionJs,
	"../src/main/web/florence/js/functions/_fileDelete.js": SrcMainWebFlorenceJsFunctions_filedeleteJs,
	"../src/main/web/florence/js/functions/_fileUpload.js": SrcMainWebFlorenceJsFunctions_fileuploadJs,
	"../src/main/web/florence/js/functions/_getLastPosition.js": SrcMainWebFlorenceJsFunctions_getlastpositionJs,
	"../src/main/web/florence/js/functions/_getNetworkStatus.js": SrcMainWebFlorenceJsFunctions_getnetworkstatusJs,
	"../src/main/web/florence/js/functions/_getParentPage.js": SrcMainWebFlorenceJsFunctions_getparentpageJs,
	"../src/main/web/florence/js/functions/_getPathNameTrimLast.js": SrcMainWebFlorenceJsFunctions_getpathnametrimlastJs,
	"../src/main/web/florence/js/functions/_getPreviewUrl.js": SrcMainWebFlorenceJsFunctions_getpreviewurlJs,
	"../src/main/web/florence/js/functions/_handleApiError.js": SrcMainWebFlorenceJsFunctions_handleapierrorJs,
	"../src/main/web/florence/js/functions/_initialiseNoteMarkdown.js": SrcMainWebFlorenceJsFunctions_initialisenotemarkdownJs,
	"../src/main/web/florence/js/functions/_inputValidation.js": SrcMainWebFlorenceJsFunctions_inputvalidationJs,
	"../src/main/web/florence/js/functions/_loadBrowseScreen.js": SrcMainWebFlorenceJsFunctions_loadbrowsescreenJs,
	"../src/main/web/florence/js/functions/_loadChartBuilder.js": SrcMainWebFlorenceJsFunctions_loadchartbuilderJs,
	"../src/main/web/florence/js/functions/_loadChartsList.js": SrcMainWebFlorenceJsFunctions_loadchartslistJs,
	"../src/main/web/florence/js/functions/_loadCreateScreen.js": SrcMainWebFlorenceJsFunctions_loadcreatescreenJs,
	"../src/main/web/florence/js/functions/_loadCreator.js": SrcMainWebFlorenceJsFunctions_loadcreatorJs,
	"../src/main/web/florence/js/functions/_loadCreatorDatepicker.js": SrcMainWebFlorenceJsFunctions_loadcreatordatepickerJs,
	"../src/main/web/florence/js/functions/_loadEmbedIframe.js": SrcMainWebFlorenceJsFunctions_loadembediframeJs,
	"../src/main/web/florence/js/functions/_loadEquationBuilder.js": SrcMainWebFlorenceJsFunctions_loadequationbuilderJs,
	"../src/main/web/florence/js/functions/_loadEquationsList.js": SrcMainWebFlorenceJsFunctions_loadequationslistJs,
	"../src/main/web/florence/js/functions/_loadImageBuilder.js": SrcMainWebFlorenceJsFunctions_loadimagebuilderJs,
	"../src/main/web/florence/js/functions/_loadImagesList.js": SrcMainWebFlorenceJsFunctions_loadimageslistJs,
	"../src/main/web/florence/js/functions/_loadImportScreen.js": SrcMainWebFlorenceJsFunctions_loadimportscreenJs,
	"../src/main/web/florence/js/functions/_loadMarkdownEditor.js": SrcMainWebFlorenceJsFunctions_loadmarkdowneditorJs,
	"../src/main/web/florence/js/functions/_loadPageDataIntoEditor.js": SrcMainWebFlorenceJsFunctions_loadpagedataintoeditorJs,
	"../src/main/web/florence/js/functions/_loadParentLink.js": SrcMainWebFlorenceJsFunctions_loadparentlinkJs,
	"../src/main/web/florence/js/functions/_loadT16Creator.js": SrcMainWebFlorenceJsFunctions_loadt16creatorJs,
	"../src/main/web/florence/js/functions/_loadT4Creator.js": SrcMainWebFlorenceJsFunctions_loadt4creatorJs,
	"../src/main/web/florence/js/functions/_loadT6Creator.js": SrcMainWebFlorenceJsFunctions_loadt6creatorJs,
	"../src/main/web/florence/js/functions/_loadT7Creator.js": SrcMainWebFlorenceJsFunctions_loadt7creatorJs,
	"../src/main/web/florence/js/functions/_loadT8DatasetCreator.js": SrcMainWebFlorenceJsFunctions_loadt8datasetcreatorJs,
	"../src/main/web/florence/js/functions/_loadT8LandingCreator.js": SrcMainWebFlorenceJsFunctions_loadt8landingcreatorJs,
	"../src/main/web/florence/js/functions/_loadTableBuilder.js": SrcMainWebFlorenceJsFunctions_loadtablebuilderJs,
	"../src/main/web/florence/js/functions/_loadTablesList.js": SrcMainWebFlorenceJsFunctions_loadtableslistJs,
	"../src/main/web/florence/js/functions/_loadVisCreator.js": SrcMainWebFlorenceJsFunctions_loadviscreatorJs,
	"../src/main/web/florence/js/functions/_logout.js": SrcMainWebFlorenceJsFunctions_logoutJs,
	"../src/main/web/florence/js/functions/_makeUrl.js": SrcMainWebFlorenceJsFunctions_makeurlJs,
	"../src/main/web/florence/js/functions/_markdownContentAccordionSection.js": SrcMainWebFlorenceJsFunctions_markdowncontentaccordionsectionJs,
	"../src/main/web/florence/js/functions/_markdownSetLines.js": SrcMainWebFlorenceJsFunctions_markdownsetlinesJs,
	"../src/main/web/florence/js/functions/_menuSelectSettings.js": SrcMainWebFlorenceJsFunctions_menuselectsettingsJs,
	"../src/main/web/florence/js/functions/_moveBrowseNode.js": SrcMainWebFlorenceJsFunctions_movebrowsenodeJs,
	"../src/main/web/florence/js/functions/_parseUrl.js": SrcMainWebFlorenceJsFunctions_parseurlJs,
	"../src/main/web/florence/js/functions/_postApproveCollection.js": SrcMainWebFlorenceJsFunctions_postapprovecollectionJs,
	"../src/main/web/florence/js/functions/_postComplete.js": SrcMainWebFlorenceJsFunctions_postcompleteJs,
	"../src/main/web/florence/js/functions/_postContent.js": SrcMainWebFlorenceJsFunctions_postcontentJs,
	"../src/main/web/florence/js/functions/_postLogin.js": SrcMainWebFlorenceJsFunctions_postloginJs,
	"../src/main/web/florence/js/functions/_postReview.js": SrcMainWebFlorenceJsFunctions_postreviewJs,
	"../src/main/web/florence/js/functions/_postTeam.js": SrcMainWebFlorenceJsFunctions_postteamJs,
	"../src/main/web/florence/js/functions/_postUser.js": SrcMainWebFlorenceJsFunctions_postuserJs,
	"../src/main/web/florence/js/functions/_publish.js": SrcMainWebFlorenceJsFunctions_publishJs,
	"../src/main/web/florence/js/functions/_refreshPreview.js": SrcMainWebFlorenceJsFunctions_refreshpreviewJs,
	"../src/main/web/florence/js/functions/_relatedItemAccordionSection.js": SrcMainWebFlorenceJsFunctions_relateditemaccordionsectionJs,
	"../src/main/web/florence/js/functions/_renameChildren.js": SrcMainWebFlorenceJsFunctions_renamechildrenJs,
	"../src/main/web/florence/js/functions/_renameContent.js": SrcMainWebFlorenceJsFunctions_renamecontentJs,
	"../src/main/web/florence/js/functions/_renderAccordionSections.js": SrcMainWebFlorenceJsFunctions_renderaccordionsectionsJs,
	"../src/main/web/florence/js/functions/_reset.js": SrcMainWebFlorenceJsFunctions_resetJs,
	"../src/main/web/florence/js/functions/_saveContent.js": SrcMainWebFlorenceJsFunctions_savecontentJs,
	"../src/main/web/florence/js/functions/_saveNewCorrection.js": SrcMainWebFlorenceJsFunctions_savenewcorrectionJs,
	"../src/main/web/florence/js/functions/_setShortcuts.js": SrcMainWebFlorenceJsFunctions_setshortcutsJs,
	"../src/main/web/florence/js/functions/_setupFlorence.js": SrcMainWebFlorenceJsFunctions_setupflorenceJs,
	"../src/main/web/florence/js/functions/_t16ReleaseEditor.js": SrcMainWebFlorenceJsFunctions_t16releaseeditorJs,
	"../src/main/web/florence/js/functions/_t1Editor.js": SrcMainWebFlorenceJsFunctions_t1editorJs,
	"../src/main/web/florence/js/functions/_t1EditorCensus.js": SrcMainWebFlorenceJsFunctions_t1editorcensusJs,
	"../src/main/web/florence/js/functions/_t2Editor.js": SrcMainWebFlorenceJsFunctions_t2editorJs,
	"../src/main/web/florence/js/functions/_t3Editor.js": SrcMainWebFlorenceJsFunctions_t3editorJs,
	"../src/main/web/florence/js/functions/_t4ArticleDownloadEditor.js": SrcMainWebFlorenceJsFunctions_t4articledownloadeditorJs,
	"../src/main/web/florence/js/functions/_t4ArticleEditor.js": SrcMainWebFlorenceJsFunctions_t4articleeditorJs,
	"../src/main/web/florence/js/functions/_t4BulletinEditor.js": SrcMainWebFlorenceJsFunctions_t4bulletineditorJs,
	"../src/main/web/florence/js/functions/_t5TimeseriesEditor.js": SrcMainWebFlorenceJsFunctions_t5timeserieseditorJs,
	"../src/main/web/florence/js/functions/_t6CompendiumChapterEditor.js": SrcMainWebFlorenceJsFunctions_t6compendiumchaptereditorJs,
	"../src/main/web/florence/js/functions/_t6CompendiumDataEditor.js": SrcMainWebFlorenceJsFunctions_t6compendiumdataeditorJs,
	"../src/main/web/florence/js/functions/_t6CompendiumEditor.js": SrcMainWebFlorenceJsFunctions_t6compendiumeditorJs,
	"../src/main/web/florence/js/functions/_t7AdHocEditor.js": SrcMainWebFlorenceJsFunctions_t7adhoceditorJs,
	"../src/main/web/florence/js/functions/_t7FoiEditor.js": SrcMainWebFlorenceJsFunctions_t7foieditorJs,
	"../src/main/web/florence/js/functions/_t7MethodologyDownloadEditor.js": SrcMainWebFlorenceJsFunctions_t7methodologydownloadeditorJs,
	"../src/main/web/florence/js/functions/_t7MethodologyEditor.js": SrcMainWebFlorenceJsFunctions_t7methodologyeditorJs,
	"../src/main/web/florence/js/functions/_t7QmiEditor.js": SrcMainWebFlorenceJsFunctions_t7qmieditorJs,
	"../src/main/web/florence/js/functions/_t7StaticArticleEditor.js": SrcMainWebFlorenceJsFunctions_t7staticarticleeditorJs,
	"../src/main/web/florence/js/functions/_t7StaticLandingPageEditor.js": SrcMainWebFlorenceJsFunctions_t7staticlandingpageeditorJs,
	"../src/main/web/florence/js/functions/_t7StaticPageEditor.js": SrcMainWebFlorenceJsFunctions_t7staticpageeditorJs,
	"../src/main/web/florence/js/functions/_t8DatasetEditor.js": SrcMainWebFlorenceJsFunctions_t8dataseteditorJs,
	"../src/main/web/florence/js/functions/_t8LandingPageEditor.js": SrcMainWebFlorenceJsFunctions_t8landingpageeditorJs,
	"../src/main/web/florence/js/functions/_transfer.js": SrcMainWebFlorenceJsFunctions_transferJs,
	"../src/main/web/florence/js/functions/_treeNodeSelect.js": SrcMainWebFlorenceJsFunctions_treenodeselectJs,
	"../src/main/web/florence/js/functions/_ui.js": SrcMainWebFlorenceJsFunctions_uiJs,
	"../src/main/web/florence/js/functions/_uiTidyup.js": SrcMainWebFlorenceJsFunctions_uitidyupJs,
	"../src/main/web/florence/js/functions/_updateContent.js": SrcMainWebFlorenceJsFunctions_updatecontentJs,
	"../src/main/web/florence/js/functions/_viewChangePassword.js": SrcMainWebFlorenceJsFunctions_viewchangepasswordJs,
	"../src/main/web/florence/js/functions/_viewCollectionDetails.js": SrcMainWebFlorenceJsFunctions_viewcollectiondetailsJs,
	"../src/main/web/florence/js/functions/_viewCollections.js": SrcMainWebFlorenceJsFunctions_viewcollectionsJs,
	"../src/main/web/florence/js/functions/_viewController.js": SrcMainWebFlorenceJsFunctions_viewcontrollerJs,
	"../src/main/web/florence/js/functions/_viewLogIn.js": SrcMainWebFlorenceJsFunctions_viewloginJs,
	"../src/main/web/florence/js/functions/_viewPublish.js": SrcMainWebFlorenceJsFunctions_viewpublishJs,
	"../src/main/web/florence/js/functions/_viewPublishDetails.js": SrcMainWebFlorenceJsFunctions_viewpublishdetailsJs,
	"../src/main/web/florence/js/functions/_viewReleaseSelector.js": SrcMainWebFlorenceJsFunctions_viewreleaseselectorJs,
	"../src/main/web/florence/js/functions/_viewReportDetails.js": SrcMainWebFlorenceJsFunctions_viewreportdetailsJs,
	"../src/main/web/florence/js/functions/_viewReports.js": SrcMainWebFlorenceJsFunctions_viewreportsJs,
	"../src/main/web/florence/js/functions/_viewTeamDetails.js": SrcMainWebFlorenceJsFunctions_viewteamdetailsJs,
	"../src/main/web/florence/js/functions/_viewTeams.js": SrcMainWebFlorenceJsFunctions_viewteamsJs,
	"../src/main/web/florence/js/functions/_viewUserDetails.js": SrcMainWebFlorenceJsFunctions_viewuserdetailsJs,
	"../src/main/web/florence/js/functions/_viewUsers.js": SrcMainWebFlorenceJsFunctions_viewusersJs,
	"../src/main/web/florence/js/functions/_viewWorkspace.js": SrcMainWebFlorenceJsFunctions_viewworkspaceJs,
	"../src/main/web/florence/js/functions/_visualisationEditor.js": SrcMainWebFlorenceJsFunctions_visualisationeditorJs,
	"../src/main/web/florence/js/functions/registerServiceWorker.js": SrcMainWebFlorenceJsFunctionsRegisterserviceworkerJs,
	"../src/main/web/florence/js/third-party/Markdown.Converter.js": SrcMainWebFlorenceJsThirdPartyMarkdownConverterJs,
	"../src/main/web/florence/js/third-party/Markdown.Editor.js": SrcMainWebFlorenceJsThirdPartyMarkdownEditorJs,
	"../src/main/web/florence/js/third-party/Markdown.Extra.js": SrcMainWebFlorenceJsThirdPartyMarkdownExtraJs,
	"../src/main/web/florence/js/third-party/Markdown.Sanitizer.js": SrcMainWebFlorenceJsThirdPartyMarkdownSanitizerJs,
	"../src/main/web/florence/js/third-party/ZeroClipboard.min.js": SrcMainWebFlorenceJsThirdPartyZeroclipboardMinJs,
	"../src/main/web/florence/js/third-party/ZeroClipboard.swf": SrcMainWebFlorenceJsThirdPartyZeroclipboardSwf,
	"../src/main/web/florence/js/third-party/autosize.js": SrcMainWebFlorenceJsThirdPartyAutosizeJs,
	"../src/main/web/florence/js/third-party/clipboard.min.js": SrcMainWebFlorenceJsThirdPartyClipboardMinJs,
	"../src/main/web/florence/js/third-party/handlebars.runtime.min.js": SrcMainWebFlorenceJsThirdPartyHandlebarsRuntimeMinJs,
	"../src/main/web/florence/js/third-party/highcharts-more.js": SrcMainWebFlorenceJsThirdPartyHighchartsMoreJs,
	"../src/main/web/florence/js/third-party/highcharts.js": SrcMainWebFlorenceJsThirdPartyHighchartsJs,
	"../src/main/web/florence/js/third-party/jquery-ui-timepicker-addon.js": SrcMainWebFlorenceJsThirdPartyJqueryUiTimepickerAddonJs,
	"../src/main/web/florence/js/third-party/jquery-ui.js": SrcMainWebFlorenceJsThirdPartyJqueryUiJs,
	"../src/main/web/florence/js/third-party/jquery.hotkeys.js": SrcMainWebFlorenceJsThirdPartyJqueryHotkeysJs,
	"../src/main/web/florence/js/third-party/jquery.min.js": SrcMainWebFlorenceJsThirdPartyJqueryMinJs,
	"../src/main/web/florence/js/third-party/mathjax/MathJax.js": SrcMainWebFlorenceJsThirdPartyMathjaxMathjaxJs,
	"../src/main/web/florence/js/third-party/mathjax/config/AM_CHTML-full.js": SrcMainWebFlorenceJsThirdPartyMathjaxConfigAm_chtmlFullJs,
	"../src/main/web/florence/js/third-party/mathjax/config/AM_CHTML.js": SrcMainWebFlorenceJsThirdPartyMathjaxConfigAm_chtmlJs,
	"../src/main/web/florence/js/third-party/mathjax/config/AM_HTMLorMML-full.js": SrcMainWebFlorenceJsThirdPartyMathjaxConfigAm_htmlormmlFullJs,
	"../src/main/web/florence/js/third-party/mathjax/config/AM_HTMLorMML.js": SrcMainWebFlorenceJsThirdPartyMathjaxConfigAm_htmlormmlJs,
	"../src/main/web/florence/js/third-party/mathjax/config/AM_SVG-full.js": SrcMainWebFlorenceJsThirdPartyMathjaxConfigAm_svgFullJs,
	"../src/main/web/florence/js/third-party/mathjax/config/AM_SVG.js": SrcMainWebFlorenceJsThirdPartyMathjaxConfigAm_svgJs,
	"../src/main/web/florence/js/third-party/mathjax/config/Accessible-full.js": SrcMainWebFlorenceJsThirdPartyMathjaxConfigAccessibleFullJs,
	"../src/main/web/florence/js/third-party/mathjax/config/Accessible.js": SrcMainWebFlorenceJsThirdPartyMathjaxConfigAccessibleJs,
	"../src/main/web/florence/js/third-party/mathjax/config/MML_CHTML-full.js": SrcMainWebFlorenceJsThirdPartyMathjaxConfigMml_chtmlFullJs,
	"../src/main/web/florence/js/third-party/mathjax/config/MML_CHTML.js": SrcMainWebFlorenceJsThirdPartyMathjaxConfigMml_chtmlJs,
	"../src/main/web/florence/js/third-party/mathjax/config/MML_HTMLorMML-full.js": SrcMainWebFlorenceJsThirdPartyMathjaxConfigMml_htmlormmlFullJs,
	"../src/main/web/florence/js/third-party/mathjax/config/MML_HTMLorMML.js": SrcMainWebFlorenceJsThirdPartyMathjaxConfigMml_htmlormmlJs,
	"../src/main/web/florence/js/third-party/mathjax/config/MML_SVG-full.js": SrcMainWebFlorenceJsThirdPartyMathjaxConfigMml_svgFullJs,
	"../src/main/web/florence/js/third-party/mathjax/config/MML_SVG.js": SrcMainWebFlorenceJsThirdPartyMathjaxConfigMml_svgJs,
	"../src/main/web/florence/js/third-party/mathjax/config/MMLorHTML.js": SrcMainWebFlorenceJsThirdPartyMathjaxConfigMmlorhtmlJs,
	"../src/main/web/florence/js/third-party/mathjax/config/Safe.js": SrcMainWebFlorenceJsThirdPartyMathjaxConfigSafeJs,
	"../src/main/web/florence/js/third-party/mathjax/config/TeX-AMS-MML_HTMLorMML-full.js": SrcMainWebFlorenceJsThirdPartyMathjaxConfigTexAmsMml_htmlormmlFullJs,
	"../src/main/web/florence/js/third-party/mathjax/config/TeX-AMS-MML_HTMLorMML.js": SrcMainWebFlorenceJsThirdPartyMathjaxConfigTexAmsMml_htmlormmlJs,
	"../src/main/web/florence/js/third-party/mathjax/config/TeX-AMS-MML_SVG-full.js": SrcMainWebFlorenceJsThirdPartyMathjaxConfigTexAmsMml_svgFullJs,
	"../src/main/web/florence/js/third-party/mathjax/config/TeX-AMS-MML_SVG.js": SrcMainWebFlorenceJsThirdPartyMathjaxConfigTexAmsMml_svgJs,
	"../src/main/web/florence/js/third-party/mathjax/config/TeX-AMS_CHTML-full.js": SrcMainWebFlorenceJsThirdPartyMathjaxConfigTexAms_chtmlFullJs,
	"../src/main/web/florence/js/third-party/mathjax/config/TeX-AMS_CHTML.js": SrcMainWebFlorenceJsThirdPartyMathjaxConfigTexAms_chtmlJs,
	"../src/main/web/florence/js/third-party/mathjax/config/TeX-AMS_HTML-full.js": SrcMainWebFlorenceJsThirdPartyMathjaxConfigTexAms_htmlFullJs,
	"../src/main/web/florence/js/third-party/mathjax/config/TeX-AMS_HTML.js": SrcMainWebFlorenceJsThirdPartyMathjaxConfigTexAms_htmlJs,
	"../src/main/web/florence/js/third-party/mathjax/config/TeX-AMS_SVG-full.js": SrcMainWebFlorenceJsThirdPartyMathjaxConfigTexAms_svgFullJs,
	"../src/main/web/florence/js/third-party/mathjax/config/TeX-AMS_SVG.js": SrcMainWebFlorenceJsThirdPartyMathjaxConfigTexAms_svgJs,
	"../src/main/web/florence/js/third-party/mathjax/config/TeX-MML-AM_CHTML-full.js": SrcMainWebFlorenceJsThirdPartyMathjaxConfigTexMmlAm_chtmlFullJs,
	"../src/main/web/florence/js/third-party/mathjax/config/TeX-MML-AM_CHTML.js": SrcMainWebFlorenceJsThirdPartyMathjaxConfigTexMmlAm_chtmlJs,
	"../src/main/web/florence/js/third-party/mathjax/config/TeX-MML-AM_HTMLorMML-full.js": SrcMainWebFlorenceJsThirdPartyMathjaxConfigTexMmlAm_htmlormmlFullJs,
	"../src/main/web/florence/js/third-party/mathjax/config/TeX-MML-AM_HTMLorMML.js": SrcMainWebFlorenceJsThirdPartyMathjaxConfigTexMmlAm_htmlormmlJs,
	"../src/main/web/florence/js/third-party/mathjax/config/TeX-MML-AM_SVG-full.js": SrcMainWebFlorenceJsThirdPartyMathjaxConfigTexMmlAm_svgFullJs,
	"../src/main/web/florence/js/third-party/mathjax/config/TeX-MML-AM_SVG.js": SrcMainWebFlorenceJsThirdPartyMathjaxConfigTexMmlAm_svgJs,
	"../src/main/web/florence/js/third-party/mathjax/config/default.js": SrcMainWebFlorenceJsThirdPartyMathjaxConfigDefaultJs,
	"../src/main/web/florence/js/third-party/mathjax/config/local/local.js": SrcMainWebFlorenceJsThirdPartyMathjaxConfigLocalLocalJs,
	"../src/main/web/florence/js/third-party/mathjax/extensions/AssistiveMML.js": SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsAssistivemmlJs,
	"../src/main/web/florence/js/third-party/mathjax/extensions/CHTML-preview.js": SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsChtmlPreviewJs,
	"../src/main/web/florence/js/third-party/mathjax/extensions/FontWarnings.js": SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsFontwarningsJs,
	"../src/main/web/florence/js/third-party/mathjax/extensions/HTML-CSS/handle-floats.js": SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsHtmlCssHandleFloatsJs,
	"../src/main/web/florence/js/third-party/mathjax/extensions/HelpDialog.js": SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsHelpdialogJs,
	"../src/main/web/florence/js/third-party/mathjax/extensions/MatchWebFonts.js": SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsMatchwebfontsJs,
	"../src/main/web/florence/js/third-party/mathjax/extensions/MathEvents.js": SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsMatheventsJs,
	"../src/main/web/florence/js/third-party/mathjax/extensions/MathML/content-mathml.js": SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsMathmlContentMathmlJs,
	"../src/main/web/florence/js/third-party/mathjax/extensions/MathML/mml3.js": SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsMathmlMml3Js,
	"../src/main/web/florence/js/third-party/mathjax/extensions/MathMenu.js": SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsMathmenuJs,
	"../src/main/web/florence/js/third-party/mathjax/extensions/MathZoom.js": SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsMathzoomJs,
	"../src/main/web/florence/js/third-party/mathjax/extensions/Safe.js": SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsSafeJs,
	"../src/main/web/florence/js/third-party/mathjax/extensions/TeX/AMScd.js": SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsTexAmscdJs,
	"../src/main/web/florence/js/third-party/mathjax/extensions/TeX/AMSmath.js": SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsTexAmsmathJs,
	"../src/main/web/florence/js/third-party/mathjax/extensions/TeX/AMSsymbols.js": SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsTexAmssymbolsJs,
	"../src/main/web/florence/js/third-party/mathjax/extensions/TeX/HTML.js": SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsTexHtmlJs,
	"../src/main/web/florence/js/third-party/mathjax/extensions/TeX/action.js": SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsTexActionJs,
	"../src/main/web/florence/js/third-party/mathjax/extensions/TeX/autobold.js": SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsTexAutoboldJs,
	"../src/main/web/florence/js/third-party/mathjax/extensions/TeX/autoload-all.js": SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsTexAutoloadAllJs,
	"../src/main/web/florence/js/third-party/mathjax/extensions/TeX/bbox.js": SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsTexBboxJs,
	"../src/main/web/florence/js/third-party/mathjax/extensions/TeX/begingroup.js": SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsTexBegingroupJs,
	"../src/main/web/florence/js/third-party/mathjax/extensions/TeX/boldsymbol.js": SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsTexBoldsymbolJs,
	"../src/main/web/florence/js/third-party/mathjax/extensions/TeX/cancel.js": SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsTexCancelJs,
	"../src/main/web/florence/js/third-party/mathjax/extensions/TeX/color.js": SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsTexColorJs,
	"../src/main/web/florence/js/third-party/mathjax/extensions/TeX/enclose.js": SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsTexEncloseJs,
	"../src/main/web/florence/js/third-party/mathjax/extensions/TeX/extpfeil.js": SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsTexExtpfeilJs,
	"../src/main/web/florence/js/third-party/mathjax/extensions/TeX/mathchoice.js": SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsTexMathchoiceJs,
	"../src/main/web/florence/js/third-party/mathjax/extensions/TeX/mediawiki-texvc.js": SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsTexMediawikiTexvcJs,
	"../src/main/web/florence/js/third-party/mathjax/extensions/TeX/mhchem.js": SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsTexMhchemJs,
	"../src/main/web/florence/js/third-party/mathjax/extensions/TeX/newcommand.js": SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsTexNewcommandJs,
	"../src/main/web/florence/js/third-party/mathjax/extensions/TeX/noErrors.js": SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsTexNoerrorsJs,
	"../src/main/web/florence/js/third-party/mathjax/extensions/TeX/noUndefined.js": SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsTexNoundefinedJs,
	"../src/main/web/florence/js/third-party/mathjax/extensions/TeX/unicode.js": SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsTexUnicodeJs,
	"../src/main/web/florence/js/third-party/mathjax/extensions/TeX/verb.js": SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsTexVerbJs,
	"../src/main/web/florence/js/third-party/mathjax/extensions/asciimath2jax.js": SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsAsciimath2jaxJs,
	"../src/main/web/florence/js/third-party/mathjax/extensions/fast-preview.js": SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsFastPreviewJs,
	"../src/main/web/florence/js/third-party/mathjax/extensions/jsMath2jax.js": SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsJsmath2jaxJs,
	"../src/main/web/florence/js/third-party/mathjax/extensions/mml2jax.js": SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsMml2jaxJs,
	"../src/main/web/florence/js/third-party/mathjax/extensions/tex2jax.js": SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsTex2jaxJs,
	"../src/main/web/florence/js/third-party/mathjax/extensions/toMathML.js": SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsTomathmlJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/element/mml/jax.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxElementMmlJaxJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/element/mml/optable/Arrows.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxElementMmlOptableArrowsJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/element/mml/optable/BasicLatin.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxElementMmlOptableBasiclatinJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/element/mml/optable/CombDiacritMarks.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxElementMmlOptableCombdiacritmarksJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/element/mml/optable/CombDiactForSymbols.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxElementMmlOptableCombdiactforsymbolsJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/element/mml/optable/Dingbats.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxElementMmlOptableDingbatsJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/element/mml/optable/GeneralPunctuation.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxElementMmlOptableGeneralpunctuationJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/element/mml/optable/GeometricShapes.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxElementMmlOptableGeometricshapesJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/element/mml/optable/GreekAndCoptic.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxElementMmlOptableGreekandcopticJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/element/mml/optable/Latin1Supplement.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxElementMmlOptableLatin1supplementJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/element/mml/optable/LetterlikeSymbols.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxElementMmlOptableLetterlikesymbolsJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/element/mml/optable/MathOperators.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxElementMmlOptableMathoperatorsJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/element/mml/optable/MiscMathSymbolsA.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxElementMmlOptableMiscmathsymbolsaJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/element/mml/optable/MiscMathSymbolsB.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxElementMmlOptableMiscmathsymbolsbJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/element/mml/optable/MiscSymbolsAndArrows.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxElementMmlOptableMiscsymbolsandarrowsJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/element/mml/optable/MiscTechnical.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxElementMmlOptableMisctechnicalJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/element/mml/optable/SpacingModLetters.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxElementMmlOptableSpacingmodlettersJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/element/mml/optable/SuppMathOperators.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxElementMmlOptableSuppmathoperatorsJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/element/mml/optable/SupplementalArrowsA.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxElementMmlOptableSupplementalarrowsaJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/element/mml/optable/SupplementalArrowsB.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxElementMmlOptableSupplementalarrowsbJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/input/AsciiMath/config.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputAsciimathConfigJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/input/AsciiMath/jax.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputAsciimathJaxJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/input/MathML/config.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlConfigJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/input/MathML/entities/a.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlEntitiesAJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/input/MathML/entities/b.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlEntitiesBJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/input/MathML/entities/c.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlEntitiesCJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/input/MathML/entities/d.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlEntitiesDJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/input/MathML/entities/e.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlEntitiesEJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/input/MathML/entities/f.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlEntitiesFJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/input/MathML/entities/fr.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlEntitiesFrJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/input/MathML/entities/g.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlEntitiesGJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/input/MathML/entities/h.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlEntitiesHJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/input/MathML/entities/i.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlEntitiesIJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/input/MathML/entities/j.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlEntitiesJJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/input/MathML/entities/k.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlEntitiesKJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/input/MathML/entities/l.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlEntitiesLJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/input/MathML/entities/m.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlEntitiesMJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/input/MathML/entities/n.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlEntitiesNJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/input/MathML/entities/o.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlEntitiesOJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/input/MathML/entities/opf.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlEntitiesOpfJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/input/MathML/entities/p.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlEntitiesPJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/input/MathML/entities/q.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlEntitiesQJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/input/MathML/entities/r.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlEntitiesRJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/input/MathML/entities/s.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlEntitiesSJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/input/MathML/entities/scr.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlEntitiesScrJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/input/MathML/entities/t.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlEntitiesTJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/input/MathML/entities/u.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlEntitiesUJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/input/MathML/entities/v.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlEntitiesVJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/input/MathML/entities/w.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlEntitiesWJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/input/MathML/entities/x.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlEntitiesXJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/input/MathML/entities/y.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlEntitiesYJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/input/MathML/entities/z.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlEntitiesZJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/input/MathML/jax.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlJaxJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/input/TeX/config.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputTexConfigJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/input/TeX/jax.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputTexJaxJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/CommonHTML/autoload/annotation-xml.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputCommonhtmlAutoloadAnnotationXmlJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/CommonHTML/autoload/maction.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputCommonhtmlAutoloadMactionJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/CommonHTML/autoload/menclose.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputCommonhtmlAutoloadMencloseJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/CommonHTML/autoload/mglyph.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputCommonhtmlAutoloadMglyphJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/CommonHTML/autoload/mmultiscripts.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputCommonhtmlAutoloadMmultiscriptsJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/CommonHTML/autoload/ms.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputCommonhtmlAutoloadMsJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/CommonHTML/autoload/mtable.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputCommonhtmlAutoloadMtableJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/CommonHTML/autoload/multiline.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputCommonhtmlAutoloadMultilineJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/CommonHTML/config.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputCommonhtmlConfigJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/CommonHTML/fonts/TeX/AMS-Regular.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputCommonhtmlFontsTexAmsRegularJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/CommonHTML/fonts/TeX/Caligraphic-Bold.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputCommonhtmlFontsTexCaligraphicBoldJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/CommonHTML/fonts/TeX/Fraktur-Bold.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputCommonhtmlFontsTexFrakturBoldJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/CommonHTML/fonts/TeX/Fraktur-Regular.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputCommonhtmlFontsTexFrakturRegularJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/CommonHTML/fonts/TeX/Main-Bold.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputCommonhtmlFontsTexMainBoldJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/CommonHTML/fonts/TeX/Math-BoldItalic.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputCommonhtmlFontsTexMathBolditalicJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/CommonHTML/fonts/TeX/SansSerif-Bold.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputCommonhtmlFontsTexSansserifBoldJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/CommonHTML/fonts/TeX/SansSerif-Italic.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputCommonhtmlFontsTexSansserifItalicJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/CommonHTML/fonts/TeX/SansSerif-Regular.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputCommonhtmlFontsTexSansserifRegularJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/CommonHTML/fonts/TeX/Script-Regular.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputCommonhtmlFontsTexScriptRegularJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/CommonHTML/fonts/TeX/Typewriter-Regular.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputCommonhtmlFontsTexTypewriterRegularJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/CommonHTML/fonts/TeX/fontdata-extra.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputCommonhtmlFontsTexFontdataExtraJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/CommonHTML/fonts/TeX/fontdata.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputCommonhtmlFontsTexFontdataJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/CommonHTML/jax.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputCommonhtmlJaxJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/autoload/annotation-xml.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssAutoloadAnnotationXmlJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/autoload/maction.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssAutoloadMactionJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/autoload/menclose.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssAutoloadMencloseJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/autoload/mglyph.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssAutoloadMglyphJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/autoload/mmultiscripts.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssAutoloadMmultiscriptsJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/autoload/ms.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssAutoloadMsJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/autoload/mtable.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssAutoloadMtableJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/autoload/multiline.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssAutoloadMultilineJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/blank.gif": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssBlankGif,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/config.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssConfigJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Asana-Math/Alphabets/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsAsanaMathAlphabetsRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Asana-Math/Arrows/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsAsanaMathArrowsRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Asana-Math/DoubleStruck/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsAsanaMathDoublestruckRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Asana-Math/Fraktur/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsAsanaMathFrakturRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Asana-Math/Latin/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsAsanaMathLatinRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Asana-Math/Main/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsAsanaMathMainRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Asana-Math/Marks/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsAsanaMathMarksRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Asana-Math/Misc/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsAsanaMathMiscRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Asana-Math/Monospace/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsAsanaMathMonospaceRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Asana-Math/NonUnicode/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsAsanaMathNonunicodeRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Asana-Math/Normal/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsAsanaMathNormalRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Asana-Math/Operators/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsAsanaMathOperatorsRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Asana-Math/SansSerif/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsAsanaMathSansserifRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Asana-Math/Script/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsAsanaMathScriptRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Asana-Math/Shapes/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsAsanaMathShapesRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Asana-Math/Size1/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsAsanaMathSize1RegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Asana-Math/Size2/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsAsanaMathSize2RegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Asana-Math/Size3/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsAsanaMathSize3RegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Asana-Math/Size4/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsAsanaMathSize4RegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Asana-Math/Size5/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsAsanaMathSize5RegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Asana-Math/Size6/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsAsanaMathSize6RegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Asana-Math/Symbols/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsAsanaMathSymbolsRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Asana-Math/Variants/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsAsanaMathVariantsRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Asana-Math/fontdata-extra.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsAsanaMathFontdataExtraJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Asana-Math/fontdata.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsAsanaMathFontdataJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Pagella/Alphabets/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyrePagellaAlphabetsRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Pagella/Arrows/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyrePagellaArrowsRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Pagella/DoubleStruck/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyrePagellaDoublestruckRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Pagella/Fraktur/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyrePagellaFrakturRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Pagella/Latin/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyrePagellaLatinRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Pagella/Main/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyrePagellaMainRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Pagella/Marks/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyrePagellaMarksRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Pagella/Misc/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyrePagellaMiscRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Pagella/Monospace/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyrePagellaMonospaceRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Pagella/NonUnicode/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyrePagellaNonunicodeRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Pagella/Normal/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyrePagellaNormalRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Pagella/Operators/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyrePagellaOperatorsRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Pagella/SansSerif/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyrePagellaSansserifRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Pagella/Script/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyrePagellaScriptRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Pagella/Shapes/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyrePagellaShapesRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Pagella/Size1/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyrePagellaSize1RegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Pagella/Size2/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyrePagellaSize2RegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Pagella/Size3/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyrePagellaSize3RegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Pagella/Size4/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyrePagellaSize4RegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Pagella/Size5/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyrePagellaSize5RegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Pagella/Size6/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyrePagellaSize6RegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Pagella/Symbols/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyrePagellaSymbolsRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Pagella/Variants/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyrePagellaVariantsRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Pagella/fontdata-extra.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyrePagellaFontdataExtraJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Pagella/fontdata.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyrePagellaFontdataJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Termes/Alphabets/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyreTermesAlphabetsRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Termes/Arrows/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyreTermesArrowsRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Termes/DoubleStruck/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyreTermesDoublestruckRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Termes/Fraktur/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyreTermesFrakturRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Termes/Latin/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyreTermesLatinRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Termes/Main/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyreTermesMainRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Termes/Marks/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyreTermesMarksRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Termes/Misc/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyreTermesMiscRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Termes/Monospace/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyreTermesMonospaceRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Termes/NonUnicode/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyreTermesNonunicodeRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Termes/Normal/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyreTermesNormalRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Termes/Operators/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyreTermesOperatorsRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Termes/SansSerif/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyreTermesSansserifRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Termes/Script/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyreTermesScriptRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Termes/Shapes/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyreTermesShapesRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Termes/Size1/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyreTermesSize1RegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Termes/Size2/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyreTermesSize2RegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Termes/Size3/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyreTermesSize3RegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Termes/Size4/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyreTermesSize4RegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Termes/Size5/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyreTermesSize5RegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Termes/Size6/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyreTermesSize6RegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Termes/Symbols/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyreTermesSymbolsRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Termes/Variants/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyreTermesVariantsRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Termes/fontdata-extra.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyreTermesFontdataExtraJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Gyre-Termes/fontdata.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyreTermesFontdataJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Latin-Modern/Alphabets/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsLatinModernAlphabetsRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Latin-Modern/Arrows/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsLatinModernArrowsRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Latin-Modern/DoubleStruck/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsLatinModernDoublestruckRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Latin-Modern/Fraktur/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsLatinModernFrakturRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Latin-Modern/Latin/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsLatinModernLatinRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Latin-Modern/Main/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsLatinModernMainRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Latin-Modern/Marks/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsLatinModernMarksRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Latin-Modern/Misc/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsLatinModernMiscRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Latin-Modern/Monospace/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsLatinModernMonospaceRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Latin-Modern/NonUnicode/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsLatinModernNonunicodeRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Latin-Modern/Normal/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsLatinModernNormalRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Latin-Modern/Operators/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsLatinModernOperatorsRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Latin-Modern/SansSerif/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsLatinModernSansserifRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Latin-Modern/Script/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsLatinModernScriptRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Latin-Modern/Shapes/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsLatinModernShapesRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Latin-Modern/Size1/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsLatinModernSize1RegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Latin-Modern/Size2/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsLatinModernSize2RegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Latin-Modern/Size3/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsLatinModernSize3RegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Latin-Modern/Size4/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsLatinModernSize4RegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Latin-Modern/Size5/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsLatinModernSize5RegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Latin-Modern/Size6/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsLatinModernSize6RegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Latin-Modern/Size7/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsLatinModernSize7RegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Latin-Modern/Symbols/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsLatinModernSymbolsRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Latin-Modern/Variants/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsLatinModernVariantsRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Latin-Modern/fontdata-extra.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsLatinModernFontdataExtraJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Latin-Modern/fontdata.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsLatinModernFontdataJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Neo-Euler/Alphabets/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsNeoEulerAlphabetsRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Neo-Euler/Arrows/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsNeoEulerArrowsRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Neo-Euler/Fraktur/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsNeoEulerFrakturRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Neo-Euler/Main/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsNeoEulerMainRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Neo-Euler/Marks/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsNeoEulerMarksRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Neo-Euler/NonUnicode/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsNeoEulerNonunicodeRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Neo-Euler/Normal/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsNeoEulerNormalRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Neo-Euler/Operators/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsNeoEulerOperatorsRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Neo-Euler/Script/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsNeoEulerScriptRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Neo-Euler/Shapes/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsNeoEulerShapesRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Neo-Euler/Size1/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsNeoEulerSize1RegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Neo-Euler/Size2/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsNeoEulerSize2RegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Neo-Euler/Size3/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsNeoEulerSize3RegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Neo-Euler/Size4/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsNeoEulerSize4RegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Neo-Euler/Size5/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsNeoEulerSize5RegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Neo-Euler/Symbols/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsNeoEulerSymbolsRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Neo-Euler/Variants/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsNeoEulerVariantsRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Neo-Euler/fontdata-extra.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsNeoEulerFontdataExtraJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/Neo-Euler/fontdata.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsNeoEulerFontdataJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/AlphaPresentForms.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldAlphapresentformsJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/Arrows.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldArrowsJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/BBBold.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldBbboldJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/BoldFraktur.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldBoldfrakturJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/BoxDrawing.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldBoxdrawingJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/CombDiacritMarks.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldCombdiacritmarksJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/CombDiactForSymbols.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldCombdiactforsymbolsJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/ControlPictures.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldControlpicturesJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/CurrencySymbols.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldCurrencysymbolsJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/Cyrillic.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldCyrillicJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/EnclosedAlphanum.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldEnclosedalphanumJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/GeneralPunctuation.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldGeneralpunctuationJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/GeometricShapes.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldGeometricshapesJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/GreekAndCoptic.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldGreekandcopticJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/GreekBold.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldGreekboldJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/GreekSSBold.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldGreekssboldJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/IPAExtensions.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldIpaextensionsJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/Latin1Supplement.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldLatin1supplementJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/LatinExtendedA.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldLatinextendedaJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/LatinExtendedAdditional.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldLatinextendedadditionalJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/LatinExtendedB.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldLatinextendedbJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/LatinExtendedD.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldLatinextendeddJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/LetterlikeSymbols.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldLetterlikesymbolsJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/MathBold.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldMathboldJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/MathOperators.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldMathoperatorsJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/MathSSBold.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldMathssboldJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/MiscMathSymbolsA.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldMiscmathsymbolsaJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/MiscMathSymbolsB.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldMiscmathsymbolsbJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/MiscSymbols.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldMiscsymbolsJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/MiscTechnical.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldMisctechnicalJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/NumberForms.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldNumberformsJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/PhoneticExtensions.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldPhoneticextensionsJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/SpacingModLetters.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldSpacingmodlettersJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/SuperAndSubscripts.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldSuperandsubscriptsJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Bold/SuppMathOperators.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldSuppmathoperatorsJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/BoldItalic/AlphaPresentForms.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBolditalicAlphapresentformsJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/BoldItalic/BasicLatin.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBolditalicBasiclatinJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/BoldItalic/BoxDrawing.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBolditalicBoxdrawingJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/BoldItalic/CombDiactForSymbols.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBolditalicCombdiactforsymbolsJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/BoldItalic/ControlPictures.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBolditalicControlpicturesJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/BoldItalic/CurrencySymbols.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBolditalicCurrencysymbolsJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/BoldItalic/Cyrillic.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBolditalicCyrillicJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/BoldItalic/EnclosedAlphanum.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBolditalicEnclosedalphanumJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/BoldItalic/GeneralPunctuation.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBolditalicGeneralpunctuationJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/BoldItalic/GreekAndCoptic.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBolditalicGreekandcopticJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/BoldItalic/GreekBoldItalic.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBolditalicGreekbolditalicJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/BoldItalic/GreekSSBoldItalic.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBolditalicGreekssbolditalicJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/BoldItalic/IPAExtensions.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBolditalicIpaextensionsJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/BoldItalic/Latin1Supplement.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBolditalicLatin1supplementJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/BoldItalic/LatinExtendedA.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBolditalicLatinextendedaJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/BoldItalic/LatinExtendedAdditional.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBolditalicLatinextendedadditionalJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/BoldItalic/LatinExtendedB.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBolditalicLatinextendedbJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/BoldItalic/LetterlikeSymbols.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBolditalicLetterlikesymbolsJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/BoldItalic/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBolditalicMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/BoldItalic/MathBoldItalic.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBolditalicMathbolditalicJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/BoldItalic/MathBoldScript.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBolditalicMathboldscriptJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/BoldItalic/MathOperators.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBolditalicMathoperatorsJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/BoldItalic/MathSSItalicBold.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBolditalicMathssitalicboldJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/BoldItalic/SpacingModLetters.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBolditalicSpacingmodlettersJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Italic/AlphaPresentForms.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralItalicAlphapresentformsJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Italic/BoxDrawing.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralItalicBoxdrawingJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Italic/CombDiactForSymbols.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralItalicCombdiactforsymbolsJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Italic/ControlPictures.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralItalicControlpicturesJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Italic/CurrencySymbols.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralItalicCurrencysymbolsJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Italic/Cyrillic.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralItalicCyrillicJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Italic/EnclosedAlphanum.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralItalicEnclosedalphanumJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Italic/GeneralPunctuation.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralItalicGeneralpunctuationJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Italic/GreekAndCoptic.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralItalicGreekandcopticJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Italic/GreekItalic.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralItalicGreekitalicJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Italic/IPAExtensions.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralItalicIpaextensionsJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Italic/Latin1Supplement.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralItalicLatin1supplementJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Italic/LatinExtendedA.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralItalicLatinextendedaJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Italic/LatinExtendedAdditional.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralItalicLatinextendedadditionalJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Italic/LatinExtendedB.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralItalicLatinextendedbJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Italic/LetterlikeSymbols.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralItalicLetterlikesymbolsJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Italic/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralItalicMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Italic/MathItalic.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralItalicMathitalicJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Italic/MathOperators.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralItalicMathoperatorsJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Italic/MathSSItalic.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralItalicMathssitalicJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Italic/MathScript.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralItalicMathscriptJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Italic/SpacingModLetters.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralItalicSpacingmodlettersJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Italic/ij.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralItalicIjJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/AlphaPresentForms.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularAlphapresentformsJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/Arrows.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularArrowsJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/BBBold.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularBbboldJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/BlockElements.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularBlockelementsJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/BoldFraktur.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularBoldfrakturJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/BoxDrawing.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularBoxdrawingJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/CJK.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularCjkJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/CombDiacritMarks.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularCombdiacritmarksJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/CombDiactForSymbols.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularCombdiactforsymbolsJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/ControlPictures.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularControlpicturesJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/CurrencySymbols.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularCurrencysymbolsJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/Cyrillic.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularCyrillicJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/Dingbats.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularDingbatsJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/EnclosedAlphanum.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularEnclosedalphanumJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/Fraktur.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularFrakturJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/GeneralPunctuation.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularGeneralpunctuationJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/GeometricShapes.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularGeometricshapesJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/GreekAndCoptic.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularGreekandcopticJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/GreekBold.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularGreekboldJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/GreekBoldItalic.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularGreekbolditalicJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/GreekItalic.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularGreekitalicJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/GreekSSBold.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularGreekssboldJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/GreekSSBoldItalic.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularGreekssbolditalicJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/Hiragana.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularHiraganaJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/IPAExtensions.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularIpaextensionsJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/Latin1Supplement.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularLatin1supplementJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/LatinExtendedA.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularLatinextendedaJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/LatinExtendedAdditional.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularLatinextendedadditionalJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/LatinExtendedB.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularLatinextendedbJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/LatinExtendedD.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularLatinextendeddJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/LetterlikeSymbols.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularLetterlikesymbolsJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/MathBold.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularMathboldJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/MathBoldItalic.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularMathbolditalicJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/MathBoldScript.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularMathboldscriptJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/MathItalic.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularMathitalicJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/MathOperators.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularMathoperatorsJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/MathSS.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularMathssJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/MathSSBold.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularMathssboldJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/MathSSItalic.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularMathssitalicJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/MathSSItalicBold.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularMathssitalicboldJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/MathScript.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularMathscriptJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/MathTT.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularMathttJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/MiscMathSymbolsA.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularMiscmathsymbolsaJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/MiscMathSymbolsB.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularMiscmathsymbolsbJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/MiscSymbols.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularMiscsymbolsJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/MiscSymbolsAndArrows.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularMiscsymbolsandarrowsJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/MiscTechnical.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularMisctechnicalJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/NumberForms.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularNumberformsJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/PhoneticExtensions.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularPhoneticextensionsJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/SpacingModLetters.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularSpacingmodlettersJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/Specials.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularSpecialsJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/SuperAndSubscripts.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularSuperandsubscriptsJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/SuppMathOperators.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularSuppmathoperatorsJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/SupplementalArrowsA.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularSupplementalarrowsaJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/SupplementalArrowsB.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularSupplementalarrowsbJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/General/Regular/ij.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularIjJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/IntegralsD/Bold/All.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixIntegralsdBoldAllJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/IntegralsD/Regular/All.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixIntegralsdRegularAllJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/IntegralsD/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixIntegralsdRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/IntegralsSm/Bold/All.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixIntegralssmBoldAllJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/IntegralsSm/Regular/All.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixIntegralssmRegularAllJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/IntegralsSm/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixIntegralssmRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/IntegralsUp/Bold/All.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixIntegralsupBoldAllJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/IntegralsUp/Regular/All.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixIntegralsupRegularAllJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/IntegralsUp/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixIntegralsupRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/IntegralsUpD/Bold/All.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixIntegralsupdBoldAllJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/IntegralsUpD/Regular/All.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixIntegralsupdRegularAllJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/IntegralsUpD/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixIntegralsupdRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/IntegralsUpSm/Bold/All.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixIntegralsupsmBoldAllJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/IntegralsUpSm/Regular/All.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixIntegralsupsmRegularAllJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/IntegralsUpSm/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixIntegralsupsmRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/NonUnicode/Bold/All.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixNonunicodeBoldAllJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/NonUnicode/Bold/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixNonunicodeBoldMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/NonUnicode/Bold/PrivateUse.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixNonunicodeBoldPrivateuseJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/NonUnicode/BoldItalic/All.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixNonunicodeBolditalicAllJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/NonUnicode/BoldItalic/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixNonunicodeBolditalicMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/NonUnicode/BoldItalic/PrivateUse.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixNonunicodeBolditalicPrivateuseJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/NonUnicode/Italic/All.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixNonunicodeItalicAllJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/NonUnicode/Italic/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixNonunicodeItalicMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/NonUnicode/Italic/PrivateUse.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixNonunicodeItalicPrivateuseJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/NonUnicode/Regular/All.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixNonunicodeRegularAllJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/NonUnicode/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixNonunicodeRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/NonUnicode/Regular/PrivateUse.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixNonunicodeRegularPrivateuseJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/SizeFiveSym/Regular/All.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixSizefivesymRegularAllJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/SizeFiveSym/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixSizefivesymRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/SizeFourSym/Bold/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixSizefoursymBoldMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/SizeFourSym/Regular/All.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixSizefoursymRegularAllJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/SizeFourSym/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixSizefoursymRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/SizeOneSym/Bold/All.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixSizeonesymBoldAllJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/SizeOneSym/Bold/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixSizeonesymBoldMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/SizeOneSym/Regular/All.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixSizeonesymRegularAllJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/SizeOneSym/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixSizeonesymRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/SizeThreeSym/Bold/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixSizethreesymBoldMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/SizeThreeSym/Regular/All.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixSizethreesymRegularAllJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/SizeThreeSym/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixSizethreesymRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/SizeTwoSym/Bold/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixSizetwosymBoldMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/SizeTwoSym/Regular/All.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixSizetwosymRegularAllJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/SizeTwoSym/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixSizetwosymRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/Variants/Bold/All.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixVariantsBoldAllJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/Variants/Bold/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixVariantsBoldMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/Variants/Regular/All.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixVariantsRegularAllJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/Variants/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixVariantsRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/fontdata-1.0.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixFontdata10Js,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/fontdata-beta.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixFontdataBetaJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/fontdata-extra.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixFontdataExtraJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX/fontdata.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixFontdataJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Alphabets/Bold/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebAlphabetsBoldMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Alphabets/BoldItalic/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebAlphabetsBolditalicMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Alphabets/Italic/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebAlphabetsItalicMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Alphabets/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebAlphabetsRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Arrows/Bold/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebArrowsBoldMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Arrows/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebArrowsRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/DoubleStruck/Bold/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebDoublestruckBoldMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/DoubleStruck/BoldItalic/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebDoublestruckBolditalicMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/DoubleStruck/Italic/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebDoublestruckItalicMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/DoubleStruck/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebDoublestruckRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Fraktur/Bold/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebFrakturBoldMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Fraktur/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebFrakturRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Latin/Bold/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebLatinBoldMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Latin/BoldItalic/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebLatinBolditalicMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Latin/Italic/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebLatinItalicMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Latin/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebLatinRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Main/Bold/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebMainBoldMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Main/BoldItalic/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebMainBolditalicMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Main/Italic/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebMainItalicMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Main/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebMainRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Marks/Bold/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebMarksBoldMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Marks/BoldItalic/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebMarksBolditalicMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Marks/Italic/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebMarksItalicMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Marks/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebMarksRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Misc/Bold/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebMiscBoldMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Misc/BoldItalic/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebMiscBolditalicMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Misc/Italic/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebMiscItalicMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Misc/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebMiscRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Monospace/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebMonospaceRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Normal/Bold/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebNormalBoldMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Normal/BoldItalic/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebNormalBolditalicMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Normal/Italic/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebNormalItalicMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Operators/Bold/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebOperatorsBoldMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Operators/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebOperatorsRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/SansSerif/Bold/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebSansserifBoldMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/SansSerif/BoldItalic/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebSansserifBolditalicMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/SansSerif/Italic/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebSansserifItalicMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/SansSerif/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebSansserifRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Script/BoldItalic/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebScriptBolditalicMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Script/Italic/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebScriptItalicMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Script/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebScriptRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Shapes/Bold/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebShapesBoldMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Shapes/BoldItalic/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebShapesBolditalicMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Shapes/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebShapesRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Size1/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebSize1RegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Size2/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebSize2RegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Size3/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebSize3RegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Size4/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebSize4RegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Size5/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebSize5RegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Symbols/Bold/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebSymbolsBoldMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Symbols/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebSymbolsRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Variants/Bold/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebVariantsBoldMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Variants/BoldItalic/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebVariantsBolditalicMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Variants/Italic/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebVariantsItalicMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/Variants/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebVariantsRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/fontdata-extra.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebFontdataExtraJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/STIX-Web/fontdata.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebFontdataJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/AMS/Regular/Arrows.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexAmsRegularArrowsJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/AMS/Regular/BBBold.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexAmsRegularBbboldJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/AMS/Regular/BoxDrawing.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexAmsRegularBoxdrawingJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/AMS/Regular/CombDiacritMarks.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexAmsRegularCombdiacritmarksJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/AMS/Regular/Dingbats.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexAmsRegularDingbatsJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/AMS/Regular/EnclosedAlphanum.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexAmsRegularEnclosedalphanumJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/AMS/Regular/GeneralPunctuation.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexAmsRegularGeneralpunctuationJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/AMS/Regular/GeometricShapes.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexAmsRegularGeometricshapesJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/AMS/Regular/GreekAndCoptic.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexAmsRegularGreekandcopticJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/AMS/Regular/Latin1Supplement.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexAmsRegularLatin1supplementJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/AMS/Regular/LatinExtendedA.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexAmsRegularLatinextendedaJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/AMS/Regular/LetterlikeSymbols.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexAmsRegularLetterlikesymbolsJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/AMS/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexAmsRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/AMS/Regular/MathOperators.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexAmsRegularMathoperatorsJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/AMS/Regular/MiscMathSymbolsB.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexAmsRegularMiscmathsymbolsbJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/AMS/Regular/MiscSymbols.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexAmsRegularMiscsymbolsJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/AMS/Regular/MiscTechnical.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexAmsRegularMisctechnicalJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/AMS/Regular/PUA.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexAmsRegularPuaJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/AMS/Regular/SpacingModLetters.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexAmsRegularSpacingmodlettersJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/AMS/Regular/SuppMathOperators.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexAmsRegularSuppmathoperatorsJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Caligraphic/Bold/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexCaligraphicBoldMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Caligraphic/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexCaligraphicRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Fraktur/Bold/BasicLatin.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexFrakturBoldBasiclatinJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Fraktur/Bold/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexFrakturBoldMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Fraktur/Bold/Other.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexFrakturBoldOtherJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Fraktur/Bold/PUA.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexFrakturBoldPuaJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Fraktur/Regular/BasicLatin.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexFrakturRegularBasiclatinJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Fraktur/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexFrakturRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Fraktur/Regular/Other.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexFrakturRegularOtherJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Fraktur/Regular/PUA.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexFrakturRegularPuaJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Greek/Bold/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexGreekBoldMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Greek/BoldItalic/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexGreekBolditalicMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Greek/Italic/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexGreekItalicMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Greek/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexGreekRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Main/Bold/Arrows.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexMainBoldArrowsJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Main/Bold/CombDiacritMarks.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexMainBoldCombdiacritmarksJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Main/Bold/CombDiactForSymbols.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexMainBoldCombdiactforsymbolsJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Main/Bold/GeneralPunctuation.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexMainBoldGeneralpunctuationJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Main/Bold/GeometricShapes.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexMainBoldGeometricshapesJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Main/Bold/Latin1Supplement.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexMainBoldLatin1supplementJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Main/Bold/LatinExtendedA.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexMainBoldLatinextendedaJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Main/Bold/LatinExtendedB.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexMainBoldLatinextendedbJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Main/Bold/LetterlikeSymbols.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexMainBoldLetterlikesymbolsJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Main/Bold/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexMainBoldMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Main/Bold/MathOperators.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexMainBoldMathoperatorsJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Main/Bold/MiscMathSymbolsA.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexMainBoldMiscmathsymbolsaJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Main/Bold/MiscSymbols.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexMainBoldMiscsymbolsJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Main/Bold/MiscTechnical.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexMainBoldMisctechnicalJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Main/Bold/SpacingModLetters.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexMainBoldSpacingmodlettersJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Main/Bold/SuppMathOperators.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexMainBoldSuppmathoperatorsJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Main/Bold/SupplementalArrowsA.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexMainBoldSupplementalarrowsaJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Main/Italic/CombDiacritMarks.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexMainItalicCombdiacritmarksJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Main/Italic/GeneralPunctuation.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexMainItalicGeneralpunctuationJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Main/Italic/Latin1Supplement.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexMainItalicLatin1supplementJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Main/Italic/LetterlikeSymbols.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexMainItalicLetterlikesymbolsJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Main/Italic/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexMainItalicMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Main/Regular/CombDiacritMarks.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexMainRegularCombdiacritmarksJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Main/Regular/GeometricShapes.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexMainRegularGeometricshapesJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Main/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexMainRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Main/Regular/MiscSymbols.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexMainRegularMiscsymbolsJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Main/Regular/SpacingModLetters.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexMainRegularSpacingmodlettersJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Math/BoldItalic/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexMathBolditalicMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Math/Italic/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexMathItalicMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/SansSerif/Bold/BasicLatin.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexSansserifBoldBasiclatinJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/SansSerif/Bold/CombDiacritMarks.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexSansserifBoldCombdiacritmarksJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/SansSerif/Bold/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexSansserifBoldMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/SansSerif/Bold/Other.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexSansserifBoldOtherJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/SansSerif/Italic/BasicLatin.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexSansserifItalicBasiclatinJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/SansSerif/Italic/CombDiacritMarks.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexSansserifItalicCombdiacritmarksJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/SansSerif/Italic/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexSansserifItalicMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/SansSerif/Italic/Other.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexSansserifItalicOtherJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/SansSerif/Regular/BasicLatin.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexSansserifRegularBasiclatinJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/SansSerif/Regular/CombDiacritMarks.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexSansserifRegularCombdiacritmarksJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/SansSerif/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexSansserifRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/SansSerif/Regular/Other.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexSansserifRegularOtherJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Script/Regular/BasicLatin.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexScriptRegularBasiclatinJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Script/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexScriptRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Script/Regular/Other.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexScriptRegularOtherJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Size1/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexSize1RegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Size2/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexSize2RegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Size3/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexSize3RegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Size4/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexSize4RegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Typewriter/Regular/BasicLatin.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexTypewriterRegularBasiclatinJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Typewriter/Regular/CombDiacritMarks.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexTypewriterRegularCombdiacritmarksJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Typewriter/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexTypewriterRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/Typewriter/Regular/Other.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexTypewriterRegularOtherJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/WinChrome/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexWinchromeRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/WinIE6/Regular/AMS.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexWinie6RegularAmsJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/WinIE6/Regular/Bold.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexWinie6RegularBoldJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/WinIE6/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexWinie6RegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/fontdata-extra.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexFontdataExtraJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/fonts/TeX/fontdata.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexFontdataJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/imageFonts.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssImagefontsJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/HTML-CSS/jax.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssJaxJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/NativeMML/config.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputNativemmlConfigJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/NativeMML/jax.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputNativemmlJaxJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/PlainSource/config.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputPlainsourceConfigJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/PlainSource/jax.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputPlainsourceJaxJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/PreviewHTML/config.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputPreviewhtmlConfigJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/PreviewHTML/jax.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputPreviewhtmlJaxJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/autoload/annotation-xml.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgAutoloadAnnotationXmlJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/autoload/maction.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgAutoloadMactionJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/autoload/menclose.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgAutoloadMencloseJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/autoload/mglyph.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgAutoloadMglyphJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/autoload/mmultiscripts.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgAutoloadMmultiscriptsJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/autoload/ms.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgAutoloadMsJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/autoload/mtable.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgAutoloadMtableJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/autoload/multiline.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgAutoloadMultilineJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/config.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgConfigJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Asana-Math/Alphabets/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsAsanaMathAlphabetsRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Asana-Math/Arrows/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsAsanaMathArrowsRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Asana-Math/DoubleStruck/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsAsanaMathDoublestruckRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Asana-Math/Fraktur/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsAsanaMathFrakturRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Asana-Math/Latin/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsAsanaMathLatinRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Asana-Math/Main/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsAsanaMathMainRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Asana-Math/Marks/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsAsanaMathMarksRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Asana-Math/Misc/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsAsanaMathMiscRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Asana-Math/Monospace/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsAsanaMathMonospaceRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Asana-Math/NonUnicode/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsAsanaMathNonunicodeRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Asana-Math/Normal/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsAsanaMathNormalRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Asana-Math/Operators/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsAsanaMathOperatorsRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Asana-Math/SansSerif/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsAsanaMathSansserifRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Asana-Math/Script/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsAsanaMathScriptRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Asana-Math/Shapes/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsAsanaMathShapesRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Asana-Math/Size1/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsAsanaMathSize1RegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Asana-Math/Size2/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsAsanaMathSize2RegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Asana-Math/Size3/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsAsanaMathSize3RegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Asana-Math/Size4/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsAsanaMathSize4RegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Asana-Math/Size5/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsAsanaMathSize5RegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Asana-Math/Size6/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsAsanaMathSize6RegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Asana-Math/Symbols/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsAsanaMathSymbolsRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Asana-Math/Variants/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsAsanaMathVariantsRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Asana-Math/fontdata-extra.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsAsanaMathFontdataExtraJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Asana-Math/fontdata.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsAsanaMathFontdataJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Pagella/Alphabets/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyrePagellaAlphabetsRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Pagella/Arrows/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyrePagellaArrowsRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Pagella/DoubleStruck/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyrePagellaDoublestruckRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Pagella/Fraktur/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyrePagellaFrakturRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Pagella/Latin/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyrePagellaLatinRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Pagella/Main/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyrePagellaMainRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Pagella/Marks/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyrePagellaMarksRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Pagella/Misc/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyrePagellaMiscRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Pagella/Monospace/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyrePagellaMonospaceRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Pagella/NonUnicode/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyrePagellaNonunicodeRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Pagella/Normal/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyrePagellaNormalRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Pagella/Operators/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyrePagellaOperatorsRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Pagella/SansSerif/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyrePagellaSansserifRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Pagella/Script/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyrePagellaScriptRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Pagella/Shapes/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyrePagellaShapesRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Pagella/Size1/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyrePagellaSize1RegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Pagella/Size2/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyrePagellaSize2RegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Pagella/Size3/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyrePagellaSize3RegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Pagella/Size4/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyrePagellaSize4RegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Pagella/Size5/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyrePagellaSize5RegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Pagella/Size6/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyrePagellaSize6RegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Pagella/Symbols/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyrePagellaSymbolsRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Pagella/Variants/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyrePagellaVariantsRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Pagella/fontdata-extra.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyrePagellaFontdataExtraJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Pagella/fontdata.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyrePagellaFontdataJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Termes/Alphabets/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyreTermesAlphabetsRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Termes/Arrows/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyreTermesArrowsRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Termes/DoubleStruck/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyreTermesDoublestruckRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Termes/Fraktur/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyreTermesFrakturRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Termes/Latin/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyreTermesLatinRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Termes/Main/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyreTermesMainRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Termes/Marks/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyreTermesMarksRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Termes/Misc/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyreTermesMiscRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Termes/Monospace/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyreTermesMonospaceRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Termes/NonUnicode/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyreTermesNonunicodeRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Termes/Normal/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyreTermesNormalRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Termes/Operators/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyreTermesOperatorsRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Termes/SansSerif/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyreTermesSansserifRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Termes/Script/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyreTermesScriptRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Termes/Shapes/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyreTermesShapesRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Termes/Size1/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyreTermesSize1RegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Termes/Size2/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyreTermesSize2RegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Termes/Size3/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyreTermesSize3RegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Termes/Size4/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyreTermesSize4RegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Termes/Size5/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyreTermesSize5RegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Termes/Size6/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyreTermesSize6RegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Termes/Symbols/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyreTermesSymbolsRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Termes/Variants/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyreTermesVariantsRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Termes/fontdata-extra.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyreTermesFontdataExtraJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Gyre-Termes/fontdata.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyreTermesFontdataJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Latin-Modern/Alphabets/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsLatinModernAlphabetsRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Latin-Modern/Arrows/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsLatinModernArrowsRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Latin-Modern/DoubleStruck/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsLatinModernDoublestruckRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Latin-Modern/Fraktur/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsLatinModernFrakturRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Latin-Modern/Latin/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsLatinModernLatinRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Latin-Modern/Main/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsLatinModernMainRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Latin-Modern/Marks/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsLatinModernMarksRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Latin-Modern/Misc/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsLatinModernMiscRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Latin-Modern/Monospace/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsLatinModernMonospaceRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Latin-Modern/NonUnicode/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsLatinModernNonunicodeRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Latin-Modern/Normal/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsLatinModernNormalRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Latin-Modern/Operators/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsLatinModernOperatorsRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Latin-Modern/SansSerif/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsLatinModernSansserifRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Latin-Modern/Script/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsLatinModernScriptRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Latin-Modern/Shapes/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsLatinModernShapesRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Latin-Modern/Size1/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsLatinModernSize1RegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Latin-Modern/Size2/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsLatinModernSize2RegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Latin-Modern/Size3/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsLatinModernSize3RegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Latin-Modern/Size4/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsLatinModernSize4RegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Latin-Modern/Size5/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsLatinModernSize5RegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Latin-Modern/Size6/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsLatinModernSize6RegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Latin-Modern/Size7/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsLatinModernSize7RegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Latin-Modern/Symbols/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsLatinModernSymbolsRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Latin-Modern/Variants/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsLatinModernVariantsRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Latin-Modern/fontdata-extra.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsLatinModernFontdataExtraJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Latin-Modern/fontdata.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsLatinModernFontdataJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Neo-Euler/Alphabets/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsNeoEulerAlphabetsRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Neo-Euler/Arrows/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsNeoEulerArrowsRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Neo-Euler/Fraktur/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsNeoEulerFrakturRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Neo-Euler/Main/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsNeoEulerMainRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Neo-Euler/Marks/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsNeoEulerMarksRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Neo-Euler/NonUnicode/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsNeoEulerNonunicodeRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Neo-Euler/Normal/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsNeoEulerNormalRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Neo-Euler/Operators/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsNeoEulerOperatorsRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Neo-Euler/Script/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsNeoEulerScriptRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Neo-Euler/Shapes/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsNeoEulerShapesRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Neo-Euler/Size1/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsNeoEulerSize1RegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Neo-Euler/Size2/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsNeoEulerSize2RegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Neo-Euler/Size3/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsNeoEulerSize3RegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Neo-Euler/Size4/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsNeoEulerSize4RegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Neo-Euler/Size5/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsNeoEulerSize5RegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Neo-Euler/Symbols/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsNeoEulerSymbolsRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Neo-Euler/Variants/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsNeoEulerVariantsRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Neo-Euler/fontdata-extra.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsNeoEulerFontdataExtraJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/Neo-Euler/fontdata.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsNeoEulerFontdataJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Alphabets/Bold/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebAlphabetsBoldMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Alphabets/BoldItalic/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebAlphabetsBolditalicMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Alphabets/Italic/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebAlphabetsItalicMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Alphabets/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebAlphabetsRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Arrows/Bold/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebArrowsBoldMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Arrows/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebArrowsRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/DoubleStruck/Bold/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebDoublestruckBoldMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/DoubleStruck/BoldItalic/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebDoublestruckBolditalicMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/DoubleStruck/Italic/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebDoublestruckItalicMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/DoubleStruck/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebDoublestruckRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Fraktur/Bold/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebFrakturBoldMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Fraktur/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebFrakturRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Latin/Bold/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebLatinBoldMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Latin/BoldItalic/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebLatinBolditalicMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Latin/Italic/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebLatinItalicMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Latin/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebLatinRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Main/Bold/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebMainBoldMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Main/BoldItalic/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebMainBolditalicMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Main/Italic/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebMainItalicMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Main/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebMainRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Marks/Bold/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebMarksBoldMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Marks/BoldItalic/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebMarksBolditalicMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Marks/Italic/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebMarksItalicMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Marks/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebMarksRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Misc/Bold/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebMiscBoldMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Misc/BoldItalic/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebMiscBolditalicMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Misc/Italic/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebMiscItalicMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Misc/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebMiscRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Monospace/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebMonospaceRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Normal/Bold/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebNormalBoldMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Normal/BoldItalic/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebNormalBolditalicMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Normal/Italic/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebNormalItalicMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Operators/Bold/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebOperatorsBoldMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Operators/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebOperatorsRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/SansSerif/Bold/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebSansserifBoldMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/SansSerif/BoldItalic/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebSansserifBolditalicMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/SansSerif/Italic/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebSansserifItalicMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/SansSerif/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebSansserifRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Script/BoldItalic/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebScriptBolditalicMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Script/Italic/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebScriptItalicMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Script/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebScriptRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Shapes/Bold/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebShapesBoldMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Shapes/BoldItalic/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebShapesBolditalicMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Shapes/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebShapesRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Size1/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebSize1RegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Size2/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebSize2RegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Size3/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebSize3RegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Size4/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebSize4RegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Size5/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebSize5RegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Symbols/Bold/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebSymbolsBoldMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Symbols/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebSymbolsRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Variants/Bold/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebVariantsBoldMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Variants/BoldItalic/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebVariantsBolditalicMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Variants/Italic/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebVariantsItalicMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/Variants/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebVariantsRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/fontdata-extra.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebFontdataExtraJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/STIX-Web/fontdata.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebFontdataJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/AMS/Regular/Arrows.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexAmsRegularArrowsJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/AMS/Regular/BoxDrawing.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexAmsRegularBoxdrawingJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/AMS/Regular/CombDiacritMarks.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexAmsRegularCombdiacritmarksJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/AMS/Regular/Dingbats.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexAmsRegularDingbatsJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/AMS/Regular/EnclosedAlphanum.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexAmsRegularEnclosedalphanumJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/AMS/Regular/GeneralPunctuation.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexAmsRegularGeneralpunctuationJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/AMS/Regular/GeometricShapes.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexAmsRegularGeometricshapesJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/AMS/Regular/GreekAndCoptic.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexAmsRegularGreekandcopticJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/AMS/Regular/Latin1Supplement.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexAmsRegularLatin1supplementJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/AMS/Regular/LatinExtendedA.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexAmsRegularLatinextendedaJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/AMS/Regular/LetterlikeSymbols.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexAmsRegularLetterlikesymbolsJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/AMS/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexAmsRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/AMS/Regular/MathOperators.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexAmsRegularMathoperatorsJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/AMS/Regular/MiscMathSymbolsB.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexAmsRegularMiscmathsymbolsbJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/AMS/Regular/MiscSymbols.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexAmsRegularMiscsymbolsJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/AMS/Regular/MiscTechnical.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexAmsRegularMisctechnicalJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/AMS/Regular/PUA.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexAmsRegularPuaJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/AMS/Regular/SpacingModLetters.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexAmsRegularSpacingmodlettersJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/AMS/Regular/SuppMathOperators.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexAmsRegularSuppmathoperatorsJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Caligraphic/Bold/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexCaligraphicBoldMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Caligraphic/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexCaligraphicRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Fraktur/Bold/BasicLatin.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexFrakturBoldBasiclatinJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Fraktur/Bold/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexFrakturBoldMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Fraktur/Bold/Other.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexFrakturBoldOtherJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Fraktur/Bold/PUA.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexFrakturBoldPuaJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Fraktur/Regular/BasicLatin.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexFrakturRegularBasiclatinJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Fraktur/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexFrakturRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Fraktur/Regular/Other.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexFrakturRegularOtherJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Fraktur/Regular/PUA.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexFrakturRegularPuaJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Bold/Arrows.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainBoldArrowsJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Bold/BasicLatin.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainBoldBasiclatinJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Bold/CombDiacritMarks.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainBoldCombdiacritmarksJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Bold/CombDiactForSymbols.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainBoldCombdiactforsymbolsJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Bold/GeneralPunctuation.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainBoldGeneralpunctuationJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Bold/GeometricShapes.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainBoldGeometricshapesJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Bold/GreekAndCoptic.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainBoldGreekandcopticJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Bold/Latin1Supplement.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainBoldLatin1supplementJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Bold/LatinExtendedA.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainBoldLatinextendedaJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Bold/LatinExtendedB.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainBoldLatinextendedbJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Bold/LetterlikeSymbols.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainBoldLetterlikesymbolsJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Bold/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainBoldMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Bold/MathOperators.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainBoldMathoperatorsJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Bold/MiscMathSymbolsA.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainBoldMiscmathsymbolsaJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Bold/MiscSymbols.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainBoldMiscsymbolsJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Bold/MiscTechnical.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainBoldMisctechnicalJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Bold/SpacingModLetters.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainBoldSpacingmodlettersJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Bold/SuppMathOperators.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainBoldSuppmathoperatorsJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Bold/SupplementalArrowsA.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainBoldSupplementalarrowsaJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Italic/BasicLatin.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainItalicBasiclatinJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Italic/CombDiacritMarks.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainItalicCombdiacritmarksJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Italic/GeneralPunctuation.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainItalicGeneralpunctuationJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Italic/GreekAndCoptic.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainItalicGreekandcopticJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Italic/LatinExtendedA.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainItalicLatinextendedaJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Italic/LatinExtendedB.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainItalicLatinextendedbJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Italic/LetterlikeSymbols.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainItalicLetterlikesymbolsJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Italic/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainItalicMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Italic/MathOperators.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainItalicMathoperatorsJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Regular/BasicLatin.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainRegularBasiclatinJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Regular/CombDiacritMarks.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainRegularCombdiacritmarksJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Regular/GeometricShapes.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainRegularGeometricshapesJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Regular/GreekAndCoptic.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainRegularGreekandcopticJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Regular/LatinExtendedA.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainRegularLatinextendedaJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Regular/LatinExtendedB.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainRegularLatinextendedbJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Regular/LetterlikeSymbols.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainRegularLetterlikesymbolsJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Regular/MathOperators.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainRegularMathoperatorsJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Regular/MiscSymbols.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainRegularMiscsymbolsJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Regular/SpacingModLetters.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainRegularSpacingmodlettersJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Main/Regular/SuppMathOperators.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainRegularSuppmathoperatorsJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Math/BoldItalic/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMathBolditalicMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Math/Italic/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMathItalicMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/SansSerif/Bold/BasicLatin.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexSansserifBoldBasiclatinJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/SansSerif/Bold/CombDiacritMarks.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexSansserifBoldCombdiacritmarksJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/SansSerif/Bold/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexSansserifBoldMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/SansSerif/Bold/Other.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexSansserifBoldOtherJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/SansSerif/Italic/BasicLatin.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexSansserifItalicBasiclatinJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/SansSerif/Italic/CombDiacritMarks.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexSansserifItalicCombdiacritmarksJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/SansSerif/Italic/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexSansserifItalicMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/SansSerif/Italic/Other.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexSansserifItalicOtherJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/SansSerif/Regular/BasicLatin.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexSansserifRegularBasiclatinJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/SansSerif/Regular/CombDiacritMarks.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexSansserifRegularCombdiacritmarksJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/SansSerif/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexSansserifRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/SansSerif/Regular/Other.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexSansserifRegularOtherJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Script/Regular/BasicLatin.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexScriptRegularBasiclatinJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Script/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexScriptRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Size1/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexSize1RegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Size2/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexSize2RegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Size3/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexSize3RegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Size4/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexSize4RegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Typewriter/Regular/BasicLatin.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexTypewriterRegularBasiclatinJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Typewriter/Regular/CombDiacritMarks.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexTypewriterRegularCombdiacritmarksJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Typewriter/Regular/Main.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexTypewriterRegularMainJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/Typewriter/Regular/Other.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexTypewriterRegularOtherJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/fontdata-extra.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexFontdataExtraJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/fonts/TeX/fontdata.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexFontdataJs,
	"../src/main/web/florence/js/third-party/mathjax/jax/output/SVG/jax.js": SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgJaxJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/ast/FontWarnings.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationAstFontwarningsJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/ast/HTML-CSS.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationAstHtmlCssJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/ast/HelpDialog.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationAstHelpdialogJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/ast/MathML.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationAstMathmlJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/ast/MathMenu.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationAstMathmenuJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/ast/TeX.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationAstTexJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/ast/ast.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationAstAstJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/bcc/FontWarnings.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationBccFontwarningsJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/bcc/HTML-CSS.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationBccHtmlCssJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/bcc/HelpDialog.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationBccHelpdialogJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/bcc/MathML.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationBccMathmlJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/bcc/MathMenu.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationBccMathmenuJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/bcc/TeX.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationBccTexJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/bcc/bcc.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationBccBccJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/bg/FontWarnings.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationBgFontwarningsJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/bg/HTML-CSS.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationBgHtmlCssJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/bg/HelpDialog.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationBgHelpdialogJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/bg/MathML.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationBgMathmlJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/bg/MathMenu.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationBgMathmenuJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/bg/TeX.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationBgTexJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/bg/bg.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationBgBgJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/br/FontWarnings.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationBrFontwarningsJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/br/HTML-CSS.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationBrHtmlCssJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/br/HelpDialog.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationBrHelpdialogJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/br/MathML.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationBrMathmlJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/br/MathMenu.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationBrMathmenuJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/br/TeX.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationBrTexJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/br/br.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationBrBrJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/ca/FontWarnings.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCaFontwarningsJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/ca/HTML-CSS.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCaHtmlCssJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/ca/HelpDialog.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCaHelpdialogJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/ca/MathML.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCaMathmlJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/ca/MathMenu.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCaMathmenuJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/ca/TeX.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCaTexJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/ca/ca.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCaCaJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/cdo/FontWarnings.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCdoFontwarningsJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/cdo/HTML-CSS.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCdoHtmlCssJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/cdo/HelpDialog.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCdoHelpdialogJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/cdo/MathML.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCdoMathmlJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/cdo/MathMenu.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCdoMathmenuJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/cdo/TeX.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCdoTexJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/cdo/cdo.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCdoCdoJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/ce/FontWarnings.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCeFontwarningsJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/ce/HTML-CSS.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCeHtmlCssJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/ce/HelpDialog.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCeHelpdialogJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/ce/MathML.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCeMathmlJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/ce/MathMenu.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCeMathmenuJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/ce/TeX.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCeTexJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/ce/ce.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCeCeJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/cs/FontWarnings.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCsFontwarningsJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/cs/HTML-CSS.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCsHtmlCssJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/cs/HelpDialog.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCsHelpdialogJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/cs/MathML.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCsMathmlJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/cs/MathMenu.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCsMathmenuJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/cs/TeX.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCsTexJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/cs/cs.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCsCsJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/cy/FontWarnings.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCyFontwarningsJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/cy/HTML-CSS.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCyHtmlCssJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/cy/HelpDialog.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCyHelpdialogJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/cy/MathML.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCyMathmlJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/cy/MathMenu.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCyMathmenuJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/cy/TeX.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCyTexJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/cy/cy.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCyCyJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/da/FontWarnings.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationDaFontwarningsJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/da/HTML-CSS.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationDaHtmlCssJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/da/HelpDialog.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationDaHelpdialogJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/da/MathML.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationDaMathmlJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/da/MathMenu.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationDaMathmenuJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/da/TeX.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationDaTexJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/da/da.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationDaDaJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/de/FontWarnings.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationDeFontwarningsJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/de/HTML-CSS.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationDeHtmlCssJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/de/HelpDialog.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationDeHelpdialogJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/de/MathML.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationDeMathmlJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/de/MathMenu.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationDeMathmenuJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/de/TeX.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationDeTexJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/de/de.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationDeDeJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/en/FontWarnings.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationEnFontwarningsJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/en/HTML-CSS.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationEnHtmlCssJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/en/HelpDialog.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationEnHelpdialogJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/en/MathML.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationEnMathmlJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/en/MathMenu.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationEnMathmenuJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/en/TeX.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationEnTexJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/en/en.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationEnEnJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/eo/FontWarnings.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationEoFontwarningsJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/eo/HTML-CSS.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationEoHtmlCssJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/eo/HelpDialog.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationEoHelpdialogJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/eo/MathML.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationEoMathmlJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/eo/MathMenu.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationEoMathmenuJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/eo/TeX.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationEoTexJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/eo/eo.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationEoEoJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/es/FontWarnings.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationEsFontwarningsJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/es/HTML-CSS.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationEsHtmlCssJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/es/HelpDialog.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationEsHelpdialogJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/es/MathML.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationEsMathmlJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/es/MathMenu.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationEsMathmenuJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/es/TeX.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationEsTexJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/es/es.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationEsEsJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/fa/FontWarnings.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationFaFontwarningsJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/fa/HTML-CSS.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationFaHtmlCssJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/fa/HelpDialog.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationFaHelpdialogJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/fa/MathML.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationFaMathmlJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/fa/MathMenu.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationFaMathmenuJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/fa/TeX.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationFaTexJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/fa/fa.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationFaFaJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/fi/FontWarnings.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationFiFontwarningsJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/fi/HTML-CSS.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationFiHtmlCssJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/fi/HelpDialog.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationFiHelpdialogJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/fi/MathML.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationFiMathmlJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/fi/MathMenu.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationFiMathmenuJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/fi/TeX.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationFiTexJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/fi/fi.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationFiFiJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/fr/FontWarnings.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationFrFontwarningsJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/fr/HTML-CSS.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationFrHtmlCssJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/fr/HelpDialog.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationFrHelpdialogJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/fr/MathML.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationFrMathmlJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/fr/MathMenu.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationFrMathmenuJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/fr/TeX.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationFrTexJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/fr/fr.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationFrFrJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/gl/FontWarnings.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationGlFontwarningsJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/gl/HTML-CSS.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationGlHtmlCssJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/gl/HelpDialog.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationGlHelpdialogJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/gl/MathML.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationGlMathmlJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/gl/MathMenu.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationGlMathmenuJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/gl/TeX.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationGlTexJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/gl/gl.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationGlGlJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/he/FontWarnings.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationHeFontwarningsJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/he/HTML-CSS.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationHeHtmlCssJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/he/HelpDialog.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationHeHelpdialogJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/he/MathML.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationHeMathmlJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/he/MathMenu.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationHeMathmenuJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/he/TeX.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationHeTexJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/he/he.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationHeHeJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/ia/FontWarnings.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationIaFontwarningsJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/ia/HTML-CSS.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationIaHtmlCssJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/ia/HelpDialog.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationIaHelpdialogJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/ia/MathML.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationIaMathmlJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/ia/MathMenu.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationIaMathmenuJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/ia/TeX.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationIaTexJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/ia/ia.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationIaIaJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/it/FontWarnings.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationItFontwarningsJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/it/HTML-CSS.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationItHtmlCssJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/it/HelpDialog.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationItHelpdialogJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/it/MathML.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationItMathmlJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/it/MathMenu.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationItMathmenuJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/it/TeX.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationItTexJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/it/it.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationItItJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/ja/FontWarnings.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationJaFontwarningsJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/ja/HTML-CSS.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationJaHtmlCssJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/ja/HelpDialog.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationJaHelpdialogJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/ja/MathML.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationJaMathmlJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/ja/MathMenu.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationJaMathmenuJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/ja/TeX.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationJaTexJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/ja/ja.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationJaJaJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/kn/FontWarnings.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationKnFontwarningsJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/kn/HTML-CSS.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationKnHtmlCssJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/kn/HelpDialog.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationKnHelpdialogJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/kn/MathML.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationKnMathmlJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/kn/MathMenu.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationKnMathmenuJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/kn/TeX.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationKnTexJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/kn/kn.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationKnKnJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/ko/FontWarnings.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationKoFontwarningsJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/ko/HTML-CSS.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationKoHtmlCssJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/ko/HelpDialog.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationKoHelpdialogJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/ko/MathML.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationKoMathmlJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/ko/MathMenu.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationKoMathmenuJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/ko/TeX.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationKoTexJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/ko/ko.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationKoKoJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/lb/FontWarnings.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationLbFontwarningsJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/lb/HTML-CSS.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationLbHtmlCssJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/lb/HelpDialog.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationLbHelpdialogJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/lb/MathML.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationLbMathmlJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/lb/MathMenu.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationLbMathmenuJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/lb/TeX.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationLbTexJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/lb/lb.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationLbLbJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/lki/FontWarnings.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationLkiFontwarningsJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/lki/HTML-CSS.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationLkiHtmlCssJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/lki/HelpDialog.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationLkiHelpdialogJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/lki/MathML.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationLkiMathmlJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/lki/MathMenu.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationLkiMathmenuJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/lki/TeX.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationLkiTexJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/lki/lki.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationLkiLkiJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/lt/FontWarnings.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationLtFontwarningsJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/lt/HTML-CSS.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationLtHtmlCssJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/lt/HelpDialog.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationLtHelpdialogJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/lt/MathML.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationLtMathmlJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/lt/MathMenu.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationLtMathmenuJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/lt/TeX.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationLtTexJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/lt/lt.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationLtLtJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/mk/FontWarnings.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationMkFontwarningsJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/mk/HTML-CSS.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationMkHtmlCssJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/mk/HelpDialog.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationMkHelpdialogJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/mk/MathML.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationMkMathmlJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/mk/MathMenu.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationMkMathmenuJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/mk/TeX.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationMkTexJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/mk/mk.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationMkMkJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/nl/FontWarnings.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationNlFontwarningsJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/nl/HTML-CSS.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationNlHtmlCssJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/nl/HelpDialog.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationNlHelpdialogJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/nl/MathML.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationNlMathmlJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/nl/MathMenu.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationNlMathmenuJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/nl/TeX.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationNlTexJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/nl/nl.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationNlNlJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/oc/FontWarnings.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationOcFontwarningsJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/oc/HTML-CSS.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationOcHtmlCssJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/oc/HelpDialog.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationOcHelpdialogJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/oc/MathML.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationOcMathmlJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/oc/MathMenu.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationOcMathmenuJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/oc/TeX.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationOcTexJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/oc/oc.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationOcOcJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/pl/FontWarnings.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationPlFontwarningsJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/pl/HTML-CSS.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationPlHtmlCssJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/pl/HelpDialog.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationPlHelpdialogJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/pl/MathML.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationPlMathmlJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/pl/MathMenu.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationPlMathmenuJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/pl/TeX.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationPlTexJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/pl/pl.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationPlPlJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/pt/FontWarnings.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationPtFontwarningsJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/pt/HTML-CSS.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationPtHtmlCssJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/pt/HelpDialog.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationPtHelpdialogJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/pt/MathML.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationPtMathmlJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/pt/MathMenu.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationPtMathmenuJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/pt/TeX.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationPtTexJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/pt/pt.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationPtPtJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/pt-br/FontWarnings.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationPtBrFontwarningsJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/pt-br/HTML-CSS.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationPtBrHtmlCssJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/pt-br/HelpDialog.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationPtBrHelpdialogJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/pt-br/MathML.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationPtBrMathmlJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/pt-br/MathMenu.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationPtBrMathmenuJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/pt-br/TeX.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationPtBrTexJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/pt-br/pt-br.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationPtBrPtBrJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/qqq/FontWarnings.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationQqqFontwarningsJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/qqq/HTML-CSS.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationQqqHtmlCssJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/qqq/HelpDialog.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationQqqHelpdialogJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/qqq/MathML.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationQqqMathmlJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/qqq/MathMenu.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationQqqMathmenuJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/qqq/TeX.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationQqqTexJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/qqq/qqq.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationQqqQqqJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/ru/FontWarnings.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationRuFontwarningsJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/ru/HTML-CSS.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationRuHtmlCssJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/ru/HelpDialog.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationRuHelpdialogJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/ru/MathML.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationRuMathmlJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/ru/MathMenu.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationRuMathmenuJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/ru/TeX.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationRuTexJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/ru/ru.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationRuRuJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/scn/FontWarnings.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationScnFontwarningsJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/scn/HTML-CSS.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationScnHtmlCssJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/scn/HelpDialog.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationScnHelpdialogJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/scn/MathML.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationScnMathmlJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/scn/MathMenu.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationScnMathmenuJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/scn/TeX.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationScnTexJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/scn/scn.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationScnScnJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/sco/FontWarnings.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationScoFontwarningsJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/sco/HTML-CSS.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationScoHtmlCssJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/sco/HelpDialog.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationScoHelpdialogJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/sco/MathML.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationScoMathmlJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/sco/MathMenu.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationScoMathmenuJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/sco/TeX.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationScoTexJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/sco/sco.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationScoScoJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/sl/FontWarnings.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationSlFontwarningsJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/sl/HTML-CSS.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationSlHtmlCssJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/sl/HelpDialog.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationSlHelpdialogJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/sl/MathML.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationSlMathmlJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/sl/MathMenu.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationSlMathmenuJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/sl/TeX.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationSlTexJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/sl/sl.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationSlSlJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/sv/FontWarnings.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationSvFontwarningsJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/sv/HTML-CSS.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationSvHtmlCssJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/sv/HelpDialog.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationSvHelpdialogJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/sv/MathML.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationSvMathmlJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/sv/MathMenu.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationSvMathmenuJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/sv/TeX.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationSvTexJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/sv/sv.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationSvSvJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/tr/FontWarnings.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationTrFontwarningsJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/tr/HTML-CSS.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationTrHtmlCssJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/tr/HelpDialog.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationTrHelpdialogJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/tr/MathML.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationTrMathmlJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/tr/MathMenu.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationTrMathmenuJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/tr/TeX.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationTrTexJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/tr/tr.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationTrTrJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/uk/FontWarnings.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationUkFontwarningsJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/uk/HTML-CSS.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationUkHtmlCssJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/uk/HelpDialog.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationUkHelpdialogJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/uk/MathML.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationUkMathmlJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/uk/MathMenu.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationUkMathmenuJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/uk/TeX.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationUkTexJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/uk/uk.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationUkUkJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/vi/FontWarnings.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationViFontwarningsJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/vi/HTML-CSS.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationViHtmlCssJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/vi/HelpDialog.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationViHelpdialogJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/vi/MathML.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationViMathmlJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/vi/MathMenu.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationViMathmenuJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/vi/TeX.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationViTexJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/vi/vi.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationViViJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/zh-hans/FontWarnings.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationZhHansFontwarningsJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/zh-hans/HTML-CSS.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationZhHansHtmlCssJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/zh-hans/HelpDialog.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationZhHansHelpdialogJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/zh-hans/MathML.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationZhHansMathmlJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/zh-hans/MathMenu.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationZhHansMathmenuJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/zh-hans/TeX.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationZhHansTexJs,
	"../src/main/web/florence/js/third-party/mathjax/localization/zh-hans/zh-hans.js": SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationZhHansZhHansJs,
	"../src/main/web/florence/js/third-party/redux.min.js": SrcMainWebFlorenceJsThirdPartyReduxMinJs,
	"../src/main/web/florence/js/third-party/sweetalert.min.js": SrcMainWebFlorenceJsThirdPartySweetalertMinJs,
	"../src/main/web/florence/js/third-party/tag-it.js": SrcMainWebFlorenceJsThirdPartyTagItJs,
	"../src/main/web/florence/js/third-party/underscore-min.js": SrcMainWebFlorenceJsThirdPartyUnderscoreMinJs,
	"../src/main/web/florence/js/third-party/underscore-min.map": SrcMainWebFlorenceJsThirdPartyUnderscoreMinMap,
	"../src/main/web/florence/js/zebedee-api/_deleteCollection.js": SrcMainWebFlorenceJsZebedeeApi_deletecollectionJs,
	"../src/main/web/florence/js/zebedee-api/_deleteContent.js": SrcMainWebFlorenceJsZebedeeApi_deletecontentJs,
	"../src/main/web/florence/js/zebedee-api/_deleteEquation.js": SrcMainWebFlorenceJsZebedeeApi_deleteequationJs,
	"../src/main/web/florence/js/zebedee-api/_getCollection.js": SrcMainWebFlorenceJsZebedeeApi_getcollectionJs,
	"../src/main/web/florence/js/zebedee-api/_getPageData.js": SrcMainWebFlorenceJsZebedeeApi_getpagedataJs,
	"../src/main/web/florence/js/zebedee-api/_getPageResource.js": SrcMainWebFlorenceJsZebedeeApi_getpageresourceJs,
	"../src/main/web/florence/js/zebedee-api/_getTeams.js": SrcMainWebFlorenceJsZebedeeApi_getteamsJs,
	"../src/main/web/florence/js/zebedee-api/_getUserPermission.js": SrcMainWebFlorenceJsZebedeeApi_getuserpermissionJs,
	"../src/main/web/florence/js/zebedee-api/_getUsers.js": SrcMainWebFlorenceJsZebedeeApi_getusersJs,
	"../src/main/web/florence/js/zebedee-api/_moveContent.js": SrcMainWebFlorenceJsZebedeeApi_movecontentJs,
	"../src/main/web/florence/js/zebedee-api/_postPassword.js": SrcMainWebFlorenceJsZebedeeApi_postpasswordJs,
	"../src/main/web/florence/js/zebedee-api/_postPermission.js": SrcMainWebFlorenceJsZebedeeApi_postpermissionJs,
	"../src/main/web/florence/js/zebedee-api/_putContent.js": SrcMainWebFlorenceJsZebedeeApi_putcontentJs,
	"../src/main/web/florence/manifest.json": SrcMainWebFlorenceManifestJson,
	"../src/main/web/florence/package.json": SrcMainWebFlorencePackageJson,
	"../src/main/web/florence/scss/components/_accordion.scss": SrcMainWebFlorenceScssComponents_accordionScss,
	"../src/main/web/florence/scss/components/_builder.scss": SrcMainWebFlorenceScssComponents_builderScss,
	"../src/main/web/florence/scss/components/_icons.scss": SrcMainWebFlorenceScssComponents_iconsScss,
	"../src/main/web/florence/scss/components/_markdown-editor.scss": SrcMainWebFlorenceScssComponents_markdownEditorScss,
	"../src/main/web/florence/scss/components/_network-status.scss": SrcMainWebFlorenceScssComponents_networkStatusScss,
	"../src/main/web/florence/scss/components/_page.scss": SrcMainWebFlorenceScssComponents_pageScss,
	"../src/main/web/florence/scss/components/_slider.scss": SrcMainWebFlorenceScssComponents_sliderScss,
	"../src/main/web/florence/scss/elements/_buttons.scss": SrcMainWebFlorenceScssElements_buttonsScss,
	"../src/main/web/florence/scss/elements/_forms.scss": SrcMainWebFlorenceScssElements_formsScss,
	"../src/main/web/florence/scss/elements/_inputs.scss": SrcMainWebFlorenceScssElements_inputsScss,
	"../src/main/web/florence/scss/elements/_nav.scss": SrcMainWebFlorenceScssElements_navScss,
	"../src/main/web/florence/scss/elements/_tables.scss": SrcMainWebFlorenceScssElements_tablesScss,
	"../src/main/web/florence/scss/elements/_typography.scss": SrcMainWebFlorenceScssElements_typographyScss,
	"../src/main/web/florence/scss/main.scss": SrcMainWebFlorenceScssMainScss,
	"../src/main/web/florence/scss/partials/_base.scss": SrcMainWebFlorenceScssPartials_baseScss,
	"../src/main/web/florence/scss/partials/_collections.scss": SrcMainWebFlorenceScssPartials_collectionsScss,
	"../src/main/web/florence/scss/partials/_colour-palette.scss": SrcMainWebFlorenceScssPartials_colourPaletteScss,
	"../src/main/web/florence/scss/partials/_elements.scss": SrcMainWebFlorenceScssPartials_elementsScss,
	"../src/main/web/florence/scss/partials/_fonts.scss": SrcMainWebFlorenceScssPartials_fontsScss,
	"../src/main/web/florence/scss/partials/_jqui.scss": SrcMainWebFlorenceScssPartials_jquiScss,
	"../src/main/web/florence/scss/partials/_publish.scss": SrcMainWebFlorenceScssPartials_publishScss,
	"../src/main/web/florence/scss/partials/_reset.scss": SrcMainWebFlorenceScssPartials_resetScss,
	"../src/main/web/florence/scss/partials/_shame.scss": SrcMainWebFlorenceScssPartials_shameScss,
	"../src/main/web/florence/scss/partials/_utilities.scss": SrcMainWebFlorenceScssPartials_utilitiesScss,
	"../src/main/web/florence/scss/partials/_workspace.scss": SrcMainWebFlorenceScssPartials_workspaceScss,
	"../src/main/web/florence/scss/utilities/_display.scss": SrcMainWebFlorenceScssUtilities_displayScss,
	"../src/main/web/florence/scss/utilities/_grid.scss": SrcMainWebFlorenceScssUtilities_gridScss,
	"../src/main/web/florence/scss/utilities/_margin.scss": SrcMainWebFlorenceScssUtilities_marginScss,
	"../src/main/web/florence/scss/utilities/_mixins.scss": SrcMainWebFlorenceScssUtilities_mixinsScss,
	"../src/main/web/florence/scss/utilities/_padding.scss": SrcMainWebFlorenceScssUtilities_paddingScss,
	"../src/main/web/florence/scss/utilities/_panels.scss": SrcMainWebFlorenceScssUtilities_panelsScss,
	"../src/main/web/florence/scss/utilities/_utilities.scss": SrcMainWebFlorenceScssUtilities_utilitiesScss,
	"../src/main/web/florence/service-worker.js": SrcMainWebFlorenceServiceWorkerJs,
	"../src/main/web/florence/spec/.DS_Store": SrcMainWebFlorenceSpecDs_store,
	"../src/main/web/florence/spec/classes/FlorenceSpec.js": SrcMainWebFlorenceSpecClassesFlorencespecJs,
	"../src/main/web/florence/spec/classes/PathUtilsSpec.js": SrcMainWebFlorenceSpecClassesPathutilsspecJs,
	"../src/main/web/florence/spec/classes/StringUtilsSpec.js": SrcMainWebFlorenceSpecClassesStringutilsspecJs,
	"../src/main/web/florence/spec/support/jasmine.json": SrcMainWebFlorenceSpecSupportJasmineJson,
	"../src/main/web/florence/templates/blockModal.handlebars": SrcMainWebFlorenceTemplatesBlockmodalHandlebars,
	"../src/main/web/florence/templates/blockNewsModal.handlebars": SrcMainWebFlorenceTemplatesBlocknewsmodalHandlebars,
	"../src/main/web/florence/templates/browseNode.handlebars": SrcMainWebFlorenceTemplatesBrowsenodeHandlebars,
	"../src/main/web/florence/templates/browseNodeDataVis.handlebars": SrcMainWebFlorenceTemplatesBrowsenodedatavisHandlebars,
	"../src/main/web/florence/templates/changePassword.handlebars": SrcMainWebFlorenceTemplatesChangepasswordHandlebars,
	"../src/main/web/florence/templates/chartBuilder.handlebars": SrcMainWebFlorenceTemplatesChartbuilderHandlebars,
	"../src/main/web/florence/templates/chartEditBarChartExtras.handlebars": SrcMainWebFlorenceTemplatesCharteditbarchartextrasHandlebars,
	"../src/main/web/florence/templates/chartEditBarlineExtras.handlebars": SrcMainWebFlorenceTemplatesCharteditbarlineextrasHandlebars,
	"../src/main/web/florence/templates/chartEditDualAxisExtras.handlebars": SrcMainWebFlorenceTemplatesCharteditdualaxisextrasHandlebars,
	"../src/main/web/florence/templates/chartEditLineChartExtras.handlebars": SrcMainWebFlorenceTemplatesCharteditlinechartextrasHandlebars,
	"../src/main/web/florence/templates/childDeletes.handlebars": SrcMainWebFlorenceTemplatesChilddeletesHandlebars,
	"../src/main/web/florence/templates/collectionDetails.handlebars": SrcMainWebFlorenceTemplatesCollectiondetailsHandlebars,
	"../src/main/web/florence/templates/collectionEdit.handlebars": SrcMainWebFlorenceTemplatesCollectioneditHandlebars,
	"../src/main/web/florence/templates/collectionList.handlebars": SrcMainWebFlorenceTemplatesCollectionlistHandlebars,
	"../src/main/web/florence/templates/editNav.handlebars": SrcMainWebFlorenceTemplatesEditnavHandlebars,
	"../src/main/web/florence/templates/editNavChild.handlebars": SrcMainWebFlorenceTemplatesEditnavchildHandlebars,
	"../src/main/web/florence/templates/editorAlert.handlebars": SrcMainWebFlorenceTemplatesEditoralertHandlebars,
	"../src/main/web/florence/templates/editorCompendiumDatasetFiles.handlebars": SrcMainWebFlorenceTemplatesEditorcompendiumdatasetfilesHandlebars,
	"../src/main/web/florence/templates/editorContent.handlebars": SrcMainWebFlorenceTemplatesEditorcontentHandlebars,
	"../src/main/web/florence/templates/editorContentNoTitle.handlebars": SrcMainWebFlorenceTemplatesEditorcontentnotitleHandlebars,
	"../src/main/web/florence/templates/editorContentOne.handlebars": SrcMainWebFlorenceTemplatesEditorcontentoneHandlebars,
	"../src/main/web/florence/templates/editorCorrection.handlebars": SrcMainWebFlorenceTemplatesEditorcorrectionHandlebars,
	"../src/main/web/florence/templates/editorDate.handlebars": SrcMainWebFlorenceTemplatesEditordateHandlebars,
	"../src/main/web/florence/templates/editorDocWithFiles.handlebars": SrcMainWebFlorenceTemplatesEditordocwithfilesHandlebars,
	"../src/main/web/florence/templates/editorDownloads.handlebars": SrcMainWebFlorenceTemplatesEditordownloadsHandlebars,
	"../src/main/web/florence/templates/editorDownloadsWithSummary.handlebars": SrcMainWebFlorenceTemplatesEditordownloadswithsummaryHandlebars,
	"../src/main/web/florence/templates/editorLinks.handlebars": SrcMainWebFlorenceTemplatesEditorlinksHandlebars,
	"../src/main/web/florence/templates/editorRelated.handlebars": SrcMainWebFlorenceTemplatesEditorrelatedHandlebars,
	"../src/main/web/florence/templates/editorServiceMessage.handlebars": SrcMainWebFlorenceTemplatesEditorservicemessageHandlebars,
	"../src/main/web/florence/templates/editorT1Blocks.handlebars": SrcMainWebFlorenceTemplatesEditort1blocksHandlebars,
	"../src/main/web/florence/templates/editorTopics.handlebars": SrcMainWebFlorenceTemplatesEditortopicsHandlebars,
	"../src/main/web/florence/templates/embedIframe.handlebars": SrcMainWebFlorenceTemplatesEmbediframeHandlebars,
	"../src/main/web/florence/templates/equationBuilder.handlebars": SrcMainWebFlorenceTemplatesEquationbuilderHandlebars,
	"../src/main/web/florence/templates/florence.handlebars": SrcMainWebFlorenceTemplatesFlorenceHandlebars,
	"../src/main/web/florence/templates/iframeNav.handlebars": SrcMainWebFlorenceTemplatesIframenavHandlebars,
	"../src/main/web/florence/templates/imageBuilder.handlebars": SrcMainWebFlorenceTemplatesImagebuilderHandlebars,
	"../src/main/web/florence/templates/linkExternalModal.handlebars": SrcMainWebFlorenceTemplatesLinkexternalmodalHandlebars,
	"../src/main/web/florence/templates/linkModal.handlebars": SrcMainWebFlorenceTemplatesLinkmodalHandlebars,
	"../src/main/web/florence/templates/loadingAnimation.handlebars": SrcMainWebFlorenceTemplatesLoadinganimationHandlebars,
	"../src/main/web/florence/templates/login.handlebars": SrcMainWebFlorenceTemplatesLoginHandlebars,
	"../src/main/web/florence/templates/mainNav.handlebars": SrcMainWebFlorenceTemplatesMainnavHandlebars,
	"../src/main/web/florence/templates/markdownEditor.handlebars": SrcMainWebFlorenceTemplatesMarkdowneditorHandlebars,
	"../src/main/web/florence/templates/markdownEditorNoTitle.handlebars": SrcMainWebFlorenceTemplatesMarkdowneditornotitleHandlebars,
	"../src/main/web/florence/templates/publishDetails.handlebars": SrcMainWebFlorenceTemplatesPublishdetailsHandlebars,
	"../src/main/web/florence/templates/publishList.handlebars": SrcMainWebFlorenceTemplatesPublishlistHandlebars,
	"../src/main/web/florence/templates/relatedModal.handlebars": SrcMainWebFlorenceTemplatesRelatedmodalHandlebars,
	"../src/main/web/florence/templates/releaseSelector.handlebars": SrcMainWebFlorenceTemplatesReleaseselectorHandlebars,
	"../src/main/web/florence/templates/reportList.handlebars": SrcMainWebFlorenceTemplatesReportlistHandlebars,
	"../src/main/web/florence/templates/reportPublishedDetails.handlebars": SrcMainWebFlorenceTemplatesReportpublisheddetailsHandlebars,
	"../src/main/web/florence/templates/reportUnpublishedDetails.handlebars": SrcMainWebFlorenceTemplatesReportunpublisheddetailsHandlebars,
	"../src/main/web/florence/templates/selectorHour.handlebars": SrcMainWebFlorenceTemplatesSelectorhourHandlebars,
	"../src/main/web/florence/templates/selectorMinute.handlebars": SrcMainWebFlorenceTemplatesSelectorminuteHandlebars,
	"../src/main/web/florence/templates/tableBuilder.handlebars": SrcMainWebFlorenceTemplatesTablebuilderHandlebars,
	"../src/main/web/florence/templates/teamDetails.handlebars": SrcMainWebFlorenceTemplatesTeamdetailsHandlebars,
	"../src/main/web/florence/templates/teamEdit.handlebars": SrcMainWebFlorenceTemplatesTeameditHandlebars,
	"../src/main/web/florence/templates/teamList.handlebars": SrcMainWebFlorenceTemplatesTeamlistHandlebars,
	"../src/main/web/florence/templates/tickAnimation.handlebars": SrcMainWebFlorenceTemplatesTickanimationHandlebars,
	"../src/main/web/florence/templates/uploadFileForm.handlebars": SrcMainWebFlorenceTemplatesUploadfileformHandlebars,
	"../src/main/web/florence/templates/userDetails.handlebars": SrcMainWebFlorenceTemplatesUserdetailsHandlebars,
	"../src/main/web/florence/templates/userList.handlebars": SrcMainWebFlorenceTemplatesUserlistHandlebars,
	"../src/main/web/florence/templates/workBrowse.handlebars": SrcMainWebFlorenceTemplatesWorkbrowseHandlebars,
	"../src/main/web/florence/templates/workCreate.handlebars": SrcMainWebFlorenceTemplatesWorkcreateHandlebars,
	"../src/main/web/florence/templates/workEditCharts.handlebars": SrcMainWebFlorenceTemplatesWorkeditchartsHandlebars,
	"../src/main/web/florence/templates/workEditEquations.handlebars": SrcMainWebFlorenceTemplatesWorkeditequationsHandlebars,
	"../src/main/web/florence/templates/workEditImages.handlebars": SrcMainWebFlorenceTemplatesWorkeditimagesHandlebars,
	"../src/main/web/florence/templates/workEditT1.handlebars": SrcMainWebFlorenceTemplatesWorkeditt1Handlebars,
	"../src/main/web/florence/templates/workEditT16.handlebars": SrcMainWebFlorenceTemplatesWorkeditt16Handlebars,
	"../src/main/web/florence/templates/workEditT1Census.handlebars": SrcMainWebFlorenceTemplatesWorkeditt1censusHandlebars,
	"../src/main/web/florence/templates/workEditT1Sections.handlebars": SrcMainWebFlorenceTemplatesWorkeditt1sectionsHandlebars,
	"../src/main/web/florence/templates/workEditT2.handlebars": SrcMainWebFlorenceTemplatesWorkeditt2Handlebars,
	"../src/main/web/florence/templates/workEditT3.handlebars": SrcMainWebFlorenceTemplatesWorkeditt3Handlebars,
	"../src/main/web/florence/templates/workEditT4Article.handlebars": SrcMainWebFlorenceTemplatesWorkeditt4articleHandlebars,
	"../src/main/web/florence/templates/workEditT4ArticleDownload.handlebars": SrcMainWebFlorenceTemplatesWorkeditt4articledownloadHandlebars,
	"../src/main/web/florence/templates/workEditT4Bulletin.handlebars": SrcMainWebFlorenceTemplatesWorkeditt4bulletinHandlebars,
	"../src/main/web/florence/templates/workEditT4Compendium.handlebars": SrcMainWebFlorenceTemplatesWorkeditt4compendiumHandlebars,
	"../src/main/web/florence/templates/workEditT4Methodology.handlebars": SrcMainWebFlorenceTemplatesWorkeditt4methodologyHandlebars,
	"../src/main/web/florence/templates/workEditT5.handlebars": SrcMainWebFlorenceTemplatesWorkeditt5Handlebars,
	"../src/main/web/florence/templates/workEditT6.handlebars": SrcMainWebFlorenceTemplatesWorkeditt6Handlebars,
	"../src/main/web/florence/templates/workEditT6Chapter.handlebars": SrcMainWebFlorenceTemplatesWorkeditt6chapterHandlebars,
	"../src/main/web/florence/templates/workEditT6Dataset.handlebars": SrcMainWebFlorenceTemplatesWorkeditt6datasetHandlebars,
	"../src/main/web/florence/templates/workEditT7.handlebars": SrcMainWebFlorenceTemplatesWorkeditt7Handlebars,
	"../src/main/web/florence/templates/workEditT7Landing.handlebars": SrcMainWebFlorenceTemplatesWorkeditt7landingHandlebars,
	"../src/main/web/florence/templates/workEditT7StaticArticle.handlebars": SrcMainWebFlorenceTemplatesWorkeditt7staticarticleHandlebars,
	"../src/main/web/florence/templates/workEditT8.handlebars": SrcMainWebFlorenceTemplatesWorkeditt8Handlebars,
	"../src/main/web/florence/templates/workEditT8Compendium.handlebars": SrcMainWebFlorenceTemplatesWorkeditt8compendiumHandlebars,
	"../src/main/web/florence/templates/workEditT8CorrectionList.handlebars": SrcMainWebFlorenceTemplatesWorkeditt8correctionlistHandlebars,
	"../src/main/web/florence/templates/workEditT8LandingDatasetList.handlebars": SrcMainWebFlorenceTemplatesWorkeditt8landingdatasetlistHandlebars,
	"../src/main/web/florence/templates/workEditT8LandingPage.handlebars": SrcMainWebFlorenceTemplatesWorkeditt8landingpageHandlebars,
	"../src/main/web/florence/templates/workEditT8VersionList.handlebars": SrcMainWebFlorenceTemplatesWorkeditt8versionlistHandlebars,
	"../src/main/web/florence/templates/workEditTables.handlebars": SrcMainWebFlorenceTemplatesWorkedittablesHandlebars,
	"../src/main/web/florence/templates/workEditVisualisation.handlebars": SrcMainWebFlorenceTemplatesWorkeditvisualisationHandlebars,
	"../src/main/web/florence/templates/workImport.handlebars": SrcMainWebFlorenceTemplatesWorkimportHandlebars,
	"../src/main/web/florence/templates/workSpace.handlebars": SrcMainWebFlorenceTemplatesWorkspaceHandlebars,
	"../src/main/web/florence/webpack.config-test.js": SrcMainWebFlorenceWebpackConfigTestJs,
	"../src/main/web/florence/webpack.config.js": SrcMainWebFlorenceWebpackConfigJs,
	"../src/main/web/florence/webpack.html": SrcMainWebFlorenceWebpackHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"..": &bintree{nil, map[string]*bintree{
		"src": &bintree{nil, map[string]*bintree{
			"main": &bintree{nil, map[string]*bintree{
				"web": &bintree{nil, map[string]*bintree{
					"florence": &bintree{nil, map[string]*bintree{
						".DS_Store": &bintree{SrcMainWebFlorenceDs_store, map[string]*bintree{}},
						".tmp": &bintree{nil, map[string]*bintree{
							"mocha-webpack": &bintree{nil, map[string]*bintree{
								"30a8c3b100fd21df921012ba748ffb09": &bintree{nil, map[string]*bintree{
									"30a8c3b100fd21df921012ba748ffb09-output.js": &bintree{SrcMainWebFlorenceTmpMochaWebpack30a8c3b100fd21df921012ba748ffb0930a8c3b100fd21df921012ba748ffb09OutputJs, map[string]*bintree{}},
								}},
								"30a8c3b100fd21df921012ba748ffb09-entry.js": &bintree{SrcMainWebFlorenceTmpMochaWebpack30a8c3b100fd21df921012ba748ffb09EntryJs, map[string]*bintree{}},
								"8d1c411a09add6e4f9455a3e2c6fae26": &bintree{nil, map[string]*bintree{
									"8d1c411a09add6e4f9455a3e2c6fae26-output.js": &bintree{SrcMainWebFlorenceTmpMochaWebpack8d1c411a09add6e4f9455a3e2c6fae268d1c411a09add6e4f9455a3e2c6fae26OutputJs, map[string]*bintree{}},
								}},
								"8d1c411a09add6e4f9455a3e2c6fae26-entry.js": &bintree{SrcMainWebFlorenceTmpMochaWebpack8d1c411a09add6e4f9455a3e2c6fae26EntryJs, map[string]*bintree{}},
								"d560a417452018acef79b9f52ff98d6f": &bintree{nil, map[string]*bintree{
									"d560a417452018acef79b9f52ff98d6f-output.js": &bintree{SrcMainWebFlorenceTmpMochaWebpackD560a417452018acef79b9f52ff98d6fD560a417452018acef79b9f52ff98d6fOutputJs, map[string]*bintree{}},
								}},
								"d560a417452018acef79b9f52ff98d6f-entry.js": &bintree{SrcMainWebFlorenceTmpMochaWebpackD560a417452018acef79b9f52ff98d6fEntryJs, map[string]*bintree{}},
								"d681649e3b3f1264990264bdb7973867": &bintree{nil, map[string]*bintree{
									"d681649e3b3f1264990264bdb7973867-output.js": &bintree{SrcMainWebFlorenceTmpMochaWebpackD681649e3b3f1264990264bdb7973867D681649e3b3f1264990264bdb7973867OutputJs, map[string]*bintree{}},
								}},
								"d681649e3b3f1264990264bdb7973867-entry.js": &bintree{SrcMainWebFlorenceTmpMochaWebpackD681649e3b3f1264990264bdb7973867EntryJs, map[string]*bintree{}},
								"f959c9c74bb5acdf648ff8850a842cf7": &bintree{nil, map[string]*bintree{
									"f959c9c74bb5acdf648ff8850a842cf7-output.js": &bintree{SrcMainWebFlorenceTmpMochaWebpackF959c9c74bb5acdf648ff8850a842cf7F959c9c74bb5acdf648ff8850a842cf7OutputJs, map[string]*bintree{}},
								}},
								"f959c9c74bb5acdf648ff8850a842cf7-entry.js": &bintree{SrcMainWebFlorenceTmpMochaWebpackF959c9c74bb5acdf648ff8850a842cf7EntryJs, map[string]*bintree{}},
							}},
						}},
						"app": &bintree{nil, map[string]*bintree{
							"app.js": &bintree{SrcMainWebFlorenceAppAppJs, map[string]*bintree{}},
							"shared": &bintree{nil, map[string]*bintree{
								"api": &bintree{nil, map[string]*bintree{
									"getActivePage.js": &bintree{SrcMainWebFlorenceAppSharedApiGetactivepageJs, map[string]*bintree{}},
									"getBrowseTree.js": &bintree{SrcMainWebFlorenceAppSharedApiGetbrowsetreeJs, map[string]*bintree{}},
									"saveNewPage.js": &bintree{SrcMainWebFlorenceAppSharedApiSavenewpageJs, map[string]*bintree{}},
									"updatePage.js": &bintree{SrcMainWebFlorenceAppSharedApiUpdatepageJs, map[string]*bintree{}},
								}},
								"models": &bintree{nil, map[string]*bintree{
									"pageModels.js": &bintree{SrcMainWebFlorenceAppSharedModelsPagemodelsJs, map[string]*bintree{}},
								}},
								"state": &bintree{nil, map[string]*bintree{
									"baseUrlState.js": &bintree{SrcMainWebFlorenceAppSharedStateBaseurlstateJs, map[string]*bintree{}},
									"collectionState.js": &bintree{SrcMainWebFlorenceAppSharedStateCollectionstateJs, map[string]*bintree{}},
									"state.js": &bintree{SrcMainWebFlorenceAppSharedStateStateJs, map[string]*bintree{}},
									"userState.js": &bintree{SrcMainWebFlorenceAppSharedStateUserstateJs, map[string]*bintree{}},
									"watchState.js": &bintree{SrcMainWebFlorenceAppSharedStateWatchstateJs, map[string]*bintree{}},
									"workspaceState.js": &bintree{SrcMainWebFlorenceAppSharedStateWorkspacestateJs, map[string]*bintree{}},
								}},
								"templateHelpers": &bintree{nil, map[string]*bintree{
									"ifCond.js": &bintree{SrcMainWebFlorenceAppSharedTemplatehelpersIfcondJs, map[string]*bintree{}},
								}},
								"templatePartials": &bintree{nil, map[string]*bintree{
									"loadingAnimation.handlebars": &bintree{SrcMainWebFlorenceAppSharedTemplatepartialsLoadinganimationHandlebars, map[string]*bintree{}},
								}},
								"utilities": &bintree{nil, map[string]*bintree{
									"bindDatePicker.js": &bintree{SrcMainWebFlorenceAppSharedUtilitiesBinddatepickerJs, map[string]*bintree{}},
									"get.js": &bintree{SrcMainWebFlorenceAppSharedUtilitiesGetJs, map[string]*bintree{}},
									"post.js": &bintree{SrcMainWebFlorenceAppSharedUtilitiesPostJs, map[string]*bintree{}},
									"utilities.js": &bintree{SrcMainWebFlorenceAppSharedUtilitiesUtilitiesJs, map[string]*bintree{}},
									"utilities.test.js": &bintree{SrcMainWebFlorenceAppSharedUtilitiesUtilitiesTestJs, map[string]*bintree{}},
								}},
							}},
							"workspace": &bintree{nil, map[string]*bintree{
								"browse": &bintree{nil, map[string]*bintree{
									"browse.handlebars": &bintree{SrcMainWebFlorenceAppWorkspaceBrowseBrowseHandlebars, map[string]*bintree{}},
									"browseController.js": &bintree{SrcMainWebFlorenceAppWorkspaceBrowseBrowsecontrollerJs, map[string]*bintree{}},
									"browseNode.handlebars": &bintree{SrcMainWebFlorenceAppWorkspaceBrowseBrowsenodeHandlebars, map[string]*bintree{}},
									"browseView.js": &bintree{SrcMainWebFlorenceAppWorkspaceBrowseBrowseviewJs, map[string]*bintree{}},
									"browseVisNode.handlebars": &bintree{SrcMainWebFlorenceAppWorkspaceBrowseBrowsevisnodeHandlebars, map[string]*bintree{}},
								}},
								"create": &bintree{nil, map[string]*bintree{
									"create.handlebars": &bintree{SrcMainWebFlorenceAppWorkspaceCreateCreateHandlebars, map[string]*bintree{}},
									"createController.js": &bintree{SrcMainWebFlorenceAppWorkspaceCreateCreatecontrollerJs, map[string]*bintree{}},
									"createView.js": &bintree{SrcMainWebFlorenceAppWorkspaceCreateCreateviewJs, map[string]*bintree{}},
								}},
								"edit": &bintree{nil, map[string]*bintree{
									"edit.handlebars": &bintree{SrcMainWebFlorenceAppWorkspaceEditEditHandlebars, map[string]*bintree{}},
									"editController.js": &bintree{SrcMainWebFlorenceAppWorkspaceEditEditcontrollerJs, map[string]*bintree{}},
									"editView.js": &bintree{SrcMainWebFlorenceAppWorkspaceEditEditviewJs, map[string]*bintree{}},
								}},
								"navigation": &bintree{nil, map[string]*bintree{
									"navigation.handlebars": &bintree{SrcMainWebFlorenceAppWorkspaceNavigationNavigationHandlebars, map[string]*bintree{}},
									"navigationController.js": &bintree{SrcMainWebFlorenceAppWorkspaceNavigationNavigationcontrollerJs, map[string]*bintree{}},
									"navigationView.js": &bintree{SrcMainWebFlorenceAppWorkspaceNavigationNavigationviewJs, map[string]*bintree{}},
								}},
								"preview": &bintree{nil, map[string]*bintree{
									"preview.handlebars": &bintree{SrcMainWebFlorenceAppWorkspacePreviewPreviewHandlebars, map[string]*bintree{}},
									"previewController.js": &bintree{SrcMainWebFlorenceAppWorkspacePreviewPreviewcontrollerJs, map[string]*bintree{}},
									"previewView.js": &bintree{SrcMainWebFlorenceAppWorkspacePreviewPreviewviewJs, map[string]*bintree{}},
								}},
								"workspace.handlebars": &bintree{SrcMainWebFlorenceAppWorkspaceWorkspaceHandlebars, map[string]*bintree{}},
								"workspaceController.js": &bintree{SrcMainWebFlorenceAppWorkspaceWorkspacecontrollerJs, map[string]*bintree{}},
								"workspaceView.js": &bintree{SrcMainWebFlorenceAppWorkspaceWorkspaceviewJs, map[string]*bintree{}},
							}},
						}},
						"assets": &bintree{nil, map[string]*bintree{
							"css": &bintree{nil, map[string]*bintree{
								"main.min.css": &bintree{SrcMainWebFlorenceAssetsCssMainMinCss, map[string]*bintree{}},
								"main.min.css.map": &bintree{SrcMainWebFlorenceAssetsCssMainMinCssMap, map[string]*bintree{}},
							}},
							"js": &bintree{nil, map[string]*bintree{
								"bundle.js": &bintree{SrcMainWebFlorenceAssetsJsBundleJs, map[string]*bintree{}},
								"main.js": &bintree{SrcMainWebFlorenceAssetsJsMainJs, map[string]*bintree{}},
								"templates.js": &bintree{SrcMainWebFlorenceAssetsJsTemplatesJs, map[string]*bintree{}},
							}},
							"version.json": &bintree{SrcMainWebFlorenceAssetsVersionJson, map[string]*bintree{}},
						}},
						"css": &bintree{nil, map[string]*bintree{
							"florence.css": &bintree{SrcMainWebFlorenceCssFlorenceCss, map[string]*bintree{}},
							"rapid-prototype-main.css": &bintree{SrcMainWebFlorenceCssRapidPrototypeMainCss, map[string]*bintree{}},
							"third-party": &bintree{nil, map[string]*bintree{
								"c3.css": &bintree{SrcMainWebFlorenceCssThirdPartyC3Css, map[string]*bintree{}},
								"jquery-ui.theme.min.css": &bintree{SrcMainWebFlorenceCssThirdPartyJqueryUiThemeMinCss, map[string]*bintree{}},
								"jquery.tagit.css": &bintree{SrcMainWebFlorenceCssThirdPartyJqueryTagitCss, map[string]*bintree{}},
								"pagedown.css": &bintree{SrcMainWebFlorenceCssThirdPartyPagedownCss, map[string]*bintree{}},
								"responsive-tables.css": &bintree{SrcMainWebFlorenceCssThirdPartyResponsiveTablesCss, map[string]*bintree{}},
								"sweetalert.css": &bintree{SrcMainWebFlorenceCssThirdPartySweetalertCss, map[string]*bintree{}},
								"tagit.ui-zendesk.css": &bintree{SrcMainWebFlorenceCssThirdPartyTagitUiZendeskCss, map[string]*bintree{}},
							}},
						}},
						"font": &bintree{nil, map[string]*bintree{
							"Open_Sans": &bintree{nil, map[string]*bintree{
								"LICENSE.txt": &bintree{SrcMainWebFlorenceFontOpen_sansLicenseTxt, map[string]*bintree{}},
								"OpenSans-Bold.eot": &bintree{SrcMainWebFlorenceFontOpen_sansOpensansBoldEot, map[string]*bintree{}},
								"OpenSans-Bold.svg": &bintree{SrcMainWebFlorenceFontOpen_sansOpensansBoldSvg, map[string]*bintree{}},
								"OpenSans-Bold.ttf": &bintree{SrcMainWebFlorenceFontOpen_sansOpensansBoldTtf, map[string]*bintree{}},
								"OpenSans-Bold.woff": &bintree{SrcMainWebFlorenceFontOpen_sansOpensansBoldWoff, map[string]*bintree{}},
								"OpenSans-Bold.woff2": &bintree{SrcMainWebFlorenceFontOpen_sansOpensansBoldWoff2, map[string]*bintree{}},
								"OpenSans-BoldItalic.eot": &bintree{SrcMainWebFlorenceFontOpen_sansOpensansBolditalicEot, map[string]*bintree{}},
								"OpenSans-BoldItalic.svg": &bintree{SrcMainWebFlorenceFontOpen_sansOpensansBolditalicSvg, map[string]*bintree{}},
								"OpenSans-BoldItalic.ttf": &bintree{SrcMainWebFlorenceFontOpen_sansOpensansBolditalicTtf, map[string]*bintree{}},
								"OpenSans-BoldItalic.woff": &bintree{SrcMainWebFlorenceFontOpen_sansOpensansBolditalicWoff, map[string]*bintree{}},
								"OpenSans-ExtraBold.eot": &bintree{SrcMainWebFlorenceFontOpen_sansOpensansExtraboldEot, map[string]*bintree{}},
								"OpenSans-ExtraBold.svg": &bintree{SrcMainWebFlorenceFontOpen_sansOpensansExtraboldSvg, map[string]*bintree{}},
								"OpenSans-ExtraBold.ttf": &bintree{SrcMainWebFlorenceFontOpen_sansOpensansExtraboldTtf, map[string]*bintree{}},
								"OpenSans-ExtraBold.woff": &bintree{SrcMainWebFlorenceFontOpen_sansOpensansExtraboldWoff, map[string]*bintree{}},
								"OpenSans-ExtraBoldItalic.eot": &bintree{SrcMainWebFlorenceFontOpen_sansOpensansExtrabolditalicEot, map[string]*bintree{}},
								"OpenSans-ExtraBoldItalic.svg": &bintree{SrcMainWebFlorenceFontOpen_sansOpensansExtrabolditalicSvg, map[string]*bintree{}},
								"OpenSans-ExtraBoldItalic.ttf": &bintree{SrcMainWebFlorenceFontOpen_sansOpensansExtrabolditalicTtf, map[string]*bintree{}},
								"OpenSans-ExtraBoldItalic.woff": &bintree{SrcMainWebFlorenceFontOpen_sansOpensansExtrabolditalicWoff, map[string]*bintree{}},
								"OpenSans-Italic.eot": &bintree{SrcMainWebFlorenceFontOpen_sansOpensansItalicEot, map[string]*bintree{}},
								"OpenSans-Italic.svg": &bintree{SrcMainWebFlorenceFontOpen_sansOpensansItalicSvg, map[string]*bintree{}},
								"OpenSans-Italic.ttf": &bintree{SrcMainWebFlorenceFontOpen_sansOpensansItalicTtf, map[string]*bintree{}},
								"OpenSans-Italic.woff": &bintree{SrcMainWebFlorenceFontOpen_sansOpensansItalicWoff, map[string]*bintree{}},
								"OpenSans-Light.eot": &bintree{SrcMainWebFlorenceFontOpen_sansOpensansLightEot, map[string]*bintree{}},
								"OpenSans-Light.svg": &bintree{SrcMainWebFlorenceFontOpen_sansOpensansLightSvg, map[string]*bintree{}},
								"OpenSans-Light.ttf": &bintree{SrcMainWebFlorenceFontOpen_sansOpensansLightTtf, map[string]*bintree{}},
								"OpenSans-Light.woff": &bintree{SrcMainWebFlorenceFontOpen_sansOpensansLightWoff, map[string]*bintree{}},
								"OpenSans-Light.woff2": &bintree{SrcMainWebFlorenceFontOpen_sansOpensansLightWoff2, map[string]*bintree{}},
								"OpenSans-LightItalic.eot": &bintree{SrcMainWebFlorenceFontOpen_sansOpensansLightitalicEot, map[string]*bintree{}},
								"OpenSans-LightItalic.svg": &bintree{SrcMainWebFlorenceFontOpen_sansOpensansLightitalicSvg, map[string]*bintree{}},
								"OpenSans-LightItalic.ttf": &bintree{SrcMainWebFlorenceFontOpen_sansOpensansLightitalicTtf, map[string]*bintree{}},
								"OpenSans-LightItalic.woff": &bintree{SrcMainWebFlorenceFontOpen_sansOpensansLightitalicWoff, map[string]*bintree{}},
								"OpenSans-Regular.eot": &bintree{SrcMainWebFlorenceFontOpen_sansOpensansRegularEot, map[string]*bintree{}},
								"OpenSans-Regular.svg": &bintree{SrcMainWebFlorenceFontOpen_sansOpensansRegularSvg, map[string]*bintree{}},
								"OpenSans-Regular.ttf": &bintree{SrcMainWebFlorenceFontOpen_sansOpensansRegularTtf, map[string]*bintree{}},
								"OpenSans-Regular.woff": &bintree{SrcMainWebFlorenceFontOpen_sansOpensansRegularWoff, map[string]*bintree{}},
								"OpenSans-Regular.woff2": &bintree{SrcMainWebFlorenceFontOpen_sansOpensansRegularWoff2, map[string]*bintree{}},
								"OpenSans-Semibold.eot": &bintree{SrcMainWebFlorenceFontOpen_sansOpensansSemiboldEot, map[string]*bintree{}},
								"OpenSans-Semibold.svg": &bintree{SrcMainWebFlorenceFontOpen_sansOpensansSemiboldSvg, map[string]*bintree{}},
								"OpenSans-Semibold.ttf": &bintree{SrcMainWebFlorenceFontOpen_sansOpensansSemiboldTtf, map[string]*bintree{}},
								"OpenSans-Semibold.woff": &bintree{SrcMainWebFlorenceFontOpen_sansOpensansSemiboldWoff, map[string]*bintree{}},
								"OpenSans-Semibold.woff2": &bintree{SrcMainWebFlorenceFontOpen_sansOpensansSemiboldWoff2, map[string]*bintree{}},
								"OpenSans-SemiboldItalic.eot": &bintree{SrcMainWebFlorenceFontOpen_sansOpensansSemibolditalicEot, map[string]*bintree{}},
								"OpenSans-SemiboldItalic.svg": &bintree{SrcMainWebFlorenceFontOpen_sansOpensansSemibolditalicSvg, map[string]*bintree{}},
								"OpenSans-SemiboldItalic.ttf": &bintree{SrcMainWebFlorenceFontOpen_sansOpensansSemibolditalicTtf, map[string]*bintree{}},
								"OpenSans-SemiboldItalic.woff": &bintree{SrcMainWebFlorenceFontOpen_sansOpensansSemibolditalicWoff, map[string]*bintree{}},
							}},
							"Roboto_Slab": &bintree{nil, map[string]*bintree{
								"LICENSE.txt": &bintree{SrcMainWebFlorenceFontRoboto_slabLicenseTxt, map[string]*bintree{}},
								"RobotoSlab-Bold.eot": &bintree{SrcMainWebFlorenceFontRoboto_slabRobotoslabBoldEot, map[string]*bintree{}},
								"RobotoSlab-Bold.svg": &bintree{SrcMainWebFlorenceFontRoboto_slabRobotoslabBoldSvg, map[string]*bintree{}},
								"RobotoSlab-Bold.ttf": &bintree{SrcMainWebFlorenceFontRoboto_slabRobotoslabBoldTtf, map[string]*bintree{}},
								"RobotoSlab-Bold.woff": &bintree{SrcMainWebFlorenceFontRoboto_slabRobotoslabBoldWoff, map[string]*bintree{}},
								"RobotoSlab-Bold.woff2": &bintree{SrcMainWebFlorenceFontRoboto_slabRobotoslabBoldWoff2, map[string]*bintree{}},
								"RobotoSlab-Light.eot": &bintree{SrcMainWebFlorenceFontRoboto_slabRobotoslabLightEot, map[string]*bintree{}},
								"RobotoSlab-Light.svg": &bintree{SrcMainWebFlorenceFontRoboto_slabRobotoslabLightSvg, map[string]*bintree{}},
								"RobotoSlab-Light.ttf": &bintree{SrcMainWebFlorenceFontRoboto_slabRobotoslabLightTtf, map[string]*bintree{}},
								"RobotoSlab-Light.woff": &bintree{SrcMainWebFlorenceFontRoboto_slabRobotoslabLightWoff, map[string]*bintree{}},
								"RobotoSlab-Regular.eot": &bintree{SrcMainWebFlorenceFontRoboto_slabRobotoslabRegularEot, map[string]*bintree{}},
								"RobotoSlab-Regular.svg": &bintree{SrcMainWebFlorenceFontRoboto_slabRobotoslabRegularSvg, map[string]*bintree{}},
								"RobotoSlab-Regular.ttf": &bintree{SrcMainWebFlorenceFontRoboto_slabRobotoslabRegularTtf, map[string]*bintree{}},
								"RobotoSlab-Regular.woff": &bintree{SrcMainWebFlorenceFontRoboto_slabRobotoslabRegularWoff, map[string]*bintree{}},
								"RobotoSlab-Regular.woff2": &bintree{SrcMainWebFlorenceFontRoboto_slabRobotoslabRegularWoff2, map[string]*bintree{}},
								"RobotoSlab-Thin.eot": &bintree{SrcMainWebFlorenceFontRoboto_slabRobotoslabThinEot, map[string]*bintree{}},
								"RobotoSlab-Thin.svg": &bintree{SrcMainWebFlorenceFontRoboto_slabRobotoslabThinSvg, map[string]*bintree{}},
								"RobotoSlab-Thin.ttf": &bintree{SrcMainWebFlorenceFontRoboto_slabRobotoslabThinTtf, map[string]*bintree{}},
								"RobotoSlab-Thin.woff": &bintree{SrcMainWebFlorenceFontRoboto_slabRobotoslabThinWoff, map[string]*bintree{}},
								"RobotoSlab-Thin.woff2": &bintree{SrcMainWebFlorenceFontRoboto_slabRobotoslabThinWoff2, map[string]*bintree{}},
							}},
							"Ubuntu_Mono": &bintree{nil, map[string]*bintree{
								"UFL.txt": &bintree{SrcMainWebFlorenceFontUbuntu_monoUflTxt, map[string]*bintree{}},
								"UbuntuMono-Bold.eot": &bintree{SrcMainWebFlorenceFontUbuntu_monoUbuntumonoBoldEot, map[string]*bintree{}},
								"UbuntuMono-Bold.svg": &bintree{SrcMainWebFlorenceFontUbuntu_monoUbuntumonoBoldSvg, map[string]*bintree{}},
								"UbuntuMono-Bold.ttf": &bintree{SrcMainWebFlorenceFontUbuntu_monoUbuntumonoBoldTtf, map[string]*bintree{}},
								"UbuntuMono-Bold.woff": &bintree{SrcMainWebFlorenceFontUbuntu_monoUbuntumonoBoldWoff, map[string]*bintree{}},
								"UbuntuMono-Bold.woff2": &bintree{SrcMainWebFlorenceFontUbuntu_monoUbuntumonoBoldWoff2, map[string]*bintree{}},
								"UbuntuMono-BoldItalic.eot": &bintree{SrcMainWebFlorenceFontUbuntu_monoUbuntumonoBolditalicEot, map[string]*bintree{}},
								"UbuntuMono-BoldItalic.svg": &bintree{SrcMainWebFlorenceFontUbuntu_monoUbuntumonoBolditalicSvg, map[string]*bintree{}},
								"UbuntuMono-BoldItalic.ttf": &bintree{SrcMainWebFlorenceFontUbuntu_monoUbuntumonoBolditalicTtf, map[string]*bintree{}},
								"UbuntuMono-BoldItalic.woff": &bintree{SrcMainWebFlorenceFontUbuntu_monoUbuntumonoBolditalicWoff, map[string]*bintree{}},
								"UbuntuMono-Italic.eot": &bintree{SrcMainWebFlorenceFontUbuntu_monoUbuntumonoItalicEot, map[string]*bintree{}},
								"UbuntuMono-Italic.svg": &bintree{SrcMainWebFlorenceFontUbuntu_monoUbuntumonoItalicSvg, map[string]*bintree{}},
								"UbuntuMono-Italic.ttf": &bintree{SrcMainWebFlorenceFontUbuntu_monoUbuntumonoItalicTtf, map[string]*bintree{}},
								"UbuntuMono-Italic.woff": &bintree{SrcMainWebFlorenceFontUbuntu_monoUbuntumonoItalicWoff, map[string]*bintree{}},
								"UbuntuMono-Regular.eot": &bintree{SrcMainWebFlorenceFontUbuntu_monoUbuntumonoRegularEot, map[string]*bintree{}},
								"UbuntuMono-Regular.svg": &bintree{SrcMainWebFlorenceFontUbuntu_monoUbuntumonoRegularSvg, map[string]*bintree{}},
								"UbuntuMono-Regular.ttf": &bintree{SrcMainWebFlorenceFontUbuntu_monoUbuntumonoRegularTtf, map[string]*bintree{}},
								"UbuntuMono-Regular.woff": &bintree{SrcMainWebFlorenceFontUbuntu_monoUbuntumonoRegularWoff, map[string]*bintree{}},
								"UbuntuMono-Regular.woff2": &bintree{SrcMainWebFlorenceFontUbuntu_monoUbuntumonoRegularWoff2, map[string]*bintree{}},
							}},
							"florence.eot": &bintree{SrcMainWebFlorenceFontFlorenceEot, map[string]*bintree{}},
							"florence.svg": &bintree{SrcMainWebFlorenceFontFlorenceSvg, map[string]*bintree{}},
							"florence.ttf": &bintree{SrcMainWebFlorenceFontFlorenceTtf, map[string]*bintree{}},
							"florence.woff": &bintree{SrcMainWebFlorenceFontFlorenceWoff, map[string]*bintree{}},
						}},
						"html templates": &bintree{nil, map[string]*bintree{
							"jquery-ui.min.js": &bintree{SrcMainWebFlorenceHtmlTemplatesJqueryUiMinJs, map[string]*bintree{}},
							"pagedown.css": &bintree{SrcMainWebFlorenceHtmlTemplatesPagedownCss, map[string]*bintree{}},
							"publish-manual.html": &bintree{SrcMainWebFlorenceHtmlTemplatesPublishManualHtml, map[string]*bintree{}},
							"publish-scheduled.html": &bintree{SrcMainWebFlorenceHtmlTemplatesPublishScheduledHtml, map[string]*bintree{}},
							"ui-functions.js": &bintree{SrcMainWebFlorenceHtmlTemplatesUiFunctionsJs, map[string]*bintree{}},
							"workspace-browse.html": &bintree{SrcMainWebFlorenceHtmlTemplatesWorkspaceBrowseHtml, map[string]*bintree{}},
							"workspace-create.html": &bintree{SrcMainWebFlorenceHtmlTemplatesWorkspaceCreateHtml, map[string]*bintree{}},
							"workspace-edit.html": &bintree{SrcMainWebFlorenceHtmlTemplatesWorkspaceEditHtml, map[string]*bintree{}},
						}},
						"img": &bintree{nil, map[string]*bintree{
							"favicon11.ico": &bintree{SrcMainWebFlorenceImgFavicon11Ico, map[string]*bintree{}},
							"favicon12.ico": &bintree{SrcMainWebFlorenceImgFavicon12Ico, map[string]*bintree{}},
							"favicon21.ico": &bintree{SrcMainWebFlorenceImgFavicon21Ico, map[string]*bintree{}},
							"favicon22.ico": &bintree{SrcMainWebFlorenceImgFavicon22Ico, map[string]*bintree{}},
							"favicon23.ico": &bintree{SrcMainWebFlorenceImgFavicon23Ico, map[string]*bintree{}},
							"favicon24.ico": &bintree{SrcMainWebFlorenceImgFavicon24Ico, map[string]*bintree{}},
							"flo-logo.png": &bintree{SrcMainWebFlorenceImgFloLogoPng, map[string]*bintree{}},
							"flo-logo144.png": &bintree{SrcMainWebFlorenceImgFloLogo144Png, map[string]*bintree{}},
							"rule-21.png": &bintree{SrcMainWebFlorenceImgRule21Png, map[string]*bintree{}},
							"rule-22.png": &bintree{SrcMainWebFlorenceImgRule22Png, map[string]*bintree{}},
							"rule.png": &bintree{SrcMainWebFlorenceImgRulePng, map[string]*bintree{}},
							"sb_v_double_arrow.png": &bintree{SrcMainWebFlorenceImgSb_v_double_arrowPng, map[string]*bintree{}},
							"semi-transparent-bg.png": &bintree{SrcMainWebFlorenceImgSemiTransparentBgPng, map[string]*bintree{}},
							"sprite.png": &bintree{SrcMainWebFlorenceImgSpritePng, map[string]*bintree{}},
							"ui-bg_diagonals-thick_18_b81900_40x40.png": &bintree{SrcMainWebFlorenceImgUiBg_diagonalsThick_18_b81900_40x40Png, map[string]*bintree{}},
							"ui-bg_diagonals-thick_20_666666_40x40.png": &bintree{SrcMainWebFlorenceImgUiBg_diagonalsThick_20_666666_40x40Png, map[string]*bintree{}},
							"ui-bg_flat_10_000000_40x100.png": &bintree{SrcMainWebFlorenceImgUiBg_flat_10_000000_40x100Png, map[string]*bintree{}},
							"ui-bg_glass_100_f6f6f6_1x400.png": &bintree{SrcMainWebFlorenceImgUiBg_glass_100_f6f6f6_1x400Png, map[string]*bintree{}},
							"ui-bg_glass_100_fdf5ce_1x400.png": &bintree{SrcMainWebFlorenceImgUiBg_glass_100_fdf5ce_1x400Png, map[string]*bintree{}},
							"ui-bg_glass_65_ffffff_1x400.png": &bintree{SrcMainWebFlorenceImgUiBg_glass_65_ffffff_1x400Png, map[string]*bintree{}},
							"ui-bg_gloss-wave_35_f6a828_500x100.png": &bintree{SrcMainWebFlorenceImgUiBg_glossWave_35_f6a828_500x100Png, map[string]*bintree{}},
							"ui-bg_highlight-soft_100_eeeeee_1x100.png": &bintree{SrcMainWebFlorenceImgUiBg_highlightSoft_100_eeeeee_1x100Png, map[string]*bintree{}},
							"ui-bg_highlight-soft_75_ffe45c_1x100.png": &bintree{SrcMainWebFlorenceImgUiBg_highlightSoft_75_ffe45c_1x100Png, map[string]*bintree{}},
							"ui-icons_222222_256x240.png": &bintree{SrcMainWebFlorenceImgUiIcons_222222_256x240Png, map[string]*bintree{}},
							"ui-icons_228ef1_256x240.png": &bintree{SrcMainWebFlorenceImgUiIcons_228ef1_256x240Png, map[string]*bintree{}},
							"ui-icons_ef8c08_256x240.png": &bintree{SrcMainWebFlorenceImgUiIcons_ef8c08_256x240Png, map[string]*bintree{}},
							"ui-icons_ffd27a_256x240.png": &bintree{SrcMainWebFlorenceImgUiIcons_ffd27a_256x240Png, map[string]*bintree{}},
							"ui-icons_ffffff_256x240.png": &bintree{SrcMainWebFlorenceImgUiIcons_ffffff_256x240Png, map[string]*bintree{}},
							"wmd-buttons.png": &bintree{SrcMainWebFlorenceImgWmdButtonsPng, map[string]*bintree{}},
						}},
						"index.html": &bintree{SrcMainWebFlorenceIndexHtml, map[string]*bintree{}},
						"js": &bintree{nil, map[string]*bintree{
							".DS_Store": &bintree{SrcMainWebFlorenceJsDs_store, map[string]*bintree{}},
							"app.js": &bintree{SrcMainWebFlorenceJsAppJs, map[string]*bintree{}},
							"classes": &bintree{nil, map[string]*bintree{
								"cookieUtils.js": &bintree{SrcMainWebFlorenceJsClassesCookieutilsJs, map[string]*bintree{}},
								"florence.js": &bintree{SrcMainWebFlorenceJsClassesFlorenceJs, map[string]*bintree{}},
								"pathUtils.js": &bintree{SrcMainWebFlorenceJsClassesPathutilsJs, map[string]*bintree{}},
								"stringUtils.js": &bintree{SrcMainWebFlorenceJsClassesStringutilsJs, map[string]*bintree{}},
							}},
							"components": &bintree{nil, map[string]*bintree{
								"_accordion.js": &bintree{SrcMainWebFlorenceJsComponents_accordionJs, map[string]*bintree{}},
								"_fileInput.js": &bintree{SrcMainWebFlorenceJsComponents_fileinputJs, map[string]*bintree{}},
								"_hidePanel.js": &bintree{SrcMainWebFlorenceJsComponents_hidepanelJs, map[string]*bintree{}},
								"_showPanel.js": &bintree{SrcMainWebFlorenceJsComponents_showpanelJs, map[string]*bintree{}},
							}},
							"functions": &bintree{nil, map[string]*bintree{
								"_ContentDeleteMarker.js": &bintree{SrcMainWebFlorenceJsFunctions_contentdeletemarkerJs, map[string]*bintree{}},
								"__init.js": &bintree{SrcMainWebFlorenceJsFunctions__initJs, map[string]*bintree{}},
								"_accordionSettings.js": &bintree{SrcMainWebFlorenceJsFunctions_accordionsettingsJs, map[string]*bintree{}},
								"_autoSize.js": &bintree{SrcMainWebFlorenceJsFunctions_autosizeJs, map[string]*bintree{}},
								"_checkForPageChanged.js": &bintree{SrcMainWebFlorenceJsFunctions_checkforpagechangedJs, map[string]*bintree{}},
								"_checkPathParsed.js": &bintree{SrcMainWebFlorenceJsFunctions_checkpathparsedJs, map[string]*bintree{}},
								"_checkPathSlashes.js": &bintree{SrcMainWebFlorenceJsFunctions_checkpathslashesJs, map[string]*bintree{}},
								"_checkRenameUri.js": &bintree{SrcMainWebFlorenceJsFunctions_checkrenameuriJs, map[string]*bintree{}},
								"_collectionHelpers.js": &bintree{SrcMainWebFlorenceJsFunctions_collectionhelpersJs, map[string]*bintree{}},
								"_copyPath.js": &bintree{SrcMainWebFlorenceJsFunctions_copypathJs, map[string]*bintree{}},
								"_createCollection.js": &bintree{SrcMainWebFlorenceJsFunctions_createcollectionJs, map[string]*bintree{}},
								"_createWorkspace.js": &bintree{SrcMainWebFlorenceJsFunctions_createworkspaceJs, map[string]*bintree{}},
								"_deleteTeam.js": &bintree{SrcMainWebFlorenceJsFunctions_deleteteamJs, map[string]*bintree{}},
								"_deleteUnpublishedVersion.js": &bintree{SrcMainWebFlorenceJsFunctions_deleteunpublishedversionJs, map[string]*bintree{}},
								"_deleteUser.js": &bintree{SrcMainWebFlorenceJsFunctions_deleteuserJs, map[string]*bintree{}},
								"_editAddDataset.js": &bintree{SrcMainWebFlorenceJsFunctions_editadddatasetJs, map[string]*bintree{}},
								"_editAddFile.js": &bintree{SrcMainWebFlorenceJsFunctions_editaddfileJs, map[string]*bintree{}},
								"_editAddFileWithDetails.js": &bintree{SrcMainWebFlorenceJsFunctions_editaddfilewithdetailsJs, map[string]*bintree{}},
								"_editAlert.js": &bintree{SrcMainWebFlorenceJsFunctions_editalertJs, map[string]*bintree{}},
								"_editBlocks.js": &bintree{SrcMainWebFlorenceJsFunctions_editblocksJs, map[string]*bintree{}},
								"_editCollection.js": &bintree{SrcMainWebFlorenceJsFunctions_editcollectionJs, map[string]*bintree{}},
								"_editDatasetVersion.js": &bintree{SrcMainWebFlorenceJsFunctions_editdatasetversionJs, map[string]*bintree{}},
								"_editDate.js": &bintree{SrcMainWebFlorenceJsFunctions_editdateJs, map[string]*bintree{}},
								"_editDocWithFilesCorrection.js": &bintree{SrcMainWebFlorenceJsFunctions_editdocwithfilescorrectionJs, map[string]*bintree{}},
								"_editDocumentCorrection.js": &bintree{SrcMainWebFlorenceJsFunctions_editdocumentcorrectionJs, map[string]*bintree{}},
								"_editIntLinks.js": &bintree{SrcMainWebFlorenceJsFunctions_editintlinksJs, map[string]*bintree{}},
								"_editMarkdownOneObject.js": &bintree{SrcMainWebFlorenceJsFunctions_editmarkdownoneobjectJs, map[string]*bintree{}},
								"_editMarkdownWithNoTitle.js": &bintree{SrcMainWebFlorenceJsFunctions_editmarkdownwithnotitleJs, map[string]*bintree{}},
								"_editServiceMessage.js": &bintree{SrcMainWebFlorenceJsFunctions_editservicemessageJs, map[string]*bintree{}},
								"_editTopics.js": &bintree{SrcMainWebFlorenceJsFunctions_edittopicsJs, map[string]*bintree{}},
								"_environment.js": &bintree{SrcMainWebFlorenceJsFunctions_environmentJs, map[string]*bintree{}},
								"_externalLinkAccordionSection.js": &bintree{SrcMainWebFlorenceJsFunctions_externallinkaccordionsectionJs, map[string]*bintree{}},
								"_fileDelete.js": &bintree{SrcMainWebFlorenceJsFunctions_filedeleteJs, map[string]*bintree{}},
								"_fileUpload.js": &bintree{SrcMainWebFlorenceJsFunctions_fileuploadJs, map[string]*bintree{}},
								"_getLastPosition.js": &bintree{SrcMainWebFlorenceJsFunctions_getlastpositionJs, map[string]*bintree{}},
								"_getNetworkStatus.js": &bintree{SrcMainWebFlorenceJsFunctions_getnetworkstatusJs, map[string]*bintree{}},
								"_getParentPage.js": &bintree{SrcMainWebFlorenceJsFunctions_getparentpageJs, map[string]*bintree{}},
								"_getPathNameTrimLast.js": &bintree{SrcMainWebFlorenceJsFunctions_getpathnametrimlastJs, map[string]*bintree{}},
								"_getPreviewUrl.js": &bintree{SrcMainWebFlorenceJsFunctions_getpreviewurlJs, map[string]*bintree{}},
								"_handleApiError.js": &bintree{SrcMainWebFlorenceJsFunctions_handleapierrorJs, map[string]*bintree{}},
								"_initialiseNoteMarkdown.js": &bintree{SrcMainWebFlorenceJsFunctions_initialisenotemarkdownJs, map[string]*bintree{}},
								"_inputValidation.js": &bintree{SrcMainWebFlorenceJsFunctions_inputvalidationJs, map[string]*bintree{}},
								"_loadBrowseScreen.js": &bintree{SrcMainWebFlorenceJsFunctions_loadbrowsescreenJs, map[string]*bintree{}},
								"_loadChartBuilder.js": &bintree{SrcMainWebFlorenceJsFunctions_loadchartbuilderJs, map[string]*bintree{}},
								"_loadChartsList.js": &bintree{SrcMainWebFlorenceJsFunctions_loadchartslistJs, map[string]*bintree{}},
								"_loadCreateScreen.js": &bintree{SrcMainWebFlorenceJsFunctions_loadcreatescreenJs, map[string]*bintree{}},
								"_loadCreator.js": &bintree{SrcMainWebFlorenceJsFunctions_loadcreatorJs, map[string]*bintree{}},
								"_loadCreatorDatepicker.js": &bintree{SrcMainWebFlorenceJsFunctions_loadcreatordatepickerJs, map[string]*bintree{}},
								"_loadEmbedIframe.js": &bintree{SrcMainWebFlorenceJsFunctions_loadembediframeJs, map[string]*bintree{}},
								"_loadEquationBuilder.js": &bintree{SrcMainWebFlorenceJsFunctions_loadequationbuilderJs, map[string]*bintree{}},
								"_loadEquationsList.js": &bintree{SrcMainWebFlorenceJsFunctions_loadequationslistJs, map[string]*bintree{}},
								"_loadImageBuilder.js": &bintree{SrcMainWebFlorenceJsFunctions_loadimagebuilderJs, map[string]*bintree{}},
								"_loadImagesList.js": &bintree{SrcMainWebFlorenceJsFunctions_loadimageslistJs, map[string]*bintree{}},
								"_loadImportScreen.js": &bintree{SrcMainWebFlorenceJsFunctions_loadimportscreenJs, map[string]*bintree{}},
								"_loadMarkdownEditor.js": &bintree{SrcMainWebFlorenceJsFunctions_loadmarkdowneditorJs, map[string]*bintree{}},
								"_loadPageDataIntoEditor.js": &bintree{SrcMainWebFlorenceJsFunctions_loadpagedataintoeditorJs, map[string]*bintree{}},
								"_loadParentLink.js": &bintree{SrcMainWebFlorenceJsFunctions_loadparentlinkJs, map[string]*bintree{}},
								"_loadT16Creator.js": &bintree{SrcMainWebFlorenceJsFunctions_loadt16creatorJs, map[string]*bintree{}},
								"_loadT4Creator.js": &bintree{SrcMainWebFlorenceJsFunctions_loadt4creatorJs, map[string]*bintree{}},
								"_loadT6Creator.js": &bintree{SrcMainWebFlorenceJsFunctions_loadt6creatorJs, map[string]*bintree{}},
								"_loadT7Creator.js": &bintree{SrcMainWebFlorenceJsFunctions_loadt7creatorJs, map[string]*bintree{}},
								"_loadT8DatasetCreator.js": &bintree{SrcMainWebFlorenceJsFunctions_loadt8datasetcreatorJs, map[string]*bintree{}},
								"_loadT8LandingCreator.js": &bintree{SrcMainWebFlorenceJsFunctions_loadt8landingcreatorJs, map[string]*bintree{}},
								"_loadTableBuilder.js": &bintree{SrcMainWebFlorenceJsFunctions_loadtablebuilderJs, map[string]*bintree{}},
								"_loadTablesList.js": &bintree{SrcMainWebFlorenceJsFunctions_loadtableslistJs, map[string]*bintree{}},
								"_loadVisCreator.js": &bintree{SrcMainWebFlorenceJsFunctions_loadviscreatorJs, map[string]*bintree{}},
								"_logout.js": &bintree{SrcMainWebFlorenceJsFunctions_logoutJs, map[string]*bintree{}},
								"_makeUrl.js": &bintree{SrcMainWebFlorenceJsFunctions_makeurlJs, map[string]*bintree{}},
								"_markdownContentAccordionSection.js": &bintree{SrcMainWebFlorenceJsFunctions_markdowncontentaccordionsectionJs, map[string]*bintree{}},
								"_markdownSetLines.js": &bintree{SrcMainWebFlorenceJsFunctions_markdownsetlinesJs, map[string]*bintree{}},
								"_menuSelectSettings.js": &bintree{SrcMainWebFlorenceJsFunctions_menuselectsettingsJs, map[string]*bintree{}},
								"_moveBrowseNode.js": &bintree{SrcMainWebFlorenceJsFunctions_movebrowsenodeJs, map[string]*bintree{}},
								"_parseUrl.js": &bintree{SrcMainWebFlorenceJsFunctions_parseurlJs, map[string]*bintree{}},
								"_postApproveCollection.js": &bintree{SrcMainWebFlorenceJsFunctions_postapprovecollectionJs, map[string]*bintree{}},
								"_postComplete.js": &bintree{SrcMainWebFlorenceJsFunctions_postcompleteJs, map[string]*bintree{}},
								"_postContent.js": &bintree{SrcMainWebFlorenceJsFunctions_postcontentJs, map[string]*bintree{}},
								"_postLogin.js": &bintree{SrcMainWebFlorenceJsFunctions_postloginJs, map[string]*bintree{}},
								"_postReview.js": &bintree{SrcMainWebFlorenceJsFunctions_postreviewJs, map[string]*bintree{}},
								"_postTeam.js": &bintree{SrcMainWebFlorenceJsFunctions_postteamJs, map[string]*bintree{}},
								"_postUser.js": &bintree{SrcMainWebFlorenceJsFunctions_postuserJs, map[string]*bintree{}},
								"_publish.js": &bintree{SrcMainWebFlorenceJsFunctions_publishJs, map[string]*bintree{}},
								"_refreshPreview.js": &bintree{SrcMainWebFlorenceJsFunctions_refreshpreviewJs, map[string]*bintree{}},
								"_relatedItemAccordionSection.js": &bintree{SrcMainWebFlorenceJsFunctions_relateditemaccordionsectionJs, map[string]*bintree{}},
								"_renameChildren.js": &bintree{SrcMainWebFlorenceJsFunctions_renamechildrenJs, map[string]*bintree{}},
								"_renameContent.js": &bintree{SrcMainWebFlorenceJsFunctions_renamecontentJs, map[string]*bintree{}},
								"_renderAccordionSections.js": &bintree{SrcMainWebFlorenceJsFunctions_renderaccordionsectionsJs, map[string]*bintree{}},
								"_reset.js": &bintree{SrcMainWebFlorenceJsFunctions_resetJs, map[string]*bintree{}},
								"_saveContent.js": &bintree{SrcMainWebFlorenceJsFunctions_savecontentJs, map[string]*bintree{}},
								"_saveNewCorrection.js": &bintree{SrcMainWebFlorenceJsFunctions_savenewcorrectionJs, map[string]*bintree{}},
								"_setShortcuts.js": &bintree{SrcMainWebFlorenceJsFunctions_setshortcutsJs, map[string]*bintree{}},
								"_setupFlorence.js": &bintree{SrcMainWebFlorenceJsFunctions_setupflorenceJs, map[string]*bintree{}},
								"_t16ReleaseEditor.js": &bintree{SrcMainWebFlorenceJsFunctions_t16releaseeditorJs, map[string]*bintree{}},
								"_t1Editor.js": &bintree{SrcMainWebFlorenceJsFunctions_t1editorJs, map[string]*bintree{}},
								"_t1EditorCensus.js": &bintree{SrcMainWebFlorenceJsFunctions_t1editorcensusJs, map[string]*bintree{}},
								"_t2Editor.js": &bintree{SrcMainWebFlorenceJsFunctions_t2editorJs, map[string]*bintree{}},
								"_t3Editor.js": &bintree{SrcMainWebFlorenceJsFunctions_t3editorJs, map[string]*bintree{}},
								"_t4ArticleDownloadEditor.js": &bintree{SrcMainWebFlorenceJsFunctions_t4articledownloadeditorJs, map[string]*bintree{}},
								"_t4ArticleEditor.js": &bintree{SrcMainWebFlorenceJsFunctions_t4articleeditorJs, map[string]*bintree{}},
								"_t4BulletinEditor.js": &bintree{SrcMainWebFlorenceJsFunctions_t4bulletineditorJs, map[string]*bintree{}},
								"_t5TimeseriesEditor.js": &bintree{SrcMainWebFlorenceJsFunctions_t5timeserieseditorJs, map[string]*bintree{}},
								"_t6CompendiumChapterEditor.js": &bintree{SrcMainWebFlorenceJsFunctions_t6compendiumchaptereditorJs, map[string]*bintree{}},
								"_t6CompendiumDataEditor.js": &bintree{SrcMainWebFlorenceJsFunctions_t6compendiumdataeditorJs, map[string]*bintree{}},
								"_t6CompendiumEditor.js": &bintree{SrcMainWebFlorenceJsFunctions_t6compendiumeditorJs, map[string]*bintree{}},
								"_t7AdHocEditor.js": &bintree{SrcMainWebFlorenceJsFunctions_t7adhoceditorJs, map[string]*bintree{}},
								"_t7FoiEditor.js": &bintree{SrcMainWebFlorenceJsFunctions_t7foieditorJs, map[string]*bintree{}},
								"_t7MethodologyDownloadEditor.js": &bintree{SrcMainWebFlorenceJsFunctions_t7methodologydownloadeditorJs, map[string]*bintree{}},
								"_t7MethodologyEditor.js": &bintree{SrcMainWebFlorenceJsFunctions_t7methodologyeditorJs, map[string]*bintree{}},
								"_t7QmiEditor.js": &bintree{SrcMainWebFlorenceJsFunctions_t7qmieditorJs, map[string]*bintree{}},
								"_t7StaticArticleEditor.js": &bintree{SrcMainWebFlorenceJsFunctions_t7staticarticleeditorJs, map[string]*bintree{}},
								"_t7StaticLandingPageEditor.js": &bintree{SrcMainWebFlorenceJsFunctions_t7staticlandingpageeditorJs, map[string]*bintree{}},
								"_t7StaticPageEditor.js": &bintree{SrcMainWebFlorenceJsFunctions_t7staticpageeditorJs, map[string]*bintree{}},
								"_t8DatasetEditor.js": &bintree{SrcMainWebFlorenceJsFunctions_t8dataseteditorJs, map[string]*bintree{}},
								"_t8LandingPageEditor.js": &bintree{SrcMainWebFlorenceJsFunctions_t8landingpageeditorJs, map[string]*bintree{}},
								"_transfer.js": &bintree{SrcMainWebFlorenceJsFunctions_transferJs, map[string]*bintree{}},
								"_treeNodeSelect.js": &bintree{SrcMainWebFlorenceJsFunctions_treenodeselectJs, map[string]*bintree{}},
								"_ui.js": &bintree{SrcMainWebFlorenceJsFunctions_uiJs, map[string]*bintree{}},
								"_uiTidyup.js": &bintree{SrcMainWebFlorenceJsFunctions_uitidyupJs, map[string]*bintree{}},
								"_updateContent.js": &bintree{SrcMainWebFlorenceJsFunctions_updatecontentJs, map[string]*bintree{}},
								"_viewChangePassword.js": &bintree{SrcMainWebFlorenceJsFunctions_viewchangepasswordJs, map[string]*bintree{}},
								"_viewCollectionDetails.js": &bintree{SrcMainWebFlorenceJsFunctions_viewcollectiondetailsJs, map[string]*bintree{}},
								"_viewCollections.js": &bintree{SrcMainWebFlorenceJsFunctions_viewcollectionsJs, map[string]*bintree{}},
								"_viewController.js": &bintree{SrcMainWebFlorenceJsFunctions_viewcontrollerJs, map[string]*bintree{}},
								"_viewLogIn.js": &bintree{SrcMainWebFlorenceJsFunctions_viewloginJs, map[string]*bintree{}},
								"_viewPublish.js": &bintree{SrcMainWebFlorenceJsFunctions_viewpublishJs, map[string]*bintree{}},
								"_viewPublishDetails.js": &bintree{SrcMainWebFlorenceJsFunctions_viewpublishdetailsJs, map[string]*bintree{}},
								"_viewReleaseSelector.js": &bintree{SrcMainWebFlorenceJsFunctions_viewreleaseselectorJs, map[string]*bintree{}},
								"_viewReportDetails.js": &bintree{SrcMainWebFlorenceJsFunctions_viewreportdetailsJs, map[string]*bintree{}},
								"_viewReports.js": &bintree{SrcMainWebFlorenceJsFunctions_viewreportsJs, map[string]*bintree{}},
								"_viewTeamDetails.js": &bintree{SrcMainWebFlorenceJsFunctions_viewteamdetailsJs, map[string]*bintree{}},
								"_viewTeams.js": &bintree{SrcMainWebFlorenceJsFunctions_viewteamsJs, map[string]*bintree{}},
								"_viewUserDetails.js": &bintree{SrcMainWebFlorenceJsFunctions_viewuserdetailsJs, map[string]*bintree{}},
								"_viewUsers.js": &bintree{SrcMainWebFlorenceJsFunctions_viewusersJs, map[string]*bintree{}},
								"_viewWorkspace.js": &bintree{SrcMainWebFlorenceJsFunctions_viewworkspaceJs, map[string]*bintree{}},
								"_visualisationEditor.js": &bintree{SrcMainWebFlorenceJsFunctions_visualisationeditorJs, map[string]*bintree{}},
								"registerServiceWorker.js": &bintree{SrcMainWebFlorenceJsFunctionsRegisterserviceworkerJs, map[string]*bintree{}},
							}},
							"third-party": &bintree{nil, map[string]*bintree{
								"Markdown.Converter.js": &bintree{SrcMainWebFlorenceJsThirdPartyMarkdownConverterJs, map[string]*bintree{}},
								"Markdown.Editor.js": &bintree{SrcMainWebFlorenceJsThirdPartyMarkdownEditorJs, map[string]*bintree{}},
								"Markdown.Extra.js": &bintree{SrcMainWebFlorenceJsThirdPartyMarkdownExtraJs, map[string]*bintree{}},
								"Markdown.Sanitizer.js": &bintree{SrcMainWebFlorenceJsThirdPartyMarkdownSanitizerJs, map[string]*bintree{}},
								"ZeroClipboard.min.js": &bintree{SrcMainWebFlorenceJsThirdPartyZeroclipboardMinJs, map[string]*bintree{}},
								"ZeroClipboard.swf": &bintree{SrcMainWebFlorenceJsThirdPartyZeroclipboardSwf, map[string]*bintree{}},
								"autosize.js": &bintree{SrcMainWebFlorenceJsThirdPartyAutosizeJs, map[string]*bintree{}},
								"clipboard.min.js": &bintree{SrcMainWebFlorenceJsThirdPartyClipboardMinJs, map[string]*bintree{}},
								"handlebars.runtime.min.js": &bintree{SrcMainWebFlorenceJsThirdPartyHandlebarsRuntimeMinJs, map[string]*bintree{}},
								"highcharts-more.js": &bintree{SrcMainWebFlorenceJsThirdPartyHighchartsMoreJs, map[string]*bintree{}},
								"highcharts.js": &bintree{SrcMainWebFlorenceJsThirdPartyHighchartsJs, map[string]*bintree{}},
								"jquery-ui-timepicker-addon.js": &bintree{SrcMainWebFlorenceJsThirdPartyJqueryUiTimepickerAddonJs, map[string]*bintree{}},
								"jquery-ui.js": &bintree{SrcMainWebFlorenceJsThirdPartyJqueryUiJs, map[string]*bintree{}},
								"jquery.hotkeys.js": &bintree{SrcMainWebFlorenceJsThirdPartyJqueryHotkeysJs, map[string]*bintree{}},
								"jquery.min.js": &bintree{SrcMainWebFlorenceJsThirdPartyJqueryMinJs, map[string]*bintree{}},
								"mathjax": &bintree{nil, map[string]*bintree{
									"MathJax.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxMathjaxJs, map[string]*bintree{}},
									"config": &bintree{nil, map[string]*bintree{
										"AM_CHTML-full.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxConfigAm_chtmlFullJs, map[string]*bintree{}},
										"AM_CHTML.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxConfigAm_chtmlJs, map[string]*bintree{}},
										"AM_HTMLorMML-full.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxConfigAm_htmlormmlFullJs, map[string]*bintree{}},
										"AM_HTMLorMML.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxConfigAm_htmlormmlJs, map[string]*bintree{}},
										"AM_SVG-full.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxConfigAm_svgFullJs, map[string]*bintree{}},
										"AM_SVG.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxConfigAm_svgJs, map[string]*bintree{}},
										"Accessible-full.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxConfigAccessibleFullJs, map[string]*bintree{}},
										"Accessible.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxConfigAccessibleJs, map[string]*bintree{}},
										"MML_CHTML-full.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxConfigMml_chtmlFullJs, map[string]*bintree{}},
										"MML_CHTML.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxConfigMml_chtmlJs, map[string]*bintree{}},
										"MML_HTMLorMML-full.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxConfigMml_htmlormmlFullJs, map[string]*bintree{}},
										"MML_HTMLorMML.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxConfigMml_htmlormmlJs, map[string]*bintree{}},
										"MML_SVG-full.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxConfigMml_svgFullJs, map[string]*bintree{}},
										"MML_SVG.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxConfigMml_svgJs, map[string]*bintree{}},
										"MMLorHTML.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxConfigMmlorhtmlJs, map[string]*bintree{}},
										"Safe.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxConfigSafeJs, map[string]*bintree{}},
										"TeX-AMS-MML_HTMLorMML-full.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxConfigTexAmsMml_htmlormmlFullJs, map[string]*bintree{}},
										"TeX-AMS-MML_HTMLorMML.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxConfigTexAmsMml_htmlormmlJs, map[string]*bintree{}},
										"TeX-AMS-MML_SVG-full.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxConfigTexAmsMml_svgFullJs, map[string]*bintree{}},
										"TeX-AMS-MML_SVG.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxConfigTexAmsMml_svgJs, map[string]*bintree{}},
										"TeX-AMS_CHTML-full.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxConfigTexAms_chtmlFullJs, map[string]*bintree{}},
										"TeX-AMS_CHTML.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxConfigTexAms_chtmlJs, map[string]*bintree{}},
										"TeX-AMS_HTML-full.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxConfigTexAms_htmlFullJs, map[string]*bintree{}},
										"TeX-AMS_HTML.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxConfigTexAms_htmlJs, map[string]*bintree{}},
										"TeX-AMS_SVG-full.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxConfigTexAms_svgFullJs, map[string]*bintree{}},
										"TeX-AMS_SVG.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxConfigTexAms_svgJs, map[string]*bintree{}},
										"TeX-MML-AM_CHTML-full.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxConfigTexMmlAm_chtmlFullJs, map[string]*bintree{}},
										"TeX-MML-AM_CHTML.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxConfigTexMmlAm_chtmlJs, map[string]*bintree{}},
										"TeX-MML-AM_HTMLorMML-full.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxConfigTexMmlAm_htmlormmlFullJs, map[string]*bintree{}},
										"TeX-MML-AM_HTMLorMML.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxConfigTexMmlAm_htmlormmlJs, map[string]*bintree{}},
										"TeX-MML-AM_SVG-full.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxConfigTexMmlAm_svgFullJs, map[string]*bintree{}},
										"TeX-MML-AM_SVG.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxConfigTexMmlAm_svgJs, map[string]*bintree{}},
										"default.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxConfigDefaultJs, map[string]*bintree{}},
										"local": &bintree{nil, map[string]*bintree{
											"local.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxConfigLocalLocalJs, map[string]*bintree{}},
										}},
									}},
									"extensions": &bintree{nil, map[string]*bintree{
										"AssistiveMML.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsAssistivemmlJs, map[string]*bintree{}},
										"CHTML-preview.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsChtmlPreviewJs, map[string]*bintree{}},
										"FontWarnings.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsFontwarningsJs, map[string]*bintree{}},
										"HTML-CSS": &bintree{nil, map[string]*bintree{
											"handle-floats.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsHtmlCssHandleFloatsJs, map[string]*bintree{}},
										}},
										"HelpDialog.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsHelpdialogJs, map[string]*bintree{}},
										"MatchWebFonts.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsMatchwebfontsJs, map[string]*bintree{}},
										"MathEvents.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsMatheventsJs, map[string]*bintree{}},
										"MathML": &bintree{nil, map[string]*bintree{
											"content-mathml.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsMathmlContentMathmlJs, map[string]*bintree{}},
											"mml3.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsMathmlMml3Js, map[string]*bintree{}},
										}},
										"MathMenu.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsMathmenuJs, map[string]*bintree{}},
										"MathZoom.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsMathzoomJs, map[string]*bintree{}},
										"Safe.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsSafeJs, map[string]*bintree{}},
										"TeX": &bintree{nil, map[string]*bintree{
											"AMScd.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsTexAmscdJs, map[string]*bintree{}},
											"AMSmath.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsTexAmsmathJs, map[string]*bintree{}},
											"AMSsymbols.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsTexAmssymbolsJs, map[string]*bintree{}},
											"HTML.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsTexHtmlJs, map[string]*bintree{}},
											"action.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsTexActionJs, map[string]*bintree{}},
											"autobold.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsTexAutoboldJs, map[string]*bintree{}},
											"autoload-all.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsTexAutoloadAllJs, map[string]*bintree{}},
											"bbox.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsTexBboxJs, map[string]*bintree{}},
											"begingroup.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsTexBegingroupJs, map[string]*bintree{}},
											"boldsymbol.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsTexBoldsymbolJs, map[string]*bintree{}},
											"cancel.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsTexCancelJs, map[string]*bintree{}},
											"color.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsTexColorJs, map[string]*bintree{}},
											"enclose.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsTexEncloseJs, map[string]*bintree{}},
											"extpfeil.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsTexExtpfeilJs, map[string]*bintree{}},
											"mathchoice.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsTexMathchoiceJs, map[string]*bintree{}},
											"mediawiki-texvc.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsTexMediawikiTexvcJs, map[string]*bintree{}},
											"mhchem.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsTexMhchemJs, map[string]*bintree{}},
											"newcommand.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsTexNewcommandJs, map[string]*bintree{}},
											"noErrors.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsTexNoerrorsJs, map[string]*bintree{}},
											"noUndefined.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsTexNoundefinedJs, map[string]*bintree{}},
											"unicode.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsTexUnicodeJs, map[string]*bintree{}},
											"verb.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsTexVerbJs, map[string]*bintree{}},
										}},
										"asciimath2jax.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsAsciimath2jaxJs, map[string]*bintree{}},
										"fast-preview.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsFastPreviewJs, map[string]*bintree{}},
										"jsMath2jax.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsJsmath2jaxJs, map[string]*bintree{}},
										"mml2jax.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsMml2jaxJs, map[string]*bintree{}},
										"tex2jax.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsTex2jaxJs, map[string]*bintree{}},
										"toMathML.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxExtensionsTomathmlJs, map[string]*bintree{}},
									}},
									"jax": &bintree{nil, map[string]*bintree{
										"element": &bintree{nil, map[string]*bintree{
											"mml": &bintree{nil, map[string]*bintree{
												"jax.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxElementMmlJaxJs, map[string]*bintree{}},
												"optable": &bintree{nil, map[string]*bintree{
													"Arrows.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxElementMmlOptableArrowsJs, map[string]*bintree{}},
													"BasicLatin.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxElementMmlOptableBasiclatinJs, map[string]*bintree{}},
													"CombDiacritMarks.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxElementMmlOptableCombdiacritmarksJs, map[string]*bintree{}},
													"CombDiactForSymbols.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxElementMmlOptableCombdiactforsymbolsJs, map[string]*bintree{}},
													"Dingbats.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxElementMmlOptableDingbatsJs, map[string]*bintree{}},
													"GeneralPunctuation.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxElementMmlOptableGeneralpunctuationJs, map[string]*bintree{}},
													"GeometricShapes.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxElementMmlOptableGeometricshapesJs, map[string]*bintree{}},
													"GreekAndCoptic.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxElementMmlOptableGreekandcopticJs, map[string]*bintree{}},
													"Latin1Supplement.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxElementMmlOptableLatin1supplementJs, map[string]*bintree{}},
													"LetterlikeSymbols.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxElementMmlOptableLetterlikesymbolsJs, map[string]*bintree{}},
													"MathOperators.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxElementMmlOptableMathoperatorsJs, map[string]*bintree{}},
													"MiscMathSymbolsA.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxElementMmlOptableMiscmathsymbolsaJs, map[string]*bintree{}},
													"MiscMathSymbolsB.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxElementMmlOptableMiscmathsymbolsbJs, map[string]*bintree{}},
													"MiscSymbolsAndArrows.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxElementMmlOptableMiscsymbolsandarrowsJs, map[string]*bintree{}},
													"MiscTechnical.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxElementMmlOptableMisctechnicalJs, map[string]*bintree{}},
													"SpacingModLetters.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxElementMmlOptableSpacingmodlettersJs, map[string]*bintree{}},
													"SuppMathOperators.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxElementMmlOptableSuppmathoperatorsJs, map[string]*bintree{}},
													"SupplementalArrowsA.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxElementMmlOptableSupplementalarrowsaJs, map[string]*bintree{}},
													"SupplementalArrowsB.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxElementMmlOptableSupplementalarrowsbJs, map[string]*bintree{}},
												}},
											}},
										}},
										"input": &bintree{nil, map[string]*bintree{
											"AsciiMath": &bintree{nil, map[string]*bintree{
												"config.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputAsciimathConfigJs, map[string]*bintree{}},
												"jax.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputAsciimathJaxJs, map[string]*bintree{}},
											}},
											"MathML": &bintree{nil, map[string]*bintree{
												"config.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlConfigJs, map[string]*bintree{}},
												"entities": &bintree{nil, map[string]*bintree{
													"a.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlEntitiesAJs, map[string]*bintree{}},
													"b.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlEntitiesBJs, map[string]*bintree{}},
													"c.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlEntitiesCJs, map[string]*bintree{}},
													"d.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlEntitiesDJs, map[string]*bintree{}},
													"e.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlEntitiesEJs, map[string]*bintree{}},
													"f.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlEntitiesFJs, map[string]*bintree{}},
													"fr.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlEntitiesFrJs, map[string]*bintree{}},
													"g.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlEntitiesGJs, map[string]*bintree{}},
													"h.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlEntitiesHJs, map[string]*bintree{}},
													"i.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlEntitiesIJs, map[string]*bintree{}},
													"j.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlEntitiesJJs, map[string]*bintree{}},
													"k.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlEntitiesKJs, map[string]*bintree{}},
													"l.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlEntitiesLJs, map[string]*bintree{}},
													"m.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlEntitiesMJs, map[string]*bintree{}},
													"n.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlEntitiesNJs, map[string]*bintree{}},
													"o.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlEntitiesOJs, map[string]*bintree{}},
													"opf.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlEntitiesOpfJs, map[string]*bintree{}},
													"p.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlEntitiesPJs, map[string]*bintree{}},
													"q.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlEntitiesQJs, map[string]*bintree{}},
													"r.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlEntitiesRJs, map[string]*bintree{}},
													"s.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlEntitiesSJs, map[string]*bintree{}},
													"scr.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlEntitiesScrJs, map[string]*bintree{}},
													"t.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlEntitiesTJs, map[string]*bintree{}},
													"u.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlEntitiesUJs, map[string]*bintree{}},
													"v.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlEntitiesVJs, map[string]*bintree{}},
													"w.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlEntitiesWJs, map[string]*bintree{}},
													"x.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlEntitiesXJs, map[string]*bintree{}},
													"y.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlEntitiesYJs, map[string]*bintree{}},
													"z.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlEntitiesZJs, map[string]*bintree{}},
												}},
												"jax.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputMathmlJaxJs, map[string]*bintree{}},
											}},
											"TeX": &bintree{nil, map[string]*bintree{
												"config.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputTexConfigJs, map[string]*bintree{}},
												"jax.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxInputTexJaxJs, map[string]*bintree{}},
											}},
										}},
										"output": &bintree{nil, map[string]*bintree{
											"CommonHTML": &bintree{nil, map[string]*bintree{
												"autoload": &bintree{nil, map[string]*bintree{
													"annotation-xml.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputCommonhtmlAutoloadAnnotationXmlJs, map[string]*bintree{}},
													"maction.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputCommonhtmlAutoloadMactionJs, map[string]*bintree{}},
													"menclose.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputCommonhtmlAutoloadMencloseJs, map[string]*bintree{}},
													"mglyph.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputCommonhtmlAutoloadMglyphJs, map[string]*bintree{}},
													"mmultiscripts.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputCommonhtmlAutoloadMmultiscriptsJs, map[string]*bintree{}},
													"ms.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputCommonhtmlAutoloadMsJs, map[string]*bintree{}},
													"mtable.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputCommonhtmlAutoloadMtableJs, map[string]*bintree{}},
													"multiline.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputCommonhtmlAutoloadMultilineJs, map[string]*bintree{}},
												}},
												"config.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputCommonhtmlConfigJs, map[string]*bintree{}},
												"fonts": &bintree{nil, map[string]*bintree{
													"TeX": &bintree{nil, map[string]*bintree{
														"AMS-Regular.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputCommonhtmlFontsTexAmsRegularJs, map[string]*bintree{}},
														"Caligraphic-Bold.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputCommonhtmlFontsTexCaligraphicBoldJs, map[string]*bintree{}},
														"Fraktur-Bold.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputCommonhtmlFontsTexFrakturBoldJs, map[string]*bintree{}},
														"Fraktur-Regular.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputCommonhtmlFontsTexFrakturRegularJs, map[string]*bintree{}},
														"Main-Bold.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputCommonhtmlFontsTexMainBoldJs, map[string]*bintree{}},
														"Math-BoldItalic.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputCommonhtmlFontsTexMathBolditalicJs, map[string]*bintree{}},
														"SansSerif-Bold.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputCommonhtmlFontsTexSansserifBoldJs, map[string]*bintree{}},
														"SansSerif-Italic.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputCommonhtmlFontsTexSansserifItalicJs, map[string]*bintree{}},
														"SansSerif-Regular.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputCommonhtmlFontsTexSansserifRegularJs, map[string]*bintree{}},
														"Script-Regular.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputCommonhtmlFontsTexScriptRegularJs, map[string]*bintree{}},
														"Typewriter-Regular.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputCommonhtmlFontsTexTypewriterRegularJs, map[string]*bintree{}},
														"fontdata-extra.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputCommonhtmlFontsTexFontdataExtraJs, map[string]*bintree{}},
														"fontdata.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputCommonhtmlFontsTexFontdataJs, map[string]*bintree{}},
													}},
												}},
												"jax.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputCommonhtmlJaxJs, map[string]*bintree{}},
											}},
											"HTML-CSS": &bintree{nil, map[string]*bintree{
												"autoload": &bintree{nil, map[string]*bintree{
													"annotation-xml.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssAutoloadAnnotationXmlJs, map[string]*bintree{}},
													"maction.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssAutoloadMactionJs, map[string]*bintree{}},
													"menclose.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssAutoloadMencloseJs, map[string]*bintree{}},
													"mglyph.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssAutoloadMglyphJs, map[string]*bintree{}},
													"mmultiscripts.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssAutoloadMmultiscriptsJs, map[string]*bintree{}},
													"ms.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssAutoloadMsJs, map[string]*bintree{}},
													"mtable.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssAutoloadMtableJs, map[string]*bintree{}},
													"multiline.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssAutoloadMultilineJs, map[string]*bintree{}},
												}},
												"blank.gif": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssBlankGif, map[string]*bintree{}},
												"config.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssConfigJs, map[string]*bintree{}},
												"fonts": &bintree{nil, map[string]*bintree{
													"Asana-Math": &bintree{nil, map[string]*bintree{
														"Alphabets": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsAsanaMathAlphabetsRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Arrows": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsAsanaMathArrowsRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"DoubleStruck": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsAsanaMathDoublestruckRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Fraktur": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsAsanaMathFrakturRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Latin": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsAsanaMathLatinRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Main": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsAsanaMathMainRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Marks": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsAsanaMathMarksRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Misc": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsAsanaMathMiscRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Monospace": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsAsanaMathMonospaceRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"NonUnicode": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsAsanaMathNonunicodeRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Normal": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsAsanaMathNormalRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Operators": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsAsanaMathOperatorsRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"SansSerif": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsAsanaMathSansserifRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Script": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsAsanaMathScriptRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Shapes": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsAsanaMathShapesRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Size1": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsAsanaMathSize1RegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Size2": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsAsanaMathSize2RegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Size3": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsAsanaMathSize3RegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Size4": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsAsanaMathSize4RegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Size5": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsAsanaMathSize5RegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Size6": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsAsanaMathSize6RegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Symbols": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsAsanaMathSymbolsRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Variants": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsAsanaMathVariantsRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"fontdata-extra.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsAsanaMathFontdataExtraJs, map[string]*bintree{}},
														"fontdata.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsAsanaMathFontdataJs, map[string]*bintree{}},
													}},
													"Gyre-Pagella": &bintree{nil, map[string]*bintree{
														"Alphabets": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyrePagellaAlphabetsRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Arrows": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyrePagellaArrowsRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"DoubleStruck": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyrePagellaDoublestruckRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Fraktur": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyrePagellaFrakturRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Latin": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyrePagellaLatinRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Main": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyrePagellaMainRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Marks": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyrePagellaMarksRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Misc": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyrePagellaMiscRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Monospace": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyrePagellaMonospaceRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"NonUnicode": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyrePagellaNonunicodeRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Normal": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyrePagellaNormalRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Operators": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyrePagellaOperatorsRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"SansSerif": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyrePagellaSansserifRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Script": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyrePagellaScriptRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Shapes": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyrePagellaShapesRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Size1": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyrePagellaSize1RegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Size2": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyrePagellaSize2RegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Size3": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyrePagellaSize3RegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Size4": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyrePagellaSize4RegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Size5": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyrePagellaSize5RegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Size6": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyrePagellaSize6RegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Symbols": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyrePagellaSymbolsRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Variants": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyrePagellaVariantsRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"fontdata-extra.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyrePagellaFontdataExtraJs, map[string]*bintree{}},
														"fontdata.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyrePagellaFontdataJs, map[string]*bintree{}},
													}},
													"Gyre-Termes": &bintree{nil, map[string]*bintree{
														"Alphabets": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyreTermesAlphabetsRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Arrows": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyreTermesArrowsRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"DoubleStruck": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyreTermesDoublestruckRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Fraktur": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyreTermesFrakturRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Latin": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyreTermesLatinRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Main": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyreTermesMainRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Marks": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyreTermesMarksRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Misc": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyreTermesMiscRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Monospace": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyreTermesMonospaceRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"NonUnicode": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyreTermesNonunicodeRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Normal": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyreTermesNormalRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Operators": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyreTermesOperatorsRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"SansSerif": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyreTermesSansserifRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Script": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyreTermesScriptRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Shapes": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyreTermesShapesRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Size1": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyreTermesSize1RegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Size2": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyreTermesSize2RegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Size3": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyreTermesSize3RegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Size4": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyreTermesSize4RegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Size5": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyreTermesSize5RegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Size6": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyreTermesSize6RegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Symbols": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyreTermesSymbolsRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Variants": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyreTermesVariantsRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"fontdata-extra.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyreTermesFontdataExtraJs, map[string]*bintree{}},
														"fontdata.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsGyreTermesFontdataJs, map[string]*bintree{}},
													}},
													"Latin-Modern": &bintree{nil, map[string]*bintree{
														"Alphabets": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsLatinModernAlphabetsRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Arrows": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsLatinModernArrowsRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"DoubleStruck": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsLatinModernDoublestruckRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Fraktur": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsLatinModernFrakturRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Latin": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsLatinModernLatinRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Main": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsLatinModernMainRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Marks": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsLatinModernMarksRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Misc": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsLatinModernMiscRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Monospace": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsLatinModernMonospaceRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"NonUnicode": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsLatinModernNonunicodeRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Normal": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsLatinModernNormalRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Operators": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsLatinModernOperatorsRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"SansSerif": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsLatinModernSansserifRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Script": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsLatinModernScriptRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Shapes": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsLatinModernShapesRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Size1": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsLatinModernSize1RegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Size2": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsLatinModernSize2RegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Size3": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsLatinModernSize3RegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Size4": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsLatinModernSize4RegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Size5": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsLatinModernSize5RegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Size6": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsLatinModernSize6RegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Size7": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsLatinModernSize7RegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Symbols": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsLatinModernSymbolsRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Variants": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsLatinModernVariantsRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"fontdata-extra.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsLatinModernFontdataExtraJs, map[string]*bintree{}},
														"fontdata.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsLatinModernFontdataJs, map[string]*bintree{}},
													}},
													"Neo-Euler": &bintree{nil, map[string]*bintree{
														"Alphabets": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsNeoEulerAlphabetsRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Arrows": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsNeoEulerArrowsRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Fraktur": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsNeoEulerFrakturRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Main": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsNeoEulerMainRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Marks": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsNeoEulerMarksRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"NonUnicode": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsNeoEulerNonunicodeRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Normal": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsNeoEulerNormalRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Operators": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsNeoEulerOperatorsRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Script": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsNeoEulerScriptRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Shapes": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsNeoEulerShapesRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Size1": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsNeoEulerSize1RegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Size2": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsNeoEulerSize2RegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Size3": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsNeoEulerSize3RegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Size4": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsNeoEulerSize4RegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Size5": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsNeoEulerSize5RegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Symbols": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsNeoEulerSymbolsRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Variants": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsNeoEulerVariantsRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"fontdata-extra.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsNeoEulerFontdataExtraJs, map[string]*bintree{}},
														"fontdata.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsNeoEulerFontdataJs, map[string]*bintree{}},
													}},
													"STIX": &bintree{nil, map[string]*bintree{
														"General": &bintree{nil, map[string]*bintree{
															"Bold": &bintree{nil, map[string]*bintree{
																"AlphaPresentForms.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldAlphapresentformsJs, map[string]*bintree{}},
																"Arrows.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldArrowsJs, map[string]*bintree{}},
																"BBBold.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldBbboldJs, map[string]*bintree{}},
																"BoldFraktur.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldBoldfrakturJs, map[string]*bintree{}},
																"BoxDrawing.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldBoxdrawingJs, map[string]*bintree{}},
																"CombDiacritMarks.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldCombdiacritmarksJs, map[string]*bintree{}},
																"CombDiactForSymbols.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldCombdiactforsymbolsJs, map[string]*bintree{}},
																"ControlPictures.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldControlpicturesJs, map[string]*bintree{}},
																"CurrencySymbols.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldCurrencysymbolsJs, map[string]*bintree{}},
																"Cyrillic.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldCyrillicJs, map[string]*bintree{}},
																"EnclosedAlphanum.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldEnclosedalphanumJs, map[string]*bintree{}},
																"GeneralPunctuation.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldGeneralpunctuationJs, map[string]*bintree{}},
																"GeometricShapes.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldGeometricshapesJs, map[string]*bintree{}},
																"GreekAndCoptic.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldGreekandcopticJs, map[string]*bintree{}},
																"GreekBold.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldGreekboldJs, map[string]*bintree{}},
																"GreekSSBold.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldGreekssboldJs, map[string]*bintree{}},
																"IPAExtensions.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldIpaextensionsJs, map[string]*bintree{}},
																"Latin1Supplement.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldLatin1supplementJs, map[string]*bintree{}},
																"LatinExtendedA.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldLatinextendedaJs, map[string]*bintree{}},
																"LatinExtendedAdditional.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldLatinextendedadditionalJs, map[string]*bintree{}},
																"LatinExtendedB.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldLatinextendedbJs, map[string]*bintree{}},
																"LatinExtendedD.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldLatinextendeddJs, map[string]*bintree{}},
																"LetterlikeSymbols.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldLetterlikesymbolsJs, map[string]*bintree{}},
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldMainJs, map[string]*bintree{}},
																"MathBold.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldMathboldJs, map[string]*bintree{}},
																"MathOperators.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldMathoperatorsJs, map[string]*bintree{}},
																"MathSSBold.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldMathssboldJs, map[string]*bintree{}},
																"MiscMathSymbolsA.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldMiscmathsymbolsaJs, map[string]*bintree{}},
																"MiscMathSymbolsB.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldMiscmathsymbolsbJs, map[string]*bintree{}},
																"MiscSymbols.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldMiscsymbolsJs, map[string]*bintree{}},
																"MiscTechnical.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldMisctechnicalJs, map[string]*bintree{}},
																"NumberForms.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldNumberformsJs, map[string]*bintree{}},
																"PhoneticExtensions.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldPhoneticextensionsJs, map[string]*bintree{}},
																"SpacingModLetters.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldSpacingmodlettersJs, map[string]*bintree{}},
																"SuperAndSubscripts.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldSuperandsubscriptsJs, map[string]*bintree{}},
																"SuppMathOperators.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBoldSuppmathoperatorsJs, map[string]*bintree{}},
															}},
															"BoldItalic": &bintree{nil, map[string]*bintree{
																"AlphaPresentForms.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBolditalicAlphapresentformsJs, map[string]*bintree{}},
																"BasicLatin.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBolditalicBasiclatinJs, map[string]*bintree{}},
																"BoxDrawing.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBolditalicBoxdrawingJs, map[string]*bintree{}},
																"CombDiactForSymbols.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBolditalicCombdiactforsymbolsJs, map[string]*bintree{}},
																"ControlPictures.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBolditalicControlpicturesJs, map[string]*bintree{}},
																"CurrencySymbols.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBolditalicCurrencysymbolsJs, map[string]*bintree{}},
																"Cyrillic.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBolditalicCyrillicJs, map[string]*bintree{}},
																"EnclosedAlphanum.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBolditalicEnclosedalphanumJs, map[string]*bintree{}},
																"GeneralPunctuation.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBolditalicGeneralpunctuationJs, map[string]*bintree{}},
																"GreekAndCoptic.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBolditalicGreekandcopticJs, map[string]*bintree{}},
																"GreekBoldItalic.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBolditalicGreekbolditalicJs, map[string]*bintree{}},
																"GreekSSBoldItalic.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBolditalicGreekssbolditalicJs, map[string]*bintree{}},
																"IPAExtensions.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBolditalicIpaextensionsJs, map[string]*bintree{}},
																"Latin1Supplement.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBolditalicLatin1supplementJs, map[string]*bintree{}},
																"LatinExtendedA.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBolditalicLatinextendedaJs, map[string]*bintree{}},
																"LatinExtendedAdditional.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBolditalicLatinextendedadditionalJs, map[string]*bintree{}},
																"LatinExtendedB.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBolditalicLatinextendedbJs, map[string]*bintree{}},
																"LetterlikeSymbols.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBolditalicLetterlikesymbolsJs, map[string]*bintree{}},
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBolditalicMainJs, map[string]*bintree{}},
																"MathBoldItalic.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBolditalicMathbolditalicJs, map[string]*bintree{}},
																"MathBoldScript.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBolditalicMathboldscriptJs, map[string]*bintree{}},
																"MathOperators.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBolditalicMathoperatorsJs, map[string]*bintree{}},
																"MathSSItalicBold.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBolditalicMathssitalicboldJs, map[string]*bintree{}},
																"SpacingModLetters.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralBolditalicSpacingmodlettersJs, map[string]*bintree{}},
															}},
															"Italic": &bintree{nil, map[string]*bintree{
																"AlphaPresentForms.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralItalicAlphapresentformsJs, map[string]*bintree{}},
																"BoxDrawing.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralItalicBoxdrawingJs, map[string]*bintree{}},
																"CombDiactForSymbols.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralItalicCombdiactforsymbolsJs, map[string]*bintree{}},
																"ControlPictures.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralItalicControlpicturesJs, map[string]*bintree{}},
																"CurrencySymbols.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralItalicCurrencysymbolsJs, map[string]*bintree{}},
																"Cyrillic.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralItalicCyrillicJs, map[string]*bintree{}},
																"EnclosedAlphanum.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralItalicEnclosedalphanumJs, map[string]*bintree{}},
																"GeneralPunctuation.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralItalicGeneralpunctuationJs, map[string]*bintree{}},
																"GreekAndCoptic.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralItalicGreekandcopticJs, map[string]*bintree{}},
																"GreekItalic.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralItalicGreekitalicJs, map[string]*bintree{}},
																"IPAExtensions.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralItalicIpaextensionsJs, map[string]*bintree{}},
																"Latin1Supplement.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralItalicLatin1supplementJs, map[string]*bintree{}},
																"LatinExtendedA.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralItalicLatinextendedaJs, map[string]*bintree{}},
																"LatinExtendedAdditional.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralItalicLatinextendedadditionalJs, map[string]*bintree{}},
																"LatinExtendedB.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralItalicLatinextendedbJs, map[string]*bintree{}},
																"LetterlikeSymbols.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralItalicLetterlikesymbolsJs, map[string]*bintree{}},
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralItalicMainJs, map[string]*bintree{}},
																"MathItalic.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralItalicMathitalicJs, map[string]*bintree{}},
																"MathOperators.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralItalicMathoperatorsJs, map[string]*bintree{}},
																"MathSSItalic.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralItalicMathssitalicJs, map[string]*bintree{}},
																"MathScript.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralItalicMathscriptJs, map[string]*bintree{}},
																"SpacingModLetters.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralItalicSpacingmodlettersJs, map[string]*bintree{}},
																"ij.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralItalicIjJs, map[string]*bintree{}},
															}},
															"Regular": &bintree{nil, map[string]*bintree{
																"AlphaPresentForms.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularAlphapresentformsJs, map[string]*bintree{}},
																"Arrows.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularArrowsJs, map[string]*bintree{}},
																"BBBold.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularBbboldJs, map[string]*bintree{}},
																"BlockElements.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularBlockelementsJs, map[string]*bintree{}},
																"BoldFraktur.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularBoldfrakturJs, map[string]*bintree{}},
																"BoxDrawing.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularBoxdrawingJs, map[string]*bintree{}},
																"CJK.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularCjkJs, map[string]*bintree{}},
																"CombDiacritMarks.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularCombdiacritmarksJs, map[string]*bintree{}},
																"CombDiactForSymbols.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularCombdiactforsymbolsJs, map[string]*bintree{}},
																"ControlPictures.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularControlpicturesJs, map[string]*bintree{}},
																"CurrencySymbols.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularCurrencysymbolsJs, map[string]*bintree{}},
																"Cyrillic.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularCyrillicJs, map[string]*bintree{}},
																"Dingbats.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularDingbatsJs, map[string]*bintree{}},
																"EnclosedAlphanum.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularEnclosedalphanumJs, map[string]*bintree{}},
																"Fraktur.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularFrakturJs, map[string]*bintree{}},
																"GeneralPunctuation.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularGeneralpunctuationJs, map[string]*bintree{}},
																"GeometricShapes.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularGeometricshapesJs, map[string]*bintree{}},
																"GreekAndCoptic.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularGreekandcopticJs, map[string]*bintree{}},
																"GreekBold.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularGreekboldJs, map[string]*bintree{}},
																"GreekBoldItalic.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularGreekbolditalicJs, map[string]*bintree{}},
																"GreekItalic.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularGreekitalicJs, map[string]*bintree{}},
																"GreekSSBold.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularGreekssboldJs, map[string]*bintree{}},
																"GreekSSBoldItalic.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularGreekssbolditalicJs, map[string]*bintree{}},
																"Hiragana.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularHiraganaJs, map[string]*bintree{}},
																"IPAExtensions.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularIpaextensionsJs, map[string]*bintree{}},
																"Latin1Supplement.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularLatin1supplementJs, map[string]*bintree{}},
																"LatinExtendedA.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularLatinextendedaJs, map[string]*bintree{}},
																"LatinExtendedAdditional.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularLatinextendedadditionalJs, map[string]*bintree{}},
																"LatinExtendedB.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularLatinextendedbJs, map[string]*bintree{}},
																"LatinExtendedD.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularLatinextendeddJs, map[string]*bintree{}},
																"LetterlikeSymbols.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularLetterlikesymbolsJs, map[string]*bintree{}},
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularMainJs, map[string]*bintree{}},
																"MathBold.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularMathboldJs, map[string]*bintree{}},
																"MathBoldItalic.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularMathbolditalicJs, map[string]*bintree{}},
																"MathBoldScript.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularMathboldscriptJs, map[string]*bintree{}},
																"MathItalic.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularMathitalicJs, map[string]*bintree{}},
																"MathOperators.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularMathoperatorsJs, map[string]*bintree{}},
																"MathSS.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularMathssJs, map[string]*bintree{}},
																"MathSSBold.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularMathssboldJs, map[string]*bintree{}},
																"MathSSItalic.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularMathssitalicJs, map[string]*bintree{}},
																"MathSSItalicBold.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularMathssitalicboldJs, map[string]*bintree{}},
																"MathScript.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularMathscriptJs, map[string]*bintree{}},
																"MathTT.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularMathttJs, map[string]*bintree{}},
																"MiscMathSymbolsA.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularMiscmathsymbolsaJs, map[string]*bintree{}},
																"MiscMathSymbolsB.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularMiscmathsymbolsbJs, map[string]*bintree{}},
																"MiscSymbols.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularMiscsymbolsJs, map[string]*bintree{}},
																"MiscSymbolsAndArrows.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularMiscsymbolsandarrowsJs, map[string]*bintree{}},
																"MiscTechnical.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularMisctechnicalJs, map[string]*bintree{}},
																"NumberForms.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularNumberformsJs, map[string]*bintree{}},
																"PhoneticExtensions.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularPhoneticextensionsJs, map[string]*bintree{}},
																"SpacingModLetters.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularSpacingmodlettersJs, map[string]*bintree{}},
																"Specials.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularSpecialsJs, map[string]*bintree{}},
																"SuperAndSubscripts.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularSuperandsubscriptsJs, map[string]*bintree{}},
																"SuppMathOperators.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularSuppmathoperatorsJs, map[string]*bintree{}},
																"SupplementalArrowsA.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularSupplementalarrowsaJs, map[string]*bintree{}},
																"SupplementalArrowsB.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularSupplementalarrowsbJs, map[string]*bintree{}},
																"ij.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixGeneralRegularIjJs, map[string]*bintree{}},
															}},
														}},
														"IntegralsD": &bintree{nil, map[string]*bintree{
															"Bold": &bintree{nil, map[string]*bintree{
																"All.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixIntegralsdBoldAllJs, map[string]*bintree{}},
															}},
															"Regular": &bintree{nil, map[string]*bintree{
																"All.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixIntegralsdRegularAllJs, map[string]*bintree{}},
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixIntegralsdRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"IntegralsSm": &bintree{nil, map[string]*bintree{
															"Bold": &bintree{nil, map[string]*bintree{
																"All.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixIntegralssmBoldAllJs, map[string]*bintree{}},
															}},
															"Regular": &bintree{nil, map[string]*bintree{
																"All.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixIntegralssmRegularAllJs, map[string]*bintree{}},
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixIntegralssmRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"IntegralsUp": &bintree{nil, map[string]*bintree{
															"Bold": &bintree{nil, map[string]*bintree{
																"All.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixIntegralsupBoldAllJs, map[string]*bintree{}},
															}},
															"Regular": &bintree{nil, map[string]*bintree{
																"All.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixIntegralsupRegularAllJs, map[string]*bintree{}},
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixIntegralsupRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"IntegralsUpD": &bintree{nil, map[string]*bintree{
															"Bold": &bintree{nil, map[string]*bintree{
																"All.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixIntegralsupdBoldAllJs, map[string]*bintree{}},
															}},
															"Regular": &bintree{nil, map[string]*bintree{
																"All.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixIntegralsupdRegularAllJs, map[string]*bintree{}},
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixIntegralsupdRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"IntegralsUpSm": &bintree{nil, map[string]*bintree{
															"Bold": &bintree{nil, map[string]*bintree{
																"All.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixIntegralsupsmBoldAllJs, map[string]*bintree{}},
															}},
															"Regular": &bintree{nil, map[string]*bintree{
																"All.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixIntegralsupsmRegularAllJs, map[string]*bintree{}},
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixIntegralsupsmRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"NonUnicode": &bintree{nil, map[string]*bintree{
															"Bold": &bintree{nil, map[string]*bintree{
																"All.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixNonunicodeBoldAllJs, map[string]*bintree{}},
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixNonunicodeBoldMainJs, map[string]*bintree{}},
																"PrivateUse.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixNonunicodeBoldPrivateuseJs, map[string]*bintree{}},
															}},
															"BoldItalic": &bintree{nil, map[string]*bintree{
																"All.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixNonunicodeBolditalicAllJs, map[string]*bintree{}},
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixNonunicodeBolditalicMainJs, map[string]*bintree{}},
																"PrivateUse.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixNonunicodeBolditalicPrivateuseJs, map[string]*bintree{}},
															}},
															"Italic": &bintree{nil, map[string]*bintree{
																"All.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixNonunicodeItalicAllJs, map[string]*bintree{}},
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixNonunicodeItalicMainJs, map[string]*bintree{}},
																"PrivateUse.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixNonunicodeItalicPrivateuseJs, map[string]*bintree{}},
															}},
															"Regular": &bintree{nil, map[string]*bintree{
																"All.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixNonunicodeRegularAllJs, map[string]*bintree{}},
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixNonunicodeRegularMainJs, map[string]*bintree{}},
																"PrivateUse.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixNonunicodeRegularPrivateuseJs, map[string]*bintree{}},
															}},
														}},
														"SizeFiveSym": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"All.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixSizefivesymRegularAllJs, map[string]*bintree{}},
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixSizefivesymRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"SizeFourSym": &bintree{nil, map[string]*bintree{
															"Bold": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixSizefoursymBoldMainJs, map[string]*bintree{}},
															}},
															"Regular": &bintree{nil, map[string]*bintree{
																"All.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixSizefoursymRegularAllJs, map[string]*bintree{}},
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixSizefoursymRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"SizeOneSym": &bintree{nil, map[string]*bintree{
															"Bold": &bintree{nil, map[string]*bintree{
																"All.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixSizeonesymBoldAllJs, map[string]*bintree{}},
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixSizeonesymBoldMainJs, map[string]*bintree{}},
															}},
															"Regular": &bintree{nil, map[string]*bintree{
																"All.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixSizeonesymRegularAllJs, map[string]*bintree{}},
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixSizeonesymRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"SizeThreeSym": &bintree{nil, map[string]*bintree{
															"Bold": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixSizethreesymBoldMainJs, map[string]*bintree{}},
															}},
															"Regular": &bintree{nil, map[string]*bintree{
																"All.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixSizethreesymRegularAllJs, map[string]*bintree{}},
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixSizethreesymRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"SizeTwoSym": &bintree{nil, map[string]*bintree{
															"Bold": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixSizetwosymBoldMainJs, map[string]*bintree{}},
															}},
															"Regular": &bintree{nil, map[string]*bintree{
																"All.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixSizetwosymRegularAllJs, map[string]*bintree{}},
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixSizetwosymRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Variants": &bintree{nil, map[string]*bintree{
															"Bold": &bintree{nil, map[string]*bintree{
																"All.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixVariantsBoldAllJs, map[string]*bintree{}},
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixVariantsBoldMainJs, map[string]*bintree{}},
															}},
															"Regular": &bintree{nil, map[string]*bintree{
																"All.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixVariantsRegularAllJs, map[string]*bintree{}},
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixVariantsRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"fontdata-1.0.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixFontdata10Js, map[string]*bintree{}},
														"fontdata-beta.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixFontdataBetaJs, map[string]*bintree{}},
														"fontdata-extra.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixFontdataExtraJs, map[string]*bintree{}},
														"fontdata.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixFontdataJs, map[string]*bintree{}},
													}},
													"STIX-Web": &bintree{nil, map[string]*bintree{
														"Alphabets": &bintree{nil, map[string]*bintree{
															"Bold": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebAlphabetsBoldMainJs, map[string]*bintree{}},
															}},
															"BoldItalic": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebAlphabetsBolditalicMainJs, map[string]*bintree{}},
															}},
															"Italic": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebAlphabetsItalicMainJs, map[string]*bintree{}},
															}},
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebAlphabetsRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Arrows": &bintree{nil, map[string]*bintree{
															"Bold": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebArrowsBoldMainJs, map[string]*bintree{}},
															}},
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebArrowsRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"DoubleStruck": &bintree{nil, map[string]*bintree{
															"Bold": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebDoublestruckBoldMainJs, map[string]*bintree{}},
															}},
															"BoldItalic": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebDoublestruckBolditalicMainJs, map[string]*bintree{}},
															}},
															"Italic": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebDoublestruckItalicMainJs, map[string]*bintree{}},
															}},
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebDoublestruckRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Fraktur": &bintree{nil, map[string]*bintree{
															"Bold": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebFrakturBoldMainJs, map[string]*bintree{}},
															}},
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebFrakturRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Latin": &bintree{nil, map[string]*bintree{
															"Bold": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebLatinBoldMainJs, map[string]*bintree{}},
															}},
															"BoldItalic": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebLatinBolditalicMainJs, map[string]*bintree{}},
															}},
															"Italic": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebLatinItalicMainJs, map[string]*bintree{}},
															}},
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebLatinRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Main": &bintree{nil, map[string]*bintree{
															"Bold": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebMainBoldMainJs, map[string]*bintree{}},
															}},
															"BoldItalic": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebMainBolditalicMainJs, map[string]*bintree{}},
															}},
															"Italic": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebMainItalicMainJs, map[string]*bintree{}},
															}},
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebMainRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Marks": &bintree{nil, map[string]*bintree{
															"Bold": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebMarksBoldMainJs, map[string]*bintree{}},
															}},
															"BoldItalic": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebMarksBolditalicMainJs, map[string]*bintree{}},
															}},
															"Italic": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebMarksItalicMainJs, map[string]*bintree{}},
															}},
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebMarksRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Misc": &bintree{nil, map[string]*bintree{
															"Bold": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebMiscBoldMainJs, map[string]*bintree{}},
															}},
															"BoldItalic": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebMiscBolditalicMainJs, map[string]*bintree{}},
															}},
															"Italic": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebMiscItalicMainJs, map[string]*bintree{}},
															}},
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebMiscRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Monospace": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebMonospaceRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Normal": &bintree{nil, map[string]*bintree{
															"Bold": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebNormalBoldMainJs, map[string]*bintree{}},
															}},
															"BoldItalic": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebNormalBolditalicMainJs, map[string]*bintree{}},
															}},
															"Italic": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebNormalItalicMainJs, map[string]*bintree{}},
															}},
														}},
														"Operators": &bintree{nil, map[string]*bintree{
															"Bold": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebOperatorsBoldMainJs, map[string]*bintree{}},
															}},
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebOperatorsRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"SansSerif": &bintree{nil, map[string]*bintree{
															"Bold": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebSansserifBoldMainJs, map[string]*bintree{}},
															}},
															"BoldItalic": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebSansserifBolditalicMainJs, map[string]*bintree{}},
															}},
															"Italic": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebSansserifItalicMainJs, map[string]*bintree{}},
															}},
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebSansserifRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Script": &bintree{nil, map[string]*bintree{
															"BoldItalic": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebScriptBolditalicMainJs, map[string]*bintree{}},
															}},
															"Italic": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebScriptItalicMainJs, map[string]*bintree{}},
															}},
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebScriptRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Shapes": &bintree{nil, map[string]*bintree{
															"Bold": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebShapesBoldMainJs, map[string]*bintree{}},
															}},
															"BoldItalic": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebShapesBolditalicMainJs, map[string]*bintree{}},
															}},
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebShapesRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Size1": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebSize1RegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Size2": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebSize2RegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Size3": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebSize3RegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Size4": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebSize4RegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Size5": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebSize5RegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Symbols": &bintree{nil, map[string]*bintree{
															"Bold": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebSymbolsBoldMainJs, map[string]*bintree{}},
															}},
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebSymbolsRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Variants": &bintree{nil, map[string]*bintree{
															"Bold": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebVariantsBoldMainJs, map[string]*bintree{}},
															}},
															"BoldItalic": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebVariantsBolditalicMainJs, map[string]*bintree{}},
															}},
															"Italic": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebVariantsItalicMainJs, map[string]*bintree{}},
															}},
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebVariantsRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"fontdata-extra.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebFontdataExtraJs, map[string]*bintree{}},
														"fontdata.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsStixWebFontdataJs, map[string]*bintree{}},
													}},
													"TeX": &bintree{nil, map[string]*bintree{
														"AMS": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Arrows.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexAmsRegularArrowsJs, map[string]*bintree{}},
																"BBBold.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexAmsRegularBbboldJs, map[string]*bintree{}},
																"BoxDrawing.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexAmsRegularBoxdrawingJs, map[string]*bintree{}},
																"CombDiacritMarks.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexAmsRegularCombdiacritmarksJs, map[string]*bintree{}},
																"Dingbats.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexAmsRegularDingbatsJs, map[string]*bintree{}},
																"EnclosedAlphanum.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexAmsRegularEnclosedalphanumJs, map[string]*bintree{}},
																"GeneralPunctuation.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexAmsRegularGeneralpunctuationJs, map[string]*bintree{}},
																"GeometricShapes.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexAmsRegularGeometricshapesJs, map[string]*bintree{}},
																"GreekAndCoptic.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexAmsRegularGreekandcopticJs, map[string]*bintree{}},
																"Latin1Supplement.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexAmsRegularLatin1supplementJs, map[string]*bintree{}},
																"LatinExtendedA.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexAmsRegularLatinextendedaJs, map[string]*bintree{}},
																"LetterlikeSymbols.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexAmsRegularLetterlikesymbolsJs, map[string]*bintree{}},
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexAmsRegularMainJs, map[string]*bintree{}},
																"MathOperators.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexAmsRegularMathoperatorsJs, map[string]*bintree{}},
																"MiscMathSymbolsB.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexAmsRegularMiscmathsymbolsbJs, map[string]*bintree{}},
																"MiscSymbols.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexAmsRegularMiscsymbolsJs, map[string]*bintree{}},
																"MiscTechnical.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexAmsRegularMisctechnicalJs, map[string]*bintree{}},
																"PUA.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexAmsRegularPuaJs, map[string]*bintree{}},
																"SpacingModLetters.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexAmsRegularSpacingmodlettersJs, map[string]*bintree{}},
																"SuppMathOperators.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexAmsRegularSuppmathoperatorsJs, map[string]*bintree{}},
															}},
														}},
														"Caligraphic": &bintree{nil, map[string]*bintree{
															"Bold": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexCaligraphicBoldMainJs, map[string]*bintree{}},
															}},
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexCaligraphicRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Fraktur": &bintree{nil, map[string]*bintree{
															"Bold": &bintree{nil, map[string]*bintree{
																"BasicLatin.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexFrakturBoldBasiclatinJs, map[string]*bintree{}},
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexFrakturBoldMainJs, map[string]*bintree{}},
																"Other.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexFrakturBoldOtherJs, map[string]*bintree{}},
																"PUA.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexFrakturBoldPuaJs, map[string]*bintree{}},
															}},
															"Regular": &bintree{nil, map[string]*bintree{
																"BasicLatin.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexFrakturRegularBasiclatinJs, map[string]*bintree{}},
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexFrakturRegularMainJs, map[string]*bintree{}},
																"Other.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexFrakturRegularOtherJs, map[string]*bintree{}},
																"PUA.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexFrakturRegularPuaJs, map[string]*bintree{}},
															}},
														}},
														"Greek": &bintree{nil, map[string]*bintree{
															"Bold": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexGreekBoldMainJs, map[string]*bintree{}},
															}},
															"BoldItalic": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexGreekBolditalicMainJs, map[string]*bintree{}},
															}},
															"Italic": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexGreekItalicMainJs, map[string]*bintree{}},
															}},
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexGreekRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Main": &bintree{nil, map[string]*bintree{
															"Bold": &bintree{nil, map[string]*bintree{
																"Arrows.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexMainBoldArrowsJs, map[string]*bintree{}},
																"CombDiacritMarks.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexMainBoldCombdiacritmarksJs, map[string]*bintree{}},
																"CombDiactForSymbols.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexMainBoldCombdiactforsymbolsJs, map[string]*bintree{}},
																"GeneralPunctuation.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexMainBoldGeneralpunctuationJs, map[string]*bintree{}},
																"GeometricShapes.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexMainBoldGeometricshapesJs, map[string]*bintree{}},
																"Latin1Supplement.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexMainBoldLatin1supplementJs, map[string]*bintree{}},
																"LatinExtendedA.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexMainBoldLatinextendedaJs, map[string]*bintree{}},
																"LatinExtendedB.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexMainBoldLatinextendedbJs, map[string]*bintree{}},
																"LetterlikeSymbols.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexMainBoldLetterlikesymbolsJs, map[string]*bintree{}},
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexMainBoldMainJs, map[string]*bintree{}},
																"MathOperators.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexMainBoldMathoperatorsJs, map[string]*bintree{}},
																"MiscMathSymbolsA.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexMainBoldMiscmathsymbolsaJs, map[string]*bintree{}},
																"MiscSymbols.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexMainBoldMiscsymbolsJs, map[string]*bintree{}},
																"MiscTechnical.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexMainBoldMisctechnicalJs, map[string]*bintree{}},
																"SpacingModLetters.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexMainBoldSpacingmodlettersJs, map[string]*bintree{}},
																"SuppMathOperators.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexMainBoldSuppmathoperatorsJs, map[string]*bintree{}},
																"SupplementalArrowsA.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexMainBoldSupplementalarrowsaJs, map[string]*bintree{}},
															}},
															"Italic": &bintree{nil, map[string]*bintree{
																"CombDiacritMarks.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexMainItalicCombdiacritmarksJs, map[string]*bintree{}},
																"GeneralPunctuation.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexMainItalicGeneralpunctuationJs, map[string]*bintree{}},
																"Latin1Supplement.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexMainItalicLatin1supplementJs, map[string]*bintree{}},
																"LetterlikeSymbols.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexMainItalicLetterlikesymbolsJs, map[string]*bintree{}},
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexMainItalicMainJs, map[string]*bintree{}},
															}},
															"Regular": &bintree{nil, map[string]*bintree{
																"CombDiacritMarks.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexMainRegularCombdiacritmarksJs, map[string]*bintree{}},
																"GeometricShapes.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexMainRegularGeometricshapesJs, map[string]*bintree{}},
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexMainRegularMainJs, map[string]*bintree{}},
																"MiscSymbols.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexMainRegularMiscsymbolsJs, map[string]*bintree{}},
																"SpacingModLetters.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexMainRegularSpacingmodlettersJs, map[string]*bintree{}},
															}},
														}},
														"Math": &bintree{nil, map[string]*bintree{
															"BoldItalic": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexMathBolditalicMainJs, map[string]*bintree{}},
															}},
															"Italic": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexMathItalicMainJs, map[string]*bintree{}},
															}},
														}},
														"SansSerif": &bintree{nil, map[string]*bintree{
															"Bold": &bintree{nil, map[string]*bintree{
																"BasicLatin.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexSansserifBoldBasiclatinJs, map[string]*bintree{}},
																"CombDiacritMarks.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexSansserifBoldCombdiacritmarksJs, map[string]*bintree{}},
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexSansserifBoldMainJs, map[string]*bintree{}},
																"Other.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexSansserifBoldOtherJs, map[string]*bintree{}},
															}},
															"Italic": &bintree{nil, map[string]*bintree{
																"BasicLatin.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexSansserifItalicBasiclatinJs, map[string]*bintree{}},
																"CombDiacritMarks.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexSansserifItalicCombdiacritmarksJs, map[string]*bintree{}},
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexSansserifItalicMainJs, map[string]*bintree{}},
																"Other.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexSansserifItalicOtherJs, map[string]*bintree{}},
															}},
															"Regular": &bintree{nil, map[string]*bintree{
																"BasicLatin.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexSansserifRegularBasiclatinJs, map[string]*bintree{}},
																"CombDiacritMarks.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexSansserifRegularCombdiacritmarksJs, map[string]*bintree{}},
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexSansserifRegularMainJs, map[string]*bintree{}},
																"Other.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexSansserifRegularOtherJs, map[string]*bintree{}},
															}},
														}},
														"Script": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"BasicLatin.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexScriptRegularBasiclatinJs, map[string]*bintree{}},
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexScriptRegularMainJs, map[string]*bintree{}},
																"Other.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexScriptRegularOtherJs, map[string]*bintree{}},
															}},
														}},
														"Size1": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexSize1RegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Size2": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexSize2RegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Size3": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexSize3RegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Size4": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexSize4RegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Typewriter": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"BasicLatin.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexTypewriterRegularBasiclatinJs, map[string]*bintree{}},
																"CombDiacritMarks.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexTypewriterRegularCombdiacritmarksJs, map[string]*bintree{}},
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexTypewriterRegularMainJs, map[string]*bintree{}},
																"Other.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexTypewriterRegularOtherJs, map[string]*bintree{}},
															}},
														}},
														"WinChrome": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexWinchromeRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"WinIE6": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"AMS.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexWinie6RegularAmsJs, map[string]*bintree{}},
																"Bold.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexWinie6RegularBoldJs, map[string]*bintree{}},
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexWinie6RegularMainJs, map[string]*bintree{}},
															}},
														}},
														"fontdata-extra.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexFontdataExtraJs, map[string]*bintree{}},
														"fontdata.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssFontsTexFontdataJs, map[string]*bintree{}},
													}},
												}},
												"imageFonts.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssImagefontsJs, map[string]*bintree{}},
												"jax.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputHtmlCssJaxJs, map[string]*bintree{}},
											}},
											"NativeMML": &bintree{nil, map[string]*bintree{
												"config.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputNativemmlConfigJs, map[string]*bintree{}},
												"jax.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputNativemmlJaxJs, map[string]*bintree{}},
											}},
											"PlainSource": &bintree{nil, map[string]*bintree{
												"config.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputPlainsourceConfigJs, map[string]*bintree{}},
												"jax.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputPlainsourceJaxJs, map[string]*bintree{}},
											}},
											"PreviewHTML": &bintree{nil, map[string]*bintree{
												"config.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputPreviewhtmlConfigJs, map[string]*bintree{}},
												"jax.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputPreviewhtmlJaxJs, map[string]*bintree{}},
											}},
											"SVG": &bintree{nil, map[string]*bintree{
												"autoload": &bintree{nil, map[string]*bintree{
													"annotation-xml.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgAutoloadAnnotationXmlJs, map[string]*bintree{}},
													"maction.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgAutoloadMactionJs, map[string]*bintree{}},
													"menclose.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgAutoloadMencloseJs, map[string]*bintree{}},
													"mglyph.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgAutoloadMglyphJs, map[string]*bintree{}},
													"mmultiscripts.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgAutoloadMmultiscriptsJs, map[string]*bintree{}},
													"ms.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgAutoloadMsJs, map[string]*bintree{}},
													"mtable.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgAutoloadMtableJs, map[string]*bintree{}},
													"multiline.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgAutoloadMultilineJs, map[string]*bintree{}},
												}},
												"config.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgConfigJs, map[string]*bintree{}},
												"fonts": &bintree{nil, map[string]*bintree{
													"Asana-Math": &bintree{nil, map[string]*bintree{
														"Alphabets": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsAsanaMathAlphabetsRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Arrows": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsAsanaMathArrowsRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"DoubleStruck": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsAsanaMathDoublestruckRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Fraktur": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsAsanaMathFrakturRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Latin": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsAsanaMathLatinRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Main": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsAsanaMathMainRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Marks": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsAsanaMathMarksRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Misc": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsAsanaMathMiscRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Monospace": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsAsanaMathMonospaceRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"NonUnicode": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsAsanaMathNonunicodeRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Normal": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsAsanaMathNormalRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Operators": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsAsanaMathOperatorsRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"SansSerif": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsAsanaMathSansserifRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Script": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsAsanaMathScriptRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Shapes": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsAsanaMathShapesRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Size1": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsAsanaMathSize1RegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Size2": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsAsanaMathSize2RegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Size3": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsAsanaMathSize3RegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Size4": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsAsanaMathSize4RegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Size5": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsAsanaMathSize5RegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Size6": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsAsanaMathSize6RegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Symbols": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsAsanaMathSymbolsRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Variants": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsAsanaMathVariantsRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"fontdata-extra.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsAsanaMathFontdataExtraJs, map[string]*bintree{}},
														"fontdata.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsAsanaMathFontdataJs, map[string]*bintree{}},
													}},
													"Gyre-Pagella": &bintree{nil, map[string]*bintree{
														"Alphabets": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyrePagellaAlphabetsRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Arrows": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyrePagellaArrowsRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"DoubleStruck": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyrePagellaDoublestruckRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Fraktur": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyrePagellaFrakturRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Latin": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyrePagellaLatinRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Main": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyrePagellaMainRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Marks": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyrePagellaMarksRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Misc": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyrePagellaMiscRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Monospace": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyrePagellaMonospaceRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"NonUnicode": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyrePagellaNonunicodeRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Normal": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyrePagellaNormalRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Operators": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyrePagellaOperatorsRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"SansSerif": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyrePagellaSansserifRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Script": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyrePagellaScriptRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Shapes": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyrePagellaShapesRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Size1": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyrePagellaSize1RegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Size2": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyrePagellaSize2RegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Size3": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyrePagellaSize3RegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Size4": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyrePagellaSize4RegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Size5": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyrePagellaSize5RegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Size6": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyrePagellaSize6RegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Symbols": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyrePagellaSymbolsRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Variants": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyrePagellaVariantsRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"fontdata-extra.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyrePagellaFontdataExtraJs, map[string]*bintree{}},
														"fontdata.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyrePagellaFontdataJs, map[string]*bintree{}},
													}},
													"Gyre-Termes": &bintree{nil, map[string]*bintree{
														"Alphabets": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyreTermesAlphabetsRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Arrows": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyreTermesArrowsRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"DoubleStruck": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyreTermesDoublestruckRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Fraktur": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyreTermesFrakturRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Latin": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyreTermesLatinRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Main": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyreTermesMainRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Marks": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyreTermesMarksRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Misc": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyreTermesMiscRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Monospace": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyreTermesMonospaceRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"NonUnicode": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyreTermesNonunicodeRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Normal": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyreTermesNormalRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Operators": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyreTermesOperatorsRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"SansSerif": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyreTermesSansserifRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Script": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyreTermesScriptRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Shapes": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyreTermesShapesRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Size1": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyreTermesSize1RegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Size2": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyreTermesSize2RegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Size3": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyreTermesSize3RegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Size4": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyreTermesSize4RegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Size5": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyreTermesSize5RegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Size6": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyreTermesSize6RegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Symbols": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyreTermesSymbolsRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Variants": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyreTermesVariantsRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"fontdata-extra.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyreTermesFontdataExtraJs, map[string]*bintree{}},
														"fontdata.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsGyreTermesFontdataJs, map[string]*bintree{}},
													}},
													"Latin-Modern": &bintree{nil, map[string]*bintree{
														"Alphabets": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsLatinModernAlphabetsRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Arrows": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsLatinModernArrowsRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"DoubleStruck": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsLatinModernDoublestruckRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Fraktur": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsLatinModernFrakturRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Latin": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsLatinModernLatinRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Main": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsLatinModernMainRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Marks": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsLatinModernMarksRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Misc": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsLatinModernMiscRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Monospace": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsLatinModernMonospaceRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"NonUnicode": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsLatinModernNonunicodeRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Normal": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsLatinModernNormalRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Operators": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsLatinModernOperatorsRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"SansSerif": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsLatinModernSansserifRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Script": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsLatinModernScriptRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Shapes": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsLatinModernShapesRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Size1": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsLatinModernSize1RegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Size2": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsLatinModernSize2RegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Size3": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsLatinModernSize3RegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Size4": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsLatinModernSize4RegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Size5": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsLatinModernSize5RegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Size6": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsLatinModernSize6RegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Size7": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsLatinModernSize7RegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Symbols": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsLatinModernSymbolsRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Variants": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsLatinModernVariantsRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"fontdata-extra.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsLatinModernFontdataExtraJs, map[string]*bintree{}},
														"fontdata.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsLatinModernFontdataJs, map[string]*bintree{}},
													}},
													"Neo-Euler": &bintree{nil, map[string]*bintree{
														"Alphabets": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsNeoEulerAlphabetsRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Arrows": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsNeoEulerArrowsRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Fraktur": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsNeoEulerFrakturRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Main": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsNeoEulerMainRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Marks": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsNeoEulerMarksRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"NonUnicode": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsNeoEulerNonunicodeRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Normal": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsNeoEulerNormalRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Operators": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsNeoEulerOperatorsRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Script": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsNeoEulerScriptRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Shapes": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsNeoEulerShapesRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Size1": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsNeoEulerSize1RegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Size2": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsNeoEulerSize2RegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Size3": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsNeoEulerSize3RegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Size4": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsNeoEulerSize4RegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Size5": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsNeoEulerSize5RegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Symbols": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsNeoEulerSymbolsRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Variants": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsNeoEulerVariantsRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"fontdata-extra.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsNeoEulerFontdataExtraJs, map[string]*bintree{}},
														"fontdata.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsNeoEulerFontdataJs, map[string]*bintree{}},
													}},
													"STIX-Web": &bintree{nil, map[string]*bintree{
														"Alphabets": &bintree{nil, map[string]*bintree{
															"Bold": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebAlphabetsBoldMainJs, map[string]*bintree{}},
															}},
															"BoldItalic": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebAlphabetsBolditalicMainJs, map[string]*bintree{}},
															}},
															"Italic": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebAlphabetsItalicMainJs, map[string]*bintree{}},
															}},
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebAlphabetsRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Arrows": &bintree{nil, map[string]*bintree{
															"Bold": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebArrowsBoldMainJs, map[string]*bintree{}},
															}},
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebArrowsRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"DoubleStruck": &bintree{nil, map[string]*bintree{
															"Bold": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebDoublestruckBoldMainJs, map[string]*bintree{}},
															}},
															"BoldItalic": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebDoublestruckBolditalicMainJs, map[string]*bintree{}},
															}},
															"Italic": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebDoublestruckItalicMainJs, map[string]*bintree{}},
															}},
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebDoublestruckRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Fraktur": &bintree{nil, map[string]*bintree{
															"Bold": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebFrakturBoldMainJs, map[string]*bintree{}},
															}},
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebFrakturRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Latin": &bintree{nil, map[string]*bintree{
															"Bold": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebLatinBoldMainJs, map[string]*bintree{}},
															}},
															"BoldItalic": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebLatinBolditalicMainJs, map[string]*bintree{}},
															}},
															"Italic": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebLatinItalicMainJs, map[string]*bintree{}},
															}},
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebLatinRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Main": &bintree{nil, map[string]*bintree{
															"Bold": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebMainBoldMainJs, map[string]*bintree{}},
															}},
															"BoldItalic": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebMainBolditalicMainJs, map[string]*bintree{}},
															}},
															"Italic": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebMainItalicMainJs, map[string]*bintree{}},
															}},
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebMainRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Marks": &bintree{nil, map[string]*bintree{
															"Bold": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebMarksBoldMainJs, map[string]*bintree{}},
															}},
															"BoldItalic": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebMarksBolditalicMainJs, map[string]*bintree{}},
															}},
															"Italic": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebMarksItalicMainJs, map[string]*bintree{}},
															}},
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebMarksRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Misc": &bintree{nil, map[string]*bintree{
															"Bold": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebMiscBoldMainJs, map[string]*bintree{}},
															}},
															"BoldItalic": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebMiscBolditalicMainJs, map[string]*bintree{}},
															}},
															"Italic": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebMiscItalicMainJs, map[string]*bintree{}},
															}},
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebMiscRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Monospace": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebMonospaceRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Normal": &bintree{nil, map[string]*bintree{
															"Bold": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebNormalBoldMainJs, map[string]*bintree{}},
															}},
															"BoldItalic": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebNormalBolditalicMainJs, map[string]*bintree{}},
															}},
															"Italic": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebNormalItalicMainJs, map[string]*bintree{}},
															}},
														}},
														"Operators": &bintree{nil, map[string]*bintree{
															"Bold": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebOperatorsBoldMainJs, map[string]*bintree{}},
															}},
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebOperatorsRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"SansSerif": &bintree{nil, map[string]*bintree{
															"Bold": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebSansserifBoldMainJs, map[string]*bintree{}},
															}},
															"BoldItalic": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebSansserifBolditalicMainJs, map[string]*bintree{}},
															}},
															"Italic": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebSansserifItalicMainJs, map[string]*bintree{}},
															}},
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebSansserifRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Script": &bintree{nil, map[string]*bintree{
															"BoldItalic": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebScriptBolditalicMainJs, map[string]*bintree{}},
															}},
															"Italic": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebScriptItalicMainJs, map[string]*bintree{}},
															}},
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebScriptRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Shapes": &bintree{nil, map[string]*bintree{
															"Bold": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebShapesBoldMainJs, map[string]*bintree{}},
															}},
															"BoldItalic": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebShapesBolditalicMainJs, map[string]*bintree{}},
															}},
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebShapesRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Size1": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebSize1RegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Size2": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebSize2RegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Size3": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebSize3RegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Size4": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebSize4RegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Size5": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebSize5RegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Symbols": &bintree{nil, map[string]*bintree{
															"Bold": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebSymbolsBoldMainJs, map[string]*bintree{}},
															}},
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebSymbolsRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Variants": &bintree{nil, map[string]*bintree{
															"Bold": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebVariantsBoldMainJs, map[string]*bintree{}},
															}},
															"BoldItalic": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebVariantsBolditalicMainJs, map[string]*bintree{}},
															}},
															"Italic": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebVariantsItalicMainJs, map[string]*bintree{}},
															}},
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebVariantsRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"fontdata-extra.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebFontdataExtraJs, map[string]*bintree{}},
														"fontdata.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsStixWebFontdataJs, map[string]*bintree{}},
													}},
													"TeX": &bintree{nil, map[string]*bintree{
														"AMS": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Arrows.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexAmsRegularArrowsJs, map[string]*bintree{}},
																"BoxDrawing.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexAmsRegularBoxdrawingJs, map[string]*bintree{}},
																"CombDiacritMarks.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexAmsRegularCombdiacritmarksJs, map[string]*bintree{}},
																"Dingbats.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexAmsRegularDingbatsJs, map[string]*bintree{}},
																"EnclosedAlphanum.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexAmsRegularEnclosedalphanumJs, map[string]*bintree{}},
																"GeneralPunctuation.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexAmsRegularGeneralpunctuationJs, map[string]*bintree{}},
																"GeometricShapes.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexAmsRegularGeometricshapesJs, map[string]*bintree{}},
																"GreekAndCoptic.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexAmsRegularGreekandcopticJs, map[string]*bintree{}},
																"Latin1Supplement.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexAmsRegularLatin1supplementJs, map[string]*bintree{}},
																"LatinExtendedA.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexAmsRegularLatinextendedaJs, map[string]*bintree{}},
																"LetterlikeSymbols.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexAmsRegularLetterlikesymbolsJs, map[string]*bintree{}},
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexAmsRegularMainJs, map[string]*bintree{}},
																"MathOperators.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexAmsRegularMathoperatorsJs, map[string]*bintree{}},
																"MiscMathSymbolsB.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexAmsRegularMiscmathsymbolsbJs, map[string]*bintree{}},
																"MiscSymbols.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexAmsRegularMiscsymbolsJs, map[string]*bintree{}},
																"MiscTechnical.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexAmsRegularMisctechnicalJs, map[string]*bintree{}},
																"PUA.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexAmsRegularPuaJs, map[string]*bintree{}},
																"SpacingModLetters.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexAmsRegularSpacingmodlettersJs, map[string]*bintree{}},
																"SuppMathOperators.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexAmsRegularSuppmathoperatorsJs, map[string]*bintree{}},
															}},
														}},
														"Caligraphic": &bintree{nil, map[string]*bintree{
															"Bold": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexCaligraphicBoldMainJs, map[string]*bintree{}},
															}},
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexCaligraphicRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Fraktur": &bintree{nil, map[string]*bintree{
															"Bold": &bintree{nil, map[string]*bintree{
																"BasicLatin.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexFrakturBoldBasiclatinJs, map[string]*bintree{}},
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexFrakturBoldMainJs, map[string]*bintree{}},
																"Other.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexFrakturBoldOtherJs, map[string]*bintree{}},
																"PUA.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexFrakturBoldPuaJs, map[string]*bintree{}},
															}},
															"Regular": &bintree{nil, map[string]*bintree{
																"BasicLatin.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexFrakturRegularBasiclatinJs, map[string]*bintree{}},
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexFrakturRegularMainJs, map[string]*bintree{}},
																"Other.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexFrakturRegularOtherJs, map[string]*bintree{}},
																"PUA.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexFrakturRegularPuaJs, map[string]*bintree{}},
															}},
														}},
														"Main": &bintree{nil, map[string]*bintree{
															"Bold": &bintree{nil, map[string]*bintree{
																"Arrows.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainBoldArrowsJs, map[string]*bintree{}},
																"BasicLatin.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainBoldBasiclatinJs, map[string]*bintree{}},
																"CombDiacritMarks.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainBoldCombdiacritmarksJs, map[string]*bintree{}},
																"CombDiactForSymbols.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainBoldCombdiactforsymbolsJs, map[string]*bintree{}},
																"GeneralPunctuation.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainBoldGeneralpunctuationJs, map[string]*bintree{}},
																"GeometricShapes.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainBoldGeometricshapesJs, map[string]*bintree{}},
																"GreekAndCoptic.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainBoldGreekandcopticJs, map[string]*bintree{}},
																"Latin1Supplement.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainBoldLatin1supplementJs, map[string]*bintree{}},
																"LatinExtendedA.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainBoldLatinextendedaJs, map[string]*bintree{}},
																"LatinExtendedB.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainBoldLatinextendedbJs, map[string]*bintree{}},
																"LetterlikeSymbols.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainBoldLetterlikesymbolsJs, map[string]*bintree{}},
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainBoldMainJs, map[string]*bintree{}},
																"MathOperators.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainBoldMathoperatorsJs, map[string]*bintree{}},
																"MiscMathSymbolsA.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainBoldMiscmathsymbolsaJs, map[string]*bintree{}},
																"MiscSymbols.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainBoldMiscsymbolsJs, map[string]*bintree{}},
																"MiscTechnical.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainBoldMisctechnicalJs, map[string]*bintree{}},
																"SpacingModLetters.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainBoldSpacingmodlettersJs, map[string]*bintree{}},
																"SuppMathOperators.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainBoldSuppmathoperatorsJs, map[string]*bintree{}},
																"SupplementalArrowsA.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainBoldSupplementalarrowsaJs, map[string]*bintree{}},
															}},
															"Italic": &bintree{nil, map[string]*bintree{
																"BasicLatin.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainItalicBasiclatinJs, map[string]*bintree{}},
																"CombDiacritMarks.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainItalicCombdiacritmarksJs, map[string]*bintree{}},
																"GeneralPunctuation.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainItalicGeneralpunctuationJs, map[string]*bintree{}},
																"GreekAndCoptic.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainItalicGreekandcopticJs, map[string]*bintree{}},
																"LatinExtendedA.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainItalicLatinextendedaJs, map[string]*bintree{}},
																"LatinExtendedB.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainItalicLatinextendedbJs, map[string]*bintree{}},
																"LetterlikeSymbols.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainItalicLetterlikesymbolsJs, map[string]*bintree{}},
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainItalicMainJs, map[string]*bintree{}},
																"MathOperators.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainItalicMathoperatorsJs, map[string]*bintree{}},
															}},
															"Regular": &bintree{nil, map[string]*bintree{
																"BasicLatin.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainRegularBasiclatinJs, map[string]*bintree{}},
																"CombDiacritMarks.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainRegularCombdiacritmarksJs, map[string]*bintree{}},
																"GeometricShapes.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainRegularGeometricshapesJs, map[string]*bintree{}},
																"GreekAndCoptic.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainRegularGreekandcopticJs, map[string]*bintree{}},
																"LatinExtendedA.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainRegularLatinextendedaJs, map[string]*bintree{}},
																"LatinExtendedB.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainRegularLatinextendedbJs, map[string]*bintree{}},
																"LetterlikeSymbols.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainRegularLetterlikesymbolsJs, map[string]*bintree{}},
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainRegularMainJs, map[string]*bintree{}},
																"MathOperators.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainRegularMathoperatorsJs, map[string]*bintree{}},
																"MiscSymbols.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainRegularMiscsymbolsJs, map[string]*bintree{}},
																"SpacingModLetters.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainRegularSpacingmodlettersJs, map[string]*bintree{}},
																"SuppMathOperators.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMainRegularSuppmathoperatorsJs, map[string]*bintree{}},
															}},
														}},
														"Math": &bintree{nil, map[string]*bintree{
															"BoldItalic": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMathBolditalicMainJs, map[string]*bintree{}},
															}},
															"Italic": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexMathItalicMainJs, map[string]*bintree{}},
															}},
														}},
														"SansSerif": &bintree{nil, map[string]*bintree{
															"Bold": &bintree{nil, map[string]*bintree{
																"BasicLatin.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexSansserifBoldBasiclatinJs, map[string]*bintree{}},
																"CombDiacritMarks.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexSansserifBoldCombdiacritmarksJs, map[string]*bintree{}},
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexSansserifBoldMainJs, map[string]*bintree{}},
																"Other.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexSansserifBoldOtherJs, map[string]*bintree{}},
															}},
															"Italic": &bintree{nil, map[string]*bintree{
																"BasicLatin.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexSansserifItalicBasiclatinJs, map[string]*bintree{}},
																"CombDiacritMarks.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexSansserifItalicCombdiacritmarksJs, map[string]*bintree{}},
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexSansserifItalicMainJs, map[string]*bintree{}},
																"Other.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexSansserifItalicOtherJs, map[string]*bintree{}},
															}},
															"Regular": &bintree{nil, map[string]*bintree{
																"BasicLatin.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexSansserifRegularBasiclatinJs, map[string]*bintree{}},
																"CombDiacritMarks.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexSansserifRegularCombdiacritmarksJs, map[string]*bintree{}},
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexSansserifRegularMainJs, map[string]*bintree{}},
																"Other.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexSansserifRegularOtherJs, map[string]*bintree{}},
															}},
														}},
														"Script": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"BasicLatin.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexScriptRegularBasiclatinJs, map[string]*bintree{}},
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexScriptRegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Size1": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexSize1RegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Size2": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexSize2RegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Size3": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexSize3RegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Size4": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexSize4RegularMainJs, map[string]*bintree{}},
															}},
														}},
														"Typewriter": &bintree{nil, map[string]*bintree{
															"Regular": &bintree{nil, map[string]*bintree{
																"BasicLatin.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexTypewriterRegularBasiclatinJs, map[string]*bintree{}},
																"CombDiacritMarks.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexTypewriterRegularCombdiacritmarksJs, map[string]*bintree{}},
																"Main.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexTypewriterRegularMainJs, map[string]*bintree{}},
																"Other.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexTypewriterRegularOtherJs, map[string]*bintree{}},
															}},
														}},
														"fontdata-extra.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexFontdataExtraJs, map[string]*bintree{}},
														"fontdata.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgFontsTexFontdataJs, map[string]*bintree{}},
													}},
												}},
												"jax.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxJaxOutputSvgJaxJs, map[string]*bintree{}},
											}},
										}},
									}},
									"localization": &bintree{nil, map[string]*bintree{
										"ast": &bintree{nil, map[string]*bintree{
											"FontWarnings.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationAstFontwarningsJs, map[string]*bintree{}},
											"HTML-CSS.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationAstHtmlCssJs, map[string]*bintree{}},
											"HelpDialog.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationAstHelpdialogJs, map[string]*bintree{}},
											"MathML.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationAstMathmlJs, map[string]*bintree{}},
											"MathMenu.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationAstMathmenuJs, map[string]*bintree{}},
											"TeX.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationAstTexJs, map[string]*bintree{}},
											"ast.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationAstAstJs, map[string]*bintree{}},
										}},
										"bcc": &bintree{nil, map[string]*bintree{
											"FontWarnings.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationBccFontwarningsJs, map[string]*bintree{}},
											"HTML-CSS.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationBccHtmlCssJs, map[string]*bintree{}},
											"HelpDialog.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationBccHelpdialogJs, map[string]*bintree{}},
											"MathML.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationBccMathmlJs, map[string]*bintree{}},
											"MathMenu.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationBccMathmenuJs, map[string]*bintree{}},
											"TeX.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationBccTexJs, map[string]*bintree{}},
											"bcc.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationBccBccJs, map[string]*bintree{}},
										}},
										"bg": &bintree{nil, map[string]*bintree{
											"FontWarnings.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationBgFontwarningsJs, map[string]*bintree{}},
											"HTML-CSS.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationBgHtmlCssJs, map[string]*bintree{}},
											"HelpDialog.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationBgHelpdialogJs, map[string]*bintree{}},
											"MathML.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationBgMathmlJs, map[string]*bintree{}},
											"MathMenu.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationBgMathmenuJs, map[string]*bintree{}},
											"TeX.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationBgTexJs, map[string]*bintree{}},
											"bg.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationBgBgJs, map[string]*bintree{}},
										}},
										"br": &bintree{nil, map[string]*bintree{
											"FontWarnings.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationBrFontwarningsJs, map[string]*bintree{}},
											"HTML-CSS.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationBrHtmlCssJs, map[string]*bintree{}},
											"HelpDialog.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationBrHelpdialogJs, map[string]*bintree{}},
											"MathML.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationBrMathmlJs, map[string]*bintree{}},
											"MathMenu.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationBrMathmenuJs, map[string]*bintree{}},
											"TeX.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationBrTexJs, map[string]*bintree{}},
											"br.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationBrBrJs, map[string]*bintree{}},
										}},
										"ca": &bintree{nil, map[string]*bintree{
											"FontWarnings.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCaFontwarningsJs, map[string]*bintree{}},
											"HTML-CSS.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCaHtmlCssJs, map[string]*bintree{}},
											"HelpDialog.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCaHelpdialogJs, map[string]*bintree{}},
											"MathML.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCaMathmlJs, map[string]*bintree{}},
											"MathMenu.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCaMathmenuJs, map[string]*bintree{}},
											"TeX.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCaTexJs, map[string]*bintree{}},
											"ca.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCaCaJs, map[string]*bintree{}},
										}},
										"cdo": &bintree{nil, map[string]*bintree{
											"FontWarnings.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCdoFontwarningsJs, map[string]*bintree{}},
											"HTML-CSS.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCdoHtmlCssJs, map[string]*bintree{}},
											"HelpDialog.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCdoHelpdialogJs, map[string]*bintree{}},
											"MathML.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCdoMathmlJs, map[string]*bintree{}},
											"MathMenu.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCdoMathmenuJs, map[string]*bintree{}},
											"TeX.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCdoTexJs, map[string]*bintree{}},
											"cdo.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCdoCdoJs, map[string]*bintree{}},
										}},
										"ce": &bintree{nil, map[string]*bintree{
											"FontWarnings.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCeFontwarningsJs, map[string]*bintree{}},
											"HTML-CSS.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCeHtmlCssJs, map[string]*bintree{}},
											"HelpDialog.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCeHelpdialogJs, map[string]*bintree{}},
											"MathML.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCeMathmlJs, map[string]*bintree{}},
											"MathMenu.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCeMathmenuJs, map[string]*bintree{}},
											"TeX.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCeTexJs, map[string]*bintree{}},
											"ce.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCeCeJs, map[string]*bintree{}},
										}},
										"cs": &bintree{nil, map[string]*bintree{
											"FontWarnings.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCsFontwarningsJs, map[string]*bintree{}},
											"HTML-CSS.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCsHtmlCssJs, map[string]*bintree{}},
											"HelpDialog.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCsHelpdialogJs, map[string]*bintree{}},
											"MathML.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCsMathmlJs, map[string]*bintree{}},
											"MathMenu.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCsMathmenuJs, map[string]*bintree{}},
											"TeX.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCsTexJs, map[string]*bintree{}},
											"cs.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCsCsJs, map[string]*bintree{}},
										}},
										"cy": &bintree{nil, map[string]*bintree{
											"FontWarnings.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCyFontwarningsJs, map[string]*bintree{}},
											"HTML-CSS.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCyHtmlCssJs, map[string]*bintree{}},
											"HelpDialog.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCyHelpdialogJs, map[string]*bintree{}},
											"MathML.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCyMathmlJs, map[string]*bintree{}},
											"MathMenu.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCyMathmenuJs, map[string]*bintree{}},
											"TeX.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCyTexJs, map[string]*bintree{}},
											"cy.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationCyCyJs, map[string]*bintree{}},
										}},
										"da": &bintree{nil, map[string]*bintree{
											"FontWarnings.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationDaFontwarningsJs, map[string]*bintree{}},
											"HTML-CSS.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationDaHtmlCssJs, map[string]*bintree{}},
											"HelpDialog.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationDaHelpdialogJs, map[string]*bintree{}},
											"MathML.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationDaMathmlJs, map[string]*bintree{}},
											"MathMenu.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationDaMathmenuJs, map[string]*bintree{}},
											"TeX.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationDaTexJs, map[string]*bintree{}},
											"da.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationDaDaJs, map[string]*bintree{}},
										}},
										"de": &bintree{nil, map[string]*bintree{
											"FontWarnings.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationDeFontwarningsJs, map[string]*bintree{}},
											"HTML-CSS.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationDeHtmlCssJs, map[string]*bintree{}},
											"HelpDialog.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationDeHelpdialogJs, map[string]*bintree{}},
											"MathML.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationDeMathmlJs, map[string]*bintree{}},
											"MathMenu.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationDeMathmenuJs, map[string]*bintree{}},
											"TeX.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationDeTexJs, map[string]*bintree{}},
											"de.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationDeDeJs, map[string]*bintree{}},
										}},
										"en": &bintree{nil, map[string]*bintree{
											"FontWarnings.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationEnFontwarningsJs, map[string]*bintree{}},
											"HTML-CSS.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationEnHtmlCssJs, map[string]*bintree{}},
											"HelpDialog.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationEnHelpdialogJs, map[string]*bintree{}},
											"MathML.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationEnMathmlJs, map[string]*bintree{}},
											"MathMenu.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationEnMathmenuJs, map[string]*bintree{}},
											"TeX.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationEnTexJs, map[string]*bintree{}},
											"en.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationEnEnJs, map[string]*bintree{}},
										}},
										"eo": &bintree{nil, map[string]*bintree{
											"FontWarnings.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationEoFontwarningsJs, map[string]*bintree{}},
											"HTML-CSS.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationEoHtmlCssJs, map[string]*bintree{}},
											"HelpDialog.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationEoHelpdialogJs, map[string]*bintree{}},
											"MathML.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationEoMathmlJs, map[string]*bintree{}},
											"MathMenu.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationEoMathmenuJs, map[string]*bintree{}},
											"TeX.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationEoTexJs, map[string]*bintree{}},
											"eo.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationEoEoJs, map[string]*bintree{}},
										}},
										"es": &bintree{nil, map[string]*bintree{
											"FontWarnings.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationEsFontwarningsJs, map[string]*bintree{}},
											"HTML-CSS.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationEsHtmlCssJs, map[string]*bintree{}},
											"HelpDialog.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationEsHelpdialogJs, map[string]*bintree{}},
											"MathML.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationEsMathmlJs, map[string]*bintree{}},
											"MathMenu.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationEsMathmenuJs, map[string]*bintree{}},
											"TeX.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationEsTexJs, map[string]*bintree{}},
											"es.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationEsEsJs, map[string]*bintree{}},
										}},
										"fa": &bintree{nil, map[string]*bintree{
											"FontWarnings.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationFaFontwarningsJs, map[string]*bintree{}},
											"HTML-CSS.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationFaHtmlCssJs, map[string]*bintree{}},
											"HelpDialog.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationFaHelpdialogJs, map[string]*bintree{}},
											"MathML.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationFaMathmlJs, map[string]*bintree{}},
											"MathMenu.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationFaMathmenuJs, map[string]*bintree{}},
											"TeX.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationFaTexJs, map[string]*bintree{}},
											"fa.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationFaFaJs, map[string]*bintree{}},
										}},
										"fi": &bintree{nil, map[string]*bintree{
											"FontWarnings.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationFiFontwarningsJs, map[string]*bintree{}},
											"HTML-CSS.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationFiHtmlCssJs, map[string]*bintree{}},
											"HelpDialog.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationFiHelpdialogJs, map[string]*bintree{}},
											"MathML.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationFiMathmlJs, map[string]*bintree{}},
											"MathMenu.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationFiMathmenuJs, map[string]*bintree{}},
											"TeX.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationFiTexJs, map[string]*bintree{}},
											"fi.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationFiFiJs, map[string]*bintree{}},
										}},
										"fr": &bintree{nil, map[string]*bintree{
											"FontWarnings.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationFrFontwarningsJs, map[string]*bintree{}},
											"HTML-CSS.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationFrHtmlCssJs, map[string]*bintree{}},
											"HelpDialog.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationFrHelpdialogJs, map[string]*bintree{}},
											"MathML.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationFrMathmlJs, map[string]*bintree{}},
											"MathMenu.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationFrMathmenuJs, map[string]*bintree{}},
											"TeX.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationFrTexJs, map[string]*bintree{}},
											"fr.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationFrFrJs, map[string]*bintree{}},
										}},
										"gl": &bintree{nil, map[string]*bintree{
											"FontWarnings.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationGlFontwarningsJs, map[string]*bintree{}},
											"HTML-CSS.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationGlHtmlCssJs, map[string]*bintree{}},
											"HelpDialog.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationGlHelpdialogJs, map[string]*bintree{}},
											"MathML.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationGlMathmlJs, map[string]*bintree{}},
											"MathMenu.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationGlMathmenuJs, map[string]*bintree{}},
											"TeX.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationGlTexJs, map[string]*bintree{}},
											"gl.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationGlGlJs, map[string]*bintree{}},
										}},
										"he": &bintree{nil, map[string]*bintree{
											"FontWarnings.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationHeFontwarningsJs, map[string]*bintree{}},
											"HTML-CSS.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationHeHtmlCssJs, map[string]*bintree{}},
											"HelpDialog.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationHeHelpdialogJs, map[string]*bintree{}},
											"MathML.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationHeMathmlJs, map[string]*bintree{}},
											"MathMenu.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationHeMathmenuJs, map[string]*bintree{}},
											"TeX.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationHeTexJs, map[string]*bintree{}},
											"he.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationHeHeJs, map[string]*bintree{}},
										}},
										"ia": &bintree{nil, map[string]*bintree{
											"FontWarnings.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationIaFontwarningsJs, map[string]*bintree{}},
											"HTML-CSS.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationIaHtmlCssJs, map[string]*bintree{}},
											"HelpDialog.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationIaHelpdialogJs, map[string]*bintree{}},
											"MathML.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationIaMathmlJs, map[string]*bintree{}},
											"MathMenu.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationIaMathmenuJs, map[string]*bintree{}},
											"TeX.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationIaTexJs, map[string]*bintree{}},
											"ia.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationIaIaJs, map[string]*bintree{}},
										}},
										"it": &bintree{nil, map[string]*bintree{
											"FontWarnings.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationItFontwarningsJs, map[string]*bintree{}},
											"HTML-CSS.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationItHtmlCssJs, map[string]*bintree{}},
											"HelpDialog.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationItHelpdialogJs, map[string]*bintree{}},
											"MathML.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationItMathmlJs, map[string]*bintree{}},
											"MathMenu.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationItMathmenuJs, map[string]*bintree{}},
											"TeX.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationItTexJs, map[string]*bintree{}},
											"it.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationItItJs, map[string]*bintree{}},
										}},
										"ja": &bintree{nil, map[string]*bintree{
											"FontWarnings.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationJaFontwarningsJs, map[string]*bintree{}},
											"HTML-CSS.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationJaHtmlCssJs, map[string]*bintree{}},
											"HelpDialog.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationJaHelpdialogJs, map[string]*bintree{}},
											"MathML.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationJaMathmlJs, map[string]*bintree{}},
											"MathMenu.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationJaMathmenuJs, map[string]*bintree{}},
											"TeX.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationJaTexJs, map[string]*bintree{}},
											"ja.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationJaJaJs, map[string]*bintree{}},
										}},
										"kn": &bintree{nil, map[string]*bintree{
											"FontWarnings.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationKnFontwarningsJs, map[string]*bintree{}},
											"HTML-CSS.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationKnHtmlCssJs, map[string]*bintree{}},
											"HelpDialog.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationKnHelpdialogJs, map[string]*bintree{}},
											"MathML.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationKnMathmlJs, map[string]*bintree{}},
											"MathMenu.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationKnMathmenuJs, map[string]*bintree{}},
											"TeX.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationKnTexJs, map[string]*bintree{}},
											"kn.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationKnKnJs, map[string]*bintree{}},
										}},
										"ko": &bintree{nil, map[string]*bintree{
											"FontWarnings.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationKoFontwarningsJs, map[string]*bintree{}},
											"HTML-CSS.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationKoHtmlCssJs, map[string]*bintree{}},
											"HelpDialog.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationKoHelpdialogJs, map[string]*bintree{}},
											"MathML.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationKoMathmlJs, map[string]*bintree{}},
											"MathMenu.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationKoMathmenuJs, map[string]*bintree{}},
											"TeX.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationKoTexJs, map[string]*bintree{}},
											"ko.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationKoKoJs, map[string]*bintree{}},
										}},
										"lb": &bintree{nil, map[string]*bintree{
											"FontWarnings.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationLbFontwarningsJs, map[string]*bintree{}},
											"HTML-CSS.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationLbHtmlCssJs, map[string]*bintree{}},
											"HelpDialog.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationLbHelpdialogJs, map[string]*bintree{}},
											"MathML.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationLbMathmlJs, map[string]*bintree{}},
											"MathMenu.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationLbMathmenuJs, map[string]*bintree{}},
											"TeX.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationLbTexJs, map[string]*bintree{}},
											"lb.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationLbLbJs, map[string]*bintree{}},
										}},
										"lki": &bintree{nil, map[string]*bintree{
											"FontWarnings.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationLkiFontwarningsJs, map[string]*bintree{}},
											"HTML-CSS.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationLkiHtmlCssJs, map[string]*bintree{}},
											"HelpDialog.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationLkiHelpdialogJs, map[string]*bintree{}},
											"MathML.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationLkiMathmlJs, map[string]*bintree{}},
											"MathMenu.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationLkiMathmenuJs, map[string]*bintree{}},
											"TeX.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationLkiTexJs, map[string]*bintree{}},
											"lki.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationLkiLkiJs, map[string]*bintree{}},
										}},
										"lt": &bintree{nil, map[string]*bintree{
											"FontWarnings.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationLtFontwarningsJs, map[string]*bintree{}},
											"HTML-CSS.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationLtHtmlCssJs, map[string]*bintree{}},
											"HelpDialog.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationLtHelpdialogJs, map[string]*bintree{}},
											"MathML.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationLtMathmlJs, map[string]*bintree{}},
											"MathMenu.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationLtMathmenuJs, map[string]*bintree{}},
											"TeX.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationLtTexJs, map[string]*bintree{}},
											"lt.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationLtLtJs, map[string]*bintree{}},
										}},
										"mk": &bintree{nil, map[string]*bintree{
											"FontWarnings.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationMkFontwarningsJs, map[string]*bintree{}},
											"HTML-CSS.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationMkHtmlCssJs, map[string]*bintree{}},
											"HelpDialog.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationMkHelpdialogJs, map[string]*bintree{}},
											"MathML.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationMkMathmlJs, map[string]*bintree{}},
											"MathMenu.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationMkMathmenuJs, map[string]*bintree{}},
											"TeX.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationMkTexJs, map[string]*bintree{}},
											"mk.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationMkMkJs, map[string]*bintree{}},
										}},
										"nl": &bintree{nil, map[string]*bintree{
											"FontWarnings.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationNlFontwarningsJs, map[string]*bintree{}},
											"HTML-CSS.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationNlHtmlCssJs, map[string]*bintree{}},
											"HelpDialog.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationNlHelpdialogJs, map[string]*bintree{}},
											"MathML.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationNlMathmlJs, map[string]*bintree{}},
											"MathMenu.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationNlMathmenuJs, map[string]*bintree{}},
											"TeX.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationNlTexJs, map[string]*bintree{}},
											"nl.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationNlNlJs, map[string]*bintree{}},
										}},
										"oc": &bintree{nil, map[string]*bintree{
											"FontWarnings.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationOcFontwarningsJs, map[string]*bintree{}},
											"HTML-CSS.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationOcHtmlCssJs, map[string]*bintree{}},
											"HelpDialog.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationOcHelpdialogJs, map[string]*bintree{}},
											"MathML.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationOcMathmlJs, map[string]*bintree{}},
											"MathMenu.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationOcMathmenuJs, map[string]*bintree{}},
											"TeX.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationOcTexJs, map[string]*bintree{}},
											"oc.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationOcOcJs, map[string]*bintree{}},
										}},
										"pl": &bintree{nil, map[string]*bintree{
											"FontWarnings.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationPlFontwarningsJs, map[string]*bintree{}},
											"HTML-CSS.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationPlHtmlCssJs, map[string]*bintree{}},
											"HelpDialog.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationPlHelpdialogJs, map[string]*bintree{}},
											"MathML.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationPlMathmlJs, map[string]*bintree{}},
											"MathMenu.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationPlMathmenuJs, map[string]*bintree{}},
											"TeX.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationPlTexJs, map[string]*bintree{}},
											"pl.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationPlPlJs, map[string]*bintree{}},
										}},
										"pt": &bintree{nil, map[string]*bintree{
											"FontWarnings.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationPtFontwarningsJs, map[string]*bintree{}},
											"HTML-CSS.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationPtHtmlCssJs, map[string]*bintree{}},
											"HelpDialog.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationPtHelpdialogJs, map[string]*bintree{}},
											"MathML.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationPtMathmlJs, map[string]*bintree{}},
											"MathMenu.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationPtMathmenuJs, map[string]*bintree{}},
											"TeX.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationPtTexJs, map[string]*bintree{}},
											"pt.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationPtPtJs, map[string]*bintree{}},
										}},
										"pt-br": &bintree{nil, map[string]*bintree{
											"FontWarnings.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationPtBrFontwarningsJs, map[string]*bintree{}},
											"HTML-CSS.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationPtBrHtmlCssJs, map[string]*bintree{}},
											"HelpDialog.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationPtBrHelpdialogJs, map[string]*bintree{}},
											"MathML.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationPtBrMathmlJs, map[string]*bintree{}},
											"MathMenu.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationPtBrMathmenuJs, map[string]*bintree{}},
											"TeX.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationPtBrTexJs, map[string]*bintree{}},
											"pt-br.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationPtBrPtBrJs, map[string]*bintree{}},
										}},
										"qqq": &bintree{nil, map[string]*bintree{
											"FontWarnings.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationQqqFontwarningsJs, map[string]*bintree{}},
											"HTML-CSS.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationQqqHtmlCssJs, map[string]*bintree{}},
											"HelpDialog.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationQqqHelpdialogJs, map[string]*bintree{}},
											"MathML.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationQqqMathmlJs, map[string]*bintree{}},
											"MathMenu.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationQqqMathmenuJs, map[string]*bintree{}},
											"TeX.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationQqqTexJs, map[string]*bintree{}},
											"qqq.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationQqqQqqJs, map[string]*bintree{}},
										}},
										"ru": &bintree{nil, map[string]*bintree{
											"FontWarnings.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationRuFontwarningsJs, map[string]*bintree{}},
											"HTML-CSS.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationRuHtmlCssJs, map[string]*bintree{}},
											"HelpDialog.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationRuHelpdialogJs, map[string]*bintree{}},
											"MathML.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationRuMathmlJs, map[string]*bintree{}},
											"MathMenu.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationRuMathmenuJs, map[string]*bintree{}},
											"TeX.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationRuTexJs, map[string]*bintree{}},
											"ru.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationRuRuJs, map[string]*bintree{}},
										}},
										"scn": &bintree{nil, map[string]*bintree{
											"FontWarnings.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationScnFontwarningsJs, map[string]*bintree{}},
											"HTML-CSS.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationScnHtmlCssJs, map[string]*bintree{}},
											"HelpDialog.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationScnHelpdialogJs, map[string]*bintree{}},
											"MathML.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationScnMathmlJs, map[string]*bintree{}},
											"MathMenu.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationScnMathmenuJs, map[string]*bintree{}},
											"TeX.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationScnTexJs, map[string]*bintree{}},
											"scn.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationScnScnJs, map[string]*bintree{}},
										}},
										"sco": &bintree{nil, map[string]*bintree{
											"FontWarnings.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationScoFontwarningsJs, map[string]*bintree{}},
											"HTML-CSS.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationScoHtmlCssJs, map[string]*bintree{}},
											"HelpDialog.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationScoHelpdialogJs, map[string]*bintree{}},
											"MathML.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationScoMathmlJs, map[string]*bintree{}},
											"MathMenu.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationScoMathmenuJs, map[string]*bintree{}},
											"TeX.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationScoTexJs, map[string]*bintree{}},
											"sco.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationScoScoJs, map[string]*bintree{}},
										}},
										"sl": &bintree{nil, map[string]*bintree{
											"FontWarnings.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationSlFontwarningsJs, map[string]*bintree{}},
											"HTML-CSS.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationSlHtmlCssJs, map[string]*bintree{}},
											"HelpDialog.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationSlHelpdialogJs, map[string]*bintree{}},
											"MathML.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationSlMathmlJs, map[string]*bintree{}},
											"MathMenu.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationSlMathmenuJs, map[string]*bintree{}},
											"TeX.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationSlTexJs, map[string]*bintree{}},
											"sl.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationSlSlJs, map[string]*bintree{}},
										}},
										"sv": &bintree{nil, map[string]*bintree{
											"FontWarnings.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationSvFontwarningsJs, map[string]*bintree{}},
											"HTML-CSS.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationSvHtmlCssJs, map[string]*bintree{}},
											"HelpDialog.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationSvHelpdialogJs, map[string]*bintree{}},
											"MathML.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationSvMathmlJs, map[string]*bintree{}},
											"MathMenu.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationSvMathmenuJs, map[string]*bintree{}},
											"TeX.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationSvTexJs, map[string]*bintree{}},
											"sv.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationSvSvJs, map[string]*bintree{}},
										}},
										"tr": &bintree{nil, map[string]*bintree{
											"FontWarnings.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationTrFontwarningsJs, map[string]*bintree{}},
											"HTML-CSS.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationTrHtmlCssJs, map[string]*bintree{}},
											"HelpDialog.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationTrHelpdialogJs, map[string]*bintree{}},
											"MathML.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationTrMathmlJs, map[string]*bintree{}},
											"MathMenu.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationTrMathmenuJs, map[string]*bintree{}},
											"TeX.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationTrTexJs, map[string]*bintree{}},
											"tr.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationTrTrJs, map[string]*bintree{}},
										}},
										"uk": &bintree{nil, map[string]*bintree{
											"FontWarnings.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationUkFontwarningsJs, map[string]*bintree{}},
											"HTML-CSS.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationUkHtmlCssJs, map[string]*bintree{}},
											"HelpDialog.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationUkHelpdialogJs, map[string]*bintree{}},
											"MathML.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationUkMathmlJs, map[string]*bintree{}},
											"MathMenu.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationUkMathmenuJs, map[string]*bintree{}},
											"TeX.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationUkTexJs, map[string]*bintree{}},
											"uk.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationUkUkJs, map[string]*bintree{}},
										}},
										"vi": &bintree{nil, map[string]*bintree{
											"FontWarnings.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationViFontwarningsJs, map[string]*bintree{}},
											"HTML-CSS.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationViHtmlCssJs, map[string]*bintree{}},
											"HelpDialog.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationViHelpdialogJs, map[string]*bintree{}},
											"MathML.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationViMathmlJs, map[string]*bintree{}},
											"MathMenu.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationViMathmenuJs, map[string]*bintree{}},
											"TeX.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationViTexJs, map[string]*bintree{}},
											"vi.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationViViJs, map[string]*bintree{}},
										}},
										"zh-hans": &bintree{nil, map[string]*bintree{
											"FontWarnings.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationZhHansFontwarningsJs, map[string]*bintree{}},
											"HTML-CSS.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationZhHansHtmlCssJs, map[string]*bintree{}},
											"HelpDialog.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationZhHansHelpdialogJs, map[string]*bintree{}},
											"MathML.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationZhHansMathmlJs, map[string]*bintree{}},
											"MathMenu.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationZhHansMathmenuJs, map[string]*bintree{}},
											"TeX.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationZhHansTexJs, map[string]*bintree{}},
											"zh-hans.js": &bintree{SrcMainWebFlorenceJsThirdPartyMathjaxLocalizationZhHansZhHansJs, map[string]*bintree{}},
										}},
									}},
								}},
								"redux.min.js": &bintree{SrcMainWebFlorenceJsThirdPartyReduxMinJs, map[string]*bintree{}},
								"sweetalert.min.js": &bintree{SrcMainWebFlorenceJsThirdPartySweetalertMinJs, map[string]*bintree{}},
								"tag-it.js": &bintree{SrcMainWebFlorenceJsThirdPartyTagItJs, map[string]*bintree{}},
								"underscore-min.js": &bintree{SrcMainWebFlorenceJsThirdPartyUnderscoreMinJs, map[string]*bintree{}},
								"underscore-min.map": &bintree{SrcMainWebFlorenceJsThirdPartyUnderscoreMinMap, map[string]*bintree{}},
							}},
							"zebedee-api": &bintree{nil, map[string]*bintree{
								"_deleteCollection.js": &bintree{SrcMainWebFlorenceJsZebedeeApi_deletecollectionJs, map[string]*bintree{}},
								"_deleteContent.js": &bintree{SrcMainWebFlorenceJsZebedeeApi_deletecontentJs, map[string]*bintree{}},
								"_deleteEquation.js": &bintree{SrcMainWebFlorenceJsZebedeeApi_deleteequationJs, map[string]*bintree{}},
								"_getCollection.js": &bintree{SrcMainWebFlorenceJsZebedeeApi_getcollectionJs, map[string]*bintree{}},
								"_getPageData.js": &bintree{SrcMainWebFlorenceJsZebedeeApi_getpagedataJs, map[string]*bintree{}},
								"_getPageResource.js": &bintree{SrcMainWebFlorenceJsZebedeeApi_getpageresourceJs, map[string]*bintree{}},
								"_getTeams.js": &bintree{SrcMainWebFlorenceJsZebedeeApi_getteamsJs, map[string]*bintree{}},
								"_getUserPermission.js": &bintree{SrcMainWebFlorenceJsZebedeeApi_getuserpermissionJs, map[string]*bintree{}},
								"_getUsers.js": &bintree{SrcMainWebFlorenceJsZebedeeApi_getusersJs, map[string]*bintree{}},
								"_moveContent.js": &bintree{SrcMainWebFlorenceJsZebedeeApi_movecontentJs, map[string]*bintree{}},
								"_postPassword.js": &bintree{SrcMainWebFlorenceJsZebedeeApi_postpasswordJs, map[string]*bintree{}},
								"_postPermission.js": &bintree{SrcMainWebFlorenceJsZebedeeApi_postpermissionJs, map[string]*bintree{}},
								"_putContent.js": &bintree{SrcMainWebFlorenceJsZebedeeApi_putcontentJs, map[string]*bintree{}},
							}},
						}},
						"manifest.json": &bintree{SrcMainWebFlorenceManifestJson, map[string]*bintree{}},
						"package.json": &bintree{SrcMainWebFlorencePackageJson, map[string]*bintree{}},
						"scss": &bintree{nil, map[string]*bintree{
							"components": &bintree{nil, map[string]*bintree{
								"_accordion.scss": &bintree{SrcMainWebFlorenceScssComponents_accordionScss, map[string]*bintree{}},
								"_builder.scss": &bintree{SrcMainWebFlorenceScssComponents_builderScss, map[string]*bintree{}},
								"_icons.scss": &bintree{SrcMainWebFlorenceScssComponents_iconsScss, map[string]*bintree{}},
								"_markdown-editor.scss": &bintree{SrcMainWebFlorenceScssComponents_markdownEditorScss, map[string]*bintree{}},
								"_network-status.scss": &bintree{SrcMainWebFlorenceScssComponents_networkStatusScss, map[string]*bintree{}},
								"_page.scss": &bintree{SrcMainWebFlorenceScssComponents_pageScss, map[string]*bintree{}},
								"_slider.scss": &bintree{SrcMainWebFlorenceScssComponents_sliderScss, map[string]*bintree{}},
							}},
							"elements": &bintree{nil, map[string]*bintree{
								"_buttons.scss": &bintree{SrcMainWebFlorenceScssElements_buttonsScss, map[string]*bintree{}},
								"_forms.scss": &bintree{SrcMainWebFlorenceScssElements_formsScss, map[string]*bintree{}},
								"_inputs.scss": &bintree{SrcMainWebFlorenceScssElements_inputsScss, map[string]*bintree{}},
								"_nav.scss": &bintree{SrcMainWebFlorenceScssElements_navScss, map[string]*bintree{}},
								"_tables.scss": &bintree{SrcMainWebFlorenceScssElements_tablesScss, map[string]*bintree{}},
								"_typography.scss": &bintree{SrcMainWebFlorenceScssElements_typographyScss, map[string]*bintree{}},
							}},
							"main.scss": &bintree{SrcMainWebFlorenceScssMainScss, map[string]*bintree{}},
							"partials": &bintree{nil, map[string]*bintree{
								"_base.scss": &bintree{SrcMainWebFlorenceScssPartials_baseScss, map[string]*bintree{}},
								"_collections.scss": &bintree{SrcMainWebFlorenceScssPartials_collectionsScss, map[string]*bintree{}},
								"_colour-palette.scss": &bintree{SrcMainWebFlorenceScssPartials_colourPaletteScss, map[string]*bintree{}},
								"_elements.scss": &bintree{SrcMainWebFlorenceScssPartials_elementsScss, map[string]*bintree{}},
								"_fonts.scss": &bintree{SrcMainWebFlorenceScssPartials_fontsScss, map[string]*bintree{}},
								"_jqui.scss": &bintree{SrcMainWebFlorenceScssPartials_jquiScss, map[string]*bintree{}},
								"_publish.scss": &bintree{SrcMainWebFlorenceScssPartials_publishScss, map[string]*bintree{}},
								"_reset.scss": &bintree{SrcMainWebFlorenceScssPartials_resetScss, map[string]*bintree{}},
								"_shame.scss": &bintree{SrcMainWebFlorenceScssPartials_shameScss, map[string]*bintree{}},
								"_utilities.scss": &bintree{SrcMainWebFlorenceScssPartials_utilitiesScss, map[string]*bintree{}},
								"_workspace.scss": &bintree{SrcMainWebFlorenceScssPartials_workspaceScss, map[string]*bintree{}},
							}},
							"utilities": &bintree{nil, map[string]*bintree{
								"_display.scss": &bintree{SrcMainWebFlorenceScssUtilities_displayScss, map[string]*bintree{}},
								"_grid.scss": &bintree{SrcMainWebFlorenceScssUtilities_gridScss, map[string]*bintree{}},
								"_margin.scss": &bintree{SrcMainWebFlorenceScssUtilities_marginScss, map[string]*bintree{}},
								"_mixins.scss": &bintree{SrcMainWebFlorenceScssUtilities_mixinsScss, map[string]*bintree{}},
								"_padding.scss": &bintree{SrcMainWebFlorenceScssUtilities_paddingScss, map[string]*bintree{}},
								"_panels.scss": &bintree{SrcMainWebFlorenceScssUtilities_panelsScss, map[string]*bintree{}},
								"_utilities.scss": &bintree{SrcMainWebFlorenceScssUtilities_utilitiesScss, map[string]*bintree{}},
							}},
						}},
						"service-worker.js": &bintree{SrcMainWebFlorenceServiceWorkerJs, map[string]*bintree{}},
						"spec": &bintree{nil, map[string]*bintree{
							".DS_Store": &bintree{SrcMainWebFlorenceSpecDs_store, map[string]*bintree{}},
							"classes": &bintree{nil, map[string]*bintree{
								"FlorenceSpec.js": &bintree{SrcMainWebFlorenceSpecClassesFlorencespecJs, map[string]*bintree{}},
								"PathUtilsSpec.js": &bintree{SrcMainWebFlorenceSpecClassesPathutilsspecJs, map[string]*bintree{}},
								"StringUtilsSpec.js": &bintree{SrcMainWebFlorenceSpecClassesStringutilsspecJs, map[string]*bintree{}},
							}},
							"support": &bintree{nil, map[string]*bintree{
								"jasmine.json": &bintree{SrcMainWebFlorenceSpecSupportJasmineJson, map[string]*bintree{}},
							}},
						}},
						"templates": &bintree{nil, map[string]*bintree{
							"blockModal.handlebars": &bintree{SrcMainWebFlorenceTemplatesBlockmodalHandlebars, map[string]*bintree{}},
							"blockNewsModal.handlebars": &bintree{SrcMainWebFlorenceTemplatesBlocknewsmodalHandlebars, map[string]*bintree{}},
							"browseNode.handlebars": &bintree{SrcMainWebFlorenceTemplatesBrowsenodeHandlebars, map[string]*bintree{}},
							"browseNodeDataVis.handlebars": &bintree{SrcMainWebFlorenceTemplatesBrowsenodedatavisHandlebars, map[string]*bintree{}},
							"changePassword.handlebars": &bintree{SrcMainWebFlorenceTemplatesChangepasswordHandlebars, map[string]*bintree{}},
							"chartBuilder.handlebars": &bintree{SrcMainWebFlorenceTemplatesChartbuilderHandlebars, map[string]*bintree{}},
							"chartEditBarChartExtras.handlebars": &bintree{SrcMainWebFlorenceTemplatesCharteditbarchartextrasHandlebars, map[string]*bintree{}},
							"chartEditBarlineExtras.handlebars": &bintree{SrcMainWebFlorenceTemplatesCharteditbarlineextrasHandlebars, map[string]*bintree{}},
							"chartEditDualAxisExtras.handlebars": &bintree{SrcMainWebFlorenceTemplatesCharteditdualaxisextrasHandlebars, map[string]*bintree{}},
							"chartEditLineChartExtras.handlebars": &bintree{SrcMainWebFlorenceTemplatesCharteditlinechartextrasHandlebars, map[string]*bintree{}},
							"childDeletes.handlebars": &bintree{SrcMainWebFlorenceTemplatesChilddeletesHandlebars, map[string]*bintree{}},
							"collectionDetails.handlebars": &bintree{SrcMainWebFlorenceTemplatesCollectiondetailsHandlebars, map[string]*bintree{}},
							"collectionEdit.handlebars": &bintree{SrcMainWebFlorenceTemplatesCollectioneditHandlebars, map[string]*bintree{}},
							"collectionList.handlebars": &bintree{SrcMainWebFlorenceTemplatesCollectionlistHandlebars, map[string]*bintree{}},
							"editNav.handlebars": &bintree{SrcMainWebFlorenceTemplatesEditnavHandlebars, map[string]*bintree{}},
							"editNavChild.handlebars": &bintree{SrcMainWebFlorenceTemplatesEditnavchildHandlebars, map[string]*bintree{}},
							"editorAlert.handlebars": &bintree{SrcMainWebFlorenceTemplatesEditoralertHandlebars, map[string]*bintree{}},
							"editorCompendiumDatasetFiles.handlebars": &bintree{SrcMainWebFlorenceTemplatesEditorcompendiumdatasetfilesHandlebars, map[string]*bintree{}},
							"editorContent.handlebars": &bintree{SrcMainWebFlorenceTemplatesEditorcontentHandlebars, map[string]*bintree{}},
							"editorContentNoTitle.handlebars": &bintree{SrcMainWebFlorenceTemplatesEditorcontentnotitleHandlebars, map[string]*bintree{}},
							"editorContentOne.handlebars": &bintree{SrcMainWebFlorenceTemplatesEditorcontentoneHandlebars, map[string]*bintree{}},
							"editorCorrection.handlebars": &bintree{SrcMainWebFlorenceTemplatesEditorcorrectionHandlebars, map[string]*bintree{}},
							"editorDate.handlebars": &bintree{SrcMainWebFlorenceTemplatesEditordateHandlebars, map[string]*bintree{}},
							"editorDocWithFiles.handlebars": &bintree{SrcMainWebFlorenceTemplatesEditordocwithfilesHandlebars, map[string]*bintree{}},
							"editorDownloads.handlebars": &bintree{SrcMainWebFlorenceTemplatesEditordownloadsHandlebars, map[string]*bintree{}},
							"editorDownloadsWithSummary.handlebars": &bintree{SrcMainWebFlorenceTemplatesEditordownloadswithsummaryHandlebars, map[string]*bintree{}},
							"editorLinks.handlebars": &bintree{SrcMainWebFlorenceTemplatesEditorlinksHandlebars, map[string]*bintree{}},
							"editorRelated.handlebars": &bintree{SrcMainWebFlorenceTemplatesEditorrelatedHandlebars, map[string]*bintree{}},
							"editorServiceMessage.handlebars": &bintree{SrcMainWebFlorenceTemplatesEditorservicemessageHandlebars, map[string]*bintree{}},
							"editorT1Blocks.handlebars": &bintree{SrcMainWebFlorenceTemplatesEditort1blocksHandlebars, map[string]*bintree{}},
							"editorTopics.handlebars": &bintree{SrcMainWebFlorenceTemplatesEditortopicsHandlebars, map[string]*bintree{}},
							"embedIframe.handlebars": &bintree{SrcMainWebFlorenceTemplatesEmbediframeHandlebars, map[string]*bintree{}},
							"equationBuilder.handlebars": &bintree{SrcMainWebFlorenceTemplatesEquationbuilderHandlebars, map[string]*bintree{}},
							"florence.handlebars": &bintree{SrcMainWebFlorenceTemplatesFlorenceHandlebars, map[string]*bintree{}},
							"iframeNav.handlebars": &bintree{SrcMainWebFlorenceTemplatesIframenavHandlebars, map[string]*bintree{}},
							"imageBuilder.handlebars": &bintree{SrcMainWebFlorenceTemplatesImagebuilderHandlebars, map[string]*bintree{}},
							"linkExternalModal.handlebars": &bintree{SrcMainWebFlorenceTemplatesLinkexternalmodalHandlebars, map[string]*bintree{}},
							"linkModal.handlebars": &bintree{SrcMainWebFlorenceTemplatesLinkmodalHandlebars, map[string]*bintree{}},
							"loadingAnimation.handlebars": &bintree{SrcMainWebFlorenceTemplatesLoadinganimationHandlebars, map[string]*bintree{}},
							"login.handlebars": &bintree{SrcMainWebFlorenceTemplatesLoginHandlebars, map[string]*bintree{}},
							"mainNav.handlebars": &bintree{SrcMainWebFlorenceTemplatesMainnavHandlebars, map[string]*bintree{}},
							"markdownEditor.handlebars": &bintree{SrcMainWebFlorenceTemplatesMarkdowneditorHandlebars, map[string]*bintree{}},
							"markdownEditorNoTitle.handlebars": &bintree{SrcMainWebFlorenceTemplatesMarkdowneditornotitleHandlebars, map[string]*bintree{}},
							"publishDetails.handlebars": &bintree{SrcMainWebFlorenceTemplatesPublishdetailsHandlebars, map[string]*bintree{}},
							"publishList.handlebars": &bintree{SrcMainWebFlorenceTemplatesPublishlistHandlebars, map[string]*bintree{}},
							"relatedModal.handlebars": &bintree{SrcMainWebFlorenceTemplatesRelatedmodalHandlebars, map[string]*bintree{}},
							"releaseSelector.handlebars": &bintree{SrcMainWebFlorenceTemplatesReleaseselectorHandlebars, map[string]*bintree{}},
							"reportList.handlebars": &bintree{SrcMainWebFlorenceTemplatesReportlistHandlebars, map[string]*bintree{}},
							"reportPublishedDetails.handlebars": &bintree{SrcMainWebFlorenceTemplatesReportpublisheddetailsHandlebars, map[string]*bintree{}},
							"reportUnpublishedDetails.handlebars": &bintree{SrcMainWebFlorenceTemplatesReportunpublisheddetailsHandlebars, map[string]*bintree{}},
							"selectorHour.handlebars": &bintree{SrcMainWebFlorenceTemplatesSelectorhourHandlebars, map[string]*bintree{}},
							"selectorMinute.handlebars": &bintree{SrcMainWebFlorenceTemplatesSelectorminuteHandlebars, map[string]*bintree{}},
							"tableBuilder.handlebars": &bintree{SrcMainWebFlorenceTemplatesTablebuilderHandlebars, map[string]*bintree{}},
							"teamDetails.handlebars": &bintree{SrcMainWebFlorenceTemplatesTeamdetailsHandlebars, map[string]*bintree{}},
							"teamEdit.handlebars": &bintree{SrcMainWebFlorenceTemplatesTeameditHandlebars, map[string]*bintree{}},
							"teamList.handlebars": &bintree{SrcMainWebFlorenceTemplatesTeamlistHandlebars, map[string]*bintree{}},
							"tickAnimation.handlebars": &bintree{SrcMainWebFlorenceTemplatesTickanimationHandlebars, map[string]*bintree{}},
							"uploadFileForm.handlebars": &bintree{SrcMainWebFlorenceTemplatesUploadfileformHandlebars, map[string]*bintree{}},
							"userDetails.handlebars": &bintree{SrcMainWebFlorenceTemplatesUserdetailsHandlebars, map[string]*bintree{}},
							"userList.handlebars": &bintree{SrcMainWebFlorenceTemplatesUserlistHandlebars, map[string]*bintree{}},
							"workBrowse.handlebars": &bintree{SrcMainWebFlorenceTemplatesWorkbrowseHandlebars, map[string]*bintree{}},
							"workCreate.handlebars": &bintree{SrcMainWebFlorenceTemplatesWorkcreateHandlebars, map[string]*bintree{}},
							"workEditCharts.handlebars": &bintree{SrcMainWebFlorenceTemplatesWorkeditchartsHandlebars, map[string]*bintree{}},
							"workEditEquations.handlebars": &bintree{SrcMainWebFlorenceTemplatesWorkeditequationsHandlebars, map[string]*bintree{}},
							"workEditImages.handlebars": &bintree{SrcMainWebFlorenceTemplatesWorkeditimagesHandlebars, map[string]*bintree{}},
							"workEditT1.handlebars": &bintree{SrcMainWebFlorenceTemplatesWorkeditt1Handlebars, map[string]*bintree{}},
							"workEditT16.handlebars": &bintree{SrcMainWebFlorenceTemplatesWorkeditt16Handlebars, map[string]*bintree{}},
							"workEditT1Census.handlebars": &bintree{SrcMainWebFlorenceTemplatesWorkeditt1censusHandlebars, map[string]*bintree{}},
							"workEditT1Sections.handlebars": &bintree{SrcMainWebFlorenceTemplatesWorkeditt1sectionsHandlebars, map[string]*bintree{}},
							"workEditT2.handlebars": &bintree{SrcMainWebFlorenceTemplatesWorkeditt2Handlebars, map[string]*bintree{}},
							"workEditT3.handlebars": &bintree{SrcMainWebFlorenceTemplatesWorkeditt3Handlebars, map[string]*bintree{}},
							"workEditT4Article.handlebars": &bintree{SrcMainWebFlorenceTemplatesWorkeditt4articleHandlebars, map[string]*bintree{}},
							"workEditT4ArticleDownload.handlebars": &bintree{SrcMainWebFlorenceTemplatesWorkeditt4articledownloadHandlebars, map[string]*bintree{}},
							"workEditT4Bulletin.handlebars": &bintree{SrcMainWebFlorenceTemplatesWorkeditt4bulletinHandlebars, map[string]*bintree{}},
							"workEditT4Compendium.handlebars": &bintree{SrcMainWebFlorenceTemplatesWorkeditt4compendiumHandlebars, map[string]*bintree{}},
							"workEditT4Methodology.handlebars": &bintree{SrcMainWebFlorenceTemplatesWorkeditt4methodologyHandlebars, map[string]*bintree{}},
							"workEditT5.handlebars": &bintree{SrcMainWebFlorenceTemplatesWorkeditt5Handlebars, map[string]*bintree{}},
							"workEditT6.handlebars": &bintree{SrcMainWebFlorenceTemplatesWorkeditt6Handlebars, map[string]*bintree{}},
							"workEditT6Chapter.handlebars": &bintree{SrcMainWebFlorenceTemplatesWorkeditt6chapterHandlebars, map[string]*bintree{}},
							"workEditT6Dataset.handlebars": &bintree{SrcMainWebFlorenceTemplatesWorkeditt6datasetHandlebars, map[string]*bintree{}},
							"workEditT7.handlebars": &bintree{SrcMainWebFlorenceTemplatesWorkeditt7Handlebars, map[string]*bintree{}},
							"workEditT7Landing.handlebars": &bintree{SrcMainWebFlorenceTemplatesWorkeditt7landingHandlebars, map[string]*bintree{}},
							"workEditT7StaticArticle.handlebars": &bintree{SrcMainWebFlorenceTemplatesWorkeditt7staticarticleHandlebars, map[string]*bintree{}},
							"workEditT8.handlebars": &bintree{SrcMainWebFlorenceTemplatesWorkeditt8Handlebars, map[string]*bintree{}},
							"workEditT8Compendium.handlebars": &bintree{SrcMainWebFlorenceTemplatesWorkeditt8compendiumHandlebars, map[string]*bintree{}},
							"workEditT8CorrectionList.handlebars": &bintree{SrcMainWebFlorenceTemplatesWorkeditt8correctionlistHandlebars, map[string]*bintree{}},
							"workEditT8LandingDatasetList.handlebars": &bintree{SrcMainWebFlorenceTemplatesWorkeditt8landingdatasetlistHandlebars, map[string]*bintree{}},
							"workEditT8LandingPage.handlebars": &bintree{SrcMainWebFlorenceTemplatesWorkeditt8landingpageHandlebars, map[string]*bintree{}},
							"workEditT8VersionList.handlebars": &bintree{SrcMainWebFlorenceTemplatesWorkeditt8versionlistHandlebars, map[string]*bintree{}},
							"workEditTables.handlebars": &bintree{SrcMainWebFlorenceTemplatesWorkedittablesHandlebars, map[string]*bintree{}},
							"workEditVisualisation.handlebars": &bintree{SrcMainWebFlorenceTemplatesWorkeditvisualisationHandlebars, map[string]*bintree{}},
							"workImport.handlebars": &bintree{SrcMainWebFlorenceTemplatesWorkimportHandlebars, map[string]*bintree{}},
							"workSpace.handlebars": &bintree{SrcMainWebFlorenceTemplatesWorkspaceHandlebars, map[string]*bintree{}},
						}},
						"webpack.config-test.js": &bintree{SrcMainWebFlorenceWebpackConfigTestJs, map[string]*bintree{}},
						"webpack.config.js": &bintree{SrcMainWebFlorenceWebpackConfigJs, map[string]*bintree{}},
						"webpack.html": &bintree{SrcMainWebFlorenceWebpackHtml, map[string]*bintree{}},
					}},
				}},
			}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

